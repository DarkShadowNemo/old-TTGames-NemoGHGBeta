from struct import unpack, pack
import os
import bmesh
import math
import bpy
import mathutils
from io import BytesIO as bio

vertices1=[]
vertices2=[]
vertices3=[]

#adding this incase it doesn't work so you can play around with it

def GHG_Blend_Object(f, filepath):
    ob = bpy.context.object
    blends=[]
    BlendShapes = 1
    f.seek(0)
    BlendChunks = f.read()
    readBlendChunks = BlendChunks.find(b"\x13\x38\x00\x01")
    if BlendChunks != 0:
        f.seek(readBlendChunks,0)
        f.seek(4,1)
        flag = unpack("B", f.read(1))[0]
        f.seek(4,1)
        f.seek(2,1)
        blendshapecount = unpack("B", f.read(1))[0]
        flag = unpack("B", f.read(1))[0]
        for i in range(blendshapecount):
            blend_vx = unpack("<f", f.read(4))[0]
            blend_vy = unpack("<f", f.read(4))[0]
            blend_vz = unpack("<f", f.read(4))[0]
            blend_indices = unpack("<I", f.read(4))[0]
            blends.append([blend_vx,blend_vy,blend_vz,blend_indices])

        ob.shape_key_add(name = 'BlendShape Base')
        blendshape = ob.shape_key_add(name = "GHG BlendShape Key")

        for i, bl_ in enumerate(blends):
            if bl_[3]:
                blendshape.data[0].co.x += bl_[0]
                blendshape.data[1].co.y += bl_[1]
                blendshape.data[2].co.z += bl_[2]
    

def truncate_cstr(s: bytes) -> bytes:
    index = s.find(0)
    if index == -1: return s
    return s[:index]
def fetch_cstr(f: 'filelike') -> bytearray:
    build = bytearray()
    while 1:
        strbyte = f.read(1)
        if strbyte == b'\0' or not strbyte: break
        build += strbyte
    return build

def GHG_mesh(f, filepath):

    #blend_vertices=[]

    #blend shape offset 0x13380001

    blendshapeinfos = {} # you don't have to use dictionarys if you want to it does work with lists

    #########################################
    
    boneIndex = -1

    bones_=[]

    bone_parentlist=[]
        
    coll = bpy.context.collection
    skel = bpy.data.armatures.new('GHG Skeleton')
    arma = bpy.data.objects.new('GHG Armature', skel)
    coll.objects.link(arma)
    bpy.context.view_layer.objects.active = arma
    bpy.ops.object.mode_set(mode = 'EDIT')
    f.seek(0)
    FileSize = unpack("<I", f.read(4))[0]
    unk = unpack("<I", f.read(4))[0]
    TextureCount = unpack("<I", f.read(4))[0]
    Texture_EntrySize = unpack("<I", f.read(4))[0]
    MaterialCount = unpack("<I", f.read(4))[0]
    Material_EntrySize = unpack("<I", f.read(4))[0]
    BoneCount = unpack("<I", f.read(4))[0]
    SclBoneEntrySize = unpack("<I", f.read(4))[0]
    PosBoneEntrySize = unpack("<I", f.read(4))[0]
    RotBoneEntrySize = unpack("<I", f.read(4))[0]
    Unk_ = unpack("<I", f.read(4))[0]
    Unk__ = unpack("<I", f.read(4))[0]
    EndMaterialEntrySize = unpack("<I", f.read(4))[0]
    NamedtableEntrySize,=unpack("<I", f.read(4))
    f.seek(EndMaterialEntrySize-56,1)
    ntbl_buffer = bio(f.read(NamedtableEntrySize))
    name_i = 0
    while 1:
        name = fetch_cstr(ntbl_buffer).decode('ascii')
        if not name: break
        name_i +=1
    f.seek(0)
    f.seek(32,1)
    f.seek(SclBoneEntrySize-32,1)

    for i in range(BoneCount):
        f.seek(64,1)
        bdiv4_v00 = unpack("<f", f.read(4))[0]
        bdiv4_v04 = unpack("<f", f.read(4))[0]
        bdiv4_v08 = unpack("<f", f.read(4))[0]
        f.seek(4,1)
        bone_parent,=unpack("b", f.read(1))
        bone_parentlist.append(bone_parent)
        #ntbl_buffer.seek(name_offset - 1) or ntbl_buffer.seek(name_offset)
        #bone_name = fetch_cstr(ntbl_buffer).decode('ascii')
        name_offset,=unpack("<L", f.read(4)) # WHAT doesnt work
        f.seek(11,1)
        ntbl_buffer.seek(name_offset)
            
    f.seek(0)
    f.seek(36,1)
    f.seek(RotBoneEntrySize-36,1)
    for i in range(BoneCount):
        ScaleX = unpack("<f", f.read(4))[0]
        rotationz = unpack("<f", f.read(4))[0]
        rotationy = unpack("<f", f.read(4))[0]
        null1 = unpack("<f", f.read(4))[0]
        nrotationz = unpack("<f", f.read(4))[0]
        ScaleY = unpack("<f", f.read(4))[0]
        rotationx = unpack("<f", f.read(4))[0]
        nrotationy = unpack("<f", f.read(4))[0]
        null2 = unpack("<f", f.read(4))[0]
        nrotationx = unpack("<f", f.read(4))[0]
        ScaleZ = unpack("<f", f.read(4))[0]
        null3 = unpack("<f", f.read(4))[0]
        posx = unpack("<f", f.read(4))[0]
        posy = unpack("<f", f.read(4))[0]
        posz = unpack("<f", f.read(4))[0]
        ScaleW = unpack("<f", f.read(4))[0]

        matrix = mathutils.Matrix([[ScaleX,rotationz,rotationy,null1],[nrotationz,ScaleY,rotationx,nrotationy],[null2,nrotationx,ScaleZ,null3],[posx,posy,posz,ScaleW]]).inverted().to_3x3().transposed()

        bone_name = fetch_cstr(ntbl_buffer).decode('ascii')

        bone = skel.edit_bones.new(bone_name)
        
        bone.tail = mathutils.Vector([0,0,0.03])
        
        bone.head = ([
            posx,
            posy,
            posz,
        ])
        
        bone.length = -0.03
        
        bone.transform(matrix)
    for bone_id, bone_parent in enumerate(bone_parentlist):
        if bone_parent < 0: continue # root bone is set to -1
        skel.edit_bones[bone_id].parent = skel.edit_bones[bone_parent]
    bpy.ops.object.mode_set(mode = 'OBJECT')

    f.seek(0)
    Chunk = f.read()
    f.seek(0)

    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkkk = bmesh.new()
    bm_1kkkkkkkkk = bmesh.new()
    bm_1kkkkkkkk = bmesh.new()
    bm_1kkkkkkk = bmesh.new()
    bm_1kkkkkk = bmesh.new()
    bm_1kkkkk = bmesh.new()
    bm_1kkkk = bmesh.new()
    bm_1kkk = bmesh.new()
    bm_1kk = bmesh.new()
    bm_1k = bmesh.new()

    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()

    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjjj = bmesh.new()
    bm_1jjjjjjjjj = bmesh.new()
    bm_1jjjjjjjj = bmesh.new()
    bm_1jjjjjjj = bmesh.new()
    bm_1jjjjjj = bmesh.new()
    bm_1jjjjj = bmesh.new()
    bm_1jjjj = bmesh.new()
    bm_1jjj = bmesh.new()
    bm_1jj = bmesh.new()

    bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiiii = bmesh.new()
    bm_1iiiiiiiiii = bmesh.new()
    bm_1iiiiiiiii = bmesh.new()
    bm_1iiiiiiii = bmesh.new()
    bm_1iiiiiii = bmesh.new()
    bm_1iiiiii = bmesh.new()
    bm_1iiiii = bmesh.new()
    bm_1iiii = bmesh.new()
    bm_1iii = bmesh.new()
    bm_1ii = bmesh.new()

    bm_1i = bmesh.new()
    
    bm_1hhhhhhhhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhhh = bmesh.new()
    bm_1hhhhhhhhh = bmesh.new()
    bm_1hhhhhhhh = bmesh.new()
    bm_1hhhhhhh = bmesh.new()
    bm_1hhhhhh = bmesh.new()
    bm_1hhhhh = bmesh.new()
    bm_1hhhh = bmesh.new()
    bm_1hhh = bmesh.new()
    bm_1hh = bmesh.new()
    bm_1h = bmesh.new()

    bm_1gggggggggggg = bmesh.new()
    bm_1ggggggggggg = bmesh.new()
    bm_1gggggggggg = bmesh.new()
    bm_1ggggggggg = bmesh.new()
    bm_1gggggggg = bmesh.new()
    bm_1ggggggg = bmesh.new()
    bm_1gggggg = bmesh.new()
    bm_1ggggg = bmesh.new()
    bm_1gggg = bmesh.new()
    bm_1ggg = bmesh.new()
    bm_1gg = bmesh.new()
    bm_1g = bmesh.new()
    bm_1ccc = bmesh.new()
    bm_1cc = bmesh.new()
    bm_1f = bmesh.new()
    bm_1ff = bmesh.new()
    bm_1fff = bmesh.new()
    bm_1ffff = bmesh.new()
    bm_1fffff = bmesh.new()
    bm_1ffffff = bmesh.new()
    bm_1fffffff = bmesh.new()
    bm_1ffffffff = bmesh.new()
    bm_1fffffffff = bmesh.new()
    bm_1dd = bmesh.new()
    bm_1dddd = bmesh.new()
    bm_1ddd = bmesh.new()
    bm_1bb = bmesh.new()
    bm_1e = bmesh.new()
    bm_1ee = bmesh.new()
    bm_1eee = bmesh.new()
    bm_1eeee = bmesh.new()
    bm_1eeeee = bmesh.new()
    bm_1eeeeee = bmesh.new()
    bm_1eeeeeee = bmesh.new()
    bm_1d = bmesh.new()
    bm_1c = bmesh.new()
    bm_1b = bmesh.new()
    bm_1a = bmesh.new()
    bm_1 = bmesh.new()
    bm = bmesh.new()
    bm2 = bmesh.new()
    bm2a = bmesh.new()
    bm2b = bmesh.new()
    bm_3a = bmesh.new()
    bm_3b = bmesh.new()
    bm_3c = bmesh.new()
    bm_3ca = bmesh.new()
    bm_3cb = bmesh.new()
    bm_3d = bmesh.new()
    bm_3da = bmesh.new()
    bm_3daa = bmesh.new()
    bm_3db = bmesh.new()
    bm_3dc = bmesh.new()
    bm_3e = bmesh.new()
    bm_3ea = bmesh.new()
    bm_3eb = bmesh.new()
    bm_3ec = bmesh.new()
    bm_3ed = bmesh.new()
    bm_3edd = bmesh.new()
    bm_3f = bmesh.new()
    bm_3fa = bmesh.new()
    bm_3fb = bmesh.new()
    bm_3fc = bmesh.new()
    bm_3fd = bmesh.new()
    bm_3fdd = bmesh.new()
    bm_3fddd = bmesh.new()
    bm_3fdddd = bmesh.new()
    bm_3fdddd1 = bmesh.new()
    bm_3g = bmesh.new()
    bm_3ga = bmesh.new()
    bm_3gb = bmesh.new()
    bm_3gc = bmesh.new()
    bm_3gd = bmesh.new()
    bm_3ge = bmesh.new()
    bm_3gf = bmesh.new()
    bm_3gg = bmesh.new()
    bm_3gh = bmesh.new()
    bm_3gha = bmesh.new()
    bm_3ghb = bmesh.new()
    bm_3ghc = bmesh.new()
    bm_3h = bmesh.new()
    bm_3ha = bmesh.new()
    bm_3hb = bmesh.new()
    bm_3hc = bmesh.new()
    bm_3hd = bmesh.new()
    bm_3he = bmesh.new()
    bm_3hf = bmesh.new()
    bm_3hg = bmesh.new()
    bm_3hh = bmesh.new()
    bm_3i = bmesh.new()
    bm_3ia = bmesh.new()
    bm_3ib = bmesh.new()
    bm_3ic = bmesh.new()
    bm_3id = bmesh.new()
    bm_3ie = bmesh.new()
    bm_3if = bmesh.new()
    bm_3ig = bmesh.new()
    bm_3ih = bmesh.new()
    bm_3j = bmesh.new()
    bm_3ja = bmesh.new()
    bm_3jb = bmesh.new()
    bm_3jc = bmesh.new()
    bm_3jd = bmesh.new()
    bm_3k = bmesh.new()
    bm_3ka = bmesh.new()
    bm_3kb = bmesh.new()
    bm_3kc = bmesh.new()
    bm_3kd = bmesh.new()
    bm_3ke = bmesh.new()
    bm_3kf = bmesh.new()
    bm_3kg = bmesh.new()
    bm_3kh = bmesh.new()
    bm_3ki = bmesh.new()
    bm_3kj = bmesh.new()
    bm_3kk = bmesh.new()
    bm_3kl = bmesh.new()
    bm_3km = bmesh.new()
    bm_3kn = bmesh.new()
    bm_3ko = bmesh.new()
    bm_3kp = bmesh.new()
    bm_3kq = bmesh.new()
    bm_3kr = bmesh.new()
    bm_3ks = bmesh.new()
    bm_3kt = bmesh.new()
    bm_3ku = bmesh.new()
    bm_3kv = bmesh.new()
    bm_3kw = bmesh.new()
    bm_3kx = bmesh.new()
    bm_3ky = bmesh.new()
    bm_3kz = bmesh.new()
    bm_3kaa = bmesh.new()
    bm_3kab = bmesh.new()
    bm_3kac = bmesh.new()
    bm_3kad = bmesh.new()
    bm_3kae = bmesh.new()
    bm_3kaf = bmesh.new()
    bm_3kag = bmesh.new()
    bm_3kah = bmesh.new()
    bm_3kai = bmesh.new()
    bm_3kaj = bmesh.new()
    bm_3kak = bmesh.new()
    bm_3kal = bmesh.new()
    bm_3kam = bmesh.new()
    bm_3kan = bmesh.new()
    bm_3kao = bmesh.new()
    bm_3kap = bmesh.new()
    bm_3kaq = bmesh.new()
    bm_3kar = bmesh.new()
    bm_3kas = bmesh.new()
    bm_3kat = bmesh.new()
    bm_3kau = bmesh.new()
    bm_3kav = bmesh.new()
    bm_3kaw = bmesh.new()
    bm_3kax = bmesh.new()
    bm_3kay = bmesh.new()
    bm_3kaz = bmesh.new()
    bm_3kaaa = bmesh.new()
    bm_3kaab = bmesh.new()
    bm_3kaac = bmesh.new()
    bm_3kaad = bmesh.new()
    bm_3kaae = bmesh.new()
    bm_3kaaf = bmesh.new()
    bm_3kaag = bmesh.new()
    bm_3kaah = bmesh.new()
    
    bm_3l = bmesh.new()
    bm_3la = bmesh.new()
    bm_3lb = bmesh.new()
    bm_3lc = bmesh.new()
    bm_3ld = bmesh.new()
    bm_3le = bmesh.new()
    bm_3lf = bmesh.new()
    bm_3lg = bmesh.new()
    bm_3lh = bmesh.new()
    bm_3li = bmesh.new()
    bm_3lj = bmesh.new()
    bm_3lk = bmesh.new()
    bm_3ll = bmesh.new()
    
    bm_3lm = bmesh.new()
    bm_3ln = bmesh.new()
    bm_3lo = bmesh.new()
    bm_3lp = bmesh.new()
    bm_3lq = bmesh.new()
    bm_3lr = bmesh.new()
    bm_3ls = bmesh.new()
    bm_3lt = bmesh.new()
    bm_3lu = bmesh.new()
    bm_3lv = bmesh.new()
    bm_3lw = bmesh.new()
    bm_3lx = bmesh.new()
    bm_3ly = bmesh.new()
    bm_3lz = bmesh.new()
    bm_3laa = bmesh.new()
    bm_3lab = bmesh.new()
    bm_3lac = bmesh.new()
    bm_3lad = bmesh.new()
    bm_3lae = bmesh.new()
    bm_3laf = bmesh.new()
    bm_3lag = bmesh.new()
    bm_3lah = bmesh.new()
    bm_3lai = bmesh.new()
    bm_3laj = bmesh.new()
    bm_3lak = bmesh.new()
    bm_3lal = bmesh.new()
    bm_3lam = bmesh.new()
    bm_3lan = bmesh.new()
    bm_3lao = bmesh.new()
    bm_3lap = bmesh.new()
    bm_3laq = bmesh.new()
    bm_3lar = bmesh.new()
    bm_3las = bmesh.new()
    bm_3lat = bmesh.new()
    bm_3lau = bmesh.new()
    bm_3lav = bmesh.new()
    bm_3law = bmesh.new()
    bm_3lax = bmesh.new()
    bm_3lay = bmesh.new()
    bm_3laz = bmesh.new()
    bm_3laaa = bmesh.new()
    bm_3laab = bmesh.new()
    bm_3laac = bmesh.new()
    bm_3laad = bmesh.new()
    bm_3laae = bmesh.new()
    bm_3laaf = bmesh.new()
    bm_3laag = bmesh.new()
    bm_3laah = bmesh.new()
    bm_3laai = bmesh.new()
    bm_3laaj = bmesh.new()
    bm_3laak = bmesh.new()
    bm_3laal = bmesh.new()
    bm_3laam = bmesh.new()
    bm_3laan = bmesh.new()
    bm_3laao = bmesh.new()
    bm_3laap = bmesh.new()
    bm_3laaq = bmesh.new()
    bm_3laar = bmesh.new()
    bm_3laas = bmesh.new()
    bm_3laat = bmesh.new()
    bm_3laau = bmesh.new()
    bm_3laav = bmesh.new()
    bm_3laaw = bmesh.new()
    bm_3laax = bmesh.new()
    bm_3laay = bmesh.new()
    bm_3laaz = bmesh.new()
    bm_3laaaa = bmesh.new()
    bm_3laaab = bmesh.new()
    bm_3laaac = bmesh.new()
    bm_3laaad = bmesh.new()
    bm_3laaae = bmesh.new()
    bm_3laaaf = bmesh.new()

    bm_3m = bmesh.new()
    for i in range(len(Chunk)):
        Chunks = f.read(4)
        if Chunks == b"\x03\x01\x00\x01":
            flag1 = unpack("B", f.read(1))[0]
            f.seek(1,1)
            vertexCount = unpack("B", f.read(1))[0]
            flag2 = unpack("B", f.read(1))[0]
            if vertexCount == 3:
                for i in range(vertexCount//3):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    fa1 = bm.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm.verts.new([-vx3,-vy3,-vz3])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                face_on = bm.faces.new([fa1,fb1,fc1])
            elif vertexCount == 4:
                for i in range(vertexCount//4):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    fa1 = bm_1.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm_1.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm_1.verts.new([-vx3,-vy3,-vz3])
                    fd1 = bm_1.verts.new([-vx4,-vy4,-vz4])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    face_on = bm_1.faces.new([fa1,fb1,fc1])
                                    face_on = bm_1.faces.new([fb1,fc1,fd1])
            elif vertexCount == 5:
                for i in range(vertexCount//5):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    fa1 = bm_1a.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm_1a.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm_1a.verts.new([-vx3,-vy3,-vz3])
                    fd1 = bm_1a.verts.new([-vx4,-vy4,-vz4])
                    fe1 = bm_1a.verts.new([-vx5,-vy5,-vz5])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        
                                        face_on = bm_1a.faces.new([fa1,fb1,fc1])
                                        face_on = bm_1a.faces.new([fb1,fc1,fd1])
                                        face_on = bm_1a.faces.new([fc1,fd1,fe1])
            elif vertexCount == 6:
                for i in range(vertexCount//6):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    f.seek(-96,1)
                    vx1a = unpack("<f", f.read(4))[0]
                    vy1a = unpack("<f", f.read(4))[0]
                    vz1a = unpack("<f", f.read(4))[0]
                    type1a = unpack("B", f.read(1))[0]
                    value1a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1a = unpack("<f", f.read(4))[0]
                    vx2a = unpack("<f", f.read(4))[0]
                    vy2a = unpack("<f", f.read(4))[0]
                    vz2a = unpack("<f", f.read(4))[0]
                    type2a = unpack("B", f.read(1))[0]
                    value2a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2a = unpack("<f", f.read(4))[0]
                    vx3a = unpack("<f", f.read(4))[0]
                    vy3a = unpack("<f", f.read(4))[0]
                    vz3a = unpack("<f", f.read(4))[0]
                    type3a = unpack("B", f.read(1))[0]
                    value3a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3a = unpack("<f", f.read(4))[0]
                    vx4a = unpack("<f", f.read(4))[0]
                    vy4a = unpack("<f", f.read(4))[0]
                    vz4a = unpack("<f", f.read(4))[0]
                    type4a = unpack("B", f.read(1))[0]
                    value4a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4a = unpack("<f", f.read(4))[0]
                    vx5a = unpack("<f", f.read(4))[0]
                    vy5a = unpack("<f", f.read(4))[0]
                    vz5a = unpack("<f", f.read(4))[0]
                    type5a = unpack("B", f.read(1))[0]
                    value5a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5a = unpack("<f", f.read(4))[0]
                    vx6a = unpack("<f", f.read(4))[0]
                    vy6a = unpack("<f", f.read(4))[0]
                    vz6a = unpack("<f", f.read(4))[0]
                    type6a = unpack("B", f.read(1))[0]
                    value6a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6a = unpack("<f", f.read(4))[0]
                    fa1 = bm_1b.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm_1b.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm_1b.verts.new([-vx3,-vy3,-vz3])
                    fd1 = bm_1b.verts.new([-vx4,-vy4,-vz4])
                    fe1 = bm_1b.verts.new([-vx5,-vy5,-vz5])
                    ff1 = bm_1b.verts.new([-vx6,-vy6,-vz6])
                    faa1 = bm_1bb.verts.new([-vx1a,-vy1a,-vz1a])
                    fbb1 = bm_1bb.verts.new([-vx2a,-vy2a,-vz2a])
                    fcc1 = bm_1bb.verts.new([-vx3a,-vy3a,-vz3a])
                    fdd1 = bm_1bb.verts.new([-vx4a,-vy4a,-vz4a])
                    fee1 = bm_1bb.verts.new([-vx5a,-vy5a,-vz5a])
                    fff1 = bm_1bb.verts.new([-vx6a,-vy6a,-vz6a])
                    if type1a == 1:
                        if type2a == 1:
                            if type3a == 0:
                                if type4a == 0:
                                    if type5a == 0:
                                        if type6a == 0:
                                            face_on = bm_1bb.faces.new([faa1,fbb1,fcc1])
                                            face_on = bm_1bb.faces.new([fbb1,fcc1,fdd1])
                                            face_on = bm_1bb.faces.new([fcc1,fdd1,fee1])
                                            face_on = bm_1bb.faces.new([fdd1,fee1,fff1])
                                            
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 1:
                                    if type5 == 1:
                                        if type6 == 0:
                                            face_on = bm_1b.faces.new([fa1,fb1,fc1])
                                            face_on = bm_1b.faces.new([fd1,fe1,ff1])
                        

            elif vertexCount == 7:
                for i in range(vertexCount//7):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    f.seek(-112,1)

                    vx1a1 = unpack("<f", f.read(4))[0]
                    vy1a1 = unpack("<f", f.read(4))[0]
                    vz1a1 = unpack("<f", f.read(4))[0]
                    type1a1 = unpack("B", f.read(1))[0]
                    value1a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1a1 = unpack("<f", f.read(4))[0]
                    vx2a1 = unpack("<f", f.read(4))[0]
                    vy2a1 = unpack("<f", f.read(4))[0]
                    vz2a1 = unpack("<f", f.read(4))[0]
                    type2a1 = unpack("B", f.read(1))[0]
                    value2a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2a1 = unpack("<f", f.read(4))[0]
                    vx3a1 = unpack("<f", f.read(4))[0]
                    vy3a1 = unpack("<f", f.read(4))[0]
                    vz3a1 = unpack("<f", f.read(4))[0]
                    type3a1 = unpack("B", f.read(1))[0]
                    value3a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3a1 = unpack("<f", f.read(4))[0]
                    vx4a1 = unpack("<f", f.read(4))[0]
                    vy4a1 = unpack("<f", f.read(4))[0]
                    vz4a1 = unpack("<f", f.read(4))[0]
                    type4a1 = unpack("B", f.read(1))[0]
                    value4a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4a1 = unpack("<f", f.read(4))[0]
                    vx5a1 = unpack("<f", f.read(4))[0]
                    vy5a1 = unpack("<f", f.read(4))[0]
                    vz5a1 = unpack("<f", f.read(4))[0]
                    type5a1 = unpack("B", f.read(1))[0]
                    value5a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5a1 = unpack("<f", f.read(4))[0]
                    vx6a1 = unpack("<f", f.read(4))[0]
                    vy6a1 = unpack("<f", f.read(4))[0]
                    vz6a1 = unpack("<f", f.read(4))[0]
                    type6a1 = unpack("B", f.read(1))[0]
                    value6a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6a1 = unpack("<f", f.read(4))[0]
                    vx7a1 = unpack("<f", f.read(4))[0]
                    vy7a1 = unpack("<f", f.read(4))[0]
                    vz7a1 = unpack("<f", f.read(4))[0]
                    type7a1 = unpack("B", f.read(1))[0]
                    value7a1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7a1 = unpack("<f", f.read(4))[0]
                    f.seek(-112,1)

                    vx1b = unpack("<f", f.read(4))[0]
                    vy1b = unpack("<f", f.read(4))[0]
                    vz1b = unpack("<f", f.read(4))[0]
                    type1b = unpack("B", f.read(1))[0]
                    value1b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1b = unpack("<f", f.read(4))[0]
                    vx2b = unpack("<f", f.read(4))[0]
                    vy2b = unpack("<f", f.read(4))[0]
                    vz2b = unpack("<f", f.read(4))[0]
                    type2b = unpack("B", f.read(1))[0]
                    value2b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2b = unpack("<f", f.read(4))[0]
                    vx3b = unpack("<f", f.read(4))[0]
                    vy3b = unpack("<f", f.read(4))[0]
                    vz3b = unpack("<f", f.read(4))[0]
                    type3b = unpack("B", f.read(1))[0]
                    value3b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3a = unpack("<f", f.read(4))[0]
                    vx4b = unpack("<f", f.read(4))[0]
                    vy4b = unpack("<f", f.read(4))[0]
                    vz4b = unpack("<f", f.read(4))[0]
                    type4b = unpack("B", f.read(1))[0]
                    value4b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4b = unpack("<f", f.read(4))[0]
                    vx5b = unpack("<f", f.read(4))[0]
                    vy5b = unpack("<f", f.read(4))[0]
                    vz5b = unpack("<f", f.read(4))[0]
                    type5b = unpack("B", f.read(1))[0]
                    value5b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5b = unpack("<f", f.read(4))[0]
                    vx6b = unpack("<f", f.read(4))[0]
                    vy6b = unpack("<f", f.read(4))[0]
                    vz6b = unpack("<f", f.read(4))[0]
                    type6b = unpack("B", f.read(1))[0]
                    value6b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6b = unpack("<f", f.read(4))[0]
                    vx7b = unpack("<f", f.read(4))[0]
                    vy7b = unpack("<f", f.read(4))[0]
                    vz7b = unpack("<f", f.read(4))[0]
                    type7b = unpack("B", f.read(1))[0]
                    value7b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7b = unpack("<f", f.read(4))[0]
                    
                    fa1 = bm_1c.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm_1c.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm_1c.verts.new([-vx3,-vy3,-vz3])
                    fd1 = bm_1c.verts.new([-vx4,-vy4,-vz4])
                    fe1 = bm_1c.verts.new([-vx5,-vy5,-vz5])
                    ff1 = bm_1c.verts.new([-vx6,-vy6,-vz6])
                    fg1 = bm_1c.verts.new([-vx7,-vy7,-vz7])

                    faa1 = bm_1cc.verts.new([-vx1a1,-vy1a1,-vz1a1])
                    fba1 = bm_1cc.verts.new([-vx2a1,-vy2a1,-vz2a1])
                    fca1 = bm_1cc.verts.new([-vx3a1,-vy3a1,-vz3a1])
                    fda1 = bm_1cc.verts.new([-vx4a1,-vy4a1,-vz4a1])
                    fea1 = bm_1cc.verts.new([-vx5a1,-vy5a1,-vz5a1])
                    ffa1 = bm_1cc.verts.new([-vx6a1,-vy6a1,-vz6a1])
                    fga1 = bm_1cc.verts.new([-vx7a1,-vy7a1,-vz7a1])

                    faaa1 = bm_1ccc.verts.new([-vx1b,-vy1b,-vz1b])
                    fbaa1 = bm_1ccc.verts.new([-vx2b,-vy2b,-vz2b])
                    fcaa1 = bm_1ccc.verts.new([-vx3b,-vy3b,-vz3b])
                    fdaa1 = bm_1ccc.verts.new([-vx4b,-vy4b,-vz4b])
                    feaa1 = bm_1ccc.verts.new([-vx5b,-vy5b,-vz5b])
                    ffaa1 = bm_1ccc.verts.new([-vx6b,-vy6b,-vz6b])
                    fgaa1 = bm_1ccc.verts.new([-vx7b,-vy7b,-vz7b])

                    if type1b == 1:
                        if type2b == 1:
                            if type3b == 0:
                                if type4b == 1:
                                    if type5b == 1:
                                        if type6b == 0:
                                            if type7b == 0:
                                                face_on = bm_1ccc.faces.new([faaa1,fbaa1,fcaa1])
                                                face_on = bm_1ccc.faces.new([fdaa1,feaa1,ffaa1])

                                                face_on = bm_1ccc.faces.new([feaa1,ffaa1,fgaa1])
                    if type1a1 == 1:
                        if type2a1 == 1:
                            if type3a1 == 0:
                                if type4a1 == 0:
                                    if type5a1 == 1:
                                        if type6a1 == 1:
                                            if type7a1 == 0:
                                                face_on = bm_1cc.faces.new([faa1,fba1,fca1])
                                                face_on = bm_1cc.faces.new([fba1,fca1,fda1])

                                                face_on = bm_1cc.faces.new([fea1,ffa1,fga1])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                face_on = bm_1c.faces.new([fa1,fb1,fc1])
                                                face_on = bm_1c.faces.new([fb1,fc1,fd1])
                                                face_on = bm_1c.faces.new([fc1,fd1,fe1])
                                                face_on = bm_1c.faces.new([fd1,fe1,ff1])
                                                face_on = bm_1c.faces.new([fe1,ff1,fg1])

            elif vertexCount == 8:
                for i in range(vertexCount//8):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    f.seek(-128,1)
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx21 = unpack("<f", f.read(4))[0]
                    vy21 = unpack("<f", f.read(4))[0]
                    vz21 = unpack("<f", f.read(4))[0]
                    type21 = unpack("B", f.read(1))[0]
                    value21 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21 = unpack("<f", f.read(4))[0]
                    vx31 = unpack("<f", f.read(4))[0]
                    vy31 = unpack("<f", f.read(4))[0]
                    vz31 = unpack("<f", f.read(4))[0]
                    type31 = unpack("B", f.read(1))[0]
                    value31 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31 = unpack("<f", f.read(4))[0]
                    vx41 = unpack("<f", f.read(4))[0]
                    vy41 = unpack("<f", f.read(4))[0]
                    vz41 = unpack("<f", f.read(4))[0]
                    type41 = unpack("B", f.read(1))[0]
                    value41 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41 = unpack("<f", f.read(4))[0]
                    vx51 = unpack("<f", f.read(4))[0]
                    vy51 = unpack("<f", f.read(4))[0]
                    vz51 = unpack("<f", f.read(4))[0]
                    type51 = unpack("B", f.read(1))[0]
                    value51 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51 = unpack("<f", f.read(4))[0]
                    vx61 = unpack("<f", f.read(4))[0]
                    vy61 = unpack("<f", f.read(4))[0]
                    vz61 = unpack("<f", f.read(4))[0]
                    type61 = unpack("B", f.read(1))[0]
                    value61 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61 = unpack("<f", f.read(4))[0]
                    vx71 = unpack("<f", f.read(4))[0]
                    vy71 = unpack("<f", f.read(4))[0]
                    vz71 = unpack("<f", f.read(4))[0]
                    type71 = unpack("B", f.read(1))[0]
                    value71 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71 = unpack("<f", f.read(4))[0]
                    vx81 = unpack("<f", f.read(4))[0]
                    vy81 = unpack("<f", f.read(4))[0]
                    vz81 = unpack("<f", f.read(4))[0]
                    type81 = unpack("B", f.read(1))[0]
                    value81 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81 = unpack("<f", f.read(4))[0]
                    f.seek(-128,1)

                    vx11a = unpack("<f", f.read(4))[0]
                    vy11a = unpack("<f", f.read(4))[0]
                    vz11a = unpack("<f", f.read(4))[0]
                    type11a = unpack("B", f.read(1))[0]
                    value11a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11a = unpack("<f", f.read(4))[0]
                    vx21a = unpack("<f", f.read(4))[0]
                    vy21a = unpack("<f", f.read(4))[0]
                    vz21a = unpack("<f", f.read(4))[0]
                    type21a = unpack("B", f.read(1))[0]
                    value21a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21a = unpack("<f", f.read(4))[0]
                    vx31a = unpack("<f", f.read(4))[0]
                    vy31a = unpack("<f", f.read(4))[0]
                    vz31a = unpack("<f", f.read(4))[0]
                    type31a = unpack("B", f.read(1))[0]
                    value31a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31a = unpack("<f", f.read(4))[0]
                    vx41a = unpack("<f", f.read(4))[0]
                    vy41a = unpack("<f", f.read(4))[0]
                    vz41a = unpack("<f", f.read(4))[0]
                    type41a = unpack("B", f.read(1))[0]
                    value41a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41a = unpack("<f", f.read(4))[0]
                    vx51a = unpack("<f", f.read(4))[0]
                    vy51a = unpack("<f", f.read(4))[0]
                    vz51a = unpack("<f", f.read(4))[0]
                    type51a = unpack("B", f.read(1))[0]
                    value51a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51a = unpack("<f", f.read(4))[0]
                    vx61a = unpack("<f", f.read(4))[0]
                    vy61a = unpack("<f", f.read(4))[0]
                    vz61a = unpack("<f", f.read(4))[0]
                    type61a = unpack("B", f.read(1))[0]
                    value61a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61a = unpack("<f", f.read(4))[0]
                    vx71a = unpack("<f", f.read(4))[0]
                    vy71a = unpack("<f", f.read(4))[0]
                    vz71a = unpack("<f", f.read(4))[0]
                    type71a = unpack("B", f.read(1))[0]
                    value71a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71a = unpack("<f", f.read(4))[0]
                    vx81a = unpack("<f", f.read(4))[0]
                    vy81a = unpack("<f", f.read(4))[0]
                    vz81a = unpack("<f", f.read(4))[0]
                    type81a = unpack("B", f.read(1))[0]
                    value81a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81a = unpack("<f", f.read(4))[0]

                    f.seek(-128,1)

                    vx11aa = unpack("<f", f.read(4))[0]
                    vy11aa = unpack("<f", f.read(4))[0]
                    vz11aa = unpack("<f", f.read(4))[0]
                    type11b = unpack("B", f.read(1))[0]
                    value11b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aa = unpack("<f", f.read(4))[0]
                    vx21aa = unpack("<f", f.read(4))[0]
                    vy21aa = unpack("<f", f.read(4))[0]
                    vz21aa = unpack("<f", f.read(4))[0]
                    type21b = unpack("B", f.read(1))[0]
                    value21b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21aa = unpack("<f", f.read(4))[0]
                    vx31aa = unpack("<f", f.read(4))[0]
                    vy31aa = unpack("<f", f.read(4))[0]
                    vz31aa = unpack("<f", f.read(4))[0]
                    type31b = unpack("B", f.read(1))[0]
                    value31b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31aa = unpack("<f", f.read(4))[0]
                    vx41aa = unpack("<f", f.read(4))[0]
                    vy41aa = unpack("<f", f.read(4))[0]
                    vz41aa = unpack("<f", f.read(4))[0]
                    type41b = unpack("B", f.read(1))[0]
                    value41b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41aa = unpack("<f", f.read(4))[0]
                    vx51aa = unpack("<f", f.read(4))[0]
                    vy51aa = unpack("<f", f.read(4))[0]
                    vz51aa = unpack("<f", f.read(4))[0]
                    type51b = unpack("B", f.read(1))[0]
                    value51b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51aa = unpack("<f", f.read(4))[0]
                    vx61aa = unpack("<f", f.read(4))[0]
                    vy61aa = unpack("<f", f.read(4))[0]
                    vz61aa = unpack("<f", f.read(4))[0]
                    type61b = unpack("B", f.read(1))[0]
                    value61b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61aa = unpack("<f", f.read(4))[0]
                    vx71aa = unpack("<f", f.read(4))[0]
                    vy71aa = unpack("<f", f.read(4))[0]
                    vz71aa = unpack("<f", f.read(4))[0]
                    type71b = unpack("B", f.read(1))[0]
                    value71b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71aa = unpack("<f", f.read(4))[0]
                    vx81aa = unpack("<f", f.read(4))[0]
                    vy81aa = unpack("<f", f.read(4))[0]
                    vz81aa = unpack("<f", f.read(4))[0]
                    type81b = unpack("B", f.read(1))[0]
                    value81b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81aa = unpack("<f", f.read(4))[0]

                    

                    faaaa1 = bm_1dddd.verts.new([-vx11aa,-vy11aa,-vz11aa]) # 0
                    fbbbb1 = bm_1dddd.verts.new([-vx21aa,-vy21aa,-vz21aa]) # 1
                    fcccc1 = bm_1dddd.verts.new([-vx31aa,-vy31aa,-vz31aa]) # 2
                    fdddd1 = bm_1dddd.verts.new([-vx41aa,-vy41aa,-vz41aa]) # 3
                    feeee1 = bm_1dddd.verts.new([-vx51aa,-vy51aa,-vz51aa]) # 4
                    fffff1 = bm_1dddd.verts.new([-vx61aa,-vy61aa,-vz61aa]) # 5
                    fgggg1 = bm_1dddd.verts.new([-vx71aa,-vy71aa,-vz71aa]) # 6
                    fhhhh1 = bm_1dddd.verts.new([-vx81aa,-vy81aa,-vz81aa]) # 7

                    faaa1 = bm_1ddd.verts.new([-vx11a,-vy11a,-vz11a]) # 0
                    fbbb1 = bm_1ddd.verts.new([-vx21a,-vy21a,-vz21a]) # 1
                    fccc1 = bm_1ddd.verts.new([-vx31a,-vy31a,-vz31a]) # 2
                    fddd1 = bm_1ddd.verts.new([-vx41a,-vy41a,-vz41a]) # 3
                    feee1 = bm_1ddd.verts.new([-vx51a,-vy51a,-vz51a]) # 4
                    ffff1 = bm_1ddd.verts.new([-vx61a,-vy61a,-vz61a]) # 5
                    fggg1 = bm_1ddd.verts.new([-vx71a,-vy71a,-vz71a]) # 6
                    fhhh1 = bm_1ddd.verts.new([-vx81a,-vy81a,-vz81a]) # 7
                    
                    faa1 = bm_1dd.verts.new([-vx11,-vy11,-vz11]) # 0
                    fbb1 = bm_1dd.verts.new([-vx21,-vy21,-vz21]) # 1
                    fcc1 = bm_1dd.verts.new([-vx31,-vy31,-vz31]) # 2
                    fdd1 = bm_1dd.verts.new([-vx41,-vy41,-vz41]) # 3
                    fee1 = bm_1dd.verts.new([-vx51,-vy51,-vz51]) # 4
                    fff1 = bm_1dd.verts.new([-vx61,-vy61,-vz61]) # 5
                    fgg1 = bm_1dd.verts.new([-vx71,-vy71,-vz71]) # 6
                    fhh1 = bm_1dd.verts.new([-vx81,-vy81,-vz81]) # 7

                    fa1 = bm_1d.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1d.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1d.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1d.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1d.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1d.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1d.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1d.verts.new([-vx8,-vy8,-vz8]) # 7

                    if type11b == 1:
                        if type21b == 1:
                            if type31b == 0:
                                if type41b == 0:
                                    if type51b == 0:
                                        if type61b == 1:
                                            if type71b == 1:
                                                if type81b == 0:
                                                    bm_1dddd.faces.new([faaaa1,fbbbb1,fcccc1])
                                                    bm_1dddd.faces.new([fbbbb1,fcccc1,fdddd1])
                                                    bm_1dddd.faces.new([fcccc1,fdddd1,feeee1])
                                                    bm_1dddd.faces.new([fffff1,fgggg1,fhhhh1])
                    if type11a == 1:
                        if type21a == 1:
                            if type31a == 0:
                                if type41a == 0:
                                    if type51a == 1:
                                        if type61a == 1:
                                            if type71a == 0:
                                                if type81a == 0:
                                                    bm_1ddd.faces.new([faaa1,fbbb1,fccc1])
                                                    bm_1ddd.faces.new([fbbb1,fccc1,fddd1])
                                                    bm_1ddd.faces.new([feee1,ffff1,fggg1])
                                                    bm_1ddd.faces.new([ffff1,fggg1,fhhh1])
                                                    
                    if type11 == 1:
                        if type21 == 1:
                            if type31 == 0:
                                if type41 == 1:
                                    if type51 == 1:
                                        if type61 == 0:
                                            if type71 == 0:
                                                if type81 == 0:
                                                    bm_1dd.faces.new([faa1,fbb1,fcc1])
                                                    bm_1dd.faces.new([fdd1,fee1,fff1])
                                                    bm_1dd.faces.new([fee1,fff1,fgg1])
                                                    bm_1dd.faces.new([fff1,fgg1,fhh1])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    bm_1d.faces.new([fa1,fb1,fc1])
                                                    bm_1d.faces.new([fb1,fc1,fd1])
                                                    bm_1d.faces.new([fc1,fd1,fe1])
                                                    bm_1d.faces.new([fd1,fe1,ff1])
                                                    bm_1d.faces.new([fe1,ff1,fg1])
                                                    bm_1d.faces.new([ff1,fg1,fh1])

            elif vertexCount == 9:
                for i in range(vertexCount//9):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    f.seek(-144,1)

                    

                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx21 = unpack("<f", f.read(4))[0]
                    vy21 = unpack("<f", f.read(4))[0]
                    vz21 = unpack("<f", f.read(4))[0]
                    type21 = unpack("B", f.read(1))[0]
                    value21 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21 = unpack("<f", f.read(4))[0]
                    vx31 = unpack("<f", f.read(4))[0]
                    vy31 = unpack("<f", f.read(4))[0]
                    vz31 = unpack("<f", f.read(4))[0]
                    type31 = unpack("B", f.read(1))[0]
                    value31 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31 = unpack("<f", f.read(4))[0]
                    vx41 = unpack("<f", f.read(4))[0]
                    vy41 = unpack("<f", f.read(4))[0]
                    vz41 = unpack("<f", f.read(4))[0]
                    type41 = unpack("B", f.read(1))[0]
                    value41 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41 = unpack("<f", f.read(4))[0]
                    vx51 = unpack("<f", f.read(4))[0]
                    vy51 = unpack("<f", f.read(4))[0]
                    vz51 = unpack("<f", f.read(4))[0]
                    type51 = unpack("B", f.read(1))[0]
                    value51 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51 = unpack("<f", f.read(4))[0]
                    vx61 = unpack("<f", f.read(4))[0]
                    vy61 = unpack("<f", f.read(4))[0]
                    vz61 = unpack("<f", f.read(4))[0]
                    type61 = unpack("B", f.read(1))[0]
                    value61 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61 = unpack("<f", f.read(4))[0]
                    vx71 = unpack("<f", f.read(4))[0]
                    vy71 = unpack("<f", f.read(4))[0]
                    vz71 = unpack("<f", f.read(4))[0]
                    type71 = unpack("B", f.read(1))[0]
                    value71 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71 = unpack("<f", f.read(4))[0]
                    vx81 = unpack("<f", f.read(4))[0]
                    vy81 = unpack("<f", f.read(4))[0]
                    vz81 = unpack("<f", f.read(4))[0]
                    type81 = unpack("B", f.read(1))[0]
                    value81 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81 = unpack("<f", f.read(4))[0]
                    vx91 = unpack("<f", f.read(4))[0]
                    vy91 = unpack("<f", f.read(4))[0]
                    vz91 = unpack("<f", f.read(4))[0]
                    type91 = unpack("B", f.read(1))[0]
                    value91 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw91 = unpack("<f", f.read(4))[0]
                    f.seek(-144,1)


                    

                    vx111 = unpack("<f", f.read(4))[0]
                    vy111 = unpack("<f", f.read(4))[0]
                    vz111 = unpack("<f", f.read(4))[0]
                    type111 = unpack("B", f.read(1))[0]
                    value111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw111 = unpack("<f", f.read(4))[0]
                    vx211 = unpack("<f", f.read(4))[0]
                    vy211 = unpack("<f", f.read(4))[0]
                    vz211 = unpack("<f", f.read(4))[0]
                    type211 = unpack("B", f.read(1))[0]
                    value211 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw211 = unpack("<f", f.read(4))[0]
                    vx311 = unpack("<f", f.read(4))[0]
                    vy311 = unpack("<f", f.read(4))[0]
                    vz311 = unpack("<f", f.read(4))[0]
                    type311 = unpack("B", f.read(1))[0]
                    value311 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw311 = unpack("<f", f.read(4))[0]
                    vx411 = unpack("<f", f.read(4))[0]
                    vy411 = unpack("<f", f.read(4))[0]
                    vz411 = unpack("<f", f.read(4))[0]
                    type411 = unpack("B", f.read(1))[0]
                    value411 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw411 = unpack("<f", f.read(4))[0]
                    vx511 = unpack("<f", f.read(4))[0]
                    vy511 = unpack("<f", f.read(4))[0]
                    vz511 = unpack("<f", f.read(4))[0]
                    type511 = unpack("B", f.read(1))[0]
                    value511 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw511 = unpack("<f", f.read(4))[0]
                    vx611 = unpack("<f", f.read(4))[0]
                    vy611 = unpack("<f", f.read(4))[0]
                    vz611 = unpack("<f", f.read(4))[0]
                    type611 = unpack("B", f.read(1))[0]
                    value611 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw611 = unpack("<f", f.read(4))[0]
                    vx711 = unpack("<f", f.read(4))[0]
                    vy711 = unpack("<f", f.read(4))[0]
                    vz711 = unpack("<f", f.read(4))[0]
                    type711 = unpack("B", f.read(1))[0]
                    value711 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw711 = unpack("<f", f.read(4))[0]
                    vx811 = unpack("<f", f.read(4))[0]
                    vy811 = unpack("<f", f.read(4))[0]
                    vz811 = unpack("<f", f.read(4))[0]
                    type811 = unpack("B", f.read(1))[0]
                    value811 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw811 = unpack("<f", f.read(4))[0]
                    vx911 = unpack("<f", f.read(4))[0]
                    vy911 = unpack("<f", f.read(4))[0]
                    vz911 = unpack("<f", f.read(4))[0]
                    type911 = unpack("B", f.read(1))[0]
                    value911 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw911 = unpack("<f", f.read(4))[0]
                    f.seek(-144,1)



                    
                    vx1111 = unpack("<f", f.read(4))[0]
                    vy1111 = unpack("<f", f.read(4))[0]
                    vz1111 = unpack("<f", f.read(4))[0]
                    type1111 = unpack("B", f.read(1))[0]
                    value1111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111 = unpack("<f", f.read(4))[0]
                    vx2111 = unpack("<f", f.read(4))[0]
                    vy2111 = unpack("<f", f.read(4))[0]
                    vz2111 = unpack("<f", f.read(4))[0]
                    type2111 = unpack("B", f.read(1))[0]
                    value2111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2111 = unpack("<f", f.read(4))[0]
                    vx3111 = unpack("<f", f.read(4))[0]
                    vy3111 = unpack("<f", f.read(4))[0]
                    vz3111 = unpack("<f", f.read(4))[0]
                    type3111 = unpack("B", f.read(1))[0]
                    value3111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3111 = unpack("<f", f.read(4))[0]
                    vx4111 = unpack("<f", f.read(4))[0]
                    vy4111 = unpack("<f", f.read(4))[0]
                    vz4111 = unpack("<f", f.read(4))[0]
                    type4111 = unpack("B", f.read(1))[0]
                    value4111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4111 = unpack("<f", f.read(4))[0]
                    vx5111 = unpack("<f", f.read(4))[0]
                    vy5111 = unpack("<f", f.read(4))[0]
                    vz5111 = unpack("<f", f.read(4))[0]
                    type5111 = unpack("B", f.read(1))[0]
                    value5111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5111 = unpack("<f", f.read(4))[0]
                    vx6111 = unpack("<f", f.read(4))[0]
                    vy6111 = unpack("<f", f.read(4))[0]
                    vz6111 = unpack("<f", f.read(4))[0]
                    type6111 = unpack("B", f.read(1))[0]
                    value6111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6111 = unpack("<f", f.read(4))[0]
                    vx7111 = unpack("<f", f.read(4))[0]
                    vy7111 = unpack("<f", f.read(4))[0]
                    vz7111 = unpack("<f", f.read(4))[0]
                    type7111 = unpack("B", f.read(1))[0]
                    value7111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7111 = unpack("<f", f.read(4))[0]
                    vx8111 = unpack("<f", f.read(4))[0]
                    vy8111 = unpack("<f", f.read(4))[0]
                    vz8111 = unpack("<f", f.read(4))[0]
                    type8111 = unpack("B", f.read(1))[0]
                    value8111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8111 = unpack("<f", f.read(4))[0]
                    vx9111 = unpack("<f", f.read(4))[0]
                    vy9111 = unpack("<f", f.read(4))[0]
                    vz9111 = unpack("<f", f.read(4))[0]
                    type9111 = unpack("B", f.read(1))[0]
                    value9111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9111 = unpack("<f", f.read(4))[0]

                    f.seek(-144,1)

                    vx11111 = unpack("<f", f.read(4))[0]
                    vy11111 = unpack("<f", f.read(4))[0]
                    vz11111 = unpack("<f", f.read(4))[0]
                    type11111 = unpack("B", f.read(1))[0]
                    value11111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11111 = unpack("<f", f.read(4))[0]
                    vx21111 = unpack("<f", f.read(4))[0]
                    vy21111 = unpack("<f", f.read(4))[0]
                    vz21111 = unpack("<f", f.read(4))[0]
                    type21111 = unpack("B", f.read(1))[0]
                    value21111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21111 = unpack("<f", f.read(4))[0]
                    vx31111 = unpack("<f", f.read(4))[0]
                    vy31111 = unpack("<f", f.read(4))[0]
                    vz31111 = unpack("<f", f.read(4))[0]
                    type31111 = unpack("B", f.read(1))[0]
                    value31111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31111 = unpack("<f", f.read(4))[0]
                    vx41111 = unpack("<f", f.read(4))[0]
                    vy41111 = unpack("<f", f.read(4))[0]
                    vz41111 = unpack("<f", f.read(4))[0]
                    type41111 = unpack("B", f.read(1))[0]
                    value41111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41111 = unpack("<f", f.read(4))[0]
                    vx51111 = unpack("<f", f.read(4))[0]
                    vy51111 = unpack("<f", f.read(4))[0]
                    vz51111 = unpack("<f", f.read(4))[0]
                    type51111 = unpack("B", f.read(1))[0]
                    value51111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51111 = unpack("<f", f.read(4))[0]
                    vx61111 = unpack("<f", f.read(4))[0]
                    vy61111 = unpack("<f", f.read(4))[0]
                    vz61111 = unpack("<f", f.read(4))[0]
                    type61111 = unpack("B", f.read(1))[0]
                    value61111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61111 = unpack("<f", f.read(4))[0]
                    vx71111 = unpack("<f", f.read(4))[0]
                    vy71111 = unpack("<f", f.read(4))[0]
                    vz71111 = unpack("<f", f.read(4))[0]
                    type71111 = unpack("B", f.read(1))[0]
                    value71111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71111 = unpack("<f", f.read(4))[0]
                    vx81111 = unpack("<f", f.read(4))[0]
                    vy81111 = unpack("<f", f.read(4))[0]
                    vz81111 = unpack("<f", f.read(4))[0]
                    type81111 = unpack("B", f.read(1))[0]
                    value81111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81111 = unpack("<f", f.read(4))[0]
                    vx91111 = unpack("<f", f.read(4))[0]
                    vy91111 = unpack("<f", f.read(4))[0]
                    vz91111 = unpack("<f", f.read(4))[0]
                    type91111 = unpack("B", f.read(1))[0]
                    value91111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw91111 = unpack("<f", f.read(4))[0]

                    f.seek(-144,1)

                    vx111111 = unpack("<f", f.read(4))[0]
                    vy111111 = unpack("<f", f.read(4))[0]
                    vz111111 = unpack("<f", f.read(4))[0]
                    type111111 = unpack("B", f.read(1))[0]
                    value111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw111111 = unpack("<f", f.read(4))[0]
                    vx211111 = unpack("<f", f.read(4))[0]
                    vy211111 = unpack("<f", f.read(4))[0]
                    vz211111 = unpack("<f", f.read(4))[0]
                    type211111 = unpack("B", f.read(1))[0]
                    value211111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw211111 = unpack("<f", f.read(4))[0]
                    vx311111 = unpack("<f", f.read(4))[0]
                    vy311111 = unpack("<f", f.read(4))[0]
                    vz311111 = unpack("<f", f.read(4))[0]
                    type311111 = unpack("B", f.read(1))[0]
                    value311111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw311111 = unpack("<f", f.read(4))[0]
                    vx411111 = unpack("<f", f.read(4))[0]
                    vy411111 = unpack("<f", f.read(4))[0]
                    vz411111 = unpack("<f", f.read(4))[0]
                    type411111 = unpack("B", f.read(1))[0]
                    value411111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw411111 = unpack("<f", f.read(4))[0]
                    vx511111 = unpack("<f", f.read(4))[0]
                    vy511111 = unpack("<f", f.read(4))[0]
                    vz511111 = unpack("<f", f.read(4))[0]
                    type511111 = unpack("B", f.read(1))[0]
                    value511111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw511111 = unpack("<f", f.read(4))[0]
                    vx611111 = unpack("<f", f.read(4))[0]
                    vy611111 = unpack("<f", f.read(4))[0]
                    vz611111 = unpack("<f", f.read(4))[0]
                    type611111 = unpack("B", f.read(1))[0]
                    value611111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw611111 = unpack("<f", f.read(4))[0]
                    vx711111 = unpack("<f", f.read(4))[0]
                    vy711111 = unpack("<f", f.read(4))[0]
                    vz711111 = unpack("<f", f.read(4))[0]
                    type711111 = unpack("B", f.read(1))[0]
                    value711111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw711111 = unpack("<f", f.read(4))[0]
                    vx811111 = unpack("<f", f.read(4))[0]
                    vy811111 = unpack("<f", f.read(4))[0]
                    vz811111 = unpack("<f", f.read(4))[0]
                    type811111 = unpack("B", f.read(1))[0]
                    value811111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw811111 = unpack("<f", f.read(4))[0]
                    vx911111 = unpack("<f", f.read(4))[0]
                    vy911111 = unpack("<f", f.read(4))[0]
                    vz911111 = unpack("<f", f.read(4))[0]
                    type911111 = unpack("B", f.read(1))[0]
                    value911111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw911111 = unpack("<f", f.read(4))[0]

                    f.seek(-144,1)

                    vx1111111 = unpack("<f", f.read(4))[0]
                    vy1111111 = unpack("<f", f.read(4))[0]
                    vz1111111 = unpack("<f", f.read(4))[0]
                    type1111111 = unpack("B", f.read(1))[0]
                    value1111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111111 = unpack("<f", f.read(4))[0]
                    vx2111111 = unpack("<f", f.read(4))[0]
                    vy2111111 = unpack("<f", f.read(4))[0]
                    vz2111111 = unpack("<f", f.read(4))[0]
                    type2111111 = unpack("B", f.read(1))[0]
                    value2111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2111111 = unpack("<f", f.read(4))[0]
                    vx3111111 = unpack("<f", f.read(4))[0]
                    vy3111111 = unpack("<f", f.read(4))[0]
                    vz3111111 = unpack("<f", f.read(4))[0]
                    type3111111 = unpack("B", f.read(1))[0]
                    value3111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3111111 = unpack("<f", f.read(4))[0]
                    vx4111111 = unpack("<f", f.read(4))[0]
                    vy4111111 = unpack("<f", f.read(4))[0]
                    vz4111111 = unpack("<f", f.read(4))[0]
                    type4111111 = unpack("B", f.read(1))[0]
                    value4111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4111111 = unpack("<f", f.read(4))[0]
                    vx5111111 = unpack("<f", f.read(4))[0]
                    vy5111111 = unpack("<f", f.read(4))[0]
                    vz5111111 = unpack("<f", f.read(4))[0]
                    type5111111 = unpack("B", f.read(1))[0]
                    value5111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5111111 = unpack("<f", f.read(4))[0]
                    vx6111111 = unpack("<f", f.read(4))[0]
                    vy6111111 = unpack("<f", f.read(4))[0]
                    vz6111111 = unpack("<f", f.read(4))[0]
                    type6111111 = unpack("B", f.read(1))[0]
                    value6111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6111111 = unpack("<f", f.read(4))[0]
                    vx7111111 = unpack("<f", f.read(4))[0]
                    vy7111111 = unpack("<f", f.read(4))[0]
                    vz7111111 = unpack("<f", f.read(4))[0]
                    type7111111 = unpack("B", f.read(1))[0]
                    value7111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7111111 = unpack("<f", f.read(4))[0]
                    vx8111111 = unpack("<f", f.read(4))[0]
                    vy8111111 = unpack("<f", f.read(4))[0]
                    vz8111111 = unpack("<f", f.read(4))[0]
                    type8111111 = unpack("B", f.read(1))[0]
                    value8111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8111111 = unpack("<f", f.read(4))[0]
                    vx9111111 = unpack("<f", f.read(4))[0]
                    vy9111111 = unpack("<f", f.read(4))[0]
                    vz9111111 = unpack("<f", f.read(4))[0]
                    type9111111 = unpack("B", f.read(1))[0]
                    value9111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9111111 = unpack("<f", f.read(4))[0]

                    f.seek(-144,1)

                    vx11111111 = unpack("<f", f.read(4))[0]
                    vy11111111 = unpack("<f", f.read(4))[0]
                    vz11111111 = unpack("<f", f.read(4))[0]
                    type11111111 = unpack("B", f.read(1))[0]
                    value11111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11111111 = unpack("<f", f.read(4))[0]
                    vx21111111 = unpack("<f", f.read(4))[0]
                    vy21111111 = unpack("<f", f.read(4))[0]
                    vz21111111 = unpack("<f", f.read(4))[0]
                    type21111111 = unpack("B", f.read(1))[0]
                    value21111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21111111 = unpack("<f", f.read(4))[0]
                    vx31111111 = unpack("<f", f.read(4))[0]
                    vy31111111 = unpack("<f", f.read(4))[0]
                    vz31111111 = unpack("<f", f.read(4))[0]
                    type31111111 = unpack("B", f.read(1))[0]
                    value31111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31111111 = unpack("<f", f.read(4))[0]
                    vx41111111 = unpack("<f", f.read(4))[0]
                    vy41111111 = unpack("<f", f.read(4))[0]
                    vz41111111 = unpack("<f", f.read(4))[0]
                    type41111111 = unpack("B", f.read(1))[0]
                    value41111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41111111 = unpack("<f", f.read(4))[0]
                    vx51111111 = unpack("<f", f.read(4))[0]
                    vy51111111 = unpack("<f", f.read(4))[0]
                    vz51111111 = unpack("<f", f.read(4))[0]
                    type51111111 = unpack("B", f.read(1))[0]
                    value51111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51111111 = unpack("<f", f.read(4))[0]
                    vx61111111 = unpack("<f", f.read(4))[0]
                    vy61111111 = unpack("<f", f.read(4))[0]
                    vz61111111 = unpack("<f", f.read(4))[0]
                    type61111111 = unpack("B", f.read(1))[0]
                    value61111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61111111 = unpack("<f", f.read(4))[0]
                    vx71111111 = unpack("<f", f.read(4))[0]
                    vy71111111 = unpack("<f", f.read(4))[0]
                    vz71111111 = unpack("<f", f.read(4))[0]
                    type71111111 = unpack("B", f.read(1))[0]
                    value71111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71111111 = unpack("<f", f.read(4))[0]
                    vx81111111 = unpack("<f", f.read(4))[0]
                    vy81111111 = unpack("<f", f.read(4))[0]
                    vz81111111 = unpack("<f", f.read(4))[0]
                    type81111111 = unpack("B", f.read(1))[0]
                    value81111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81111111 = unpack("<f", f.read(4))[0]
                    vx91111111 = unpack("<f", f.read(4))[0]
                    vy91111111 = unpack("<f", f.read(4))[0]
                    vz91111111 = unpack("<f", f.read(4))[0]
                    type91111111 = unpack("B", f.read(1))[0]
                    value91111111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw91111111 = unpack("<f", f.read(4))[0]

                    

                    
                    fa1 = bm_1e.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1e.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1e.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1e.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1e.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1e.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1e.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1e.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1e.verts.new([-vx9,-vy9,-vz9]) # 8


                    faa1 = bm_1ee.verts.new([-vx11,-vy11,-vz11]) # 0
                    fbb1 = bm_1ee.verts.new([-vx21,-vy21,-vz21]) # 1
                    fcc1 = bm_1ee.verts.new([-vx31,-vy31,-vz31]) # 2
                    fdd1 = bm_1ee.verts.new([-vx41,-vy41,-vz41]) # 3
                    fee1 = bm_1ee.verts.new([-vx51,-vy51,-vz51]) # 4
                    fff1 = bm_1ee.verts.new([-vx61,-vy61,-vz61]) # 5
                    fgg1 = bm_1ee.verts.new([-vx71,-vy71,-vz71]) # 6
                    fhh1 = bm_1ee.verts.new([-vx81,-vy81,-vz81]) # 7
                    fii1 = bm_1ee.verts.new([-vx91,-vy91,-vz91]) # 8

                    faaa1 = bm_1eee.verts.new([-vx111,-vy111,-vz111]) # 0
                    fbbb1 = bm_1eee.verts.new([-vx211,-vy211,-vz211]) # 1
                    fccc1 = bm_1eee.verts.new([-vx311,-vy311,-vz311]) # 2
                    fddd1 = bm_1eee.verts.new([-vx411,-vy411,-vz411]) # 3
                    feee1 = bm_1eee.verts.new([-vx511,-vy511,-vz511]) # 4
                    ffff1 = bm_1eee.verts.new([-vx611,-vy611,-vz611]) # 5
                    fggg1 = bm_1eee.verts.new([-vx711,-vy711,-vz711]) # 6
                    fhhh1 = bm_1eee.verts.new([-vx811,-vy811,-vz811]) # 7
                    fiii1 = bm_1eee.verts.new([-vx911,-vy911,-vz911]) # 8

                    faaaa1 = bm_1eeee.verts.new([-vx1111,-vy1111,-vz1111]) # 0
                    fbbbb1 = bm_1eeee.verts.new([-vx2111,-vy2111,-vz2111]) # 1
                    fcccc1 = bm_1eeee.verts.new([-vx3111,-vy3111,-vz3111]) # 2
                    fdddd1 = bm_1eeee.verts.new([-vx4111,-vy4111,-vz4111]) # 3
                    feeee1 = bm_1eeee.verts.new([-vx5111,-vy5111,-vz5111]) # 4
                    fffff1 = bm_1eeee.verts.new([-vx6111,-vy6111,-vz6111]) # 5
                    fgggg1 = bm_1eeee.verts.new([-vx7111,-vy7111,-vz7111]) # 6
                    fhhhh1 = bm_1eeee.verts.new([-vx8111,-vy8111,-vz8111]) # 7
                    fiiii1 = bm_1eeee.verts.new([-vx9111,-vy9111,-vz9111]) # 8

                    faaaaa1 = bm_1eeeee.verts.new([-vx11111,-vy11111,-vz11111]) # 0
                    fbbbbb1 = bm_1eeeee.verts.new([-vx21111,-vy21111,-vz21111]) # 1
                    fccccc1 = bm_1eeeee.verts.new([-vx31111,-vy31111,-vz31111]) # 2
                    fddddd1 = bm_1eeeee.verts.new([-vx41111,-vy41111,-vz41111]) # 3
                    feeeee1 = bm_1eeeee.verts.new([-vx51111,-vy51111,-vz51111]) # 4
                    ffffff1 = bm_1eeeee.verts.new([-vx61111,-vy61111,-vz61111]) # 5
                    fggggg1 = bm_1eeeee.verts.new([-vx71111,-vy71111,-vz71111]) # 6
                    fhhhhh1 = bm_1eeeee.verts.new([-vx81111,-vy81111,-vz81111]) # 7
                    fiiiii1 = bm_1eeeee.verts.new([-vx91111,-vy91111,-vz91111]) # 8

                    faaaaaaa1 = bm_1eeeeeee.verts.new([-vx1111111,-vy1111111,-vz1111111]) # 0
                    fbbbbbbb1 = bm_1eeeeeee.verts.new([-vx2111111,-vy2111111,-vz2111111]) # 1
                    fccccccc1 = bm_1eeeeeee.verts.new([-vx3111111,-vy3111111,-vz3111111]) # 2
                    fddddddd1 = bm_1eeeeeee.verts.new([-vx4111111,-vy4111111,-vz4111111]) # 3
                    feeeeeee1 = bm_1eeeeeee.verts.new([-vx5111111,-vy5111111,-vz5111111]) # 4
                    ffffffff1 = bm_1eeeeeee.verts.new([-vx6111111,-vy6111111,-vz6111111]) # 5
                    fggggggg1 = bm_1eeeeeee.verts.new([-vx7111111,-vy7111111,-vz7111111]) # 6
                    fhhhhhhh1 = bm_1eeeeeee.verts.new([-vx8111111,-vy8111111,-vz8111111]) # 7
                    fiiiiiii1 = bm_1eeeeeee.verts.new([-vx9111111,-vy9111111,-vz9111111]) # 8
                                                        

                    if type11 == 1:
                        if type21 == 1:
                            if type31 == 0:
                                if type41 == 1:
                                    if type51 == 1:
                                        if type61 == 0:
                                            if type71 == 1:
                                                if type81 == 1:
                                                    if type91 == 0:
                                                        bm_1ee.faces.new([faa1,fbb1,fcc1])
                                                        bm_1ee.faces.new([fdd1,fee1,fff1])
                                                        bm_1ee.faces.new([fgg1,fhh1,fii1])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        bm_1e.faces.new([fa1,fb1,fc1])
                                                        bm_1e.faces.new([fb1,fc1,fd1])
                                                        bm_1e.faces.new([fc1,fd1,fe1])
                                                        bm_1e.faces.new([fd1,fe1,ff1])
                                                        bm_1e.faces.new([fe1,ff1,fg1])
                                                        bm_1e.faces.new([ff1,fg1,fh1])
                                                        bm_1e.faces.new([fg1,fh1,fi1])

                    if type11111 == 1:
                        if type21111 == 1:
                            if type31111 == 0:
                                if type41111 == 1:
                                    if type51111 == 1:
                                        if type61111 == 0:
                                            if type71111 == 0:
                                                if type81111 == 0:
                                                    if type91111 == 0:
                                                        bm_1eeeee.faces.new([faaaaa1,fbbbbb1,fccccc1])
                                                        bm_1eeeee.faces.new([fddddd1,feeeee1,ffffff1])
                                                        bm_1eeeee.faces.new([feeeee1,ffffff1,fggggg1])
                                                        bm_1eeeee.faces.new([ffffff1,fggggg1,fhhhhh1])
                                                        bm_1eeeee.faces.new([fggggg1,fhhhhh1,fiiiii1])

                    if type111 == 1:
                        if type211 == 1:
                            if type311 == 0:
                                if type411 == 0:
                                    if type511 == 1:
                                        if type611 == 1:
                                            if type711 == 0:
                                                if type811 == 0:
                                                    if type911 == 0:
                                                        bm_1eee.faces.new([faaa1,fbbb1,fccc1])
                                                        bm_1eee.faces.new([fbbb1,fccc1,fddd1])
                                                        bm_1eee.faces.new([feee1,ffff1,fggg1])
                                                        bm_1eee.faces.new([ffff1,fggg1,fhhh1])
                                                        bm_1eee.faces.new([fggg1,fhhh1,fiii1])

                    if type1111111 == 1:
                        if type2111111 == 1:
                            if type3111111 == 0:
                                if type4111111 == 0:
                                    if type5111111 == 0:
                                        if type6111111 == 1:
                                            if type7111111 == 1:
                                                if type8111111 == 0:
                                                    if type9111111 == 0:
                                                        bm_1eeeeeee.faces.new([faaaaaaa1,fbbbbbbb1,fccccccc1])
                                                        bm_1eeeeeee.faces.new([fbbbbbbb1,fccccccc1,fddddddd1])
                                                        bm_1eeeeeee.faces.new([fccccccc1,fddddddd1,feeeeeee1])
                                                        bm_1eeeeeee.faces.new([ffffffff1,fggggggg1,fhhhhhhh1])
                                                        bm_1eeeeeee.faces.new([fggggggg1,fhhhhhhh1,fiiiiiii1])

                    if type1111 == 1:
                        if type2111 == 1:
                            if type3111 == 0:
                                if type4111 == 0:
                                    if type5111 == 0:
                                        if type6111 == 0:
                                            if type7111 == 1:
                                                if type8111 == 1:
                                                    if type9111 == 0:
                                                        bm_1eeee.faces.new([faaaa1,fbbbb1,fcccc1])
                                                        bm_1eeee.faces.new([fbbbb1,fcccc1,fdddd1])
                                                        bm_1eeee.faces.new([fcccc1,fdddd1,feeee1])
                                                        bm_1eeee.faces.new([fdddd1,feeee1,fffff1])
                                                        bm_1eeee.faces.new([fgggg1,fhhhh1,fiiii1])

            elif vertexCount == 10:
                for i in range(vertexCount//10):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    vx10 = unpack("<f", f.read(4))[0]
                    vy10 = unpack("<f", f.read(4))[0]
                    vz10 = unpack("<f", f.read(4))[0]
                    type10 = unpack("B", f.read(1))[0]
                    value10 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10 = unpack("<f", f.read(4))[0]
                    f.seek(-160,1)
                    
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx21 = unpack("<f", f.read(4))[0]
                    vy21 = unpack("<f", f.read(4))[0]
                    vz21 = unpack("<f", f.read(4))[0]
                    type21 = unpack("B", f.read(1))[0]
                    value21 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21 = unpack("<f", f.read(4))[0]
                    vx31 = unpack("<f", f.read(4))[0]
                    vy31 = unpack("<f", f.read(4))[0]
                    vz31 = unpack("<f", f.read(4))[0]
                    type31 = unpack("B", f.read(1))[0]
                    value31 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31 = unpack("<f", f.read(4))[0]
                    vx41 = unpack("<f", f.read(4))[0]
                    vy41 = unpack("<f", f.read(4))[0]
                    vz41 = unpack("<f", f.read(4))[0]
                    type41 = unpack("B", f.read(1))[0]
                    value41 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41 = unpack("<f", f.read(4))[0]
                    vx51 = unpack("<f", f.read(4))[0]
                    vy51 = unpack("<f", f.read(4))[0]
                    vz51 = unpack("<f", f.read(4))[0]
                    type51 = unpack("B", f.read(1))[0]
                    value51 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51 = unpack("<f", f.read(4))[0]
                    vx61 = unpack("<f", f.read(4))[0]
                    vy61 = unpack("<f", f.read(4))[0]
                    vz61 = unpack("<f", f.read(4))[0]
                    type61 = unpack("B", f.read(1))[0]
                    value61 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61 = unpack("<f", f.read(4))[0]
                    vx71 = unpack("<f", f.read(4))[0]
                    vy71 = unpack("<f", f.read(4))[0]
                    vz71 = unpack("<f", f.read(4))[0]
                    type71 = unpack("B", f.read(1))[0]
                    value71 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71 = unpack("<f", f.read(4))[0]
                    vx81 = unpack("<f", f.read(4))[0]
                    vy81 = unpack("<f", f.read(4))[0]
                    vz81 = unpack("<f", f.read(4))[0]
                    type81 = unpack("B", f.read(1))[0]
                    value81 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81 = unpack("<f", f.read(4))[0]
                    vx91 = unpack("<f", f.read(4))[0]
                    vy91 = unpack("<f", f.read(4))[0]
                    vz91 = unpack("<f", f.read(4))[0]
                    type91 = unpack("B", f.read(1))[0]
                    value91 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw91 = unpack("<f", f.read(4))[0]
                    vx101 = unpack("<f", f.read(4))[0]
                    vy101 = unpack("<f", f.read(4))[0]
                    vz101 = unpack("<f", f.read(4))[0]
                    type101 = unpack("B", f.read(1))[0]
                    value101 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw101 = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)
                    
                    vx111 = unpack("<f", f.read(4))[0]
                    vy111 = unpack("<f", f.read(4))[0]
                    vz111 = unpack("<f", f.read(4))[0]
                    type111 = unpack("B", f.read(1))[0]
                    value111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw111 = unpack("<f", f.read(4))[0]
                    vx211 = unpack("<f", f.read(4))[0]
                    vy211 = unpack("<f", f.read(4))[0]
                    vz211 = unpack("<f", f.read(4))[0]
                    type211 = unpack("B", f.read(1))[0]
                    value211 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw211 = unpack("<f", f.read(4))[0]
                    vx311 = unpack("<f", f.read(4))[0]
                    vy311 = unpack("<f", f.read(4))[0]
                    vz311 = unpack("<f", f.read(4))[0]
                    type311 = unpack("B", f.read(1))[0]
                    value311 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw311 = unpack("<f", f.read(4))[0]
                    vx411 = unpack("<f", f.read(4))[0]
                    vy411 = unpack("<f", f.read(4))[0]
                    vz411 = unpack("<f", f.read(4))[0]
                    type411 = unpack("B", f.read(1))[0]
                    value411 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw411 = unpack("<f", f.read(4))[0]
                    vx511 = unpack("<f", f.read(4))[0]
                    vy511 = unpack("<f", f.read(4))[0]
                    vz511 = unpack("<f", f.read(4))[0]
                    type511 = unpack("B", f.read(1))[0]
                    value511 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw511 = unpack("<f", f.read(4))[0]
                    vx611 = unpack("<f", f.read(4))[0]
                    vy611 = unpack("<f", f.read(4))[0]
                    vz611 = unpack("<f", f.read(4))[0]
                    type611 = unpack("B", f.read(1))[0]
                    value611 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw611 = unpack("<f", f.read(4))[0]
                    vx711 = unpack("<f", f.read(4))[0]
                    vy711 = unpack("<f", f.read(4))[0]
                    vz711 = unpack("<f", f.read(4))[0]
                    type711 = unpack("B", f.read(1))[0]
                    value711 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw711 = unpack("<f", f.read(4))[0]
                    vx811 = unpack("<f", f.read(4))[0]
                    vy811 = unpack("<f", f.read(4))[0]
                    vz811 = unpack("<f", f.read(4))[0]
                    type811 = unpack("B", f.read(1))[0]
                    value811 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw811 = unpack("<f", f.read(4))[0]
                    vx911 = unpack("<f", f.read(4))[0]
                    vy911 = unpack("<f", f.read(4))[0]
                    vz911 = unpack("<f", f.read(4))[0]
                    type911 = unpack("B", f.read(1))[0]
                    value911 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw911 = unpack("<f", f.read(4))[0]
                    vx1011 = unpack("<f", f.read(4))[0]
                    vy1011 = unpack("<f", f.read(4))[0]
                    vz1011 = unpack("<f", f.read(4))[0]
                    type1011 = unpack("B", f.read(1))[0]
                    value1011 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1011 = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)

                    vx1111 = unpack("<f", f.read(4))[0]
                    vy1111 = unpack("<f", f.read(4))[0]
                    vz1111 = unpack("<f", f.read(4))[0]
                    type11a = unpack("B", f.read(1))[0]
                    value11a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111 = unpack("<f", f.read(4))[0]
                    vx2111 = unpack("<f", f.read(4))[0]
                    vy2111 = unpack("<f", f.read(4))[0]
                    vz2111 = unpack("<f", f.read(4))[0]
                    type21a = unpack("B", f.read(1))[0]
                    value21a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2111 = unpack("<f", f.read(4))[0]
                    vx3111 = unpack("<f", f.read(4))[0]
                    vy3111 = unpack("<f", f.read(4))[0]
                    vz3111 = unpack("<f", f.read(4))[0]
                    type31a = unpack("B", f.read(1))[0]
                    value31a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3111 = unpack("<f", f.read(4))[0]
                    vx4111 = unpack("<f", f.read(4))[0]
                    vy4111 = unpack("<f", f.read(4))[0]
                    vz4111 = unpack("<f", f.read(4))[0]
                    type41a = unpack("B", f.read(1))[0]
                    value41a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4111 = unpack("<f", f.read(4))[0]
                    vx5111 = unpack("<f", f.read(4))[0]
                    vy5111 = unpack("<f", f.read(4))[0]
                    vz5111 = unpack("<f", f.read(4))[0]
                    type51a = unpack("B", f.read(1))[0]
                    value51a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5111 = unpack("<f", f.read(4))[0]
                    vx6111 = unpack("<f", f.read(4))[0]
                    vy6111 = unpack("<f", f.read(4))[0]
                    vz6111 = unpack("<f", f.read(4))[0]
                    type61a = unpack("B", f.read(1))[0]
                    value61a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6111 = unpack("<f", f.read(4))[0]
                    vx7111 = unpack("<f", f.read(4))[0]
                    vy7111 = unpack("<f", f.read(4))[0]
                    vz7111 = unpack("<f", f.read(4))[0]
                    type71a = unpack("B", f.read(1))[0]
                    value71a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7111 = unpack("<f", f.read(4))[0]
                    vx8111 = unpack("<f", f.read(4))[0]
                    vy8111 = unpack("<f", f.read(4))[0]
                    vz8111 = unpack("<f", f.read(4))[0]
                    type81a = unpack("B", f.read(1))[0]
                    value81a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8111 = unpack("<f", f.read(4))[0]
                    vx9111 = unpack("<f", f.read(4))[0]
                    vy9111 = unpack("<f", f.read(4))[0]
                    vz9111 = unpack("<f", f.read(4))[0]
                    type91a = unpack("B", f.read(1))[0]
                    value91a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9111 = unpack("<f", f.read(4))[0]
                    vx10111 = unpack("<f", f.read(4))[0]
                    vy10111 = unpack("<f", f.read(4))[0]
                    vz10111 = unpack("<f", f.read(4))[0]
                    type101a = unpack("B", f.read(1))[0]
                    value101a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10111 = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)

                    vx11111 = unpack("<f", f.read(4))[0]
                    vy11111 = unpack("<f", f.read(4))[0]
                    vz11111 = unpack("<f", f.read(4))[0]
                    type11b = unpack("B", f.read(1))[0]
                    value11b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11111 = unpack("<f", f.read(4))[0]
                    vx21111 = unpack("<f", f.read(4))[0]
                    vy21111 = unpack("<f", f.read(4))[0]
                    vz21111 = unpack("<f", f.read(4))[0]
                    type21b = unpack("B", f.read(1))[0]
                    value21b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21111 = unpack("<f", f.read(4))[0]
                    vx31111 = unpack("<f", f.read(4))[0]
                    vy31111 = unpack("<f", f.read(4))[0]
                    vz31111 = unpack("<f", f.read(4))[0]
                    type31b = unpack("B", f.read(1))[0]
                    value31b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31111 = unpack("<f", f.read(4))[0]
                    vx41111 = unpack("<f", f.read(4))[0]
                    vy41111 = unpack("<f", f.read(4))[0]
                    vz41111 = unpack("<f", f.read(4))[0]
                    type41b = unpack("B", f.read(1))[0]
                    value41b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41111 = unpack("<f", f.read(4))[0]
                    vx51111 = unpack("<f", f.read(4))[0]
                    vy51111 = unpack("<f", f.read(4))[0]
                    vz51111 = unpack("<f", f.read(4))[0]
                    type51b = unpack("B", f.read(1))[0]
                    value51b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51111 = unpack("<f", f.read(4))[0]
                    vx61111 = unpack("<f", f.read(4))[0]
                    vy61111 = unpack("<f", f.read(4))[0]
                    vz61111 = unpack("<f", f.read(4))[0]
                    type61b = unpack("B", f.read(1))[0]
                    value61b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61111 = unpack("<f", f.read(4))[0]
                    vx71111 = unpack("<f", f.read(4))[0]
                    vy71111 = unpack("<f", f.read(4))[0]
                    vz71111 = unpack("<f", f.read(4))[0]
                    type71b = unpack("B", f.read(1))[0]
                    value71b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71111 = unpack("<f", f.read(4))[0]
                    vx81111 = unpack("<f", f.read(4))[0]
                    vy81111 = unpack("<f", f.read(4))[0]
                    vz81111 = unpack("<f", f.read(4))[0]
                    type81b = unpack("B", f.read(1))[0]
                    value81b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81111 = unpack("<f", f.read(4))[0]
                    vx91111 = unpack("<f", f.read(4))[0]
                    vy91111 = unpack("<f", f.read(4))[0]
                    vz91111 = unpack("<f", f.read(4))[0]
                    type91b = unpack("B", f.read(1))[0]
                    value91b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw91111 = unpack("<f", f.read(4))[0]
                    vx101111 = unpack("<f", f.read(4))[0]
                    vy101111 = unpack("<f", f.read(4))[0]
                    vz101111 = unpack("<f", f.read(4))[0]
                    type101b = unpack("B", f.read(1))[0]
                    value101b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw101111 = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)

                    vx111111 = unpack("<f", f.read(4))[0]
                    vy111111 = unpack("<f", f.read(4))[0]
                    vz111111 = unpack("<f", f.read(4))[0]
                    type11c = unpack("B", f.read(1))[0]
                    value11c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw111111 = unpack("<f", f.read(4))[0]
                    vx211111 = unpack("<f", f.read(4))[0]
                    vy211111 = unpack("<f", f.read(4))[0]
                    vz211111 = unpack("<f", f.read(4))[0]
                    type21c = unpack("B", f.read(1))[0]
                    value21c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw211111 = unpack("<f", f.read(4))[0]
                    vx311111 = unpack("<f", f.read(4))[0]
                    vy311111 = unpack("<f", f.read(4))[0]
                    vz311111 = unpack("<f", f.read(4))[0]
                    type31c = unpack("B", f.read(1))[0]
                    value31c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw311111 = unpack("<f", f.read(4))[0]
                    vx411111 = unpack("<f", f.read(4))[0]
                    vy411111 = unpack("<f", f.read(4))[0]
                    vz411111 = unpack("<f", f.read(4))[0]
                    type41c = unpack("B", f.read(1))[0]
                    value41c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw411111 = unpack("<f", f.read(4))[0]
                    vx511111 = unpack("<f", f.read(4))[0]
                    vy511111 = unpack("<f", f.read(4))[0]
                    vz511111 = unpack("<f", f.read(4))[0]
                    type51c = unpack("B", f.read(1))[0]
                    value51c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw511111 = unpack("<f", f.read(4))[0]
                    vx611111 = unpack("<f", f.read(4))[0]
                    vy611111 = unpack("<f", f.read(4))[0]
                    vz611111 = unpack("<f", f.read(4))[0]
                    type61c = unpack("B", f.read(1))[0]
                    value61c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw611111 = unpack("<f", f.read(4))[0]
                    vx711111 = unpack("<f", f.read(4))[0]
                    vy711111 = unpack("<f", f.read(4))[0]
                    vz711111 = unpack("<f", f.read(4))[0]
                    type71c = unpack("B", f.read(1))[0]
                    value71c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw711111 = unpack("<f", f.read(4))[0]
                    vx811111 = unpack("<f", f.read(4))[0]
                    vy811111 = unpack("<f", f.read(4))[0]
                    vz811111 = unpack("<f", f.read(4))[0]
                    type81c = unpack("B", f.read(1))[0]
                    value81c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw811111 = unpack("<f", f.read(4))[0]
                    vx911111 = unpack("<f", f.read(4))[0]
                    vy911111 = unpack("<f", f.read(4))[0]
                    vz911111 = unpack("<f", f.read(4))[0]
                    type91c = unpack("B", f.read(1))[0]
                    value91c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw911111 = unpack("<f", f.read(4))[0]
                    vx1011111 = unpack("<f", f.read(4))[0]
                    vy1011111 = unpack("<f", f.read(4))[0]
                    vz1011111 = unpack("<f", f.read(4))[0]
                    type101c = unpack("B", f.read(1))[0]
                    value101c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1011111 = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)

                    vx1111111 = unpack("<f", f.read(4))[0]
                    vy1111111 = unpack("<f", f.read(4))[0]
                    vz1111111 = unpack("<f", f.read(4))[0]
                    type11d = unpack("B", f.read(1))[0]
                    value11d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111111 = unpack("<f", f.read(4))[0]
                    vx2111111 = unpack("<f", f.read(4))[0]
                    vy2111111 = unpack("<f", f.read(4))[0]
                    vz2111111 = unpack("<f", f.read(4))[0]
                    type21d = unpack("B", f.read(1))[0]
                    value21d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2111111 = unpack("<f", f.read(4))[0]
                    vx3111111 = unpack("<f", f.read(4))[0]
                    vy3111111 = unpack("<f", f.read(4))[0]
                    vz3111111 = unpack("<f", f.read(4))[0]
                    type31d = unpack("B", f.read(1))[0]
                    value31d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3111111 = unpack("<f", f.read(4))[0]
                    vx4111111 = unpack("<f", f.read(4))[0]
                    vy4111111 = unpack("<f", f.read(4))[0]
                    vz4111111 = unpack("<f", f.read(4))[0]
                    type41d = unpack("B", f.read(1))[0]
                    value41d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4111111 = unpack("<f", f.read(4))[0]
                    vx5111111 = unpack("<f", f.read(4))[0]
                    vy5111111 = unpack("<f", f.read(4))[0]
                    vz5111111 = unpack("<f", f.read(4))[0]
                    type51d = unpack("B", f.read(1))[0]
                    value51d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5111111 = unpack("<f", f.read(4))[0]
                    vx6111111 = unpack("<f", f.read(4))[0]
                    vy6111111 = unpack("<f", f.read(4))[0]
                    vz6111111 = unpack("<f", f.read(4))[0]
                    type61d = unpack("B", f.read(1))[0]
                    value61d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6111111 = unpack("<f", f.read(4))[0]
                    vx7111111 = unpack("<f", f.read(4))[0]
                    vy7111111 = unpack("<f", f.read(4))[0]
                    vz7111111 = unpack("<f", f.read(4))[0]
                    type71d = unpack("B", f.read(1))[0]
                    value71d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7111111 = unpack("<f", f.read(4))[0]
                    vx8111111 = unpack("<f", f.read(4))[0]
                    vy8111111 = unpack("<f", f.read(4))[0]
                    vz8111111 = unpack("<f", f.read(4))[0]
                    type81d = unpack("B", f.read(1))[0]
                    value81d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8111111 = unpack("<f", f.read(4))[0]
                    vx9111111 = unpack("<f", f.read(4))[0]
                    vy9111111 = unpack("<f", f.read(4))[0]
                    vz9111111 = unpack("<f", f.read(4))[0]
                    type91d = unpack("B", f.read(1))[0]
                    value91d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9111111 = unpack("<f", f.read(4))[0]
                    vx10111111 = unpack("<f", f.read(4))[0]
                    vy10111111 = unpack("<f", f.read(4))[0]
                    vz10111111 = unpack("<f", f.read(4))[0]
                    type101d = unpack("B", f.read(1))[0]
                    value101d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10111111 = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)

                    vx1111111a = unpack("<f", f.read(4))[0]
                    vy1111111a = unpack("<f", f.read(4))[0]
                    vz1111111a = unpack("<f", f.read(4))[0]
                    type11e = unpack("B", f.read(1))[0]
                    value11e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111111a = unpack("<f", f.read(4))[0]
                    vx2111111a = unpack("<f", f.read(4))[0]
                    vy2111111a = unpack("<f", f.read(4))[0]
                    vz2111111a = unpack("<f", f.read(4))[0]
                    type21e = unpack("B", f.read(1))[0]
                    value21e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2111111a = unpack("<f", f.read(4))[0]
                    vx3111111a = unpack("<f", f.read(4))[0]
                    vy3111111a = unpack("<f", f.read(4))[0]
                    vz3111111a = unpack("<f", f.read(4))[0]
                    type31e = unpack("B", f.read(1))[0]
                    value31e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3111111a = unpack("<f", f.read(4))[0]
                    vx4111111a = unpack("<f", f.read(4))[0]
                    vy4111111a = unpack("<f", f.read(4))[0]
                    vz4111111a = unpack("<f", f.read(4))[0]
                    type41e = unpack("B", f.read(1))[0]
                    value41e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4111111a = unpack("<f", f.read(4))[0]
                    vx5111111a = unpack("<f", f.read(4))[0]
                    vy5111111a = unpack("<f", f.read(4))[0]
                    vz5111111a = unpack("<f", f.read(4))[0]
                    type51e = unpack("B", f.read(1))[0]
                    value51e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5111111a = unpack("<f", f.read(4))[0]
                    vx6111111a = unpack("<f", f.read(4))[0]
                    vy6111111a = unpack("<f", f.read(4))[0]
                    vz6111111a = unpack("<f", f.read(4))[0]
                    type61e = unpack("B", f.read(1))[0]
                    value61e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6111111a = unpack("<f", f.read(4))[0]
                    vx7111111a = unpack("<f", f.read(4))[0]
                    vy7111111a = unpack("<f", f.read(4))[0]
                    vz7111111a = unpack("<f", f.read(4))[0]
                    type71e = unpack("B", f.read(1))[0]
                    value71e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7111111a = unpack("<f", f.read(4))[0]
                    vx8111111a = unpack("<f", f.read(4))[0]
                    vy8111111a = unpack("<f", f.read(4))[0]
                    vz8111111a = unpack("<f", f.read(4))[0]
                    type81e = unpack("B", f.read(1))[0]
                    value81e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8111111a = unpack("<f", f.read(4))[0]
                    vx9111111a = unpack("<f", f.read(4))[0]
                    vy9111111a = unpack("<f", f.read(4))[0]
                    vz9111111a = unpack("<f", f.read(4))[0]
                    type91e = unpack("B", f.read(1))[0]
                    value91e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9111111a = unpack("<f", f.read(4))[0]
                    vx10111111a = unpack("<f", f.read(4))[0]
                    vy10111111a = unpack("<f", f.read(4))[0]
                    vz10111111a = unpack("<f", f.read(4))[0]
                    type101e = unpack("B", f.read(1))[0]
                    value101e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10111111a = unpack("<f", f.read(4))[0]

                    f.seek(-160,1)

                    vx1111111b = unpack("<f", f.read(4))[0]
                    vy1111111b = unpack("<f", f.read(4))[0]
                    vz1111111b = unpack("<f", f.read(4))[0]
                    type11f = unpack("B", f.read(1))[0]
                    value11f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111111b = unpack("<f", f.read(4))[0]
                    vx2111111b = unpack("<f", f.read(4))[0]
                    vy2111111b = unpack("<f", f.read(4))[0]
                    vz2111111b = unpack("<f", f.read(4))[0]
                    type21f = unpack("B", f.read(1))[0]
                    value21f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2111111b = unpack("<f", f.read(4))[0]
                    vx3111111b = unpack("<f", f.read(4))[0]
                    vy3111111b = unpack("<f", f.read(4))[0]
                    vz3111111b = unpack("<f", f.read(4))[0]
                    type31f = unpack("B", f.read(1))[0]
                    value31f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3111111b = unpack("<f", f.read(4))[0]
                    vx4111111b = unpack("<f", f.read(4))[0]
                    vy4111111b = unpack("<f", f.read(4))[0]
                    vz4111111b = unpack("<f", f.read(4))[0]
                    type41f = unpack("B", f.read(1))[0]
                    value41f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4111111b = unpack("<f", f.read(4))[0]
                    vx5111111b = unpack("<f", f.read(4))[0]
                    vy5111111b = unpack("<f", f.read(4))[0]
                    vz5111111b = unpack("<f", f.read(4))[0]
                    type51f = unpack("B", f.read(1))[0]
                    value51f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5111111b = unpack("<f", f.read(4))[0]
                    vx6111111b = unpack("<f", f.read(4))[0]
                    vy6111111b = unpack("<f", f.read(4))[0]
                    vz6111111b = unpack("<f", f.read(4))[0]
                    type61f = unpack("B", f.read(1))[0]
                    value61f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6111111b = unpack("<f", f.read(4))[0]
                    vx7111111b = unpack("<f", f.read(4))[0]
                    vy7111111b = unpack("<f", f.read(4))[0]
                    vz7111111b = unpack("<f", f.read(4))[0]
                    type71f = unpack("B", f.read(1))[0]
                    value71f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7111111b = unpack("<f", f.read(4))[0]
                    vx8111111b = unpack("<f", f.read(4))[0]
                    vy8111111b = unpack("<f", f.read(4))[0]
                    vz8111111b = unpack("<f", f.read(4))[0]
                    type81f = unpack("B", f.read(1))[0]
                    value81f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8111111b = unpack("<f", f.read(4))[0]
                    vx9111111b = unpack("<f", f.read(4))[0]
                    vy9111111b = unpack("<f", f.read(4))[0]
                    vz9111111b = unpack("<f", f.read(4))[0]
                    type91f = unpack("B", f.read(1))[0]
                    value91f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9111111b = unpack("<f", f.read(4))[0]
                    vx10111111b = unpack("<f", f.read(4))[0]
                    vy10111111b = unpack("<f", f.read(4))[0]
                    vz10111111b = unpack("<f", f.read(4))[0]
                    type101f = unpack("B", f.read(1))[0]
                    value101f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10111111b = unpack("<f", f.read(4))[0]
                    
                    fa1 = bm_1f.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1f.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1f.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1f.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1f.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1f.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1f.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1f.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1f.verts.new([-vx9,-vy9,-vz9]) # 8
                    fj1 = bm_1f.verts.new([-vx10,-vy10,-vz10]) # 9

                    fa1a = bm_1ff.verts.new([-vx11,-vy11,-vz11]) # 0
                    fb1a = bm_1ff.verts.new([-vx21,-vy21,-vz21]) # 1
                    fc1a = bm_1ff.verts.new([-vx31,-vy31,-vz31]) # 2
                    fd1a = bm_1ff.verts.new([-vx41,-vy41,-vz41]) # 3
                    fe1a = bm_1ff.verts.new([-vx51,-vy51,-vz51]) # 4
                    ff1a = bm_1ff.verts.new([-vx61,-vy61,-vz61]) # 5
                    fg1a = bm_1ff.verts.new([-vx71,-vy71,-vz71]) # 6
                    fh1a = bm_1ff.verts.new([-vx81,-vy81,-vz81]) # 7
                    fi1a = bm_1ff.verts.new([-vx91,-vy91,-vz91]) # 8
                    fj1a = bm_1ff.verts.new([-vx101,-vy101,-vz101]) # 9

                    fa1b = bm_1fff.verts.new([-vx111,-vy111,-vz111]) # 0
                    fb1b = bm_1fff.verts.new([-vx211,-vy211,-vz211]) # 1
                    fc1b = bm_1fff.verts.new([-vx311,-vy311,-vz311]) # 2
                    fd1b = bm_1fff.verts.new([-vx411,-vy411,-vz411]) # 3
                    fe1b = bm_1fff.verts.new([-vx511,-vy511,-vz511]) # 4
                    ff1b = bm_1fff.verts.new([-vx611,-vy611,-vz611]) # 5
                    fg1b = bm_1fff.verts.new([-vx711,-vy711,-vz711]) # 6
                    fh1b = bm_1fff.verts.new([-vx811,-vy811,-vz811]) # 7
                    fi1b = bm_1fff.verts.new([-vx911,-vy911,-vz911]) # 8
                    fj1b = bm_1fff.verts.new([-vx1011,-vy1011,-vz1011]) # 9

                    fa1bb = bm_1ffff.verts.new([-vx1111,-vy1111,-vz1111]) # 0
                    fb1bb = bm_1ffff.verts.new([-vx2111,-vy2111,-vz2111]) # 1
                    fc1bb = bm_1ffff.verts.new([-vx3111,-vy3111,-vz3111]) # 2
                    fd1bb = bm_1ffff.verts.new([-vx4111,-vy4111,-vz4111]) # 3
                    fe1bb = bm_1ffff.verts.new([-vx5111,-vy5111,-vz5111]) # 4
                    ff1bb = bm_1ffff.verts.new([-vx6111,-vy6111,-vz6111]) # 5
                    fg1bb = bm_1ffff.verts.new([-vx7111,-vy7111,-vz7111]) # 6
                    fh1bb = bm_1ffff.verts.new([-vx8111,-vy8111,-vz8111]) # 7
                    fi1bb = bm_1ffff.verts.new([-vx9111,-vy9111,-vz9111]) # 8
                    fj1bb = bm_1ffff.verts.new([-vx10111,-vy10111,-vz10111]) # 9

                    fa1bbb = bm_1fffff.verts.new([-vx11111,-vy11111,-vz11111]) # 0
                    fb1bbb = bm_1fffff.verts.new([-vx21111,-vy21111,-vz21111]) # 1
                    fc1bbb = bm_1fffff.verts.new([-vx31111,-vy31111,-vz31111]) # 2
                    fd1bbb = bm_1fffff.verts.new([-vx41111,-vy41111,-vz41111]) # 3
                    fe1bbb = bm_1fffff.verts.new([-vx51111,-vy51111,-vz51111]) # 4
                    ff1bbb = bm_1fffff.verts.new([-vx61111,-vy61111,-vz61111]) # 5
                    fg1bbb = bm_1fffff.verts.new([-vx71111,-vy71111,-vz71111]) # 6
                    fh1bbb = bm_1fffff.verts.new([-vx81111,-vy81111,-vz81111]) # 7
                    fi1bbb = bm_1fffff.verts.new([-vx91111,-vy91111,-vz91111]) # 8
                    fj1bbb = bm_1fffff.verts.new([-vx101111,-vy101111,-vz101111]) # 9

                    fa1bbbb = bm_1ffffff.verts.new([-vx111111,-vy111111,-vz111111]) # 0
                    fb1bbbb = bm_1ffffff.verts.new([-vx211111,-vy211111,-vz211111]) # 1
                    fc1bbbb = bm_1ffffff.verts.new([-vx311111,-vy311111,-vz311111]) # 2
                    fd1bbbb = bm_1ffffff.verts.new([-vx411111,-vy411111,-vz411111]) # 3
                    fe1bbbb = bm_1ffffff.verts.new([-vx511111,-vy511111,-vz511111]) # 4
                    ff1bbbb = bm_1ffffff.verts.new([-vx611111,-vy611111,-vz611111]) # 5
                    fg1bbbb = bm_1ffffff.verts.new([-vx711111,-vy711111,-vz711111]) # 6
                    fh1bbbb = bm_1ffffff.verts.new([-vx811111,-vy811111,-vz811111]) # 7
                    fi1bbbb = bm_1ffffff.verts.new([-vx911111,-vy911111,-vz911111]) # 8
                    fj1bbbb = bm_1ffffff.verts.new([-vx1011111,-vy1011111,-vz1011111]) # 9

                    fa1bbbbb = bm_1fffffff.verts.new([-vx1111111,-vy1111111,-vz1111111]) # 0
                    fb1bbbbb = bm_1fffffff.verts.new([-vx2111111,-vy2111111,-vz2111111]) # 1
                    fc1bbbbb = bm_1fffffff.verts.new([-vx3111111,-vy3111111,-vz3111111]) # 2
                    fd1bbbbb = bm_1fffffff.verts.new([-vx4111111,-vy4111111,-vz4111111]) # 3
                    fe1bbbbb = bm_1fffffff.verts.new([-vx5111111,-vy5111111,-vz5111111]) # 4
                    ff1bbbbb = bm_1fffffff.verts.new([-vx6111111,-vy6111111,-vz6111111]) # 5
                    fg1bbbbb = bm_1fffffff.verts.new([-vx7111111,-vy7111111,-vz7111111]) # 6
                    fh1bbbbb = bm_1fffffff.verts.new([-vx8111111,-vy8111111,-vz8111111]) # 7
                    fi1bbbbb = bm_1fffffff.verts.new([-vx9111111,-vy9111111,-vz9111111]) # 8
                    fj1bbbbb = bm_1fffffff.verts.new([-vx10111111,-vy10111111,-vz10111111]) # 9

                    fa1c = bm_1ffffffff.verts.new([-vx1111111a,-vy1111111a,-vz1111111a]) # 0
                    fb1c = bm_1ffffffff.verts.new([-vx2111111a,-vy2111111a,-vz2111111a]) # 1
                    fc1c = bm_1ffffffff.verts.new([-vx3111111a,-vy3111111a,-vz3111111a]) # 2
                    fd1c = bm_1ffffffff.verts.new([-vx4111111a,-vy4111111a,-vz4111111a]) # 3
                    fe1c = bm_1ffffffff.verts.new([-vx5111111a,-vy5111111a,-vz5111111a]) # 4
                    ff1c = bm_1ffffffff.verts.new([-vx6111111a,-vy6111111a,-vz6111111a]) # 5
                    fg1c = bm_1ffffffff.verts.new([-vx7111111a,-vy7111111a,-vz7111111a]) # 6
                    fh1c = bm_1ffffffff.verts.new([-vx8111111a,-vy8111111a,-vz8111111a]) # 7
                    fi1c = bm_1ffffffff.verts.new([-vx9111111a,-vy9111111a,-vz9111111a]) # 8
                    fj1c = bm_1ffffffff.verts.new([-vx10111111a,-vy10111111a,-vz10111111a]) # 9

                    fa1d = bm_1fffffffff.verts.new([-vx1111111b,-vy1111111b,-vz1111111b]) # 0
                    fb1d = bm_1fffffffff.verts.new([-vx2111111b,-vy2111111b,-vz2111111b]) # 1
                    fc1d = bm_1fffffffff.verts.new([-vx3111111b,-vy3111111b,-vz3111111b]) # 2
                    fd1d = bm_1fffffffff.verts.new([-vx4111111b,-vy4111111b,-vz4111111b]) # 3
                    fe1d = bm_1fffffffff.verts.new([-vx5111111b,-vy5111111b,-vz5111111b]) # 4
                    ff1d = bm_1fffffffff.verts.new([-vx6111111b,-vy6111111b,-vz6111111b]) # 5
                    fg1d = bm_1fffffffff.verts.new([-vx7111111b,-vy7111111b,-vz7111111b]) # 6
                    fh1d = bm_1fffffffff.verts.new([-vx8111111b,-vy8111111b,-vz8111111b]) # 7
                    fi1d = bm_1fffffffff.verts.new([-vx9111111b,-vy9111111b,-vz9111111b]) # 8
                    fj1d = bm_1fffffffff.verts.new([-vx10111111b,-vy10111111b,-vz10111111b]) # 9
                    
                    if type111 == 1:
                        if type211 == 1:
                            if type311 == 0:
                                if type411 == 0:
                                    if type511 == 1:
                                        if type611 == 1:
                                            if type711 == 0:
                                                if type811 == 1:
                                                    if type911 == 1:
                                                        if type1011 == 0:
                                                            bm_1fff.faces.new([fa1b,fb1b,fc1b]) # 0 1 2
                                                            bm_1fff.faces.new([fb1b,fc1b,fd1b]) # 1 2 3
                                                            bm_1fff.faces.new([fe1b,ff1b,fg1b]) # 4 5 6
                                                            bm_1fff.faces.new([fh1b,fi1b,fj1b]) # 8,9,10

                    if type11f == 1:
                        if type21f == 1:
                            if type31f == 0:
                                if type41f == 1:
                                    if type51f == 1:
                                        if type61f == 0:
                                            if type71f == 0:
                                                if type81f == 1:
                                                    if type91f == 1:
                                                        if type101f == 0:
                                                            bm_1fffffffff.faces.new([fa1d,fb1d,fc1d])
                                                            bm_1fffffffff.faces.new([fd1d,fe1d,ff1d])
                                                            bm_1fffffffff.faces.new([fe1d,ff1d,fg1d])
                                                            bm_1fffffffff.faces.new([fh1d,fi1d,fj1d])

                    if type11e == 1:
                        if type21e == 1:
                            if type31e == 0:
                                if type41e == 1:
                                    if type51e == 1:
                                        if type61e == 0:
                                            if type71e == 1:
                                                if type81e == 1:
                                                    if type91e == 0:
                                                        if type101e == 0:
                                                            bm_1ffffffff.faces.new([fa1c,fb1c,fc1c])
                                                            bm_1ffffffff.faces.new([fd1c,fe1c,ff1c])
                                                            bm_1ffffffff.faces.new([fg1c,fh1c,fi1c])
                                                            bm_1ffffffff.faces.new([fh1c,fi1c,fj1c])

                    if type11d == 1:
                        if type21d == 1:
                            if type31d == 0:
                                if type41d == 0:
                                    if type51d == 0:
                                        if type61d == 0:
                                            if type71d == 0:
                                                if type81d == 1:
                                                    if type91d == 1:
                                                        if type101d == 0:
                                                            bm_1fffffff.faces.new([fa1bbbbb,fb1bbbbb,fc1bbbbb])
                                                            bm_1fffffff.faces.new([fb1bbbbb,fc1bbbbb,fd1bbbbb])
                                                            bm_1fffffff.faces.new([fc1bbbbb,fd1bbbbb,fe1bbbbb])
                                                            bm_1fffffff.faces.new([fd1bbbbb,fe1bbbbb,ff1bbbbb])
                                                            bm_1fffffff.faces.new([fe1bbbbb,ff1bbbbb,fg1bbbbb])
                                                            bm_1fffffff.faces.new([fh1bbbbb,fi1bbbbb,fj1bbbbb])

                    if type11c == 1:
                        if type21c == 1:
                            if type31c == 0:
                                if type41c == 0:
                                    if type51c == 0:
                                        if type61c == 0:
                                            if type71c == 1:
                                                if type81c == 1:
                                                    if type91c == 0:
                                                        if type101c == 0:
                                                            bm_1ffffff.faces.new([fa1bbbb,fb1bbbb,fc1bbbb])
                                                            bm_1ffffff.faces.new([fb1bbbb,fc1bbbb,fd1bbbb])
                                                            bm_1ffffff.faces.new([fc1bbbb,fd1bbbb,fe1bbbb])
                                                            bm_1ffffff.faces.new([fd1bbbb,fe1bbbb,ff1bbbb])
                                                            bm_1ffffff.faces.new([fg1bbbb,fh1bbbb,fi1bbbb])
                                                            bm_1ffffff.faces.new([fh1bbbb,fi1bbbb,fj1bbbb])

                    if type11b == 1:
                        if type21b == 1:
                            if type31b == 0:
                                if type41b == 0:
                                    if type51b == 0:
                                        if type61b == 1:
                                            if type71b == 1:
                                                if type81b == 0:
                                                    if type91b == 0:
                                                        if type101b == 0:
                                                            bm_1fffff.faces.new([fa1bbb,fb1bbb,fc1bbb])
                                                            bm_1fffff.faces.new([fb1bbb,fc1bbb,fd1bbb])
                                                            bm_1fffff.faces.new([fc1bbb,fd1bbb,fe1bbb])
                                                            bm_1fffff.faces.new([ff1bbb,fg1bbb,fh1bbb])
                                                            bm_1fffff.faces.new([fg1bbb,fh1bbb,fi1bbb])
                                                            bm_1fffff.faces.new([fh1bbb,fi1bbb,fj1bbb])

                    if type11a == 1:
                        if type21a == 1:
                            if type31a == 0:
                                if type41a == 0:
                                    if type51a == 1:
                                        if type61a == 1:
                                            if type71a == 0:
                                                if type81a == 0:
                                                    if type91a == 0:
                                                        if type101a == 0:
                                                            bm_1ffff.faces.new([fa1bb,fb1bb,fc1bb])
                                                            bm_1ffff.faces.new([fb1bb,fc1bb,fd1bb])
                                                            bm_1ffff.faces.new([fe1bb,ff1bb,fg1bb])
                                                            bm_1ffff.faces.new([ff1bb,fg1bb,fh1bb])
                                                            bm_1ffff.faces.new([fg1bb,fh1bb,fi1bb])
                                                            bm_1ffff.faces.new([fh1bb,fi1bb,fj1bb])
                                                            
                    if type11 == 1:
                        if type21 == 1:
                            if type31 == 0:
                                if type41 == 1:
                                    if type51 == 1:
                                        if type61 == 0:
                                            if type71 == 0:
                                                if type81 == 0:
                                                    if type91 == 0:
                                                        if type101 == 0:
                                                            bm_1ff.faces.new([fa1a,fb1a,fc1a])
                                                            bm_1ff.faces.new([fd1a,fe1a,ff1a])
                                                            bm_1ff.faces.new([fe1a,ff1a,fg1a])
                                                            bm_1ff.faces.new([ff1a,fg1a,fh1a])
                                                            bm_1ff.faces.new([fg1a,fh1a,fi1a])
                                                            bm_1ff.faces.new([fh1a,fi1a,fj1a])
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        if type10 == 0:
                                                            bm_1f.faces.new([fa1,fb1,fc1])
                                                            bm_1f.faces.new([fb1,fc1,fd1])
                                                            bm_1f.faces.new([fc1,fd1,fe1])
                                                            bm_1f.faces.new([fd1,fe1,ff1])
                                                            bm_1f.faces.new([fe1,ff1,fg1])
                                                            bm_1f.faces.new([ff1,fg1,fh1])
                                                            bm_1f.faces.new([fg1,fh1,fi1])
                                                            bm_1f.faces.new([fh1,fi1,fj1])

            elif vertexCount == 11:
                for i in range(vertexCount//11):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    vx10 = unpack("<f", f.read(4))[0]
                    vy10 = unpack("<f", f.read(4))[0]
                    vz10 = unpack("<f", f.read(4))[0]
                    type10 = unpack("B", f.read(1))[0]
                    value10 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10 = unpack("<f", f.read(4))[0]
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    f.seek(-176,1)

                    vx12 = unpack("<f", f.read(4))[0]
                    vy12 = unpack("<f", f.read(4))[0]
                    vz12 = unpack("<f", f.read(4))[0]
                    type12 = unpack("B", f.read(1))[0]
                    value12 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12 = unpack("<f", f.read(4))[0]
                    vx22 = unpack("<f", f.read(4))[0]
                    vy22 = unpack("<f", f.read(4))[0]
                    vz22 = unpack("<f", f.read(4))[0]
                    type22 = unpack("B", f.read(1))[0]
                    value22 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw22 = unpack("<f", f.read(4))[0]
                    vx32 = unpack("<f", f.read(4))[0]
                    vy32 = unpack("<f", f.read(4))[0]
                    vz32 = unpack("<f", f.read(4))[0]
                    type32 = unpack("B", f.read(1))[0]
                    value32 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw32 = unpack("<f", f.read(4))[0]
                    vx42 = unpack("<f", f.read(4))[0]
                    vy42 = unpack("<f", f.read(4))[0]
                    vz42 = unpack("<f", f.read(4))[0]
                    type42 = unpack("B", f.read(1))[0]
                    value42 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw42 = unpack("<f", f.read(4))[0]
                    vx52 = unpack("<f", f.read(4))[0]
                    vy52 = unpack("<f", f.read(4))[0]
                    vz52 = unpack("<f", f.read(4))[0]
                    type52 = unpack("B", f.read(1))[0]
                    value52 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw52 = unpack("<f", f.read(4))[0]
                    vx62 = unpack("<f", f.read(4))[0]
                    vy62 = unpack("<f", f.read(4))[0]
                    vz62 = unpack("<f", f.read(4))[0]
                    type62 = unpack("B", f.read(1))[0]
                    value62 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw62 = unpack("<f", f.read(4))[0]
                    vx72 = unpack("<f", f.read(4))[0]
                    vy72 = unpack("<f", f.read(4))[0]
                    vz72 = unpack("<f", f.read(4))[0]
                    type72 = unpack("B", f.read(1))[0]
                    value72 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw72 = unpack("<f", f.read(4))[0]
                    vx82 = unpack("<f", f.read(4))[0]
                    vy82 = unpack("<f", f.read(4))[0]
                    vz82 = unpack("<f", f.read(4))[0]
                    type82 = unpack("B", f.read(1))[0]
                    value82 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw82 = unpack("<f", f.read(4))[0]
                    vx92 = unpack("<f", f.read(4))[0]
                    vy92 = unpack("<f", f.read(4))[0]
                    vz92 = unpack("<f", f.read(4))[0]
                    type92 = unpack("B", f.read(1))[0]
                    value92 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw92 = unpack("<f", f.read(4))[0]
                    vx102 = unpack("<f", f.read(4))[0]
                    vy102 = unpack("<f", f.read(4))[0]
                    vz102 = unpack("<f", f.read(4))[0]
                    type102 = unpack("B", f.read(1))[0]
                    value102 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw102 = unpack("<f", f.read(4))[0]
                    vx112 = unpack("<f", f.read(4))[0]
                    vy112 = unpack("<f", f.read(4))[0]
                    vz112 = unpack("<f", f.read(4))[0]
                    type112 = unpack("B", f.read(1))[0]
                    value112 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw112 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx122 = unpack("<f", f.read(4))[0]
                    vy122 = unpack("<f", f.read(4))[0]
                    vz122 = unpack("<f", f.read(4))[0]
                    type122 = unpack("B", f.read(1))[0]
                    value122 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw122 = unpack("<f", f.read(4))[0]
                    vx222 = unpack("<f", f.read(4))[0]
                    vy222 = unpack("<f", f.read(4))[0]
                    vz222 = unpack("<f", f.read(4))[0]
                    type222 = unpack("B", f.read(1))[0]
                    value222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw222 = unpack("<f", f.read(4))[0]
                    vx322 = unpack("<f", f.read(4))[0]
                    vy322 = unpack("<f", f.read(4))[0]
                    vz322 = unpack("<f", f.read(4))[0]
                    type322 = unpack("B", f.read(1))[0]
                    value322 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw322 = unpack("<f", f.read(4))[0]
                    vx422 = unpack("<f", f.read(4))[0]
                    vy422 = unpack("<f", f.read(4))[0]
                    vz422 = unpack("<f", f.read(4))[0]
                    type422 = unpack("B", f.read(1))[0]
                    value422 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw422 = unpack("<f", f.read(4))[0]
                    vx522 = unpack("<f", f.read(4))[0]
                    vy522 = unpack("<f", f.read(4))[0]
                    vz522 = unpack("<f", f.read(4))[0]
                    type522 = unpack("B", f.read(1))[0]
                    value522 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw522 = unpack("<f", f.read(4))[0]
                    vx622 = unpack("<f", f.read(4))[0]
                    vy622 = unpack("<f", f.read(4))[0]
                    vz622 = unpack("<f", f.read(4))[0]
                    type622 = unpack("B", f.read(1))[0]
                    value622 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw622 = unpack("<f", f.read(4))[0]
                    vx722 = unpack("<f", f.read(4))[0]
                    vy722 = unpack("<f", f.read(4))[0]
                    vz722 = unpack("<f", f.read(4))[0]
                    type722 = unpack("B", f.read(1))[0]
                    value722 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw722 = unpack("<f", f.read(4))[0]
                    vx822 = unpack("<f", f.read(4))[0]
                    vy822 = unpack("<f", f.read(4))[0]
                    vz822 = unpack("<f", f.read(4))[0]
                    type822 = unpack("B", f.read(1))[0]
                    value822 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw822 = unpack("<f", f.read(4))[0]
                    vx922 = unpack("<f", f.read(4))[0]
                    vy922 = unpack("<f", f.read(4))[0]
                    vz922 = unpack("<f", f.read(4))[0]
                    type922 = unpack("B", f.read(1))[0]
                    value922 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw922 = unpack("<f", f.read(4))[0]
                    vx1022 = unpack("<f", f.read(4))[0]
                    vy1022 = unpack("<f", f.read(4))[0]
                    vz1022 = unpack("<f", f.read(4))[0]
                    type1022 = unpack("B", f.read(1))[0]
                    value1022 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1022 = unpack("<f", f.read(4))[0]
                    vx1122 = unpack("<f", f.read(4))[0]
                    vy1122 = unpack("<f", f.read(4))[0]
                    vz1122 = unpack("<f", f.read(4))[0]
                    type1122 = unpack("B", f.read(1))[0]
                    value1122 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1122 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)



                    vx1222 = unpack("<f", f.read(4))[0]
                    vy1222 = unpack("<f", f.read(4))[0]
                    vz1222 = unpack("<f", f.read(4))[0]
                    type1222 = unpack("B", f.read(1))[0]
                    value1222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1222 = unpack("<f", f.read(4))[0]
                    vx2222 = unpack("<f", f.read(4))[0]
                    vy2222 = unpack("<f", f.read(4))[0]
                    vz2222 = unpack("<f", f.read(4))[0]
                    type2222 = unpack("B", f.read(1))[0]
                    value2222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2222 = unpack("<f", f.read(4))[0]
                    vx3222 = unpack("<f", f.read(4))[0]
                    vy3222 = unpack("<f", f.read(4))[0]
                    vz3222 = unpack("<f", f.read(4))[0]
                    type3222 = unpack("B", f.read(1))[0]
                    value3222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3222 = unpack("<f", f.read(4))[0]
                    vx4222 = unpack("<f", f.read(4))[0]
                    vy4222 = unpack("<f", f.read(4))[0]
                    vz4222 = unpack("<f", f.read(4))[0]
                    type4222 = unpack("B", f.read(1))[0]
                    value4222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4222 = unpack("<f", f.read(4))[0]
                    vx5222 = unpack("<f", f.read(4))[0]
                    vy5222 = unpack("<f", f.read(4))[0]
                    vz5222 = unpack("<f", f.read(4))[0]
                    type5222 = unpack("B", f.read(1))[0]
                    value5222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5222 = unpack("<f", f.read(4))[0]
                    vx6222 = unpack("<f", f.read(4))[0]
                    vy6222 = unpack("<f", f.read(4))[0]
                    vz6222 = unpack("<f", f.read(4))[0]
                    type6222 = unpack("B", f.read(1))[0]
                    value6222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6222 = unpack("<f", f.read(4))[0]
                    vx7222 = unpack("<f", f.read(4))[0]
                    vy7222 = unpack("<f", f.read(4))[0]
                    vz7222 = unpack("<f", f.read(4))[0]
                    type7222 = unpack("B", f.read(1))[0]
                    value7222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7222 = unpack("<f", f.read(4))[0]
                    vx8222 = unpack("<f", f.read(4))[0]
                    vy8222 = unpack("<f", f.read(4))[0]
                    vz8222 = unpack("<f", f.read(4))[0]
                    type8222 = unpack("B", f.read(1))[0]
                    value8222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8222 = unpack("<f", f.read(4))[0]
                    vx9222 = unpack("<f", f.read(4))[0]
                    vy9222 = unpack("<f", f.read(4))[0]
                    vz9222 = unpack("<f", f.read(4))[0]
                    type9222 = unpack("B", f.read(1))[0]
                    value9222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9222 = unpack("<f", f.read(4))[0]
                    vx10222 = unpack("<f", f.read(4))[0]
                    vy10222 = unpack("<f", f.read(4))[0]
                    vz10222 = unpack("<f", f.read(4))[0]
                    type10222 = unpack("B", f.read(1))[0]
                    value10222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10222 = unpack("<f", f.read(4))[0]
                    vx11222 = unpack("<f", f.read(4))[0]
                    vy11222 = unpack("<f", f.read(4))[0]
                    vz11222 = unpack("<f", f.read(4))[0]
                    type11222 = unpack("B", f.read(1))[0]
                    value11222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx12222 = unpack("<f", f.read(4))[0]
                    vy12222 = unpack("<f", f.read(4))[0]
                    vz12222 = unpack("<f", f.read(4))[0]
                    type12222 = unpack("B", f.read(1))[0]
                    value12222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12222 = unpack("<f", f.read(4))[0]
                    vx22222 = unpack("<f", f.read(4))[0]
                    vy22222 = unpack("<f", f.read(4))[0]
                    vz22222 = unpack("<f", f.read(4))[0]
                    type22222 = unpack("B", f.read(1))[0]
                    value22222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw22222 = unpack("<f", f.read(4))[0]
                    vx32222 = unpack("<f", f.read(4))[0]
                    vy32222 = unpack("<f", f.read(4))[0]
                    vz32222 = unpack("<f", f.read(4))[0]
                    type32222 = unpack("B", f.read(1))[0]
                    value32222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw32222 = unpack("<f", f.read(4))[0]
                    vx42222 = unpack("<f", f.read(4))[0]
                    vy42222 = unpack("<f", f.read(4))[0]
                    vz42222 = unpack("<f", f.read(4))[0]
                    type42222 = unpack("B", f.read(1))[0]
                    value42222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw42222 = unpack("<f", f.read(4))[0]
                    vx52222 = unpack("<f", f.read(4))[0]
                    vy52222 = unpack("<f", f.read(4))[0]
                    vz52222 = unpack("<f", f.read(4))[0]
                    type52222 = unpack("B", f.read(1))[0]
                    value52222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw52222 = unpack("<f", f.read(4))[0]
                    vx62222 = unpack("<f", f.read(4))[0]
                    vy62222 = unpack("<f", f.read(4))[0]
                    vz62222 = unpack("<f", f.read(4))[0]
                    type62222 = unpack("B", f.read(1))[0]
                    value62222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw62222 = unpack("<f", f.read(4))[0]
                    vx72222 = unpack("<f", f.read(4))[0]
                    vy72222 = unpack("<f", f.read(4))[0]
                    vz72222 = unpack("<f", f.read(4))[0]
                    type72222 = unpack("B", f.read(1))[0]
                    value72222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw72222 = unpack("<f", f.read(4))[0]
                    vx82222 = unpack("<f", f.read(4))[0]
                    vy82222 = unpack("<f", f.read(4))[0]
                    vz82222 = unpack("<f", f.read(4))[0]
                    type82222 = unpack("B", f.read(1))[0]
                    value82222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw82222 = unpack("<f", f.read(4))[0]
                    vx92222 = unpack("<f", f.read(4))[0]
                    vy92222 = unpack("<f", f.read(4))[0]
                    vz92222 = unpack("<f", f.read(4))[0]
                    type92222 = unpack("B", f.read(1))[0]
                    value92222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw92222 = unpack("<f", f.read(4))[0]
                    vx102222 = unpack("<f", f.read(4))[0]
                    vy102222 = unpack("<f", f.read(4))[0]
                    vz102222 = unpack("<f", f.read(4))[0]
                    type102222 = unpack("B", f.read(1))[0]
                    value102222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw102222 = unpack("<f", f.read(4))[0]
                    vx112222 = unpack("<f", f.read(4))[0]
                    vy112222 = unpack("<f", f.read(4))[0]
                    vz112222 = unpack("<f", f.read(4))[0]
                    type112222 = unpack("B", f.read(1))[0]
                    value112222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw112222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx122222 = unpack("<f", f.read(4))[0]
                    vy122222 = unpack("<f", f.read(4))[0]
                    vz122222 = unpack("<f", f.read(4))[0]
                    type122222 = unpack("B", f.read(1))[0]
                    value122222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw122222 = unpack("<f", f.read(4))[0]
                    vx222222 = unpack("<f", f.read(4))[0]
                    vy222222 = unpack("<f", f.read(4))[0]
                    vz222222 = unpack("<f", f.read(4))[0]
                    type222222 = unpack("B", f.read(1))[0]
                    value222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw222222 = unpack("<f", f.read(4))[0]
                    vx322222 = unpack("<f", f.read(4))[0]
                    vy322222 = unpack("<f", f.read(4))[0]
                    vz322222 = unpack("<f", f.read(4))[0]
                    type322222 = unpack("B", f.read(1))[0]
                    value322222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw322222 = unpack("<f", f.read(4))[0]
                    vx422222 = unpack("<f", f.read(4))[0]
                    vy422222 = unpack("<f", f.read(4))[0]
                    vz422222 = unpack("<f", f.read(4))[0]
                    type422222 = unpack("B", f.read(1))[0]
                    value422222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw422222 = unpack("<f", f.read(4))[0]
                    vx522222 = unpack("<f", f.read(4))[0]
                    vy522222 = unpack("<f", f.read(4))[0]
                    vz522222 = unpack("<f", f.read(4))[0]
                    type522222 = unpack("B", f.read(1))[0]
                    value522222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw522222 = unpack("<f", f.read(4))[0]
                    vx622222 = unpack("<f", f.read(4))[0]
                    vy622222 = unpack("<f", f.read(4))[0]
                    vz622222 = unpack("<f", f.read(4))[0]
                    type622222 = unpack("B", f.read(1))[0]
                    value622222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw622222 = unpack("<f", f.read(4))[0]
                    vx722222 = unpack("<f", f.read(4))[0]
                    vy722222 = unpack("<f", f.read(4))[0]
                    vz722222 = unpack("<f", f.read(4))[0]
                    type722222 = unpack("B", f.read(1))[0]
                    value722222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw722222 = unpack("<f", f.read(4))[0]
                    vx822222 = unpack("<f", f.read(4))[0]
                    vy822222 = unpack("<f", f.read(4))[0]
                    vz822222 = unpack("<f", f.read(4))[0]
                    type822222 = unpack("B", f.read(1))[0]
                    value822222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw822222 = unpack("<f", f.read(4))[0]
                    vx922222 = unpack("<f", f.read(4))[0]
                    vy922222 = unpack("<f", f.read(4))[0]
                    vz922222 = unpack("<f", f.read(4))[0]
                    type922222 = unpack("B", f.read(1))[0]
                    value922222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw922222 = unpack("<f", f.read(4))[0]
                    vx1022222 = unpack("<f", f.read(4))[0]
                    vy1022222 = unpack("<f", f.read(4))[0]
                    vz1022222 = unpack("<f", f.read(4))[0]
                    type1022222 = unpack("B", f.read(1))[0]
                    value1022222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1022222 = unpack("<f", f.read(4))[0]
                    vx1122222 = unpack("<f", f.read(4))[0]
                    vy1122222 = unpack("<f", f.read(4))[0]
                    vz1122222 = unpack("<f", f.read(4))[0]
                    type1122222 = unpack("B", f.read(1))[0]
                    value1122222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1122222 = unpack("<f", f.read(4))[0]



                    f.seek(-176,1)

                    vx1222222 = unpack("<f", f.read(4))[0]
                    vy1222222 = unpack("<f", f.read(4))[0]
                    vz1222222 = unpack("<f", f.read(4))[0]
                    type1222222 = unpack("B", f.read(1))[0]
                    value1222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1222222 = unpack("<f", f.read(4))[0]
                    vx2222222 = unpack("<f", f.read(4))[0]
                    vy2222222 = unpack("<f", f.read(4))[0]
                    vz2222222 = unpack("<f", f.read(4))[0]
                    type2222222 = unpack("B", f.read(1))[0]
                    value2222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2222222 = unpack("<f", f.read(4))[0]
                    vx3222222 = unpack("<f", f.read(4))[0]
                    vy3222222 = unpack("<f", f.read(4))[0]
                    vz3222222 = unpack("<f", f.read(4))[0]
                    type3222222 = unpack("B", f.read(1))[0]
                    value3222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3222222 = unpack("<f", f.read(4))[0]
                    vx4222222 = unpack("<f", f.read(4))[0]
                    vy4222222 = unpack("<f", f.read(4))[0]
                    vz4222222 = unpack("<f", f.read(4))[0]
                    type4222222 = unpack("B", f.read(1))[0]
                    value4222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4222222 = unpack("<f", f.read(4))[0]
                    vx5222222 = unpack("<f", f.read(4))[0]
                    vy5222222 = unpack("<f", f.read(4))[0]
                    vz5222222 = unpack("<f", f.read(4))[0]
                    type5222222 = unpack("B", f.read(1))[0]
                    value5222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5222222 = unpack("<f", f.read(4))[0]
                    vx6222222 = unpack("<f", f.read(4))[0]
                    vy6222222 = unpack("<f", f.read(4))[0]
                    vz6222222 = unpack("<f", f.read(4))[0]
                    type6222222 = unpack("B", f.read(1))[0]
                    value6222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6222222 = unpack("<f", f.read(4))[0]
                    vx7222222 = unpack("<f", f.read(4))[0]
                    vy7222222 = unpack("<f", f.read(4))[0]
                    vz7222222 = unpack("<f", f.read(4))[0]
                    type7222222 = unpack("B", f.read(1))[0]
                    value7222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7222222 = unpack("<f", f.read(4))[0]
                    vx8222222 = unpack("<f", f.read(4))[0]
                    vy8222222 = unpack("<f", f.read(4))[0]
                    vz8222222 = unpack("<f", f.read(4))[0]
                    type8222222 = unpack("B", f.read(1))[0]
                    value8222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8222222 = unpack("<f", f.read(4))[0]
                    vx9222222 = unpack("<f", f.read(4))[0]
                    vy9222222 = unpack("<f", f.read(4))[0]
                    vz9222222 = unpack("<f", f.read(4))[0]
                    type9222222 = unpack("B", f.read(1))[0]
                    value9222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9222222 = unpack("<f", f.read(4))[0]
                    vx10222222 = unpack("<f", f.read(4))[0]
                    vy10222222 = unpack("<f", f.read(4))[0]
                    vz10222222 = unpack("<f", f.read(4))[0]
                    type10222222 = unpack("B", f.read(1))[0]
                    value10222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10222222 = unpack("<f", f.read(4))[0]
                    vx11222222 = unpack("<f", f.read(4))[0]
                    vy11222222 = unpack("<f", f.read(4))[0]
                    vz11222222 = unpack("<f", f.read(4))[0]
                    type11222222 = unpack("B", f.read(1))[0]
                    value11222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11222222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx12222222 = unpack("<f", f.read(4))[0]
                    vy12222222 = unpack("<f", f.read(4))[0]
                    vz12222222 = unpack("<f", f.read(4))[0]
                    type12222222 = unpack("B", f.read(1))[0]
                    value12222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12222222 = unpack("<f", f.read(4))[0]
                    vx22222222 = unpack("<f", f.read(4))[0]
                    vy22222222 = unpack("<f", f.read(4))[0]
                    vz22222222 = unpack("<f", f.read(4))[0]
                    type22222222 = unpack("B", f.read(1))[0]
                    value22222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw22222222 = unpack("<f", f.read(4))[0]
                    vx32222222 = unpack("<f", f.read(4))[0]
                    vy32222222 = unpack("<f", f.read(4))[0]
                    vz32222222 = unpack("<f", f.read(4))[0]
                    type32222222 = unpack("B", f.read(1))[0]
                    value32222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw32222222 = unpack("<f", f.read(4))[0]
                    vx42222222 = unpack("<f", f.read(4))[0]
                    vy42222222 = unpack("<f", f.read(4))[0]
                    vz42222222 = unpack("<f", f.read(4))[0]
                    type42222222 = unpack("B", f.read(1))[0]
                    value42222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw42222222 = unpack("<f", f.read(4))[0]
                    vx52222222 = unpack("<f", f.read(4))[0]
                    vy52222222 = unpack("<f", f.read(4))[0]
                    vz52222222 = unpack("<f", f.read(4))[0]
                    type52222222 = unpack("B", f.read(1))[0]
                    value52222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw52222222 = unpack("<f", f.read(4))[0]
                    vx62222222 = unpack("<f", f.read(4))[0]
                    vy62222222 = unpack("<f", f.read(4))[0]
                    vz62222222 = unpack("<f", f.read(4))[0]
                    type62222222 = unpack("B", f.read(1))[0]
                    value62222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw62222222 = unpack("<f", f.read(4))[0]
                    vx72222222 = unpack("<f", f.read(4))[0]
                    vy72222222 = unpack("<f", f.read(4))[0]
                    vz72222222 = unpack("<f", f.read(4))[0]
                    type72222222 = unpack("B", f.read(1))[0]
                    value72222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw72222222 = unpack("<f", f.read(4))[0]
                    vx82222222 = unpack("<f", f.read(4))[0]
                    vy82222222 = unpack("<f", f.read(4))[0]
                    vz82222222 = unpack("<f", f.read(4))[0]
                    type82222222 = unpack("B", f.read(1))[0]
                    value82222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw82222222 = unpack("<f", f.read(4))[0]
                    vx92222222 = unpack("<f", f.read(4))[0]
                    vy92222222 = unpack("<f", f.read(4))[0]
                    vz92222222 = unpack("<f", f.read(4))[0]
                    type92222222 = unpack("B", f.read(1))[0]
                    value92222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw92222222 = unpack("<f", f.read(4))[0]
                    vx102222222 = unpack("<f", f.read(4))[0]
                    vy102222222 = unpack("<f", f.read(4))[0]
                    vz102222222 = unpack("<f", f.read(4))[0]
                    type102222222 = unpack("B", f.read(1))[0]
                    value102222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw102222222 = unpack("<f", f.read(4))[0]
                    vx112222222 = unpack("<f", f.read(4))[0]
                    vy112222222 = unpack("<f", f.read(4))[0]
                    vz112222222 = unpack("<f", f.read(4))[0]
                    type112222222 = unpack("B", f.read(1))[0]
                    value112222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw112222222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx122222222 = unpack("<f", f.read(4))[0]
                    vy122222222 = unpack("<f", f.read(4))[0]
                    vz122222222 = unpack("<f", f.read(4))[0]
                    type122222222 = unpack("B", f.read(1))[0]
                    value122222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw122222222 = unpack("<f", f.read(4))[0]
                    vx222222222 = unpack("<f", f.read(4))[0]
                    vy222222222 = unpack("<f", f.read(4))[0]
                    vz222222222 = unpack("<f", f.read(4))[0]
                    type222222222 = unpack("B", f.read(1))[0]
                    value222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw222222222 = unpack("<f", f.read(4))[0]
                    vx322222222 = unpack("<f", f.read(4))[0]
                    vy322222222 = unpack("<f", f.read(4))[0]
                    vz322222222 = unpack("<f", f.read(4))[0]
                    type322222222 = unpack("B", f.read(1))[0]
                    value322222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw322222222 = unpack("<f", f.read(4))[0]
                    vx422222222 = unpack("<f", f.read(4))[0]
                    vy422222222 = unpack("<f", f.read(4))[0]
                    vz422222222 = unpack("<f", f.read(4))[0]
                    type422222222 = unpack("B", f.read(1))[0]
                    value422222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw422222222 = unpack("<f", f.read(4))[0]
                    vx522222222 = unpack("<f", f.read(4))[0]
                    vy522222222 = unpack("<f", f.read(4))[0]
                    vz522222222 = unpack("<f", f.read(4))[0]
                    type522222222 = unpack("B", f.read(1))[0]
                    value522222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw522222222 = unpack("<f", f.read(4))[0]
                    vx622222222 = unpack("<f", f.read(4))[0]
                    vy622222222 = unpack("<f", f.read(4))[0]
                    vz622222222 = unpack("<f", f.read(4))[0]
                    type622222222 = unpack("B", f.read(1))[0]
                    value622222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw622222222 = unpack("<f", f.read(4))[0]
                    vx722222222 = unpack("<f", f.read(4))[0]
                    vy722222222 = unpack("<f", f.read(4))[0]
                    vz722222222 = unpack("<f", f.read(4))[0]
                    type722222222 = unpack("B", f.read(1))[0]
                    value722222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw722222222 = unpack("<f", f.read(4))[0]
                    vx822222222 = unpack("<f", f.read(4))[0]
                    vy822222222 = unpack("<f", f.read(4))[0]
                    vz822222222 = unpack("<f", f.read(4))[0]
                    type822222222 = unpack("B", f.read(1))[0]
                    value822222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw822222222 = unpack("<f", f.read(4))[0]
                    vx922222222 = unpack("<f", f.read(4))[0]
                    vy922222222 = unpack("<f", f.read(4))[0]
                    vz922222222 = unpack("<f", f.read(4))[0]
                    type922222222 = unpack("B", f.read(1))[0]
                    value922222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw922222222 = unpack("<f", f.read(4))[0]
                    vx1022222222 = unpack("<f", f.read(4))[0]
                    vy1022222222 = unpack("<f", f.read(4))[0]
                    vz1022222222 = unpack("<f", f.read(4))[0]
                    type1022222222 = unpack("B", f.read(1))[0]
                    value1022222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1022222222 = unpack("<f", f.read(4))[0]
                    vx1122222222 = unpack("<f", f.read(4))[0]
                    vy1122222222 = unpack("<f", f.read(4))[0]
                    vz1122222222 = unpack("<f", f.read(4))[0]
                    type1122222222 = unpack("B", f.read(1))[0]
                    value1122222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1122222222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx1222222222 = unpack("<f", f.read(4))[0]
                    vy1222222222 = unpack("<f", f.read(4))[0]
                    vz1222222222 = unpack("<f", f.read(4))[0]
                    type1222222222 = unpack("B", f.read(1))[0]
                    value1222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1222222222 = unpack("<f", f.read(4))[0]
                    vx2222222222 = unpack("<f", f.read(4))[0]
                    vy2222222222 = unpack("<f", f.read(4))[0]
                    vz2222222222 = unpack("<f", f.read(4))[0]
                    type2222222222 = unpack("B", f.read(1))[0]
                    value2222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2222222222 = unpack("<f", f.read(4))[0]
                    vx3222222222 = unpack("<f", f.read(4))[0]
                    vy3222222222 = unpack("<f", f.read(4))[0]
                    vz3222222222 = unpack("<f", f.read(4))[0]
                    type3222222222 = unpack("B", f.read(1))[0]
                    value3222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3222222222 = unpack("<f", f.read(4))[0]
                    vx4222222222 = unpack("<f", f.read(4))[0]
                    vy4222222222 = unpack("<f", f.read(4))[0]
                    vz4222222222 = unpack("<f", f.read(4))[0]
                    type4222222222 = unpack("B", f.read(1))[0]
                    value4222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4222222222 = unpack("<f", f.read(4))[0]
                    vx5222222222 = unpack("<f", f.read(4))[0]
                    vy5222222222 = unpack("<f", f.read(4))[0]
                    vz5222222222 = unpack("<f", f.read(4))[0]
                    type5222222222 = unpack("B", f.read(1))[0]
                    value5222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5222222222 = unpack("<f", f.read(4))[0]
                    vx6222222222 = unpack("<f", f.read(4))[0]
                    vy6222222222 = unpack("<f", f.read(4))[0]
                    vz6222222222 = unpack("<f", f.read(4))[0]
                    type6222222222 = unpack("B", f.read(1))[0]
                    value6222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6222222222 = unpack("<f", f.read(4))[0]
                    vx7222222222 = unpack("<f", f.read(4))[0]
                    vy7222222222 = unpack("<f", f.read(4))[0]
                    vz7222222222 = unpack("<f", f.read(4))[0]
                    type7222222222 = unpack("B", f.read(1))[0]
                    value7222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7222222222 = unpack("<f", f.read(4))[0]
                    vx8222222222 = unpack("<f", f.read(4))[0]
                    vy8222222222 = unpack("<f", f.read(4))[0]
                    vz8222222222 = unpack("<f", f.read(4))[0]
                    type8222222222 = unpack("B", f.read(1))[0]
                    value8222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8222222222 = unpack("<f", f.read(4))[0]
                    vx9222222222 = unpack("<f", f.read(4))[0]
                    vy9222222222 = unpack("<f", f.read(4))[0]
                    vz9222222222 = unpack("<f", f.read(4))[0]
                    type9222222222 = unpack("B", f.read(1))[0]
                    value9222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9222222222 = unpack("<f", f.read(4))[0]
                    vx10222222222 = unpack("<f", f.read(4))[0]
                    vy10222222222 = unpack("<f", f.read(4))[0]
                    vz10222222222 = unpack("<f", f.read(4))[0]
                    type10222222222 = unpack("B", f.read(1))[0]
                    value10222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10222222222 = unpack("<f", f.read(4))[0]
                    vx11222222222 = unpack("<f", f.read(4))[0]
                    vy11222222222 = unpack("<f", f.read(4))[0]
                    vz11222222222 = unpack("<f", f.read(4))[0]
                    type11222222222 = unpack("B", f.read(1))[0]
                    value11222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11222222222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx12222222222 = unpack("<f", f.read(4))[0]
                    vy12222222222 = unpack("<f", f.read(4))[0]
                    vz12222222222 = unpack("<f", f.read(4))[0]
                    type12222222222 = unpack("B", f.read(1))[0]
                    value12222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12222222222 = unpack("<f", f.read(4))[0]
                    vx22222222222 = unpack("<f", f.read(4))[0]
                    vy22222222222 = unpack("<f", f.read(4))[0]
                    vz22222222222 = unpack("<f", f.read(4))[0]
                    type22222222222 = unpack("B", f.read(1))[0]
                    value22222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw22222222222 = unpack("<f", f.read(4))[0]
                    vx32222222222 = unpack("<f", f.read(4))[0]
                    vy32222222222 = unpack("<f", f.read(4))[0]
                    vz32222222222 = unpack("<f", f.read(4))[0]
                    type32222222222 = unpack("B", f.read(1))[0]
                    value32222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw32222222222 = unpack("<f", f.read(4))[0]
                    vx42222222222 = unpack("<f", f.read(4))[0]
                    vy42222222222 = unpack("<f", f.read(4))[0]
                    vz42222222222 = unpack("<f", f.read(4))[0]
                    type42222222222 = unpack("B", f.read(1))[0]
                    value42222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw42222222222 = unpack("<f", f.read(4))[0]
                    vx52222222222 = unpack("<f", f.read(4))[0]
                    vy52222222222 = unpack("<f", f.read(4))[0]
                    vz52222222222 = unpack("<f", f.read(4))[0]
                    type52222222222 = unpack("B", f.read(1))[0]
                    value52222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw52222222222 = unpack("<f", f.read(4))[0]
                    vx62222222222 = unpack("<f", f.read(4))[0]
                    vy62222222222 = unpack("<f", f.read(4))[0]
                    vz62222222222 = unpack("<f", f.read(4))[0]
                    type62222222222 = unpack("B", f.read(1))[0]
                    value62222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw62222222222 = unpack("<f", f.read(4))[0]
                    vx72222222222 = unpack("<f", f.read(4))[0]
                    vy72222222222 = unpack("<f", f.read(4))[0]
                    vz72222222222 = unpack("<f", f.read(4))[0]
                    type72222222222 = unpack("B", f.read(1))[0]
                    value72222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw72222222222 = unpack("<f", f.read(4))[0]
                    vx82222222222 = unpack("<f", f.read(4))[0]
                    vy82222222222 = unpack("<f", f.read(4))[0]
                    vz82222222222 = unpack("<f", f.read(4))[0]
                    type82222222222 = unpack("B", f.read(1))[0]
                    value82222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw82222222222 = unpack("<f", f.read(4))[0]
                    vx92222222222 = unpack("<f", f.read(4))[0]
                    vy92222222222 = unpack("<f", f.read(4))[0]
                    vz92222222222 = unpack("<f", f.read(4))[0]
                    type92222222222 = unpack("B", f.read(1))[0]
                    value92222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw92222222222 = unpack("<f", f.read(4))[0]
                    vx102222222222 = unpack("<f", f.read(4))[0]
                    vy102222222222 = unpack("<f", f.read(4))[0]
                    vz102222222222 = unpack("<f", f.read(4))[0]
                    type102222222222 = unpack("B", f.read(1))[0]
                    value102222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw102222222222 = unpack("<f", f.read(4))[0]
                    vx112222222222 = unpack("<f", f.read(4))[0]
                    vy112222222222 = unpack("<f", f.read(4))[0]
                    vz112222222222 = unpack("<f", f.read(4))[0]
                    type112222222222 = unpack("B", f.read(1))[0]
                    value112222222222 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw112222222222 = unpack("<f", f.read(4))[0]

                    f.seek(-176,1)

                    vx12222222222d = unpack("<f", f.read(4))[0]
                    vy12222222222d = unpack("<f", f.read(4))[0]
                    vz12222222222d = unpack("<f", f.read(4))[0]
                    type12222222222d = unpack("B", f.read(1))[0]
                    value12222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12222222222d = unpack("<f", f.read(4))[0]
                    vx22222222222d = unpack("<f", f.read(4))[0]
                    vy22222222222d = unpack("<f", f.read(4))[0]
                    vz22222222222d = unpack("<f", f.read(4))[0]
                    type22222222222d = unpack("B", f.read(1))[0]
                    value22222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw22222222222d = unpack("<f", f.read(4))[0]
                    vx32222222222d = unpack("<f", f.read(4))[0]
                    vy32222222222d = unpack("<f", f.read(4))[0]
                    vz32222222222d = unpack("<f", f.read(4))[0]
                    type32222222222d = unpack("B", f.read(1))[0]
                    value32222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw32222222222d = unpack("<f", f.read(4))[0]
                    vx42222222222d = unpack("<f", f.read(4))[0]
                    vy42222222222d = unpack("<f", f.read(4))[0]
                    vz42222222222d = unpack("<f", f.read(4))[0]
                    type42222222222d = unpack("B", f.read(1))[0]
                    value42222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw42222222222d = unpack("<f", f.read(4))[0]
                    vx52222222222d = unpack("<f", f.read(4))[0]
                    vy52222222222d = unpack("<f", f.read(4))[0]
                    vz52222222222d = unpack("<f", f.read(4))[0]
                    type52222222222d = unpack("B", f.read(1))[0]
                    value52222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw52222222222d = unpack("<f", f.read(4))[0]
                    vx62222222222d = unpack("<f", f.read(4))[0]
                    vy62222222222d = unpack("<f", f.read(4))[0]
                    vz62222222222d = unpack("<f", f.read(4))[0]
                    type62222222222d = unpack("B", f.read(1))[0]
                    value62222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw62222222222d = unpack("<f", f.read(4))[0]
                    vx72222222222d = unpack("<f", f.read(4))[0]
                    vy72222222222d = unpack("<f", f.read(4))[0]
                    vz72222222222d = unpack("<f", f.read(4))[0]
                    type72222222222d = unpack("B", f.read(1))[0]
                    value72222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw72222222222d = unpack("<f", f.read(4))[0]
                    vx82222222222d = unpack("<f", f.read(4))[0]
                    vy82222222222d = unpack("<f", f.read(4))[0]
                    vz82222222222d = unpack("<f", f.read(4))[0]
                    type82222222222d = unpack("B", f.read(1))[0]
                    value82222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw82222222222d = unpack("<f", f.read(4))[0]
                    vx92222222222d = unpack("<f", f.read(4))[0]
                    vy92222222222d = unpack("<f", f.read(4))[0]
                    vz92222222222d = unpack("<f", f.read(4))[0]
                    type92222222222d = unpack("B", f.read(1))[0]
                    value92222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw92222222222d = unpack("<f", f.read(4))[0]
                    vx102222222222d = unpack("<f", f.read(4))[0]
                    vy102222222222d = unpack("<f", f.read(4))[0]
                    vz102222222222d = unpack("<f", f.read(4))[0]
                    type102222222222d = unpack("B", f.read(1))[0]
                    value102222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw102222222222d = unpack("<f", f.read(4))[0]
                    vx112222222222d = unpack("<f", f.read(4))[0]
                    vy112222222222d = unpack("<f", f.read(4))[0]
                    vz112222222222d = unpack("<f", f.read(4))[0]
                    type112222222222d = unpack("B", f.read(1))[0]
                    value112222222222d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw112222222222d = unpack("<f", f.read(4))[0]

                    fa1d = bm_1gggggggggggg.verts.new([-vx12222222222d,-vy12222222222d,-vz12222222222d]) # 0
                    fb1d = bm_1gggggggggggg.verts.new([-vx22222222222d,-vy22222222222d,-vz22222222222d]) # 1
                    fc1d = bm_1gggggggggggg.verts.new([-vx32222222222d,-vy32222222222d,-vz32222222222d]) # 2
                    fd1d = bm_1gggggggggggg.verts.new([-vx42222222222d,-vy42222222222d,-vz42222222222d]) # 3
                    fe1d = bm_1gggggggggggg.verts.new([-vx52222222222d,-vy52222222222d,-vz52222222222d]) # 4
                    ff1d = bm_1gggggggggggg.verts.new([-vx62222222222d,-vy62222222222d,-vz62222222222d]) # 5
                    fg1d = bm_1gggggggggggg.verts.new([-vx72222222222d,-vy72222222222d,-vz72222222222d]) # 6
                    fh1d = bm_1gggggggggggg.verts.new([-vx82222222222d,-vy82222222222d,-vz82222222222d]) # 7
                    fi1d = bm_1gggggggggggg.verts.new([-vx92222222222d,-vy92222222222d,-vz92222222222d]) # 8
                    fj1d = bm_1gggggggggggg.verts.new([-vx102222222222d,-vy102222222222d,-vz102222222222d]) # 9
                    fk1d = bm_1gggggggggggg.verts.new([-vx112222222222d,-vy112222222222d,-vz112222222222d]) # 10

                    

                    fa12222222222 = bm_1ggggggggggg.verts.new([-vx12222222222,-vy12222222222,-vz12222222222]) # 0
                    fb12222222222 = bm_1ggggggggggg.verts.new([-vx22222222222,-vy22222222222,-vz22222222222]) # 1
                    fc12222222222 = bm_1ggggggggggg.verts.new([-vx32222222222,-vy32222222222,-vz32222222222]) # 2
                    fd12222222222 = bm_1ggggggggggg.verts.new([-vx42222222222,-vy42222222222,-vz42222222222]) # 3
                    fe12222222222 = bm_1ggggggggggg.verts.new([-vx52222222222,-vy52222222222,-vz52222222222]) # 4
                    ff12222222222 = bm_1ggggggggggg.verts.new([-vx62222222222,-vy62222222222,-vz62222222222]) # 5
                    fg12222222222 = bm_1ggggggggggg.verts.new([-vx72222222222,-vy72222222222,-vz72222222222]) # 6
                    fh12222222222 = bm_1ggggggggggg.verts.new([-vx82222222222,-vy82222222222,-vz82222222222]) # 7
                    fi12222222222 = bm_1ggggggggggg.verts.new([-vx92222222222,-vy92222222222,-vz92222222222]) # 8
                    fj12222222222 = bm_1ggggggggggg.verts.new([-vx102222222222,-vy102222222222,-vz102222222222]) # 9
                    fk12222222222 = bm_1ggggggggggg.verts.new([-vx112222222222,-vy112222222222,-vz112222222222]) # 10

                    fa1222222222 = bm_1gggggggggg.verts.new([-vx1222222222,-vy1222222222,-vz1222222222]) # 0
                    fb1222222222 = bm_1gggggggggg.verts.new([-vx2222222222,-vy2222222222,-vz2222222222]) # 1
                    fc1222222222 = bm_1gggggggggg.verts.new([-vx3222222222,-vy3222222222,-vz3222222222]) # 2
                    fd1222222222 = bm_1gggggggggg.verts.new([-vx4222222222,-vy4222222222,-vz4222222222]) # 3
                    fe1222222222 = bm_1gggggggggg.verts.new([-vx5222222222,-vy5222222222,-vz5222222222]) # 4
                    ff1222222222 = bm_1gggggggggg.verts.new([-vx6222222222,-vy6222222222,-vz6222222222]) # 5
                    fg1222222222 = bm_1gggggggggg.verts.new([-vx7222222222,-vy7222222222,-vz7222222222]) # 6
                    fh1222222222 = bm_1gggggggggg.verts.new([-vx8222222222,-vy8222222222,-vz8222222222]) # 7
                    fi1222222222 = bm_1gggggggggg.verts.new([-vx9222222222,-vy9222222222,-vz9222222222]) # 8
                    fj1222222222 = bm_1gggggggggg.verts.new([-vx10222222222,-vy10222222222,-vz10222222222]) # 9
                    fk1222222222 = bm_1gggggggggg.verts.new([-vx11222222222,-vy11222222222,-vz11222222222]) # 10

                    fa122222222 = bm_1ggggggggg.verts.new([-vx122222222,-vy122222222,-vz122222222]) # 0
                    fb122222222 = bm_1ggggggggg.verts.new([-vx222222222,-vy222222222,-vz222222222]) # 1
                    fc122222222 = bm_1ggggggggg.verts.new([-vx322222222,-vy322222222,-vz322222222]) # 2
                    fd122222222 = bm_1ggggggggg.verts.new([-vx422222222,-vy422222222,-vz422222222]) # 3
                    fe122222222 = bm_1ggggggggg.verts.new([-vx522222222,-vy522222222,-vz522222222]) # 4
                    ff122222222 = bm_1ggggggggg.verts.new([-vx622222222,-vy622222222,-vz622222222]) # 5
                    fg122222222 = bm_1ggggggggg.verts.new([-vx722222222,-vy722222222,-vz722222222]) # 6
                    fh122222222 = bm_1ggggggggg.verts.new([-vx822222222,-vy822222222,-vz822222222]) # 7
                    fi122222222 = bm_1ggggggggg.verts.new([-vx922222222,-vy922222222,-vz922222222]) # 8
                    fj122222222 = bm_1ggggggggg.verts.new([-vx1022222222,-vy1022222222,-vz1022222222]) # 9
                    fk122222222 = bm_1ggggggggg.verts.new([-vx1122222222,-vy1122222222,-vz1122222222]) # 10

                    fa12222222 = bm_1gggggggg.verts.new([-vx12222222,-vy12222222,-vz12222222]) # 0
                    fb12222222 = bm_1gggggggg.verts.new([-vx22222222,-vy22222222,-vz22222222]) # 1
                    fc12222222 = bm_1gggggggg.verts.new([-vx32222222,-vy32222222,-vz32222222]) # 2
                    fd12222222 = bm_1gggggggg.verts.new([-vx42222222,-vy42222222,-vz42222222]) # 3
                    fe12222222 = bm_1gggggggg.verts.new([-vx52222222,-vy52222222,-vz52222222]) # 4
                    ff12222222 = bm_1gggggggg.verts.new([-vx62222222,-vy62222222,-vz62222222]) # 5
                    fg12222222 = bm_1gggggggg.verts.new([-vx72222222,-vy72222222,-vz72222222]) # 6
                    fh12222222 = bm_1gggggggg.verts.new([-vx82222222,-vy82222222,-vz82222222]) # 7
                    fi12222222 = bm_1gggggggg.verts.new([-vx92222222,-vy92222222,-vz92222222]) # 8
                    fj12222222 = bm_1gggggggg.verts.new([-vx102222222,-vy102222222,-vz102222222]) # 9
                    fk12222222 = bm_1gggggggg.verts.new([-vx112222222,-vy112222222,-vz112222222]) # 10

                    fa1222222 = bm_1ggggggg.verts.new([-vx1222222,-vy1222222,-vz1222222]) # 0
                    fb1222222 = bm_1ggggggg.verts.new([-vx2222222,-vy2222222,-vz2222222]) # 1
                    fc1222222 = bm_1ggggggg.verts.new([-vx3222222,-vy3222222,-vz3222222]) # 2
                    fd1222222 = bm_1ggggggg.verts.new([-vx4222222,-vy4222222,-vz4222222]) # 3
                    fe1222222 = bm_1ggggggg.verts.new([-vx5222222,-vy5222222,-vz5222222]) # 4
                    ff1222222 = bm_1ggggggg.verts.new([-vx6222222,-vy6222222,-vz6222222]) # 5
                    fg1222222 = bm_1ggggggg.verts.new([-vx7222222,-vy7222222,-vz7222222]) # 6
                    fh1222222 = bm_1ggggggg.verts.new([-vx8222222,-vy8222222,-vz8222222]) # 7
                    fi1222222 = bm_1ggggggg.verts.new([-vx9222222,-vy9222222,-vz9222222]) # 8
                    fj1222222 = bm_1ggggggg.verts.new([-vx10222222,-vy10222222,-vz10222222]) # 9
                    fk1222222 = bm_1ggggggg.verts.new([-vx11222222,-vy11222222,-vz11222222]) # 10

                    fa122222 = bm_1gggggg.verts.new([-vx122222,-vy122222,-vz122222]) # 0
                    fb122222 = bm_1gggggg.verts.new([-vx222222,-vy222222,-vz222222]) # 1
                    fc122222 = bm_1gggggg.verts.new([-vx322222,-vy322222,-vz322222]) # 2
                    fd122222 = bm_1gggggg.verts.new([-vx422222,-vy422222,-vz422222]) # 3
                    fe122222 = bm_1gggggg.verts.new([-vx522222,-vy522222,-vz522222]) # 4
                    ff122222 = bm_1gggggg.verts.new([-vx622222,-vy622222,-vz622222]) # 5
                    fg122222 = bm_1gggggg.verts.new([-vx722222,-vy722222,-vz722222]) # 6
                    fh122222 = bm_1gggggg.verts.new([-vx822222,-vy822222,-vz822222]) # 7
                    fi122222 = bm_1gggggg.verts.new([-vx922222,-vy922222,-vz922222]) # 8
                    fj122222 = bm_1gggggg.verts.new([-vx1022222,-vy1022222,-vz1022222]) # 9
                    fk122222 = bm_1gggggg.verts.new([-vx1122222,-vy1122222,-vz1122222]) # 10



                    fa12222 = bm_1ggggg.verts.new([-vx12222,-vy12222,-vz12222]) # 0
                    fb12222 = bm_1ggggg.verts.new([-vx22222,-vy22222,-vz22222]) # 1
                    fc12222 = bm_1ggggg.verts.new([-vx32222,-vy32222,-vz32222]) # 2
                    fd12222 = bm_1ggggg.verts.new([-vx42222,-vy42222,-vz42222]) # 3
                    fe12222 = bm_1ggggg.verts.new([-vx52222,-vy52222,-vz52222]) # 4
                    ff12222 = bm_1ggggg.verts.new([-vx62222,-vy62222,-vz62222]) # 5
                    fg12222 = bm_1ggggg.verts.new([-vx72222,-vy72222,-vz72222]) # 6
                    fh12222 = bm_1ggggg.verts.new([-vx82222,-vy82222,-vz82222]) # 7
                    fi12222 = bm_1ggggg.verts.new([-vx92222,-vy92222,-vz92222]) # 8
                    fj12222 = bm_1ggggg.verts.new([-vx102222,-vy102222,-vz102222]) # 9
                    fk12222 = bm_1ggggg.verts.new([-vx112222,-vy112222,-vz112222]) # 10


                    fa1222 = bm_1gggg.verts.new([-vx1222,-vy1222,-vz1222]) # 0
                    fb1222 = bm_1gggg.verts.new([-vx2222,-vy2222,-vz2222]) # 1
                    fc1222 = bm_1gggg.verts.new([-vx3222,-vy3222,-vz3222]) # 2
                    fd1222 = bm_1gggg.verts.new([-vx4222,-vy4222,-vz4222]) # 3
                    fe1222 = bm_1gggg.verts.new([-vx5222,-vy5222,-vz5222]) # 4
                    ff1222 = bm_1gggg.verts.new([-vx6222,-vy6222,-vz6222]) # 5
                    fg1222 = bm_1gggg.verts.new([-vx7222,-vy7222,-vz7222]) # 6
                    fh1222 = bm_1gggg.verts.new([-vx8222,-vy8222,-vz8222]) # 7
                    fi1222 = bm_1gggg.verts.new([-vx9222,-vy9222,-vz9222]) # 8
                    fj1222 = bm_1gggg.verts.new([-vx10222,-vy10222,-vz10222]) # 9
                    fk1222 = bm_1gggg.verts.new([-vx11222,-vy11222,-vz11222]) # 10

                    fa122 = bm_1ggg.verts.new([-vx122,-vy122,-vz122]) # 0
                    fb122 = bm_1ggg.verts.new([-vx222,-vy222,-vz222]) # 1
                    fc122 = bm_1ggg.verts.new([-vx322,-vy322,-vz322]) # 2
                    fd122 = bm_1ggg.verts.new([-vx422,-vy422,-vz422]) # 3
                    fe122 = bm_1ggg.verts.new([-vx522,-vy522,-vz522]) # 4
                    ff122 = bm_1ggg.verts.new([-vx622,-vy622,-vz622]) # 5
                    fg122 = bm_1ggg.verts.new([-vx722,-vy722,-vz722]) # 6
                    fh122 = bm_1ggg.verts.new([-vx822,-vy822,-vz822]) # 7
                    fi122 = bm_1ggg.verts.new([-vx922,-vy922,-vz922]) # 8
                    fj122 = bm_1ggg.verts.new([-vx1022,-vy1022,-vz1022]) # 9
                    fk122 = bm_1ggg.verts.new([-vx1122,-vy1122,-vz1122]) # 10

                    fa12 = bm_1gg.verts.new([-vx12,-vy12,-vz12]) # 0
                    fb12 = bm_1gg.verts.new([-vx22,-vy22,-vz22]) # 1
                    fc12 = bm_1gg.verts.new([-vx32,-vy32,-vz32]) # 2
                    fd12 = bm_1gg.verts.new([-vx42,-vy42,-vz42]) # 3
                    fe12 = bm_1gg.verts.new([-vx52,-vy52,-vz52]) # 4
                    ff12 = bm_1gg.verts.new([-vx62,-vy62,-vz62]) # 5
                    fg12 = bm_1gg.verts.new([-vx72,-vy72,-vz72]) # 6
                    fh12 = bm_1gg.verts.new([-vx82,-vy82,-vz82]) # 7
                    fi12 = bm_1gg.verts.new([-vx92,-vy92,-vz92]) # 8
                    fj12 = bm_1gg.verts.new([-vx102,-vy102,-vz102]) # 9
                    fk12 = bm_1gg.verts.new([-vx112,-vy112,-vz112]) # 10
                    
                    fa1 = bm_1g.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1g.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1g.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1g.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1g.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1g.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1g.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1g.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1g.verts.new([-vx9,-vy9,-vz9]) # 8
                    fj1 = bm_1g.verts.new([-vx10,-vy10,-vz10]) # 9
                    fk1 = bm_1g.verts.new([-vx11,-vy11,-vz11]) # 10

                    if type12222222222d == 1:
                        if type22222222222d == 1:
                            if type32222222222d == 0:
                                if type42222222222d == 0:
                                    if type52222222222d == 1:
                                        if type62222222222d == 1:
                                            if type72222222222d == 0:
                                                if type82222222222d == 1:
                                                    if type92222222222d == 1:
                                                        if type102222222222d == 0:
                                                            if type112222222222d == 0:
                                                                bm_1gggggggggggg.faces.new([fa1d,fb1d,fc1d])
                                                                bm_1gggggggggggg.faces.new([fb1d,fc1d,fd1d])
                                                                bm_1gggggggggggg.faces.new([fe1d,ff1d,fg1d]) # 4 5 6
                                                                bm_1gggggggggggg.faces.new([fh1d,fi1d,fj1d]) # 7 8 9
                                                                bm_1gggggggggggg.faces.new([fi1d,fj1d,fk1d]) # 9 10 11

                    if type12222222222 == 1:
                        if type22222222222 == 1:
                            if type32222222222 == 0:
                                if type42222222222 == 1:
                                    if type52222222222 == 1:
                                        if type62222222222 == 0:
                                            if type72222222222 == 0:
                                                if type82222222222 == 0:
                                                    if type92222222222 == 1:
                                                        if type102222222222 == 1:
                                                            if type112222222222 == 0:
                                                                bm_1ggggggggggg.faces.new([fa1222222222,fb1222222222,fc1222222222]) # 0 1 2
                                                                bm_1ggggggggggg.faces.new([fd1222222222,fe1222222222,ff1222222222]) # 3 4 5
                                                                bm_1ggggggggggg.faces.new([fe1222222222,ff1222222222,fg1222222222]) # 4 5 6
                                                                bm_1ggggggggggg.faces.new([ff1222222222,fg1222222222,fh1222222222]) # 7 8 9
                                                                bm_1ggggggggggg.faces.new([fi1222222222,fj1222222222,fk1222222222]) # 9 10 11

                    if type1222222222 == 1:
                        if type2222222222 == 1:
                            if type3222222222 == 0:
                                if type4222222222 == 1:
                                    if type5222222222 == 1:
                                        if type6222222222 == 0:
                                            if type7222222222 == 0:
                                                if type8222222222 == 1:
                                                    if type9222222222 == 1:
                                                        if type10222222222 == 0:
                                                            if type11222222222 == 0:
                                                                bm_1gggggggggg.faces.new([fa122222222,fb122222222,fc122222222]) # 0 1 2
                                                                bm_1gggggggggg.faces.new([fd122222222,fe122222222,ff122222222]) # 3 4 5
                                                                bm_1gggggggggg.faces.new([fe122222222,ff122222222,fg122222222]) # 4 5 6
                                                                bm_1gggggggggg.faces.new([fh122222222,fi122222222,fj122222222]) # 7 8 9
                                                                bm_1gggggggggg.faces.new([fi122222222,fj122222222,fk122222222]) # 9 10 11
                                    

                    if type122222222 == 1:
                        if type222222222 == 1:
                            if type322222222 == 0:
                                if type422222222 == 0:
                                    if type522222222 == 1:
                                        if type622222222 == 1:
                                            if type722222222 == 0:
                                                if type822222222 == 0:
                                                    if type922222222 == 1:
                                                        if type1022222222 == 1:
                                                            if type1122222222 == 0:
                                                                bm_1ggggggggg.faces.new([fa122222222,fb122222222,fc122222222]) # 0 1 2
                                                                bm_1ggggggggg.faces.new([fb122222222,fc122222222,fd122222222]) # 1 2 3
                                                                bm_1ggggggggg.faces.new([fe122222222,ff122222222,fg122222222]) # 4 5 6
                                                                bm_1ggggggggg.faces.new([ff122222222,fg122222222,fh122222222]) # 7 8 9
                                                                bm_1ggggggggg.faces.new([fi122222222,fj122222222,fk122222222]) # 9 10 11

                    if type12222222 == 1:
                        if type22222222 == 1:
                            if type32222222 == 0:
                                if type42222222 == 1:
                                    if type52222222 == 1:
                                        if type62222222 == 0:
                                            if type72222222 == 1:
                                                if type82222222 == 1:
                                                    if type92222222 == 0:
                                                        if type102222222 == 0:
                                                            if type112222222 == 0:
                                                                bm_1gggggggg.faces.new([fa12222222,fb12222222,fc12222222]) # 0 1 2
                                                                bm_1gggggggg.faces.new([fd12222222,fe12222222,ff12222222]) # 3 4 5
                                                                bm_1gggggggg.faces.new([fg12222222,fh12222222,fi12222222]) # 6 7 8
                                                                bm_1gggggggg.faces.new([fh12222222,fi12222222,fj12222222]) # 7 8 9
                                                                bm_1gggggggg.faces.new([fi12222222,fj12222222,fk12222222]) # 8 9 10

                    if type1222222 == 1:
                        if type2222222 == 1:
                            if type3222222 == 0:
                                if type4222222 == 0:
                                    if type5222222 == 0:
                                        if type6222222 == 0:
                                            if type7222222 == 0:
                                                if type8222222 == 0:
                                                    if type9222222 == 1:
                                                        if type10222222 == 1:
                                                            if type11222222 == 0:
                                                                bm_1ggggggg.faces.new([fa1222222,fb1222222,fc1222222]) # 0 1 2
                                                                bm_1ggggggg.faces.new([fb1222222,fc1222222,fd1222222]) # 1 2 3
                                                                bm_1ggggggg.faces.new([fc1222222,fd1222222,fe1222222]) # 2 3 4
                                                                bm_1ggggggg.faces.new([fd1222222,fe1222222,ff1222222]) # 3 4 5
                                                                bm_1ggggggg.faces.new([fe1222222,ff1222222,fg1222222]) # 6 7 8
                                                                bm_1ggggggg.faces.new([ff1222222,fg1222222,fh1222222]) # 7 8 9
                                                                bm_1ggggggg.faces.new([fi1222222,fj1222222,fk1222222]) # 8 9 10

                    if type122222 == 1:
                        if type222222 == 1:
                            if type322222 == 0:
                                if type422222 == 0:
                                    if type522222 == 0:
                                        if type622222 == 0:
                                            if type722222 == 0:
                                                if type822222 == 1:
                                                    if type922222 == 1:
                                                        if type1022222 == 0:
                                                            if type1122222 == 0:
                                                                bm_1gggggg.faces.new([fa122222,fb122222,fc122222]) # 0 1 2
                                                                bm_1gggggg.faces.new([fb122222,fc122222,fd122222]) # 1 2 3
                                                                bm_1gggggg.faces.new([fc122222,fd122222,fe122222]) # 2 3 4
                                                                bm_1gggggg.faces.new([fd122222,fe122222,ff122222]) # 3 4 5
                                                                bm_1gggggg.faces.new([fe122222,ff122222,fg122222]) # 6 7 8
                                                                bm_1gggggg.faces.new([fh122222,fi122222,fj122222]) # 7 8 9
                                                                bm_1gggggg.faces.new([fi122222,fj122222,fk122222]) # 8 9 10

                    if type12222 == 1:
                        if type22222 == 1:
                            if type32222 == 0:
                                if type42222 == 0:
                                    if type52222 == 0:
                                        if type62222 == 0:
                                            if type72222 == 1:
                                                if type82222 == 1:
                                                    if type92222 == 0:
                                                        if type102222 == 0:
                                                            if type112222 == 0:
                                                                bm_1ggggg.faces.new([fa12222,fb12222,fc12222]) # 0 1 2
                                                                bm_1ggggg.faces.new([fb12222,fc12222,fd12222]) # 1 2 3
                                                                bm_1ggggg.faces.new([fc12222,fd12222,fe12222]) # 2 3 4
                                                                bm_1ggggg.faces.new([fd12222,fe12222,ff12222]) # 3 4 5
                                                                bm_1ggggg.faces.new([fg12222,fh12222,fi12222]) # 6 7 8
                                                                bm_1ggggg.faces.new([fh12222,fi12222,fj12222]) # 7 8 9
                                                                bm_1ggggg.faces.new([fi12222,fj12222,fk12222]) # 8 9 10

                    if type1222 == 1:
                        if type2222 == 1:
                            if type3222 == 0:
                                if type4222 == 0:
                                    if type5222 == 0:
                                        if type6222 == 1:
                                            if type7222 == 1:
                                                if type8222 == 0:
                                                    if type9222 == 0:
                                                        if type10222 == 0:
                                                            if type11222 == 0:
                                                                bm_1gggg.faces.new([fa1222,fb1222,fc1222]) # 0 1 2
                                                                bm_1gggg.faces.new([fb1222,fc1222,fd1222]) # 1 2 3
                                                                bm_1gggg.faces.new([fc1222,fd1222,fe1222]) # 2 3 4
                                                                bm_1gggg.faces.new([ff1222,fg1222,fh1222]) # 5 6 7
                                                                bm_1gggg.faces.new([fg1222,fh1222,fi1222]) # 6 7 8
                                                                bm_1gggg.faces.new([fh1222,fi1222,fj1222]) # 7 8 9
                                                                bm_1gggg.faces.new([fi1222,fj1222,fk1222]) # 8 9 10

                    if type122 == 1:
                        if type222 == 1:
                            if type322 == 0:
                                if type422 == 0:
                                    if type522 == 1:
                                        if type622 == 1:
                                            if type722 == 0:
                                                if type822 == 0:
                                                    if type922 == 0:
                                                        if type1022 == 0:
                                                            if type1122 == 0:
                                                                bm_1ggg.faces.new([fa122,fb122,fc122])
                                                                bm_1ggg.faces.new([fb122,fc122,fd122])
                                                                bm_1ggg.faces.new([fe122,ff122,fg122])
                                                                bm_1ggg.faces.new([ff122,fg122,fh122])
                                                                bm_1ggg.faces.new([fg122,fh122,fi122])
                                                                bm_1ggg.faces.new([fh122,fi122,fj122])
                                                                bm_1ggg.faces.new([fi122,fj122,fk122])

                    if type12 == 1:
                        if type22 == 1:
                            if type32 == 0:
                                if type42 == 1:
                                    if type52 == 1:
                                        if type62 == 0:
                                            if type72 == 0:
                                                if type82 == 0:
                                                    if type92 == 0:
                                                        if type102 == 0:
                                                            if type112 == 0:
                                                                bm_1gg.faces.new([fa12,fb12,fc12])
                                                                bm_1gg.faces.new([fd12,fe12,ff12])
                                                                bm_1gg.faces.new([fe12,ff12,fg12])
                                                                bm_1gg.faces.new([ff12,fg12,fh12])
                                                                bm_1gg.faces.new([fg12,fh12,fi12])
                                                                bm_1gg.faces.new([fh12,fi12,fj12])
                                                                bm_1gg.faces.new([fi12,fj12,fk12])
                    
                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        if type10 == 0:
                                                            if type11 == 0:
                                                                bm_1g.faces.new([fa1,fb1,fc1])
                                                                bm_1g.faces.new([fb1,fc1,fd1])
                                                                bm_1g.faces.new([fc1,fd1,fe1])
                                                                bm_1g.faces.new([fd1,fe1,ff1])
                                                                bm_1g.faces.new([fe1,ff1,fg1])
                                                                bm_1g.faces.new([ff1,fg1,fh1])
                                                                bm_1g.faces.new([fg1,fh1,fi1])
                                                                bm_1g.faces.new([fh1,fi1,fj1])
                                                                bm_1g.faces.new([fi1,fj1,fk1])

            elif vertexCount == 12:
                for i in range(vertexCount//12):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    vx10 = unpack("<f", f.read(4))[0]
                    vy10 = unpack("<f", f.read(4))[0]
                    vz10 = unpack("<f", f.read(4))[0]
                    type10 = unpack("B", f.read(1))[0]
                    value10 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10 = unpack("<f", f.read(4))[0]
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx12 = unpack("<f", f.read(4))[0]
                    vy12 = unpack("<f", f.read(4))[0]
                    vz12 = unpack("<f", f.read(4))[0]
                    type12 = unpack("B", f.read(1))[0]
                    value12 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12 = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx11a = unpack("<f", f.read(4))[0]
                    vy11a = unpack("<f", f.read(4))[0]
                    vz11a = unpack("<f", f.read(4))[0]
                    type11a = unpack("B", f.read(1))[0]
                    value11a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11a = unpack("<f", f.read(4))[0]
                    vx21a = unpack("<f", f.read(4))[0]
                    vy21a = unpack("<f", f.read(4))[0]
                    vz21a = unpack("<f", f.read(4))[0]
                    type21a = unpack("B", f.read(1))[0]
                    value21a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw21a = unpack("<f", f.read(4))[0]
                    vx31a = unpack("<f", f.read(4))[0]
                    vy31a = unpack("<f", f.read(4))[0]
                    vz31a = unpack("<f", f.read(4))[0]
                    type31a = unpack("B", f.read(1))[0]
                    value31a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw31a = unpack("<f", f.read(4))[0]
                    vx41a = unpack("<f", f.read(4))[0]
                    vy41a = unpack("<f", f.read(4))[0]
                    vz41a = unpack("<f", f.read(4))[0]
                    type41a = unpack("B", f.read(1))[0]
                    value41a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw41a = unpack("<f", f.read(4))[0]
                    vx51a = unpack("<f", f.read(4))[0]
                    vy51a = unpack("<f", f.read(4))[0]
                    vz51a = unpack("<f", f.read(4))[0]
                    type51a = unpack("B", f.read(1))[0]
                    value51a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw51a = unpack("<f", f.read(4))[0]
                    vx61a = unpack("<f", f.read(4))[0]
                    vy61a = unpack("<f", f.read(4))[0]
                    vz61a = unpack("<f", f.read(4))[0]
                    type61a = unpack("B", f.read(1))[0]
                    value61a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw61a = unpack("<f", f.read(4))[0]
                    vx71a = unpack("<f", f.read(4))[0]
                    vy71a = unpack("<f", f.read(4))[0]
                    vz71a = unpack("<f", f.read(4))[0]
                    type71a = unpack("B", f.read(1))[0]
                    value71a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw71a = unpack("<f", f.read(4))[0]
                    vx81a = unpack("<f", f.read(4))[0]
                    vy81a = unpack("<f", f.read(4))[0]
                    vz81a = unpack("<f", f.read(4))[0]
                    type81a = unpack("B", f.read(1))[0]
                    value81a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw81a = unpack("<f", f.read(4))[0]
                    vx91a = unpack("<f", f.read(4))[0]
                    vy91a = unpack("<f", f.read(4))[0]
                    vz91a = unpack("<f", f.read(4))[0]
                    type91a = unpack("B", f.read(1))[0]
                    value91a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw91a = unpack("<f", f.read(4))[0]
                    vx101a = unpack("<f", f.read(4))[0]
                    vy101a = unpack("<f", f.read(4))[0]
                    vz101a = unpack("<f", f.read(4))[0]
                    type101a = unpack("B", f.read(1))[0]
                    value101a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw101a = unpack("<f", f.read(4))[0]
                    vx111a = unpack("<f", f.read(4))[0]
                    vy111a = unpack("<f", f.read(4))[0]
                    vz111a = unpack("<f", f.read(4))[0]
                    type111a = unpack("B", f.read(1))[0]
                    value111a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw111a = unpack("<f", f.read(4))[0]
                    vx121a = unpack("<f", f.read(4))[0]
                    vy121a = unpack("<f", f.read(4))[0]
                    vz121a = unpack("<f", f.read(4))[0]
                    type121a = unpack("B", f.read(1))[0]
                    value121a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw121a = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx111 = unpack("<f", f.read(4))[0]
                    vy111 = unpack("<f", f.read(4))[0]
                    vz111 = unpack("<f", f.read(4))[0]
                    type111 = unpack("B", f.read(1))[0]
                    value111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw111 = unpack("<f", f.read(4))[0]
                    vx211 = unpack("<f", f.read(4))[0]
                    vy211 = unpack("<f", f.read(4))[0]
                    vz211 = unpack("<f", f.read(4))[0]
                    type211 = unpack("B", f.read(1))[0]
                    value211 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw211 = unpack("<f", f.read(4))[0]
                    vx311 = unpack("<f", f.read(4))[0]
                    vy311 = unpack("<f", f.read(4))[0]
                    vz311 = unpack("<f", f.read(4))[0]
                    type311 = unpack("B", f.read(1))[0]
                    value311 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw311 = unpack("<f", f.read(4))[0]
                    vx411 = unpack("<f", f.read(4))[0]
                    vy411 = unpack("<f", f.read(4))[0]
                    vz411 = unpack("<f", f.read(4))[0]
                    type411 = unpack("B", f.read(1))[0]
                    value411 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw411 = unpack("<f", f.read(4))[0]
                    vx511 = unpack("<f", f.read(4))[0]
                    vy511 = unpack("<f", f.read(4))[0]
                    vz511 = unpack("<f", f.read(4))[0]
                    type511 = unpack("B", f.read(1))[0]
                    value511 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw511 = unpack("<f", f.read(4))[0]
                    vx611 = unpack("<f", f.read(4))[0]
                    vy611 = unpack("<f", f.read(4))[0]
                    vz611 = unpack("<f", f.read(4))[0]
                    type611 = unpack("B", f.read(1))[0]
                    value611 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw611 = unpack("<f", f.read(4))[0]
                    vx711 = unpack("<f", f.read(4))[0]
                    vy711 = unpack("<f", f.read(4))[0]
                    vz711 = unpack("<f", f.read(4))[0]
                    type711 = unpack("B", f.read(1))[0]
                    value711 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw711 = unpack("<f", f.read(4))[0]
                    vx811 = unpack("<f", f.read(4))[0]
                    vy811 = unpack("<f", f.read(4))[0]
                    vz811 = unpack("<f", f.read(4))[0]
                    type811 = unpack("B", f.read(1))[0]
                    value811 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw811 = unpack("<f", f.read(4))[0]
                    vx911 = unpack("<f", f.read(4))[0]
                    vy911 = unpack("<f", f.read(4))[0]
                    vz911 = unpack("<f", f.read(4))[0]
                    type911 = unpack("B", f.read(1))[0]
                    value911 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw911 = unpack("<f", f.read(4))[0]
                    vx1011 = unpack("<f", f.read(4))[0]
                    vy1011 = unpack("<f", f.read(4))[0]
                    vz1011 = unpack("<f", f.read(4))[0]
                    type1011 = unpack("B", f.read(1))[0]
                    value1011 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1011 = unpack("<f", f.read(4))[0]
                    vx1111 = unpack("<f", f.read(4))[0]
                    vy1111 = unpack("<f", f.read(4))[0]
                    vz1111 = unpack("<f", f.read(4))[0]
                    type1111 = unpack("B", f.read(1))[0]
                    value1111 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1111 = unpack("<f", f.read(4))[0]
                    vx1211 = unpack("<f", f.read(4))[0]
                    vy1211 = unpack("<f", f.read(4))[0]
                    vz1211 = unpack("<f", f.read(4))[0]
                    type1211 = unpack("B", f.read(1))[0]
                    value1211 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1211 = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1_1 = unpack("<f", f.read(4))[0]
                    vy1_1 = unpack("<f", f.read(4))[0]
                    vz1_1 = unpack("<f", f.read(4))[0]
                    type1_1 = unpack("B", f.read(1))[0]
                    value1_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1_1 = unpack("<f", f.read(4))[0]
                    vx2_1 = unpack("<f", f.read(4))[0]
                    vy2_1 = unpack("<f", f.read(4))[0]
                    vz2_1 = unpack("<f", f.read(4))[0]
                    type2_1 = unpack("B", f.read(1))[0]
                    value2_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2_1 = unpack("<f", f.read(4))[0]
                    vx3_1 = unpack("<f", f.read(4))[0]
                    vy3_1 = unpack("<f", f.read(4))[0]
                    vz3_1 = unpack("<f", f.read(4))[0]
                    type3_1 = unpack("B", f.read(1))[0]
                    value3_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3_1 = unpack("<f", f.read(4))[0]
                    vx4_1 = unpack("<f", f.read(4))[0]
                    vy4_1 = unpack("<f", f.read(4))[0]
                    vz4_1 = unpack("<f", f.read(4))[0]
                    type4_1 = unpack("B", f.read(1))[0]
                    value4_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4_1 = unpack("<f", f.read(4))[0]
                    vx5_1 = unpack("<f", f.read(4))[0]
                    vy5_1 = unpack("<f", f.read(4))[0]
                    vz5_1 = unpack("<f", f.read(4))[0]
                    type5_1 = unpack("B", f.read(1))[0]
                    value5_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5_1 = unpack("<f", f.read(4))[0]
                    vx6_1 = unpack("<f", f.read(4))[0]
                    vy6_1 = unpack("<f", f.read(4))[0]
                    vz6_1 = unpack("<f", f.read(4))[0]
                    type6_1 = unpack("B", f.read(1))[0]
                    value6_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6_1 = unpack("<f", f.read(4))[0]
                    vx7_1 = unpack("<f", f.read(4))[0]
                    vy7_1 = unpack("<f", f.read(4))[0]
                    vz7_1 = unpack("<f", f.read(4))[0]
                    type7_1 = unpack("B", f.read(1))[0]
                    value7_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7_1 = unpack("<f", f.read(4))[0]
                    vx8_1 = unpack("<f", f.read(4))[0]
                    vy8_1 = unpack("<f", f.read(4))[0]
                    vz8_1 = unpack("<f", f.read(4))[0]
                    type8_1 = unpack("B", f.read(1))[0]
                    value8_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8_1 = unpack("<f", f.read(4))[0]
                    vx9_1 = unpack("<f", f.read(4))[0]
                    vy9_1 = unpack("<f", f.read(4))[0]
                    vz9_1 = unpack("<f", f.read(4))[0]
                    type9_1 = unpack("B", f.read(1))[0]
                    value9_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9_1 = unpack("<f", f.read(4))[0]
                    vx10_1 = unpack("<f", f.read(4))[0]
                    vy10_1 = unpack("<f", f.read(4))[0]
                    vz10_1 = unpack("<f", f.read(4))[0]
                    type10_1 = unpack("B", f.read(1))[0]
                    value10_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10_1 = unpack("<f", f.read(4))[0]
                    vx11_1 = unpack("<f", f.read(4))[0]
                    vy11_1 = unpack("<f", f.read(4))[0]
                    vz11_1 = unpack("<f", f.read(4))[0]
                    type11_1 = unpack("B", f.read(1))[0]
                    value11_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11_1 = unpack("<f", f.read(4))[0]
                    vx12_1 = unpack("<f", f.read(4))[0]
                    vy12_1 = unpack("<f", f.read(4))[0]
                    vz12_1 = unpack("<f", f.read(4))[0]
                    type12_1 = unpack("B", f.read(1))[0]
                    value12_1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12_1 = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1c = unpack("<f", f.read(4))[0]
                    vy1c = unpack("<f", f.read(4))[0]
                    vz1c = unpack("<f", f.read(4))[0]
                    type1c = unpack("B", f.read(1))[0]
                    value1c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1c = unpack("<f", f.read(4))[0]
                    vx2c = unpack("<f", f.read(4))[0]
                    vy2c = unpack("<f", f.read(4))[0]
                    vz2c = unpack("<f", f.read(4))[0]
                    type2c = unpack("B", f.read(1))[0]
                    value2c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2c = unpack("<f", f.read(4))[0]
                    vx3c = unpack("<f", f.read(4))[0]
                    vy3c = unpack("<f", f.read(4))[0]
                    vz3c = unpack("<f", f.read(4))[0]
                    type3c = unpack("B", f.read(1))[0]
                    value3c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3c = unpack("<f", f.read(4))[0]
                    vx4c = unpack("<f", f.read(4))[0]
                    vy4c = unpack("<f", f.read(4))[0]
                    vz4c = unpack("<f", f.read(4))[0]
                    type4c = unpack("B", f.read(1))[0]
                    value4c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4c = unpack("<f", f.read(4))[0]
                    vx5c = unpack("<f", f.read(4))[0]
                    vy5c = unpack("<f", f.read(4))[0]
                    vz5c = unpack("<f", f.read(4))[0]
                    type5c = unpack("B", f.read(1))[0]
                    value5c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5c = unpack("<f", f.read(4))[0]
                    vx6c = unpack("<f", f.read(4))[0]
                    vy6c = unpack("<f", f.read(4))[0]
                    vz6c = unpack("<f", f.read(4))[0]
                    type6c = unpack("B", f.read(1))[0]
                    value6c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6c = unpack("<f", f.read(4))[0]
                    vx7c = unpack("<f", f.read(4))[0]
                    vy7c = unpack("<f", f.read(4))[0]
                    vz7c = unpack("<f", f.read(4))[0]
                    type7c = unpack("B", f.read(1))[0]
                    value7c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7c = unpack("<f", f.read(4))[0]
                    vx8c = unpack("<f", f.read(4))[0]
                    vy8c = unpack("<f", f.read(4))[0]
                    vz8c = unpack("<f", f.read(4))[0]
                    type8c = unpack("B", f.read(1))[0]
                    value8c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8c = unpack("<f", f.read(4))[0]
                    vx9c = unpack("<f", f.read(4))[0]
                    vy9c = unpack("<f", f.read(4))[0]
                    vz9c = unpack("<f", f.read(4))[0]
                    type9c = unpack("B", f.read(1))[0]
                    value9c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9c = unpack("<f", f.read(4))[0]
                    vx10c = unpack("<f", f.read(4))[0]
                    vy10c = unpack("<f", f.read(4))[0]
                    vz10c = unpack("<f", f.read(4))[0]
                    type10c = unpack("B", f.read(1))[0]
                    value10c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10c = unpack("<f", f.read(4))[0]
                    vx11c = unpack("<f", f.read(4))[0]
                    vy11c = unpack("<f", f.read(4))[0]
                    vz11c = unpack("<f", f.read(4))[0]
                    type11c = unpack("B", f.read(1))[0]
                    value11c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11c = unpack("<f", f.read(4))[0]
                    vx12c = unpack("<f", f.read(4))[0]
                    vy12c = unpack("<f", f.read(4))[0]
                    vz12c = unpack("<f", f.read(4))[0]
                    type12c = unpack("B", f.read(1))[0]
                    value12c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12c = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1d = unpack("<f", f.read(4))[0]
                    vy1d = unpack("<f", f.read(4))[0]
                    vz1d = unpack("<f", f.read(4))[0]
                    type1d = unpack("B", f.read(1))[0]
                    value1d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1d = unpack("<f", f.read(4))[0]
                    vx2d = unpack("<f", f.read(4))[0]
                    vy2d = unpack("<f", f.read(4))[0]
                    vz2d = unpack("<f", f.read(4))[0]
                    type2d = unpack("B", f.read(1))[0]
                    value2d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2d = unpack("<f", f.read(4))[0]
                    vx3d = unpack("<f", f.read(4))[0]
                    vy3d = unpack("<f", f.read(4))[0]
                    vz3d = unpack("<f", f.read(4))[0]
                    type3d = unpack("B", f.read(1))[0]
                    value3d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3d = unpack("<f", f.read(4))[0]
                    vx4d = unpack("<f", f.read(4))[0]
                    vy4d = unpack("<f", f.read(4))[0]
                    vz4d = unpack("<f", f.read(4))[0]
                    type4d = unpack("B", f.read(1))[0]
                    value4d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4d = unpack("<f", f.read(4))[0]
                    vx5d = unpack("<f", f.read(4))[0]
                    vy5d = unpack("<f", f.read(4))[0]
                    vz5d = unpack("<f", f.read(4))[0]
                    type5d = unpack("B", f.read(1))[0]
                    value5d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5d = unpack("<f", f.read(4))[0]
                    vx6d = unpack("<f", f.read(4))[0]
                    vy6d = unpack("<f", f.read(4))[0]
                    vz6d = unpack("<f", f.read(4))[0]
                    type6d = unpack("B", f.read(1))[0]
                    value6d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6d = unpack("<f", f.read(4))[0]
                    vx7d = unpack("<f", f.read(4))[0]
                    vy7d = unpack("<f", f.read(4))[0]
                    vz7d = unpack("<f", f.read(4))[0]
                    type7d = unpack("B", f.read(1))[0]
                    value7d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7d = unpack("<f", f.read(4))[0]
                    vx8d = unpack("<f", f.read(4))[0]
                    vy8d = unpack("<f", f.read(4))[0]
                    vz8d = unpack("<f", f.read(4))[0]
                    type8d = unpack("B", f.read(1))[0]
                    value8d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8d = unpack("<f", f.read(4))[0]
                    vx9d = unpack("<f", f.read(4))[0]
                    vy9d = unpack("<f", f.read(4))[0]
                    vz9d = unpack("<f", f.read(4))[0]
                    type9d = unpack("B", f.read(1))[0]
                    value9d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9d = unpack("<f", f.read(4))[0]
                    vx10d = unpack("<f", f.read(4))[0]
                    vy10d = unpack("<f", f.read(4))[0]
                    vz10d = unpack("<f", f.read(4))[0]
                    type10d = unpack("B", f.read(1))[0]
                    value10d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10d = unpack("<f", f.read(4))[0]
                    vx11d = unpack("<f", f.read(4))[0]
                    vy11d = unpack("<f", f.read(4))[0]
                    vz11d = unpack("<f", f.read(4))[0]
                    type11d = unpack("B", f.read(1))[0]
                    value11d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11d = unpack("<f", f.read(4))[0]
                    vx12d = unpack("<f", f.read(4))[0]
                    vy12d = unpack("<f", f.read(4))[0]
                    vz12d = unpack("<f", f.read(4))[0]
                    type12d = unpack("B", f.read(1))[0]
                    value12d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12d = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1e = unpack("<f", f.read(4))[0]
                    vy1e = unpack("<f", f.read(4))[0]
                    vz1e = unpack("<f", f.read(4))[0]
                    type1e = unpack("B", f.read(1))[0]
                    value1e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1e = unpack("<f", f.read(4))[0]
                    vx2e = unpack("<f", f.read(4))[0]
                    vy2e = unpack("<f", f.read(4))[0]
                    vz2e = unpack("<f", f.read(4))[0]
                    type2e = unpack("B", f.read(1))[0]
                    value2e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2e = unpack("<f", f.read(4))[0]
                    vx3e = unpack("<f", f.read(4))[0]
                    vy3e = unpack("<f", f.read(4))[0]
                    vz3e = unpack("<f", f.read(4))[0]
                    type3e = unpack("B", f.read(1))[0]
                    value3e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3e = unpack("<f", f.read(4))[0]
                    vx4e = unpack("<f", f.read(4))[0]
                    vy4e = unpack("<f", f.read(4))[0]
                    vz4e = unpack("<f", f.read(4))[0]
                    type4e = unpack("B", f.read(1))[0]
                    value4e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4e = unpack("<f", f.read(4))[0]
                    vx5e = unpack("<f", f.read(4))[0]
                    vy5e = unpack("<f", f.read(4))[0]
                    vz5e = unpack("<f", f.read(4))[0]
                    type5e = unpack("B", f.read(1))[0]
                    value5e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5e = unpack("<f", f.read(4))[0]
                    vx6e = unpack("<f", f.read(4))[0]
                    vy6e = unpack("<f", f.read(4))[0]
                    vz6e = unpack("<f", f.read(4))[0]
                    type6e = unpack("B", f.read(1))[0]
                    value6e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6e = unpack("<f", f.read(4))[0]
                    vx7e = unpack("<f", f.read(4))[0]
                    vy7e = unpack("<f", f.read(4))[0]
                    vz7e = unpack("<f", f.read(4))[0]
                    type7e = unpack("B", f.read(1))[0]
                    value7e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7e = unpack("<f", f.read(4))[0]
                    vx8e = unpack("<f", f.read(4))[0]
                    vy8e = unpack("<f", f.read(4))[0]
                    vz8e = unpack("<f", f.read(4))[0]
                    type8e = unpack("B", f.read(1))[0]
                    value8e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8e = unpack("<f", f.read(4))[0]
                    vx9e = unpack("<f", f.read(4))[0]
                    vy9e = unpack("<f", f.read(4))[0]
                    vz9e = unpack("<f", f.read(4))[0]
                    type9e = unpack("B", f.read(1))[0]
                    value9e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9e = unpack("<f", f.read(4))[0]
                    vx10e = unpack("<f", f.read(4))[0]
                    vy10e = unpack("<f", f.read(4))[0]
                    vz10e = unpack("<f", f.read(4))[0]
                    type10e = unpack("B", f.read(1))[0]
                    value10e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10e = unpack("<f", f.read(4))[0]
                    vx11e = unpack("<f", f.read(4))[0]
                    vy11e = unpack("<f", f.read(4))[0]
                    vz11e = unpack("<f", f.read(4))[0]
                    type11e = unpack("B", f.read(1))[0]
                    value11e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11e = unpack("<f", f.read(4))[0]
                    vx12e = unpack("<f", f.read(4))[0]
                    vy12e = unpack("<f", f.read(4))[0]
                    vz12e = unpack("<f", f.read(4))[0]
                    type12e = unpack("B", f.read(1))[0]
                    value12e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12e = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1f = unpack("<f", f.read(4))[0]
                    vy1f = unpack("<f", f.read(4))[0]
                    vz1f = unpack("<f", f.read(4))[0]
                    type1f = unpack("B", f.read(1))[0]
                    value1f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1f = unpack("<f", f.read(4))[0]
                    vx2f = unpack("<f", f.read(4))[0]
                    vy2f = unpack("<f", f.read(4))[0]
                    vz2f = unpack("<f", f.read(4))[0]
                    type2f = unpack("B", f.read(1))[0]
                    value2f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2f = unpack("<f", f.read(4))[0]
                    vx3f = unpack("<f", f.read(4))[0]
                    vy3f = unpack("<f", f.read(4))[0]
                    vz3f = unpack("<f", f.read(4))[0]
                    type3f = unpack("B", f.read(1))[0]
                    value3f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3f = unpack("<f", f.read(4))[0]
                    vx4f = unpack("<f", f.read(4))[0]
                    vy4f = unpack("<f", f.read(4))[0]
                    vz4f = unpack("<f", f.read(4))[0]
                    type4f = unpack("B", f.read(1))[0]
                    value4f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4f = unpack("<f", f.read(4))[0]
                    vx5f = unpack("<f", f.read(4))[0]
                    vy5f = unpack("<f", f.read(4))[0]
                    vz5f = unpack("<f", f.read(4))[0]
                    type5f = unpack("B", f.read(1))[0]
                    value5f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5f = unpack("<f", f.read(4))[0]
                    vx6f = unpack("<f", f.read(4))[0]
                    vy6f = unpack("<f", f.read(4))[0]
                    vz6f = unpack("<f", f.read(4))[0]
                    type6f = unpack("B", f.read(1))[0]
                    value6f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6f = unpack("<f", f.read(4))[0]
                    vx7f = unpack("<f", f.read(4))[0]
                    vy7f = unpack("<f", f.read(4))[0]
                    vz7f = unpack("<f", f.read(4))[0]
                    type7f = unpack("B", f.read(1))[0]
                    value7f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7f = unpack("<f", f.read(4))[0]
                    vx8f = unpack("<f", f.read(4))[0]
                    vy8f = unpack("<f", f.read(4))[0]
                    vz8f = unpack("<f", f.read(4))[0]
                    type8f = unpack("B", f.read(1))[0]
                    value8f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8f = unpack("<f", f.read(4))[0]
                    vx9f = unpack("<f", f.read(4))[0]
                    vy9f = unpack("<f", f.read(4))[0]
                    vz9f = unpack("<f", f.read(4))[0]
                    type9f = unpack("B", f.read(1))[0]
                    value9f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9f = unpack("<f", f.read(4))[0]
                    vx10f = unpack("<f", f.read(4))[0]
                    vy10f = unpack("<f", f.read(4))[0]
                    vz10f = unpack("<f", f.read(4))[0]
                    type10f = unpack("B", f.read(1))[0]
                    value10f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10f = unpack("<f", f.read(4))[0]
                    vx11f = unpack("<f", f.read(4))[0]
                    vy11f = unpack("<f", f.read(4))[0]
                    vz11f = unpack("<f", f.read(4))[0]
                    type11f = unpack("B", f.read(1))[0]
                    value11f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11f = unpack("<f", f.read(4))[0]
                    vx12f = unpack("<f", f.read(4))[0]
                    vy12f = unpack("<f", f.read(4))[0]
                    vz12f = unpack("<f", f.read(4))[0]
                    type12f = unpack("B", f.read(1))[0]
                    value12f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12f = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1g = unpack("<f", f.read(4))[0]
                    vy1g = unpack("<f", f.read(4))[0]
                    vz1g = unpack("<f", f.read(4))[0]
                    type1g = unpack("B", f.read(1))[0]
                    value1g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1g = unpack("<f", f.read(4))[0]
                    vx2g = unpack("<f", f.read(4))[0]
                    vy2g = unpack("<f", f.read(4))[0]
                    vz2g = unpack("<f", f.read(4))[0]
                    type2g = unpack("B", f.read(1))[0]
                    value2g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2g = unpack("<f", f.read(4))[0]
                    vx3g = unpack("<f", f.read(4))[0]
                    vy3g = unpack("<f", f.read(4))[0]
                    vz3g = unpack("<f", f.read(4))[0]
                    type3g = unpack("B", f.read(1))[0]
                    value3g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3g = unpack("<f", f.read(4))[0]
                    vx4g = unpack("<f", f.read(4))[0]
                    vy4g = unpack("<f", f.read(4))[0]
                    vz4g = unpack("<f", f.read(4))[0]
                    type4g = unpack("B", f.read(1))[0]
                    value4g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4g = unpack("<f", f.read(4))[0]
                    vx5g = unpack("<f", f.read(4))[0]
                    vy5g = unpack("<f", f.read(4))[0]
                    vz5g = unpack("<f", f.read(4))[0]
                    type5g = unpack("B", f.read(1))[0]
                    value5g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5g = unpack("<f", f.read(4))[0]
                    vx6g = unpack("<f", f.read(4))[0]
                    vy6g = unpack("<f", f.read(4))[0]
                    vz6g = unpack("<f", f.read(4))[0]
                    type6g = unpack("B", f.read(1))[0]
                    value6g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6g = unpack("<f", f.read(4))[0]
                    vx7g = unpack("<f", f.read(4))[0]
                    vy7g = unpack("<f", f.read(4))[0]
                    vz7g = unpack("<f", f.read(4))[0]
                    type7g = unpack("B", f.read(1))[0]
                    value7g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7g = unpack("<f", f.read(4))[0]
                    vx8g = unpack("<f", f.read(4))[0]
                    vy8g = unpack("<f", f.read(4))[0]
                    vz8g = unpack("<f", f.read(4))[0]
                    type8g = unpack("B", f.read(1))[0]
                    value8g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8g = unpack("<f", f.read(4))[0]
                    vx9g = unpack("<f", f.read(4))[0]
                    vy9g = unpack("<f", f.read(4))[0]
                    vz9g = unpack("<f", f.read(4))[0]
                    type9g = unpack("B", f.read(1))[0]
                    value9g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9g = unpack("<f", f.read(4))[0]
                    vx10g = unpack("<f", f.read(4))[0]
                    vy10g = unpack("<f", f.read(4))[0]
                    vz10g = unpack("<f", f.read(4))[0]
                    type10g = unpack("B", f.read(1))[0]
                    value10g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10g = unpack("<f", f.read(4))[0]
                    vx11g = unpack("<f", f.read(4))[0]
                    vy11g = unpack("<f", f.read(4))[0]
                    vz11g = unpack("<f", f.read(4))[0]
                    type11g = unpack("B", f.read(1))[0]
                    value11g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11g = unpack("<f", f.read(4))[0]
                    vx12g = unpack("<f", f.read(4))[0]
                    vy12g = unpack("<f", f.read(4))[0]
                    vz12g = unpack("<f", f.read(4))[0]
                    type12g = unpack("B", f.read(1))[0]
                    value12g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12g = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1h = unpack("<f", f.read(4))[0]
                    vy1h = unpack("<f", f.read(4))[0]
                    vz1h = unpack("<f", f.read(4))[0]
                    type1h = unpack("B", f.read(1))[0]
                    value1h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1h = unpack("<f", f.read(4))[0]
                    vx2h = unpack("<f", f.read(4))[0]
                    vy2h = unpack("<f", f.read(4))[0]
                    vz2h = unpack("<f", f.read(4))[0]
                    type2h = unpack("B", f.read(1))[0]
                    value2h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2h = unpack("<f", f.read(4))[0]
                    vx3h = unpack("<f", f.read(4))[0]
                    vy3h = unpack("<f", f.read(4))[0]
                    vz3h = unpack("<f", f.read(4))[0]
                    type3h = unpack("B", f.read(1))[0]
                    value3h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3h = unpack("<f", f.read(4))[0]
                    vx4h = unpack("<f", f.read(4))[0]
                    vy4h = unpack("<f", f.read(4))[0]
                    vz4h = unpack("<f", f.read(4))[0]
                    type4h = unpack("B", f.read(1))[0]
                    value4h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4h = unpack("<f", f.read(4))[0]
                    vx5h = unpack("<f", f.read(4))[0]
                    vy5h = unpack("<f", f.read(4))[0]
                    vz5h = unpack("<f", f.read(4))[0]
                    type5h = unpack("B", f.read(1))[0]
                    value5h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5h = unpack("<f", f.read(4))[0]
                    vx6h = unpack("<f", f.read(4))[0]
                    vy6h = unpack("<f", f.read(4))[0]
                    vz6h = unpack("<f", f.read(4))[0]
                    type6h = unpack("B", f.read(1))[0]
                    value6h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6h = unpack("<f", f.read(4))[0]
                    vx7h = unpack("<f", f.read(4))[0]
                    vy7h = unpack("<f", f.read(4))[0]
                    vz7h = unpack("<f", f.read(4))[0]
                    type7h = unpack("B", f.read(1))[0]
                    value7h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7h = unpack("<f", f.read(4))[0]
                    vx8h = unpack("<f", f.read(4))[0]
                    vy8h = unpack("<f", f.read(4))[0]
                    vz8h = unpack("<f", f.read(4))[0]
                    type8h = unpack("B", f.read(1))[0]
                    value8h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8h = unpack("<f", f.read(4))[0]
                    vx9h = unpack("<f", f.read(4))[0]
                    vy9h = unpack("<f", f.read(4))[0]
                    vz9h = unpack("<f", f.read(4))[0]
                    type9h = unpack("B", f.read(1))[0]
                    value9h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9h = unpack("<f", f.read(4))[0]
                    vx10h = unpack("<f", f.read(4))[0]
                    vy10h = unpack("<f", f.read(4))[0]
                    vz10h = unpack("<f", f.read(4))[0]
                    type10h = unpack("B", f.read(1))[0]
                    value10h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10h = unpack("<f", f.read(4))[0]
                    vx11h = unpack("<f", f.read(4))[0]
                    vy11h = unpack("<f", f.read(4))[0]
                    vz11h = unpack("<f", f.read(4))[0]
                    type11h = unpack("B", f.read(1))[0]
                    value11h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11h = unpack("<f", f.read(4))[0]
                    vx12h = unpack("<f", f.read(4))[0]
                    vy12h = unpack("<f", f.read(4))[0]
                    vz12h = unpack("<f", f.read(4))[0]
                    type12h = unpack("B", f.read(1))[0]
                    value12h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12h = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1i = unpack("<f", f.read(4))[0]
                    vy1i = unpack("<f", f.read(4))[0]
                    vz1i = unpack("<f", f.read(4))[0]
                    type1i = unpack("B", f.read(1))[0]
                    value1i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1i = unpack("<f", f.read(4))[0]
                    vx2i = unpack("<f", f.read(4))[0]
                    vy2i = unpack("<f", f.read(4))[0]
                    vz2i = unpack("<f", f.read(4))[0]
                    type2i = unpack("B", f.read(1))[0]
                    value2i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2i = unpack("<f", f.read(4))[0]
                    vx3i = unpack("<f", f.read(4))[0]
                    vy3i = unpack("<f", f.read(4))[0]
                    vz3i = unpack("<f", f.read(4))[0]
                    type3i = unpack("B", f.read(1))[0]
                    value3i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3i = unpack("<f", f.read(4))[0]
                    vx4i = unpack("<f", f.read(4))[0]
                    vy4i = unpack("<f", f.read(4))[0]
                    vz4i = unpack("<f", f.read(4))[0]
                    type4i = unpack("B", f.read(1))[0]
                    value4i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4i = unpack("<f", f.read(4))[0]
                    vx5i = unpack("<f", f.read(4))[0]
                    vy5i = unpack("<f", f.read(4))[0]
                    vz5i = unpack("<f", f.read(4))[0]
                    type5i = unpack("B", f.read(1))[0]
                    value5i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5i = unpack("<f", f.read(4))[0]
                    vx6i = unpack("<f", f.read(4))[0]
                    vy6i = unpack("<f", f.read(4))[0]
                    vz6i = unpack("<f", f.read(4))[0]
                    type6i = unpack("B", f.read(1))[0]
                    value6i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6i = unpack("<f", f.read(4))[0]
                    vx7i = unpack("<f", f.read(4))[0]
                    vy7i = unpack("<f", f.read(4))[0]
                    vz7i = unpack("<f", f.read(4))[0]
                    type7i = unpack("B", f.read(1))[0]
                    value7i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7i = unpack("<f", f.read(4))[0]
                    vx8i = unpack("<f", f.read(4))[0]
                    vy8i = unpack("<f", f.read(4))[0]
                    vz8i = unpack("<f", f.read(4))[0]
                    type8i = unpack("B", f.read(1))[0]
                    value8i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8i = unpack("<f", f.read(4))[0]
                    vx9i = unpack("<f", f.read(4))[0]
                    vy9i = unpack("<f", f.read(4))[0]
                    vz9i = unpack("<f", f.read(4))[0]
                    type9i = unpack("B", f.read(1))[0]
                    value9i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9i = unpack("<f", f.read(4))[0]
                    vx10i = unpack("<f", f.read(4))[0]
                    vy10i = unpack("<f", f.read(4))[0]
                    vz10i = unpack("<f", f.read(4))[0]
                    type10i = unpack("B", f.read(1))[0]
                    value10i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10i = unpack("<f", f.read(4))[0]
                    vx11i = unpack("<f", f.read(4))[0]
                    vy11i = unpack("<f", f.read(4))[0]
                    vz11i = unpack("<f", f.read(4))[0]
                    type11i = unpack("B", f.read(1))[0]
                    value11i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11i = unpack("<f", f.read(4))[0]
                    vx12i = unpack("<f", f.read(4))[0]
                    vy12i = unpack("<f", f.read(4))[0]
                    vz12i = unpack("<f", f.read(4))[0]
                    type12i = unpack("B", f.read(1))[0]
                    value12i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12i = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1j = unpack("<f", f.read(4))[0]
                    vy1j = unpack("<f", f.read(4))[0]
                    vz1j = unpack("<f", f.read(4))[0]
                    type1j = unpack("B", f.read(1))[0]
                    value1j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1j = unpack("<f", f.read(4))[0]
                    vx2j = unpack("<f", f.read(4))[0]
                    vy2j = unpack("<f", f.read(4))[0]
                    vz2j = unpack("<f", f.read(4))[0]
                    type2j = unpack("B", f.read(1))[0]
                    value2j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2j = unpack("<f", f.read(4))[0]
                    vx3j = unpack("<f", f.read(4))[0]
                    vy3j = unpack("<f", f.read(4))[0]
                    vz3j = unpack("<f", f.read(4))[0]
                    type3j = unpack("B", f.read(1))[0]
                    value3j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3j = unpack("<f", f.read(4))[0]
                    vx4j = unpack("<f", f.read(4))[0]
                    vy4j = unpack("<f", f.read(4))[0]
                    vz4j = unpack("<f", f.read(4))[0]
                    type4j = unpack("B", f.read(1))[0]
                    value4j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4j = unpack("<f", f.read(4))[0]
                    vx5j = unpack("<f", f.read(4))[0]
                    vy5j = unpack("<f", f.read(4))[0]
                    vz5j = unpack("<f", f.read(4))[0]
                    type5j = unpack("B", f.read(1))[0]
                    value5j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5j = unpack("<f", f.read(4))[0]
                    vx6j = unpack("<f", f.read(4))[0]
                    vy6j = unpack("<f", f.read(4))[0]
                    vz6j = unpack("<f", f.read(4))[0]
                    type6j = unpack("B", f.read(1))[0]
                    value6j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6j = unpack("<f", f.read(4))[0]
                    vx7j = unpack("<f", f.read(4))[0]
                    vy7j = unpack("<f", f.read(4))[0]
                    vz7j = unpack("<f", f.read(4))[0]
                    type7j = unpack("B", f.read(1))[0]
                    value7j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7j = unpack("<f", f.read(4))[0]
                    vx8j = unpack("<f", f.read(4))[0]
                    vy8j = unpack("<f", f.read(4))[0]
                    vz8j = unpack("<f", f.read(4))[0]
                    type8j = unpack("B", f.read(1))[0]
                    value8j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8j = unpack("<f", f.read(4))[0]
                    vx9j = unpack("<f", f.read(4))[0]
                    vy9j = unpack("<f", f.read(4))[0]
                    vz9j = unpack("<f", f.read(4))[0]
                    type9j = unpack("B", f.read(1))[0]
                    value9j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9j = unpack("<f", f.read(4))[0]
                    vx10j = unpack("<f", f.read(4))[0]
                    vy10j = unpack("<f", f.read(4))[0]
                    vz10j = unpack("<f", f.read(4))[0]
                    type10j = unpack("B", f.read(1))[0]
                    value10j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10j = unpack("<f", f.read(4))[0]
                    vx11j = unpack("<f", f.read(4))[0]
                    vy11j = unpack("<f", f.read(4))[0]
                    vz11j = unpack("<f", f.read(4))[0]
                    type11j = unpack("B", f.read(1))[0]
                    value11j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11j = unpack("<f", f.read(4))[0]
                    vx12j = unpack("<f", f.read(4))[0]
                    vy12j = unpack("<f", f.read(4))[0]
                    vz12j = unpack("<f", f.read(4))[0]
                    type12j = unpack("B", f.read(1))[0]
                    value12j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12j = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1k = unpack("<f", f.read(4))[0]
                    vy1k = unpack("<f", f.read(4))[0]
                    vz1k = unpack("<f", f.read(4))[0]
                    type1k = unpack("B", f.read(1))[0]
                    value1k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1k = unpack("<f", f.read(4))[0]
                    vx2k = unpack("<f", f.read(4))[0]
                    vy2k = unpack("<f", f.read(4))[0]
                    vz2k = unpack("<f", f.read(4))[0]
                    type2k = unpack("B", f.read(1))[0]
                    value2k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2k = unpack("<f", f.read(4))[0]
                    vx3k = unpack("<f", f.read(4))[0]
                    vy3k = unpack("<f", f.read(4))[0]
                    vz3k = unpack("<f", f.read(4))[0]
                    type3k = unpack("B", f.read(1))[0]
                    value3k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3k = unpack("<f", f.read(4))[0]
                    vx4k = unpack("<f", f.read(4))[0]
                    vy4k = unpack("<f", f.read(4))[0]
                    vz4k = unpack("<f", f.read(4))[0]
                    type4k = unpack("B", f.read(1))[0]
                    value4k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4k = unpack("<f", f.read(4))[0]
                    vx5k = unpack("<f", f.read(4))[0]
                    vy5k = unpack("<f", f.read(4))[0]
                    vz5k = unpack("<f", f.read(4))[0]
                    type5k = unpack("B", f.read(1))[0]
                    value5k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5k = unpack("<f", f.read(4))[0]
                    vx6k = unpack("<f", f.read(4))[0]
                    vy6k = unpack("<f", f.read(4))[0]
                    vz6k = unpack("<f", f.read(4))[0]
                    type6k = unpack("B", f.read(1))[0]
                    value6k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6k = unpack("<f", f.read(4))[0]
                    vx7k = unpack("<f", f.read(4))[0]
                    vy7k = unpack("<f", f.read(4))[0]
                    vz7k = unpack("<f", f.read(4))[0]
                    type7k = unpack("B", f.read(1))[0]
                    value7k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7k = unpack("<f", f.read(4))[0]
                    vx8k = unpack("<f", f.read(4))[0]
                    vy8k = unpack("<f", f.read(4))[0]
                    vz8k = unpack("<f", f.read(4))[0]
                    type8k = unpack("B", f.read(1))[0]
                    value8k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8k = unpack("<f", f.read(4))[0]
                    vx9k = unpack("<f", f.read(4))[0]
                    vy9k = unpack("<f", f.read(4))[0]
                    vz9k = unpack("<f", f.read(4))[0]
                    type9k = unpack("B", f.read(1))[0]
                    value9k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9k = unpack("<f", f.read(4))[0]
                    vx10k = unpack("<f", f.read(4))[0]
                    vy10k = unpack("<f", f.read(4))[0]
                    vz10k = unpack("<f", f.read(4))[0]
                    type10k = unpack("B", f.read(1))[0]
                    value10k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10k = unpack("<f", f.read(4))[0]
                    vx11k = unpack("<f", f.read(4))[0]
                    vy11k = unpack("<f", f.read(4))[0]
                    vz11k = unpack("<f", f.read(4))[0]
                    type11k = unpack("B", f.read(1))[0]
                    value11k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11k = unpack("<f", f.read(4))[0]
                    vx12k = unpack("<f", f.read(4))[0]
                    vy12k = unpack("<f", f.read(4))[0]
                    vz12k = unpack("<f", f.read(4))[0]
                    type12k = unpack("B", f.read(1))[0]
                    value12k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12k = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1l = unpack("<f", f.read(4))[0]
                    vy1l = unpack("<f", f.read(4))[0]
                    vz1l = unpack("<f", f.read(4))[0]
                    type1l = unpack("B", f.read(1))[0]
                    value1l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1l = unpack("<f", f.read(4))[0]
                    vx2l = unpack("<f", f.read(4))[0]
                    vy2l = unpack("<f", f.read(4))[0]
                    vz2l = unpack("<f", f.read(4))[0]
                    type2l = unpack("B", f.read(1))[0]
                    value2l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2l = unpack("<f", f.read(4))[0]
                    vx3l = unpack("<f", f.read(4))[0]
                    vy3l = unpack("<f", f.read(4))[0]
                    vz3l = unpack("<f", f.read(4))[0]
                    type3l = unpack("B", f.read(1))[0]
                    value3l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3l = unpack("<f", f.read(4))[0]
                    vx4l = unpack("<f", f.read(4))[0]
                    vy4l = unpack("<f", f.read(4))[0]
                    vz4l = unpack("<f", f.read(4))[0]
                    type4l = unpack("B", f.read(1))[0]
                    value4l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4l = unpack("<f", f.read(4))[0]
                    vx5l = unpack("<f", f.read(4))[0]
                    vy5l = unpack("<f", f.read(4))[0]
                    vz5l = unpack("<f", f.read(4))[0]
                    type5l = unpack("B", f.read(1))[0]
                    value5l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5l = unpack("<f", f.read(4))[0]
                    vx6l = unpack("<f", f.read(4))[0]
                    vy6l = unpack("<f", f.read(4))[0]
                    vz6l = unpack("<f", f.read(4))[0]
                    type6l = unpack("B", f.read(1))[0]
                    value6l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6l = unpack("<f", f.read(4))[0]
                    vx7l = unpack("<f", f.read(4))[0]
                    vy7l = unpack("<f", f.read(4))[0]
                    vz7l = unpack("<f", f.read(4))[0]
                    type7l = unpack("B", f.read(1))[0]
                    value7l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7l = unpack("<f", f.read(4))[0]
                    vx8l = unpack("<f", f.read(4))[0]
                    vy8l = unpack("<f", f.read(4))[0]
                    vz8l = unpack("<f", f.read(4))[0]
                    type8l = unpack("B", f.read(1))[0]
                    value8l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8l = unpack("<f", f.read(4))[0]
                    vx9l = unpack("<f", f.read(4))[0]
                    vy9l = unpack("<f", f.read(4))[0]
                    vz9l = unpack("<f", f.read(4))[0]
                    type9l = unpack("B", f.read(1))[0]
                    value9l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9l = unpack("<f", f.read(4))[0]
                    vx10l = unpack("<f", f.read(4))[0]
                    vy10l = unpack("<f", f.read(4))[0]
                    vz10l = unpack("<f", f.read(4))[0]
                    type10l = unpack("B", f.read(1))[0]
                    value10l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10l = unpack("<f", f.read(4))[0]
                    vx11l = unpack("<f", f.read(4))[0]
                    vy11l = unpack("<f", f.read(4))[0]
                    vz11l = unpack("<f", f.read(4))[0]
                    type11l = unpack("B", f.read(1))[0]
                    value11l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11l = unpack("<f", f.read(4))[0]
                    vx12l = unpack("<f", f.read(4))[0]
                    vy12l = unpack("<f", f.read(4))[0]
                    vz12l = unpack("<f", f.read(4))[0]
                    type12l = unpack("B", f.read(1))[0]
                    value12l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12l = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1m = unpack("<f", f.read(4))[0]
                    vy1m = unpack("<f", f.read(4))[0]
                    vz1m = unpack("<f", f.read(4))[0]
                    type1m = unpack("B", f.read(1))[0]
                    value1m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1m = unpack("<f", f.read(4))[0]
                    vx2m = unpack("<f", f.read(4))[0]
                    vy2m = unpack("<f", f.read(4))[0]
                    vz2m = unpack("<f", f.read(4))[0]
                    type2m = unpack("B", f.read(1))[0]
                    value2m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2m = unpack("<f", f.read(4))[0]
                    vx3m = unpack("<f", f.read(4))[0]
                    vy3m = unpack("<f", f.read(4))[0]
                    vz3m = unpack("<f", f.read(4))[0]
                    type3m = unpack("B", f.read(1))[0]
                    value3m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3m = unpack("<f", f.read(4))[0]
                    vx4m = unpack("<f", f.read(4))[0]
                    vy4m = unpack("<f", f.read(4))[0]
                    vz4m = unpack("<f", f.read(4))[0]
                    type4m = unpack("B", f.read(1))[0]
                    value4m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4m = unpack("<f", f.read(4))[0]
                    vx5m = unpack("<f", f.read(4))[0]
                    vy5m = unpack("<f", f.read(4))[0]
                    vz5m = unpack("<f", f.read(4))[0]
                    type5m = unpack("B", f.read(1))[0]
                    value5m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5m = unpack("<f", f.read(4))[0]
                    vx6m = unpack("<f", f.read(4))[0]
                    vy6m = unpack("<f", f.read(4))[0]
                    vz6m = unpack("<f", f.read(4))[0]
                    type6m = unpack("B", f.read(1))[0]
                    value6m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6m = unpack("<f", f.read(4))[0]
                    vx7m = unpack("<f", f.read(4))[0]
                    vy7m = unpack("<f", f.read(4))[0]
                    vz7m = unpack("<f", f.read(4))[0]
                    type7m = unpack("B", f.read(1))[0]
                    value7m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7m = unpack("<f", f.read(4))[0]
                    vx8m = unpack("<f", f.read(4))[0]
                    vy8m = unpack("<f", f.read(4))[0]
                    vz8m = unpack("<f", f.read(4))[0]
                    type8m = unpack("B", f.read(1))[0]
                    value8m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8m = unpack("<f", f.read(4))[0]
                    vx9m = unpack("<f", f.read(4))[0]
                    vy9m = unpack("<f", f.read(4))[0]
                    vz9m = unpack("<f", f.read(4))[0]
                    type9m = unpack("B", f.read(1))[0]
                    value9m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9m = unpack("<f", f.read(4))[0]
                    vx10m = unpack("<f", f.read(4))[0]
                    vy10m = unpack("<f", f.read(4))[0]
                    vz10m = unpack("<f", f.read(4))[0]
                    type10m = unpack("B", f.read(1))[0]
                    value10m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10m = unpack("<f", f.read(4))[0]
                    vx11m = unpack("<f", f.read(4))[0]
                    vy11m = unpack("<f", f.read(4))[0]
                    vz11m = unpack("<f", f.read(4))[0]
                    type11m = unpack("B", f.read(1))[0]
                    value11m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11m = unpack("<f", f.read(4))[0]
                    vx12m = unpack("<f", f.read(4))[0]
                    vy12m = unpack("<f", f.read(4))[0]
                    vz12m = unpack("<f", f.read(4))[0]
                    type12m = unpack("B", f.read(1))[0]
                    value12m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12m = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1n = unpack("<f", f.read(4))[0]
                    vy1n = unpack("<f", f.read(4))[0]
                    vz1n = unpack("<f", f.read(4))[0]
                    type1n = unpack("B", f.read(1))[0]
                    value1n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1n = unpack("<f", f.read(4))[0]
                    vx2n = unpack("<f", f.read(4))[0]
                    vy2n = unpack("<f", f.read(4))[0]
                    vz2n = unpack("<f", f.read(4))[0]
                    type2n = unpack("B", f.read(1))[0]
                    value2n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2n = unpack("<f", f.read(4))[0]
                    vx3n = unpack("<f", f.read(4))[0]
                    vy3n = unpack("<f", f.read(4))[0]
                    vz3n = unpack("<f", f.read(4))[0]
                    type3n = unpack("B", f.read(1))[0]
                    value3n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3n = unpack("<f", f.read(4))[0]
                    vx4n = unpack("<f", f.read(4))[0]
                    vy4n = unpack("<f", f.read(4))[0]
                    vz4n = unpack("<f", f.read(4))[0]
                    type4n = unpack("B", f.read(1))[0]
                    value4n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4n = unpack("<f", f.read(4))[0]
                    vx5n = unpack("<f", f.read(4))[0]
                    vy5n = unpack("<f", f.read(4))[0]
                    vz5n = unpack("<f", f.read(4))[0]
                    type5n = unpack("B", f.read(1))[0]
                    value5n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5n = unpack("<f", f.read(4))[0]
                    vx6n = unpack("<f", f.read(4))[0]
                    vy6n = unpack("<f", f.read(4))[0]
                    vz6n = unpack("<f", f.read(4))[0]
                    type6n = unpack("B", f.read(1))[0]
                    value6n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6n = unpack("<f", f.read(4))[0]
                    vx7n = unpack("<f", f.read(4))[0]
                    vy7n = unpack("<f", f.read(4))[0]
                    vz7n = unpack("<f", f.read(4))[0]
                    type7n = unpack("B", f.read(1))[0]
                    value7n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7n = unpack("<f", f.read(4))[0]
                    vx8n = unpack("<f", f.read(4))[0]
                    vy8n = unpack("<f", f.read(4))[0]
                    vz8n = unpack("<f", f.read(4))[0]
                    type8n = unpack("B", f.read(1))[0]
                    value8n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8n = unpack("<f", f.read(4))[0]
                    vx9n = unpack("<f", f.read(4))[0]
                    vy9n = unpack("<f", f.read(4))[0]
                    vz9n = unpack("<f", f.read(4))[0]
                    type9n = unpack("B", f.read(1))[0]
                    value9n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9n = unpack("<f", f.read(4))[0]
                    vx10n = unpack("<f", f.read(4))[0]
                    vy10n = unpack("<f", f.read(4))[0]
                    vz10n = unpack("<f", f.read(4))[0]
                    type10n = unpack("B", f.read(1))[0]
                    value10n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10n = unpack("<f", f.read(4))[0]
                    vx11n = unpack("<f", f.read(4))[0]
                    vy11n = unpack("<f", f.read(4))[0]
                    vz11n = unpack("<f", f.read(4))[0]
                    type11n = unpack("B", f.read(1))[0]
                    value11n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11n = unpack("<f", f.read(4))[0]
                    vx12n = unpack("<f", f.read(4))[0]
                    vy12n = unpack("<f", f.read(4))[0]
                    vz12n = unpack("<f", f.read(4))[0]
                    type12n = unpack("B", f.read(1))[0]
                    value12n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12n = unpack("<f", f.read(4))[0]

                    f.seek(-192,1)

                    vx1o = unpack("<f", f.read(4))[0]
                    vy1o = unpack("<f", f.read(4))[0]
                    vz1o = unpack("<f", f.read(4))[0]
                    type1o = unpack("B", f.read(1))[0]
                    value1o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1o = unpack("<f", f.read(4))[0]
                    vx2o = unpack("<f", f.read(4))[0]
                    vy2o = unpack("<f", f.read(4))[0]
                    vz2o = unpack("<f", f.read(4))[0]
                    type2o = unpack("B", f.read(1))[0]
                    value2o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2o = unpack("<f", f.read(4))[0]
                    vx3o = unpack("<f", f.read(4))[0]
                    vy3o = unpack("<f", f.read(4))[0]
                    vz3o = unpack("<f", f.read(4))[0]
                    type3o = unpack("B", f.read(1))[0]
                    value3o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3o = unpack("<f", f.read(4))[0]
                    vx4o = unpack("<f", f.read(4))[0]
                    vy4o = unpack("<f", f.read(4))[0]
                    vz4o = unpack("<f", f.read(4))[0]
                    type4o = unpack("B", f.read(1))[0]
                    value4o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4o = unpack("<f", f.read(4))[0]
                    vx5o = unpack("<f", f.read(4))[0]
                    vy5o = unpack("<f", f.read(4))[0]
                    vz5o = unpack("<f", f.read(4))[0]
                    type5o = unpack("B", f.read(1))[0]
                    value5o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5o = unpack("<f", f.read(4))[0]
                    vx6o = unpack("<f", f.read(4))[0]
                    vy6o = unpack("<f", f.read(4))[0]
                    vz6o = unpack("<f", f.read(4))[0]
                    type6o = unpack("B", f.read(1))[0]
                    value6o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6o = unpack("<f", f.read(4))[0]
                    vx7o = unpack("<f", f.read(4))[0]
                    vy7o = unpack("<f", f.read(4))[0]
                    vz7o = unpack("<f", f.read(4))[0]
                    type7o = unpack("B", f.read(1))[0]
                    value7o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7o = unpack("<f", f.read(4))[0]
                    vx8o = unpack("<f", f.read(4))[0]
                    vy8o = unpack("<f", f.read(4))[0]
                    vz8o = unpack("<f", f.read(4))[0]
                    type8o = unpack("B", f.read(1))[0]
                    value8o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8o = unpack("<f", f.read(4))[0]
                    vx9o = unpack("<f", f.read(4))[0]
                    vy9o = unpack("<f", f.read(4))[0]
                    vz9o = unpack("<f", f.read(4))[0]
                    type9o = unpack("B", f.read(1))[0]
                    value9o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9o = unpack("<f", f.read(4))[0]
                    vx10o = unpack("<f", f.read(4))[0]
                    vy10o = unpack("<f", f.read(4))[0]
                    vz10o = unpack("<f", f.read(4))[0]
                    type10o = unpack("B", f.read(1))[0]
                    value10o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10o = unpack("<f", f.read(4))[0]
                    vx11o = unpack("<f", f.read(4))[0]
                    vy11o = unpack("<f", f.read(4))[0]
                    vz11o = unpack("<f", f.read(4))[0]
                    type11o = unpack("B", f.read(1))[0]
                    value11o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11o = unpack("<f", f.read(4))[0]
                    vx12o = unpack("<f", f.read(4))[0]
                    vy12o = unpack("<f", f.read(4))[0]
                    vz12o = unpack("<f", f.read(4))[0]
                    type12o = unpack("B", f.read(1))[0]
                    value12o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12o = unpack("<f", f.read(4))[0]

                    

                    


                    fa_1c = bm_1hhhhh.verts.new([-vx1c,-vy1c,-vz1c]) # 0
                    fb_1c = bm_1hhhhh.verts.new([-vx2c,-vy2c,-vz2c]) # 1
                    fc_1c = bm_1hhhhh.verts.new([-vx3c,-vy3c,-vz3c]) # 2
                    fd_1c = bm_1hhhhh.verts.new([-vx4c,-vy4c,-vz4c]) # 3
                    fe_1c = bm_1hhhhh.verts.new([-vx5c,-vy5c,-vz5c]) # 4
                    ff_1c = bm_1hhhhh.verts.new([-vx6c,-vy6c,-vz6c]) # 5
                    fg_1c = bm_1hhhhh.verts.new([-vx7c,-vy7c,-vz7c]) # 6
                    fh_1c = bm_1hhhhh.verts.new([-vx8c,-vy8c,-vz8c]) # 7
                    fi_1c = bm_1hhhhh.verts.new([-vx9c,-vy9c,-vz9c]) # 8
                    fj_1c = bm_1hhhhh.verts.new([-vx10c,-vy10c,-vz10c]) # 9
                    fk_1c = bm_1hhhhh.verts.new([-vx11c,-vy11c,-vz11c]) # 10
                    fl_1c = bm_1hhhhh.verts.new([-vx12c,-vy12c,-vz12c]) # 11

                    


                    fa111 = bm_1hhh.verts.new([-vx111,-vy111,-vz111]) # 0
                    fb111 = bm_1hhh.verts.new([-vx211,-vy211,-vz211]) # 1
                    fc111 = bm_1hhh.verts.new([-vx311,-vy311,-vz311]) # 2
                    fd111 = bm_1hhh.verts.new([-vx411,-vy411,-vz411]) # 3
                    fe111 = bm_1hhh.verts.new([-vx511,-vy511,-vz511]) # 4
                    ff111 = bm_1hhh.verts.new([-vx611,-vy611,-vz611]) # 5
                    fg111 = bm_1hhh.verts.new([-vx711,-vy711,-vz711]) # 6
                    fh111 = bm_1hhh.verts.new([-vx811,-vy811,-vz811]) # 7
                    fi111 = bm_1hhh.verts.new([-vx911,-vy911,-vz911]) # 8
                    fj111 = bm_1hhh.verts.new([-vx1011,-vy1011,-vz1011]) # 9
                    fk111 = bm_1hhh.verts.new([-vx1111,-vy1111,-vz1111]) # 10
                    fl111 = bm_1hhh.verts.new([-vx1211,-vy1211,-vz1211]) # 11

                    fa1 = bm_1h.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1h.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1h.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1h.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1h.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1h.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1h.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1h.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1h.verts.new([-vx9,-vy9,-vz9]) # 8
                    fj1 = bm_1h.verts.new([-vx10,-vy10,-vz10]) # 9
                    fk1 = bm_1h.verts.new([-vx11,-vy11,-vz11]) # 10
                    fl1 = bm_1h.verts.new([-vx12,-vy12,-vz12]) # 11

                    fa11 = bm_1hh.verts.new([-vx11a,-vy11a,-vz11a]) # 0
                    fb11 = bm_1hh.verts.new([-vx21a,-vy21a,-vz21a]) # 1
                    fc11 = bm_1hh.verts.new([-vx31a,-vy31a,-vz31a]) # 2
                    fd11 = bm_1hh.verts.new([-vx41a,-vy41a,-vz41a]) # 3
                    fe11 = bm_1hh.verts.new([-vx51a,-vy51a,-vz51a]) # 4
                    ff11 = bm_1hh.verts.new([-vx61a,-vy61a,-vz61a]) # 5
                    fg11 = bm_1hh.verts.new([-vx71a,-vy71a,-vz71a]) # 6
                    fh11 = bm_1hh.verts.new([-vx81a,-vy81a,-vz81a]) # 7
                    fi11 = bm_1hh.verts.new([-vx91a,-vy91a,-vz91a]) # 8
                    fj11 = bm_1hh.verts.new([-vx101a,-vy101a,-vz101a]) # 9
                    fk11 = bm_1hh.verts.new([-vx111a,-vy111a,-vz111a]) # 10
                    fl11 = bm_1hh.verts.new([-vx121a,-vy121a,-vz121a]) # 11

                    fa_1 = bm_1hhhh.verts.new([-vx1_1,-vy1_1,-vz1_1]) # 0
                    fb_1 = bm_1hhhh.verts.new([-vx2_1,-vy2_1,-vz2_1]) # 1
                    fc_1 = bm_1hhhh.verts.new([-vx3_1,-vy3_1,-vz3_1]) # 2
                    fd_1 = bm_1hhhh.verts.new([-vx4_1,-vy4_1,-vz4_1]) # 3
                    fe_1 = bm_1hhhh.verts.new([-vx5_1,-vy5_1,-vz5_1]) # 4
                    ff_1 = bm_1hhhh.verts.new([-vx6_1,-vy6_1,-vz6_1]) # 5
                    fg_1 = bm_1hhhh.verts.new([-vx7_1,-vy7_1,-vz7_1]) # 6
                    fh_1 = bm_1hhhh.verts.new([-vx8_1,-vy8_1,-vz8_1]) # 7
                    fi_1 = bm_1hhhh.verts.new([-vx9_1,-vy9_1,-vz9_1]) # 8
                    fj_1 = bm_1hhhh.verts.new([-vx10_1,-vy10_1,-vz10_1]) # 9
                    fk_1 = bm_1hhhh.verts.new([-vx11_1,-vy11_1,-vz11_1]) # 10
                    fl_1 = bm_1hhhh.verts.new([-vx12_1,-vy12_1,-vz12_1]) # 11

                    fa_1d = bm_1hhhhhh.verts.new([-vx1d,-vy1d,-vz1d]) # 0
                    fb_1d = bm_1hhhhhh.verts.new([-vx2d,-vy2d,-vz2d]) # 1
                    fc_1d = bm_1hhhhhh.verts.new([-vx3d,-vy3d,-vz3d]) # 2
                    fd_1d = bm_1hhhhhh.verts.new([-vx4d,-vy4d,-vz4d]) # 3
                    fe_1d = bm_1hhhhhh.verts.new([-vx5d,-vy5d,-vz5d]) # 4
                    ff_1d = bm_1hhhhhh.verts.new([-vx6d,-vy6d,-vz6d]) # 5
                    fg_1d = bm_1hhhhhh.verts.new([-vx7d,-vy7d,-vz7d]) # 6
                    fh_1d = bm_1hhhhhh.verts.new([-vx8d,-vy8d,-vz8d]) # 7
                    fi_1d = bm_1hhhhhh.verts.new([-vx9d,-vy9d,-vz9d]) # 8
                    fj_1d = bm_1hhhhhh.verts.new([-vx10d,-vy10d,-vz10d]) # 9
                    fk_1d = bm_1hhhhhh.verts.new([-vx11d,-vy11d,-vz11d]) # 10
                    fl_1d = bm_1hhhhhh.verts.new([-vx12d,-vy12d,-vz12d]) # 11

                    fa_1e = bm_1hhhhhhh.verts.new([-vx1e,-vy1e,-vz1e]) # 0
                    fb_1e = bm_1hhhhhhh.verts.new([-vx2e,-vy2e,-vz2e]) # 1
                    fc_1e = bm_1hhhhhhh.verts.new([-vx3e,-vy3e,-vz3e]) # 2
                    fd_1e = bm_1hhhhhhh.verts.new([-vx4e,-vy4e,-vz4e]) # 3
                    fe_1e = bm_1hhhhhhh.verts.new([-vx5e,-vy5e,-vz5e]) # 4
                    ff_1e = bm_1hhhhhhh.verts.new([-vx6e,-vy6e,-vz6e]) # 5
                    fg_1e = bm_1hhhhhhh.verts.new([-vx7e,-vy7e,-vz7e]) # 6
                    fh_1e = bm_1hhhhhhh.verts.new([-vx8e,-vy8e,-vz8e]) # 7
                    fi_1e = bm_1hhhhhhh.verts.new([-vx9e,-vy9e,-vz9e]) # 8
                    fj_1e = bm_1hhhhhhh.verts.new([-vx10e,-vy10e,-vz10e]) # 9
                    fk_1e = bm_1hhhhhhh.verts.new([-vx11e,-vy11e,-vz11e]) # 10
                    fl_1e = bm_1hhhhhhh.verts.new([-vx12e,-vy12e,-vz12e]) # 11


                    fa_1f = bm_1hhhhhhhh.verts.new([-vx1f,-vy1f,-vz1f]) # 0
                    fb_1f = bm_1hhhhhhhh.verts.new([-vx2f,-vy2f,-vz2f]) # 1
                    fc_1f = bm_1hhhhhhhh.verts.new([-vx3f,-vy3f,-vz3f]) # 2
                    fd_1f = bm_1hhhhhhhh.verts.new([-vx4f,-vy4f,-vz4f]) # 3
                    fe_1f = bm_1hhhhhhhh.verts.new([-vx5f,-vy5f,-vz5f]) # 4
                    ff_1f = bm_1hhhhhhhh.verts.new([-vx6f,-vy6f,-vz6f]) # 5
                    fg_1f = bm_1hhhhhhhh.verts.new([-vx7f,-vy7f,-vz7f]) # 6
                    fh_1f = bm_1hhhhhhhh.verts.new([-vx8f,-vy8f,-vz8f]) # 7
                    fi_1f = bm_1hhhhhhhh.verts.new([-vx9f,-vy9f,-vz9f]) # 8
                    fj_1f = bm_1hhhhhhhh.verts.new([-vx10f,-vy10f,-vz10f]) # 9
                    fk_1f = bm_1hhhhhhhh.verts.new([-vx11f,-vy11f,-vz11f]) # 10
                    fl_1f = bm_1hhhhhhhh.verts.new([-vx12f,-vy12f,-vz12f]) # 11

                    fa_1g = bm_1hhhhhhhhh.verts.new([-vx1g,-vy1g,-vz1g]) # 0
                    fb_1g = bm_1hhhhhhhhh.verts.new([-vx2g,-vy2g,-vz2g]) # 1
                    fc_1g = bm_1hhhhhhhhh.verts.new([-vx3g,-vy3g,-vz3g]) # 2
                    fd_1g = bm_1hhhhhhhhh.verts.new([-vx4g,-vy4g,-vz4g]) # 3
                    fe_1g = bm_1hhhhhhhhh.verts.new([-vx5g,-vy5g,-vz5g]) # 4
                    ff_1g = bm_1hhhhhhhhh.verts.new([-vx6g,-vy6g,-vz6g]) # 5
                    fg_1g = bm_1hhhhhhhhh.verts.new([-vx7g,-vy7g,-vz7g]) # 6
                    fh_1g = bm_1hhhhhhhhh.verts.new([-vx8g,-vy8g,-vz8g]) # 7
                    fi_1g = bm_1hhhhhhhhh.verts.new([-vx9g,-vy9g,-vz9g]) # 8
                    fj_1g = bm_1hhhhhhhhh.verts.new([-vx10g,-vy10g,-vz10g]) # 9
                    fk_1g = bm_1hhhhhhhhh.verts.new([-vx11g,-vy11g,-vz11g]) # 10
                    fl_1g = bm_1hhhhhhhhh.verts.new([-vx12g,-vy12g,-vz12g]) # 11

                    fa_1h = bm_1hhhhhhhhhh.verts.new([-vx1h,-vy1h,-vz1h]) # 0
                    fb_1h = bm_1hhhhhhhhhh.verts.new([-vx2h,-vy2h,-vz2h]) # 1
                    fc_1h = bm_1hhhhhhhhhh.verts.new([-vx3h,-vy3h,-vz3h]) # 2
                    fd_1h = bm_1hhhhhhhhhh.verts.new([-vx4h,-vy4h,-vz4h]) # 3
                    fe_1h = bm_1hhhhhhhhhh.verts.new([-vx5h,-vy5h,-vz5h]) # 4
                    ff_1h = bm_1hhhhhhhhhh.verts.new([-vx6h,-vy6h,-vz6h]) # 5
                    fg_1h = bm_1hhhhhhhhhh.verts.new([-vx7h,-vy7h,-vz7h]) # 6
                    fh_1h = bm_1hhhhhhhhhh.verts.new([-vx8h,-vy8h,-vz8h]) # 7
                    fi_1h = bm_1hhhhhhhhhh.verts.new([-vx9h,-vy9h,-vz9h]) # 8
                    fj_1h = bm_1hhhhhhhhhh.verts.new([-vx10h,-vy10h,-vz10h]) # 9
                    fk_1h = bm_1hhhhhhhhhh.verts.new([-vx11h,-vy11h,-vz11h]) # 10
                    fl_1h = bm_1hhhhhhhhhh.verts.new([-vx12h,-vy12h,-vz12h]) # 11

                    fa_1i = bm_1hhhhhhhhhhh.verts.new([-vx1i,-vy1i,-vz1i]) # 0
                    fb_1i = bm_1hhhhhhhhhhh.verts.new([-vx2i,-vy2i,-vz2i]) # 1
                    fc_1i = bm_1hhhhhhhhhhh.verts.new([-vx3i,-vy3i,-vz3i]) # 2
                    fd_1i = bm_1hhhhhhhhhhh.verts.new([-vx4i,-vy4i,-vz4i]) # 3
                    fe_1i = bm_1hhhhhhhhhhh.verts.new([-vx5i,-vy5i,-vz5i]) # 4
                    ff_1i = bm_1hhhhhhhhhhh.verts.new([-vx6i,-vy6i,-vz6i]) # 5
                    fg_1i = bm_1hhhhhhhhhhh.verts.new([-vx7i,-vy7i,-vz7i]) # 6
                    fh_1i = bm_1hhhhhhhhhhh.verts.new([-vx8i,-vy8i,-vz8i]) # 7
                    fi_1i = bm_1hhhhhhhhhhh.verts.new([-vx9i,-vy9i,-vz9i]) # 8
                    fj_1i = bm_1hhhhhhhhhhh.verts.new([-vx10i,-vy10i,-vz10i]) # 9
                    fk_1i = bm_1hhhhhhhhhhh.verts.new([-vx11i,-vy11i,-vz11i]) # 10
                    fl_1i = bm_1hhhhhhhhhhh.verts.new([-vx12i,-vy12i,-vz12i]) # 11

                    fa_1j = bm_1hhhhhhhhhhhh.verts.new([-vx1j,-vy1j,-vz1j]) # 0
                    fb_1j = bm_1hhhhhhhhhhhh.verts.new([-vx2j,-vy2j,-vz2j]) # 1
                    fc_1j = bm_1hhhhhhhhhhhh.verts.new([-vx3j,-vy3j,-vz3j]) # 2
                    fd_1j = bm_1hhhhhhhhhhhh.verts.new([-vx4j,-vy4j,-vz4j]) # 3
                    fe_1j = bm_1hhhhhhhhhhhh.verts.new([-vx5j,-vy5j,-vz5j]) # 4
                    ff_1j = bm_1hhhhhhhhhhhh.verts.new([-vx6j,-vy6j,-vz6j]) # 5
                    fg_1j = bm_1hhhhhhhhhhhh.verts.new([-vx7j,-vy7j,-vz7j]) # 6
                    fh_1j = bm_1hhhhhhhhhhhh.verts.new([-vx8j,-vy8j,-vz8j]) # 7
                    fi_1j = bm_1hhhhhhhhhhhh.verts.new([-vx9j,-vy9j,-vz9j]) # 8
                    fj_1j = bm_1hhhhhhhhhhhh.verts.new([-vx10j,-vy10j,-vz10j]) # 9
                    fk_1j = bm_1hhhhhhhhhhhh.verts.new([-vx11j,-vy11j,-vz11j]) # 10
                    fl_1j = bm_1hhhhhhhhhhhh.verts.new([-vx12j,-vy12j,-vz12j]) # 11

                    fa_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx1k,-vy1k,-vz1k]) # 0
                    fb_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx2k,-vy2k,-vz2k]) # 1
                    fc_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx3k,-vy3k,-vz3k]) # 2
                    fd_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx4k,-vy4k,-vz4k]) # 3
                    fe_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx5k,-vy5k,-vz5k]) # 4
                    ff_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx6k,-vy6k,-vz6k]) # 5
                    fg_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx7k,-vy7k,-vz7k]) # 6
                    fh_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx8k,-vy8k,-vz8k]) # 7
                    fi_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx9k,-vy9k,-vz9k]) # 8
                    fj_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx10k,-vy10k,-vz10k]) # 9
                    fk_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx11k,-vy11k,-vz11k]) # 10
                    fl_1k = bm_1hhhhhhhhhhhhh.verts.new([-vx12k,-vy12k,-vz12k]) # 11

                    fa_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx1l,-vy1l,-vz1l]) # 0
                    fb_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx2l,-vy2l,-vz2l]) # 1
                    fc_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx3l,-vy3l,-vz3l]) # 2
                    fd_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx4l,-vy4l,-vz4l]) # 3
                    fe_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx5l,-vy5l,-vz5l]) # 4
                    ff_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx6l,-vy6l,-vz6l]) # 5
                    fg_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx7l,-vy7l,-vz7l]) # 6
                    fh_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx8l,-vy8l,-vz8l]) # 7
                    fi_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx9l,-vy9l,-vz9l]) # 8
                    fj_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx10l,-vy10l,-vz10l]) # 9
                    fk_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx11l,-vy11l,-vz11l]) # 10
                    fl_1l = bm_1hhhhhhhhhhhhhh.verts.new([-vx12l,-vy12l,-vz12l]) # 11

                    fa_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx1m,-vy1m,-vz1m]) # 0
                    fb_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx2m,-vy2m,-vz2m]) # 1
                    fc_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx3m,-vy3m,-vz3m]) # 2
                    fd_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx4m,-vy4m,-vz4m]) # 3
                    fe_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx5m,-vy5m,-vz5m]) # 4
                    ff_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx6m,-vy6m,-vz6m]) # 5
                    fg_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx7m,-vy7m,-vz7m]) # 6
                    fh_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx8m,-vy8m,-vz8m]) # 7
                    fi_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx9m,-vy9m,-vz9m]) # 8
                    fj_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx10m,-vy10m,-vz10m]) # 9
                    fk_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx11m,-vy11m,-vz11m]) # 10
                    fl_1m = bm_1hhhhhhhhhhhhhhh.verts.new([-vx12m,-vy12m,-vz12m]) # 11

                    fa_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx1n,-vy1n,-vz1n]) # 0
                    fb_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx2n,-vy2n,-vz2n]) # 1
                    fc_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx3n,-vy3n,-vz3n]) # 2
                    fd_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx4n,-vy4n,-vz4n]) # 3
                    fe_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx5n,-vy5n,-vz5n]) # 4
                    ff_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx6n,-vy6n,-vz6n]) # 5
                    fg_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx7n,-vy7n,-vz7n]) # 6
                    fh_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx8n,-vy8n,-vz8n]) # 7
                    fi_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx9n,-vy9n,-vz9n]) # 8
                    fj_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx10n,-vy10n,-vz10n]) # 9
                    fk_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx11n,-vy11n,-vz11n]) # 10
                    fl_1n = bm_1hhhhhhhhhhhhhhhh.verts.new([-vx12n,-vy12n,-vz12n]) # 11

                    fa_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx1o,-vy1o,-vz1o]) # 0
                    fb_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx2o,-vy2o,-vz2o]) # 1
                    fc_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx3o,-vy3o,-vz3o]) # 2
                    fd_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx4o,-vy4o,-vz4o]) # 3
                    fe_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx5o,-vy5o,-vz5o]) # 4
                    ff_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx6o,-vy6o,-vz6o]) # 5
                    fg_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx7o,-vy7o,-vz7o]) # 6
                    fh_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx8o,-vy8o,-vz8o]) # 7
                    fi_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx9o,-vy9o,-vz9o]) # 8
                    fj_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx10o,-vy10o,-vz10o]) # 9
                    fk_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx11o,-vy11o,-vz11o]) # 10
                    fl_1o = bm_1hhhhhhhhhhhhhhhhh.verts.new([-vx12o,-vy12o,-vz12o]) # 11

                    if type1o == 1:
                        if type2o == 1:
                            if type3o == 0:
                                if type4o == 0:
                                    if type5o == 0:
                                        if type6o == 0:
                                            if type7o == 1:
                                                if type8o == 1:
                                                    if type9o == 0:
                                                        if type10o == 1:
                                                            if type11o == 1:
                                                                if type12o == 0:
                                                                    bm_1hhhhhhhhhhhhhhhhh.faces.new([fa_1o,fb_1o,fc_1o])
                                                                    bm_1hhhhhhhhhhhhhhhhh.faces.new([fb_1o,fc_1o,fd_1o])
                                                                    bm_1hhhhhhhhhhhhhhhhh.faces.new([fc_1o,fd_1o,fe_1o])
                                                                    bm_1hhhhhhhhhhhhhhhhh.faces.new([ff_1o,fg_1o,fh_1o])
                                                                    bm_1hhhhhhhhhhhhhhhhh.faces.new([fi_1o,fj_1o,fk_1o])
                                                                    bm_1hhhhhhhhhhhhhhhhh.faces.new([fj_1o,fk_1o,fl_1o])

                    if type1n == 1:
                        if type2n == 1:
                            if type3n == 0:
                                if type4n == 0:
                                    if type5n == 0:
                                        if type6n == 1:
                                            if type7n == 1:
                                                if type8n == 0:
                                                    if type9n == 1:
                                                        if type10n == 1:
                                                            if type11n == 0:
                                                                if type12n == 0:
                                                                    bm_1hhhhhhhhhhhhhhhh.faces.new([fa_1n,fb_1n,fc_1n])
                                                                    bm_1hhhhhhhhhhhhhhhh.faces.new([fb_1n,fc_1n,fd_1n])
                                                                    bm_1hhhhhhhhhhhhhhhh.faces.new([fc_1n,fd_1n,fe_1n])
                                                                    bm_1hhhhhhhhhhhhhhhh.faces.new([ff_1n,fg_1n,fh_1n])
                                                                    bm_1hhhhhhhhhhhhhhhh.faces.new([fi_1n,fj_1n,fk_1n])
                                                                    bm_1hhhhhhhhhhhhhhhh.faces.new([fj_1n,fk_1n,fl_1n])

                    if type1m == 1:
                        if type2m == 1:
                            if type3m == 0:
                                if type4m == 1:
                                    if type5m == 1:
                                        if type6m == 0:
                                            if type7m == 0:
                                                if type8m == 0:
                                                    if type9m == 0:
                                                        if type10m == 1:
                                                            if type11m == 1:
                                                                if type12m == 0:
                                                                    bm_1hhhhhhhhhhhhhhh.faces.new([fa_1m,fb_1m,fc_1m])
                                                                    bm_1hhhhhhhhhhhhhhh.faces.new([fd_1m,fe_1m,ff_1m])
                                                                    bm_1hhhhhhhhhhhhhhh.faces.new([fe_1m,ff_1m,fg_1m])
                                                                    bm_1hhhhhhhhhhhhhhh.faces.new([ff_1m,fg_1m,fh_1m])
                                                                    bm_1hhhhhhhhhhhhhhh.faces.new([fg_1m,fh_1m,fi_1m])
                                                                    bm_1hhhhhhhhhhhhhhh.faces.new([fj_1m,fk_1m,fl_1m])

                    if type1l == 1:
                        if type2l == 1:
                            if type3l == 0:
                                if type4l == 1:
                                    if type5l == 1:
                                        if type6l == 0:
                                            if type7l == 0:
                                                if type8l == 0:
                                                    if type9l == 1:
                                                        if type10l == 1:
                                                            if type11l == 0:
                                                                if type12l == 0:
                                                                    bm_1hhhhhhhhhhhhhh.faces.new([fa_1l,fb_1l,fc_1l])
                                                                    bm_1hhhhhhhhhhhhhh.faces.new([fd_1l,fe_1l,ff_1l])
                                                                    bm_1hhhhhhhhhhhhhh.faces.new([fe_1l,ff_1l,fg_1l])
                                                                    bm_1hhhhhhhhhhhhhh.faces.new([ff_1l,fg_1l,fh_1l])
                                                                    bm_1hhhhhhhhhhhhhh.faces.new([fi_1l,fj_1l,fk_1l])
                                                                    bm_1hhhhhhhhhhhhhh.faces.new([fj_1l,fk_1l,fl_1l])

                    if type1k == 1:
                        if type2k == 1:
                            if type3k == 0:
                                if type4k == 1:
                                    if type5k == 1:
                                        if type6k == 0:
                                            if type7k == 0:
                                                if type8k == 1:
                                                    if type9k == 1:
                                                        if type10k == 0:
                                                            if type11k == 0:
                                                                if type12k == 0:
                                                                    bm_1hhhhhhhhhhhhh.faces.new([fa_1k,fb_1k,fc_1k])
                                                                    bm_1hhhhhhhhhhhhh.faces.new([fd_1k,fe_1k,ff_1k])
                                                                    bm_1hhhhhhhhhhhhh.faces.new([fe_1k,ff_1k,fg_1k])
                                                                    bm_1hhhhhhhhhhhhh.faces.new([fh_1k,fi_1k,fj_1k])
                                                                    bm_1hhhhhhhhhhhhh.faces.new([fi_1k,fj_1k,fk_1k])
                                                                    bm_1hhhhhhhhhhhhh.faces.new([fj_1k,fk_1k,fl_1k])

                    if type1j == 1:
                        if type2j == 1:
                            if type3j == 0:
                                if type4j == 1:
                                    if type5j == 1:
                                        if type6j == 0:
                                            if type7j == 1:
                                                if type8j == 1:
                                                    if type9j == 0:
                                                        if type10j == 0:
                                                            if type11j == 0:
                                                                if type12j == 0:
                                                                    bm_1hhhhhhhhhhhh.faces.new([fa_1j,fb_1j,fc_1j])
                                                                    bm_1hhhhhhhhhhhh.faces.new([fd_1j,fe_1j,ff_1j])
                                                                    bm_1hhhhhhhhhhhh.faces.new([fg_1j,fh_1j,fi_1j])
                                                                    bm_1hhhhhhhhhhhh.faces.new([fh_1j,fi_1j,fj_1j])
                                                                    bm_1hhhhhhhhhhhh.faces.new([fj_1j,fk_1j,fl_1j])

                    if type1i == 1:
                        if type2i == 1:
                            if type3i == 0:
                                if type4i == 0:
                                    if type5i == 0:
                                        if type6i == 0:
                                            if type7i == 0:
                                                if type8i == 0:
                                                    if type9i == 0:
                                                        if type10i == 1:
                                                            if type11i == 1:
                                                                if type12i == 0:
                                                                    bm_1hhhhhhhhhhh.faces.new([fa_1i,fb_1i,fc_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([fb_1i,fc_1i,fd_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([fc_1i,fd_1i,fe_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([fd_1i,fe_1i,ff_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([fe_1i,ff_1i,fg_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([ff_1i,fg_1i,fh_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([fg_1i,fh_1i,fi_1i])
                                                                    bm_1hhhhhhhhhhh.faces.new([fj_1i,fk_1i,fl_1i])

                    if type1h == 1:
                        if type2h == 1:
                            if type3h == 0:
                                if type4h == 0:
                                    if type5h == 0:
                                        if type6h == 0:
                                            if type7h == 0:
                                                if type8h == 0:
                                                    if type9h == 1:
                                                        if type10h == 1:
                                                            if type11h == 0:
                                                                if type12h == 0:
                                                                    bm_1hhhhhhhhhh.faces.new([fa_1h,fb_1h,fc_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([fb_1h,fc_1h,fd_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([fc_1h,fd_1h,fe_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([fd_1h,fe_1h,ff_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([fe_1h,ff_1h,fg_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([ff_1h,fg_1h,fh_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([fi_1h,fj_1h,fk_1h])
                                                                    bm_1hhhhhhhhhh.faces.new([fj_1h,fk_1h,fl_1h])


                    if type1g == 1:
                        if type2g == 1:
                            if type3g == 0:
                                if type4g == 0:
                                    if type5g == 0:
                                        if type6g == 0:
                                            if type7g == 0:
                                                if type8g == 1:
                                                    if type9g == 1:
                                                        if type10g == 0:
                                                            if type11g == 0:
                                                                if type12g == 0:
                                                                    bm_1hhhhhhhhh.faces.new([fa_1g,fb_1g,fc_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fb_1g,fc_1g,fd_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fc_1g,fd_1g,fe_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fd_1g,fe_1g,ff_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fe_1g,ff_1g,fg_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fh_1g,fi_1g,fj_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fi_1g,fj_1g,fk_1g])
                                                                    bm_1hhhhhhhhh.faces.new([fj_1g,fk_1g,fl_1g])


                    if type1f == 1:
                        if type2f == 1:
                            if type3f == 0:
                                if type4f == 0:
                                    if type5f == 0:
                                        if type6f == 0:
                                            if type7f == 1:
                                                if type8f == 1:
                                                    if type9f == 0:
                                                        if type10f == 0:
                                                            if type11f == 0:
                                                                if type12f == 0:
                                                                    bm_1hhhhhhhh.faces.new([fa_1f,fb_1f,fc_1f])
                                                                    bm_1hhhhhhhh.faces.new([fb_1f,fc_1f,fd_1f])
                                                                    bm_1hhhhhhhh.faces.new([fc_1f,fd_1f,fe_1f])
                                                                    bm_1hhhhhhhh.faces.new([fd_1f,fe_1f,ff_1f])
                                                                    bm_1hhhhhhhh.faces.new([fg_1f,fh_1f,fi_1f])
                                                                    bm_1hhhhhhhh.faces.new([fh_1f,fi_1f,fj_1f])
                                                                    bm_1hhhhhhhh.faces.new([fi_1f,fj_1f,fk_1f])
                                                                    bm_1hhhhhhhh.faces.new([fj_1f,fk_1f,fl_1f])

                    if type1e == 1:
                        if type2e == 1:
                            if type3e == 0:
                                if type4e == 0:
                                    if type5e == 0:
                                        if type6e == 1:
                                            if type7e == 1:
                                                if type8e == 0:
                                                    if type9e == 0:
                                                        if type10e == 0:
                                                            if type11e == 0:
                                                                if type12e == 0:
                                                                    bm_1hhhhhhh.faces.new([fa_1e,fb_1e,fc_1e])
                                                                    bm_1hhhhhhh.faces.new([fb_1e,fc_1e,fd_1e])
                                                                    bm_1hhhhhhh.faces.new([fc_1e,fd_1e,fe_1e])
                                                                    bm_1hhhhhhh.faces.new([ff_1e,fg_1e,fh_1e])
                                                                    bm_1hhhhhhh.faces.new([fg_1e,fh_1e,fi_1e])
                                                                    bm_1hhhhhhh.faces.new([fh_1e,fi_1e,fj_1e])
                                                                    bm_1hhhhhhh.faces.new([fi_1e,fj_1e,fk_1e])
                                                                    bm_1hhhhhhh.faces.new([fj_1e,fk_1e,fl_1e])

                    if type1d == 1:
                        if type2d == 1:
                            if type3d == 0:
                                if type4d == 1:
                                    if type5d == 1:
                                        if type6d == 0:
                                            if type7d == 0:
                                                if type8d == 0:
                                                    if type9d == 0:
                                                        if type10d == 0:
                                                            if type11d == 0:
                                                                if type12d == 0:
                                                                    bm_1hhhhhh.faces.new([fa_1d,fb_1d,fc_1d])
                                                                    bm_1hhhhhh.faces.new([fd_1d,fe_1d,ff_1d])
                                                                    bm_1hhhhhh.faces.new([fe_1d,ff_1d,fg_1d])
                                                                    bm_1hhhhhh.faces.new([ff_1d,fg_1d,fh_1d])
                                                                    bm_1hhhhhh.faces.new([fg_1d,fh_1d,fi_1d])
                                                                    bm_1hhhhhh.faces.new([fh_1d,fi_1d,fj_1d])
                                                                    bm_1hhhhhh.faces.new([fi_1d,fj_1d,fk_1d])
                                                                    bm_1hhhhhh.faces.new([fj_1d,fk_1d,fl_1d])

                    if type1c == 1:
                        if type2c == 1:
                            if type3c == 0:
                                if type4c == 0:
                                    if type5c == 0:
                                        if type6c == 0:
                                            if type7c == 1:
                                                if type8c == 1:
                                                    if type9c == 0:
                                                        if type10c == 0:
                                                            if type11c == 0:
                                                                if type12c == 0:
                                                                    bm_1hhhhh.faces.new([fa_1c,fb_1c,fc_1c])
                                                                    bm_1hhhhh.faces.new([fb_1c,fc_1c,fd_1c])
                                                                    bm_1hhhhh.faces.new([fc_1c,fd_1c,fe_1c])
                                                                    bm_1hhhhh.faces.new([fd_1c,fe_1c,ff_1c])
                                                                    bm_1hhhhh.faces.new([fg_1c,fh_1c,fi_1c])
                                                                    bm_1hhhhh.faces.new([fh_1c,fi_1c,fj_1c])
                                                                    bm_1hhhhh.faces.new([fi_1c,fj_1c,fk_1c])
                                                                    bm_1hhhhh.faces.new([fj_1c,fk_1c,fl_1c])

                    if type1_1 == 1:
                        if type2_1 == 1:
                            if type3_1 == 0:
                                if type4_1 == 0:
                                    if type5_1 == 0:
                                        if type6_1 == 0:
                                            if type7_1 == 0:
                                                if type8_1 == 0:
                                                    if type9_1 == 0:
                                                        if type10_1 == 0:
                                                            if type11_1 == 0:
                                                                if type12_1 == 0:
                                                                    bm_1hhhh.faces.new([fa_1,fb_1,fc_1])
                                                                    bm_1hhhh.faces.new([fb_1,fc_1,fd_1])
                                                                    bm_1hhhh.faces.new([fc_1,fd_1,fe_1])
                                                                    bm_1hhhh.faces.new([fd_1,fe_1,ff_1])
                                                                    bm_1hhhh.faces.new([fe_1,ff_1,fg_1])
                                                                    bm_1hhhh.faces.new([ff_1,fg_1,fh_1])
                                                                    bm_1hhhh.faces.new([fg_1,fh_1,fi_1])
                                                                    bm_1hhhh.faces.new([fh_1,fi_1,fj_1])
                                                                    bm_1hhhh.faces.new([fi_1,fj_1,fk_1])
                                                                    bm_1hhhh.faces.new([fj_1,fk_1,fl_1])

                    if type111 == 1:
                        if type211 == 1:
                            if type311 == 0:
                                if type411 == 1:
                                    if type511 == 1:
                                        if type611 == 0:
                                            if type711 == 1:
                                                if type811 == 1:
                                                    if type911 == 0:
                                                        if type1011 == 1:
                                                            if type1111 == 1:
                                                                if type1211 == 0:
                                                                    bm_1hhh.faces.new([fa111, fb111, fc111])
                                                                    bm_1hhh.faces.new([fd111, fe111, ff111])
                                                                    bm_1hhh.faces.new([fg111, fh111, fi111])
                                                                    bm_1hhh.faces.new([fj111, fk111, fl111])

                    if type11a == 1:
                        if type21a == 1:
                            if type31a == 0:
                                if type41a == 0:
                                    if type51a == 1:
                                        if type61a == 1:
                                            if type71a == 0:
                                                if type81a == 0:
                                                    if type91a == 1:
                                                        if type101a == 1:
                                                            if type111a == 0:
                                                                if type121a == 0:
                                                                    bm_1hh.faces.new([fa11, fb11, fc11])
                                                                    bm_1hh.faces.new([fb11, fc11, fd11])
                                                                    bm_1hh.faces.new([fe11, ff11, fg11])
                                                                    bm_1hh.faces.new([ff11, fg11, fh11])
                                                                    bm_1hh.faces.new([fi11, fj11, fk11])
                                                                    bm_1hh.faces.new([fj11, fk11, fl11])

                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 1:
                                        if type6 == 1:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        if type10 == 0:
                                                            if type11 == 0:
                                                                if type12 == 0:
                                                                    bm_1h.faces.new([fa1, fb1, fc1])
                                                                    bm_1h.faces.new([fb1, fc1, fd1])
                                                                    bm_1h.faces.new([fe1, ff1, fg1])
                                                                    bm_1h.faces.new([ff1, fg1, fh1])
                                                                    bm_1h.faces.new([fg1, fh1, fi1])
                                                                    bm_1h.faces.new([fh1, fi1, fj1])
                                                                    bm_1h.faces.new([fi1, fj1, fk1])
                                                                    bm_1h.faces.new([fj1, fk1, fl1])

            elif vertexCount == 13:
                for i in range(vertexCount//13):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    vx10 = unpack("<f", f.read(4))[0]
                    vy10 = unpack("<f", f.read(4))[0]
                    vz10 = unpack("<f", f.read(4))[0]
                    type10 = unpack("B", f.read(1))[0]
                    value10 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10 = unpack("<f", f.read(4))[0]
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx12 = unpack("<f", f.read(4))[0]
                    vy12 = unpack("<f", f.read(4))[0]
                    vz12 = unpack("<f", f.read(4))[0]
                    type12 = unpack("B", f.read(1))[0]
                    value12 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12 = unpack("<f", f.read(4))[0]
                    vx13 = unpack("<f", f.read(4))[0]
                    vy13 = unpack("<f", f.read(4))[0]
                    vz13 = unpack("<f", f.read(4))[0]
                    type13 = unpack("B", f.read(1))[0]
                    value13 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13 = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1a = unpack("<f", f.read(4))[0]
                    vy1a = unpack("<f", f.read(4))[0]
                    vz1a = unpack("<f", f.read(4))[0]
                    type1a = unpack("B", f.read(1))[0]
                    value1a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1a = unpack("<f", f.read(4))[0]
                    vx2a = unpack("<f", f.read(4))[0]
                    vy2a = unpack("<f", f.read(4))[0]
                    vz2a = unpack("<f", f.read(4))[0]
                    type2a = unpack("B", f.read(1))[0]
                    value2a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2a = unpack("<f", f.read(4))[0]
                    vx3a = unpack("<f", f.read(4))[0]
                    vy3a = unpack("<f", f.read(4))[0]
                    vz3a = unpack("<f", f.read(4))[0]
                    type3a = unpack("B", f.read(1))[0]
                    value3a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3a = unpack("<f", f.read(4))[0]
                    vx4a = unpack("<f", f.read(4))[0]
                    vy4a = unpack("<f", f.read(4))[0]
                    vz4a = unpack("<f", f.read(4))[0]
                    type4a = unpack("B", f.read(1))[0]
                    value4a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4a = unpack("<f", f.read(4))[0]
                    vx5a = unpack("<f", f.read(4))[0]
                    vy5a = unpack("<f", f.read(4))[0]
                    vz5a = unpack("<f", f.read(4))[0]
                    type5a = unpack("B", f.read(1))[0]
                    value5a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5a = unpack("<f", f.read(4))[0]
                    vx6a = unpack("<f", f.read(4))[0]
                    vy6a = unpack("<f", f.read(4))[0]
                    vz6a = unpack("<f", f.read(4))[0]
                    type6a = unpack("B", f.read(1))[0]
                    value6a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6a = unpack("<f", f.read(4))[0]
                    vx7a = unpack("<f", f.read(4))[0]
                    vy7a = unpack("<f", f.read(4))[0]
                    vz7a = unpack("<f", f.read(4))[0]
                    type7a = unpack("B", f.read(1))[0]
                    value7a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7a = unpack("<f", f.read(4))[0]
                    vx8a = unpack("<f", f.read(4))[0]
                    vy8a = unpack("<f", f.read(4))[0]
                    vz8a = unpack("<f", f.read(4))[0]
                    type8a = unpack("B", f.read(1))[0]
                    value8a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8a = unpack("<f", f.read(4))[0]
                    vx9a = unpack("<f", f.read(4))[0]
                    vy9a = unpack("<f", f.read(4))[0]
                    vz9a = unpack("<f", f.read(4))[0]
                    type9a = unpack("B", f.read(1))[0]
                    value9a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9a = unpack("<f", f.read(4))[0]
                    vx10a = unpack("<f", f.read(4))[0]
                    vy10a = unpack("<f", f.read(4))[0]
                    vz10a = unpack("<f", f.read(4))[0]
                    type10a = unpack("B", f.read(1))[0]
                    value10a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10a = unpack("<f", f.read(4))[0]
                    vx11a = unpack("<f", f.read(4))[0]
                    vy11a = unpack("<f", f.read(4))[0]
                    vz11a = unpack("<f", f.read(4))[0]
                    type11a = unpack("B", f.read(1))[0]
                    value11a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11a = unpack("<f", f.read(4))[0]
                    vx12a = unpack("<f", f.read(4))[0]
                    vy12a = unpack("<f", f.read(4))[0]
                    vz12a = unpack("<f", f.read(4))[0]
                    type12a = unpack("B", f.read(1))[0]
                    value12a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12a = unpack("<f", f.read(4))[0]
                    vx13a = unpack("<f", f.read(4))[0]
                    vy13a = unpack("<f", f.read(4))[0]
                    vz13a = unpack("<f", f.read(4))[0]
                    type13a = unpack("B", f.read(1))[0]
                    value13a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13a = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1b = unpack("<f", f.read(4))[0]
                    vy1b = unpack("<f", f.read(4))[0]
                    vz1b = unpack("<f", f.read(4))[0]
                    type1b = unpack("B", f.read(1))[0]
                    value1b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1b = unpack("<f", f.read(4))[0]
                    vx2b = unpack("<f", f.read(4))[0]
                    vy2b = unpack("<f", f.read(4))[0]
                    vz2b = unpack("<f", f.read(4))[0]
                    type2b = unpack("B", f.read(1))[0]
                    value2b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2b = unpack("<f", f.read(4))[0]
                    vx3b = unpack("<f", f.read(4))[0]
                    vy3b = unpack("<f", f.read(4))[0]
                    vz3b = unpack("<f", f.read(4))[0]
                    type3b = unpack("B", f.read(1))[0]
                    value3b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3b = unpack("<f", f.read(4))[0]
                    vx4b = unpack("<f", f.read(4))[0]
                    vy4b = unpack("<f", f.read(4))[0]
                    vz4b = unpack("<f", f.read(4))[0]
                    type4b = unpack("B", f.read(1))[0]
                    value4b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4b = unpack("<f", f.read(4))[0]
                    vx5b = unpack("<f", f.read(4))[0]
                    vy5b = unpack("<f", f.read(4))[0]
                    vz5b = unpack("<f", f.read(4))[0]
                    type5b = unpack("B", f.read(1))[0]
                    value5b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5b = unpack("<f", f.read(4))[0]
                    vx6b = unpack("<f", f.read(4))[0]
                    vy6b = unpack("<f", f.read(4))[0]
                    vz6b = unpack("<f", f.read(4))[0]
                    type6b = unpack("B", f.read(1))[0]
                    value6b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6b = unpack("<f", f.read(4))[0]
                    vx7b = unpack("<f", f.read(4))[0]
                    vy7b = unpack("<f", f.read(4))[0]
                    vz7b = unpack("<f", f.read(4))[0]
                    type7b = unpack("B", f.read(1))[0]
                    value7b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7b = unpack("<f", f.read(4))[0]
                    vx8b = unpack("<f", f.read(4))[0]
                    vy8b = unpack("<f", f.read(4))[0]
                    vz8b = unpack("<f", f.read(4))[0]
                    type8b = unpack("B", f.read(1))[0]
                    value8b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8b = unpack("<f", f.read(4))[0]
                    vx9b = unpack("<f", f.read(4))[0]
                    vy9b = unpack("<f", f.read(4))[0]
                    vz9b = unpack("<f", f.read(4))[0]
                    type9b = unpack("B", f.read(1))[0]
                    value9b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9b = unpack("<f", f.read(4))[0]
                    vx10b = unpack("<f", f.read(4))[0]
                    vy10b = unpack("<f", f.read(4))[0]
                    vz10b = unpack("<f", f.read(4))[0]
                    type10b = unpack("B", f.read(1))[0]
                    value10b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10b = unpack("<f", f.read(4))[0]
                    vx11b = unpack("<f", f.read(4))[0]
                    vy11b = unpack("<f", f.read(4))[0]
                    vz11b = unpack("<f", f.read(4))[0]
                    type11b = unpack("B", f.read(1))[0]
                    value11b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11b = unpack("<f", f.read(4))[0]
                    vx12b = unpack("<f", f.read(4))[0]
                    vy12b = unpack("<f", f.read(4))[0]
                    vz12b = unpack("<f", f.read(4))[0]
                    type12b = unpack("B", f.read(1))[0]
                    value12b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12b = unpack("<f", f.read(4))[0]
                    vx13b = unpack("<f", f.read(4))[0]
                    vy13b = unpack("<f", f.read(4))[0]
                    vz13b = unpack("<f", f.read(4))[0]
                    type13b = unpack("B", f.read(1))[0]
                    value13b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13b = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1c = unpack("<f", f.read(4))[0]
                    vy1c = unpack("<f", f.read(4))[0]
                    vz1c = unpack("<f", f.read(4))[0]
                    type1c = unpack("B", f.read(1))[0]
                    value1c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1c = unpack("<f", f.read(4))[0]
                    vx2c = unpack("<f", f.read(4))[0]
                    vy2c = unpack("<f", f.read(4))[0]
                    vz2c = unpack("<f", f.read(4))[0]
                    type2c = unpack("B", f.read(1))[0]
                    value2c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2c = unpack("<f", f.read(4))[0]
                    vx3c = unpack("<f", f.read(4))[0]
                    vy3c = unpack("<f", f.read(4))[0]
                    vz3c = unpack("<f", f.read(4))[0]
                    type3c = unpack("B", f.read(1))[0]
                    value3c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3c = unpack("<f", f.read(4))[0]
                    vx4c = unpack("<f", f.read(4))[0]
                    vy4c = unpack("<f", f.read(4))[0]
                    vz4c = unpack("<f", f.read(4))[0]
                    type4c = unpack("B", f.read(1))[0]
                    value4c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4c = unpack("<f", f.read(4))[0]
                    vx5c = unpack("<f", f.read(4))[0]
                    vy5c = unpack("<f", f.read(4))[0]
                    vz5c = unpack("<f", f.read(4))[0]
                    type5c = unpack("B", f.read(1))[0]
                    value5c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5c = unpack("<f", f.read(4))[0]
                    vx6c = unpack("<f", f.read(4))[0]
                    vy6c = unpack("<f", f.read(4))[0]
                    vz6c = unpack("<f", f.read(4))[0]
                    type6c = unpack("B", f.read(1))[0]
                    value6c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6c = unpack("<f", f.read(4))[0]
                    vx7c = unpack("<f", f.read(4))[0]
                    vy7c = unpack("<f", f.read(4))[0]
                    vz7c = unpack("<f", f.read(4))[0]
                    type7c = unpack("B", f.read(1))[0]
                    value7c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7c = unpack("<f", f.read(4))[0]
                    vx8c = unpack("<f", f.read(4))[0]
                    vy8c = unpack("<f", f.read(4))[0]
                    vz8c = unpack("<f", f.read(4))[0]
                    type8c = unpack("B", f.read(1))[0]
                    value8c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8c = unpack("<f", f.read(4))[0]
                    vx9c = unpack("<f", f.read(4))[0]
                    vy9c = unpack("<f", f.read(4))[0]
                    vz9c = unpack("<f", f.read(4))[0]
                    type9c = unpack("B", f.read(1))[0]
                    value9c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9c = unpack("<f", f.read(4))[0]
                    vx10c = unpack("<f", f.read(4))[0]
                    vy10c = unpack("<f", f.read(4))[0]
                    vz10c = unpack("<f", f.read(4))[0]
                    type10c = unpack("B", f.read(1))[0]
                    value10c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10c = unpack("<f", f.read(4))[0]
                    vx11c = unpack("<f", f.read(4))[0]
                    vy11c = unpack("<f", f.read(4))[0]
                    vz11c = unpack("<f", f.read(4))[0]
                    type11c = unpack("B", f.read(1))[0]
                    value11c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11c = unpack("<f", f.read(4))[0]
                    vx12c = unpack("<f", f.read(4))[0]
                    vy12c = unpack("<f", f.read(4))[0]
                    vz12c = unpack("<f", f.read(4))[0]
                    type12c = unpack("B", f.read(1))[0]
                    value12c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12c = unpack("<f", f.read(4))[0]
                    vx13c = unpack("<f", f.read(4))[0]
                    vy13c = unpack("<f", f.read(4))[0]
                    vz13c = unpack("<f", f.read(4))[0]
                    type13c = unpack("B", f.read(1))[0]
                    value13c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13c = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1d = unpack("<f", f.read(4))[0]
                    vy1d = unpack("<f", f.read(4))[0]
                    vz1d = unpack("<f", f.read(4))[0]
                    type1d = unpack("B", f.read(1))[0]
                    value1d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1d = unpack("<f", f.read(4))[0]
                    vx2d = unpack("<f", f.read(4))[0]
                    vy2d = unpack("<f", f.read(4))[0]
                    vz2d = unpack("<f", f.read(4))[0]
                    type2d = unpack("B", f.read(1))[0]
                    value2d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2d = unpack("<f", f.read(4))[0]
                    vx3d = unpack("<f", f.read(4))[0]
                    vy3d = unpack("<f", f.read(4))[0]
                    vz3d = unpack("<f", f.read(4))[0]
                    type3d = unpack("B", f.read(1))[0]
                    value3d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3d = unpack("<f", f.read(4))[0]
                    vx4d = unpack("<f", f.read(4))[0]
                    vy4d = unpack("<f", f.read(4))[0]
                    vz4d = unpack("<f", f.read(4))[0]
                    type4d = unpack("B", f.read(1))[0]
                    value4d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4d = unpack("<f", f.read(4))[0]
                    vx5d = unpack("<f", f.read(4))[0]
                    vy5d = unpack("<f", f.read(4))[0]
                    vz5d = unpack("<f", f.read(4))[0]
                    type5d = unpack("B", f.read(1))[0]
                    value5d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5d = unpack("<f", f.read(4))[0]
                    vx6d = unpack("<f", f.read(4))[0]
                    vy6d = unpack("<f", f.read(4))[0]
                    vz6d = unpack("<f", f.read(4))[0]
                    type6d = unpack("B", f.read(1))[0]
                    value6d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6d = unpack("<f", f.read(4))[0]
                    vx7d = unpack("<f", f.read(4))[0]
                    vy7d = unpack("<f", f.read(4))[0]
                    vz7d = unpack("<f", f.read(4))[0]
                    type7d = unpack("B", f.read(1))[0]
                    value7d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7d = unpack("<f", f.read(4))[0]
                    vx8d = unpack("<f", f.read(4))[0]
                    vy8d = unpack("<f", f.read(4))[0]
                    vz8d = unpack("<f", f.read(4))[0]
                    type8d = unpack("B", f.read(1))[0]
                    value8d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8d = unpack("<f", f.read(4))[0]
                    vx9d = unpack("<f", f.read(4))[0]
                    vy9d = unpack("<f", f.read(4))[0]
                    vz9d = unpack("<f", f.read(4))[0]
                    type9d = unpack("B", f.read(1))[0]
                    value9d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9d = unpack("<f", f.read(4))[0]
                    vx10d = unpack("<f", f.read(4))[0]
                    vy10d = unpack("<f", f.read(4))[0]
                    vz10d = unpack("<f", f.read(4))[0]
                    type10d = unpack("B", f.read(1))[0]
                    value10d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10d = unpack("<f", f.read(4))[0]
                    vx11d = unpack("<f", f.read(4))[0]
                    vy11d = unpack("<f", f.read(4))[0]
                    vz11d = unpack("<f", f.read(4))[0]
                    type11d = unpack("B", f.read(1))[0]
                    value11d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11d = unpack("<f", f.read(4))[0]
                    vx12d = unpack("<f", f.read(4))[0]
                    vy12d = unpack("<f", f.read(4))[0]
                    vz12d = unpack("<f", f.read(4))[0]
                    type12d = unpack("B", f.read(1))[0]
                    value12d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12d = unpack("<f", f.read(4))[0]
                    vx13d = unpack("<f", f.read(4))[0]
                    vy13d = unpack("<f", f.read(4))[0]
                    vz13d = unpack("<f", f.read(4))[0]
                    type13d = unpack("B", f.read(1))[0]
                    value13d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13d = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1e = unpack("<f", f.read(4))[0]
                    vy1e = unpack("<f", f.read(4))[0]
                    vz1e = unpack("<f", f.read(4))[0]
                    type1e = unpack("B", f.read(1))[0]
                    value1e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1e = unpack("<f", f.read(4))[0]
                    vx2e = unpack("<f", f.read(4))[0]
                    vy2e = unpack("<f", f.read(4))[0]
                    vz2e = unpack("<f", f.read(4))[0]
                    type2e = unpack("B", f.read(1))[0]
                    value2e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2e = unpack("<f", f.read(4))[0]
                    vx3e = unpack("<f", f.read(4))[0]
                    vy3e = unpack("<f", f.read(4))[0]
                    vz3e = unpack("<f", f.read(4))[0]
                    type3e = unpack("B", f.read(1))[0]
                    value3e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3e = unpack("<f", f.read(4))[0]
                    vx4e = unpack("<f", f.read(4))[0]
                    vy4e = unpack("<f", f.read(4))[0]
                    vz4e = unpack("<f", f.read(4))[0]
                    type4e = unpack("B", f.read(1))[0]
                    value4e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4e = unpack("<f", f.read(4))[0]
                    vx5e = unpack("<f", f.read(4))[0]
                    vy5e = unpack("<f", f.read(4))[0]
                    vz5e = unpack("<f", f.read(4))[0]
                    type5e = unpack("B", f.read(1))[0]
                    value5e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5e = unpack("<f", f.read(4))[0]
                    vx6e = unpack("<f", f.read(4))[0]
                    vy6e = unpack("<f", f.read(4))[0]
                    vz6e = unpack("<f", f.read(4))[0]
                    type6e = unpack("B", f.read(1))[0]
                    value6e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6e = unpack("<f", f.read(4))[0]
                    vx7e = unpack("<f", f.read(4))[0]
                    vy7e = unpack("<f", f.read(4))[0]
                    vz7e = unpack("<f", f.read(4))[0]
                    type7e = unpack("B", f.read(1))[0]
                    value7e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7e = unpack("<f", f.read(4))[0]
                    vx8e = unpack("<f", f.read(4))[0]
                    vy8e = unpack("<f", f.read(4))[0]
                    vz8e = unpack("<f", f.read(4))[0]
                    type8e = unpack("B", f.read(1))[0]
                    value8e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8e = unpack("<f", f.read(4))[0]
                    vx9e = unpack("<f", f.read(4))[0]
                    vy9e = unpack("<f", f.read(4))[0]
                    vz9e = unpack("<f", f.read(4))[0]
                    type9e = unpack("B", f.read(1))[0]
                    value9e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9e = unpack("<f", f.read(4))[0]
                    vx10e = unpack("<f", f.read(4))[0]
                    vy10e = unpack("<f", f.read(4))[0]
                    vz10e = unpack("<f", f.read(4))[0]
                    type10e = unpack("B", f.read(1))[0]
                    value10e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10e = unpack("<f", f.read(4))[0]
                    vx11e = unpack("<f", f.read(4))[0]
                    vy11e = unpack("<f", f.read(4))[0]
                    vz11e = unpack("<f", f.read(4))[0]
                    type11e = unpack("B", f.read(1))[0]
                    value11e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11e = unpack("<f", f.read(4))[0]
                    vx12e = unpack("<f", f.read(4))[0]
                    vy12e = unpack("<f", f.read(4))[0]
                    vz12e = unpack("<f", f.read(4))[0]
                    type12e = unpack("B", f.read(1))[0]
                    value12e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12e = unpack("<f", f.read(4))[0]
                    vx13e = unpack("<f", f.read(4))[0]
                    vy13e = unpack("<f", f.read(4))[0]
                    vz13e = unpack("<f", f.read(4))[0]
                    type13e = unpack("B", f.read(1))[0]
                    value13e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13e = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1f = unpack("<f", f.read(4))[0]
                    vy1f = unpack("<f", f.read(4))[0]
                    vz1f = unpack("<f", f.read(4))[0]
                    type1f = unpack("B", f.read(1))[0]
                    value1f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1f = unpack("<f", f.read(4))[0]
                    vx2f = unpack("<f", f.read(4))[0]
                    vy2f = unpack("<f", f.read(4))[0]
                    vz2f = unpack("<f", f.read(4))[0]
                    type2f = unpack("B", f.read(1))[0]
                    value2f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2f = unpack("<f", f.read(4))[0]
                    vx3f = unpack("<f", f.read(4))[0]
                    vy3f = unpack("<f", f.read(4))[0]
                    vz3f = unpack("<f", f.read(4))[0]
                    type3f = unpack("B", f.read(1))[0]
                    value3f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3f = unpack("<f", f.read(4))[0]
                    vx4f = unpack("<f", f.read(4))[0]
                    vy4f = unpack("<f", f.read(4))[0]
                    vz4f = unpack("<f", f.read(4))[0]
                    type4f = unpack("B", f.read(1))[0]
                    value4f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4f = unpack("<f", f.read(4))[0]
                    vx5f = unpack("<f", f.read(4))[0]
                    vy5f = unpack("<f", f.read(4))[0]
                    vz5f = unpack("<f", f.read(4))[0]
                    type5f = unpack("B", f.read(1))[0]
                    value5f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5f = unpack("<f", f.read(4))[0]
                    vx6f = unpack("<f", f.read(4))[0]
                    vy6f = unpack("<f", f.read(4))[0]
                    vz6f = unpack("<f", f.read(4))[0]
                    type6f = unpack("B", f.read(1))[0]
                    value6f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6f = unpack("<f", f.read(4))[0]
                    vx7f = unpack("<f", f.read(4))[0]
                    vy7f = unpack("<f", f.read(4))[0]
                    vz7f = unpack("<f", f.read(4))[0]
                    type7f = unpack("B", f.read(1))[0]
                    value7f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7f = unpack("<f", f.read(4))[0]
                    vx8f = unpack("<f", f.read(4))[0]
                    vy8f = unpack("<f", f.read(4))[0]
                    vz8f = unpack("<f", f.read(4))[0]
                    type8f = unpack("B", f.read(1))[0]
                    value8f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8f = unpack("<f", f.read(4))[0]
                    vx9f = unpack("<f", f.read(4))[0]
                    vy9f = unpack("<f", f.read(4))[0]
                    vz9f = unpack("<f", f.read(4))[0]
                    type9f = unpack("B", f.read(1))[0]
                    value9f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9f = unpack("<f", f.read(4))[0]
                    vx10f = unpack("<f", f.read(4))[0]
                    vy10f = unpack("<f", f.read(4))[0]
                    vz10f = unpack("<f", f.read(4))[0]
                    type10f = unpack("B", f.read(1))[0]
                    value10f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10f = unpack("<f", f.read(4))[0]
                    vx11f = unpack("<f", f.read(4))[0]
                    vy11f = unpack("<f", f.read(4))[0]
                    vz11f = unpack("<f", f.read(4))[0]
                    type11f = unpack("B", f.read(1))[0]
                    value11f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11f = unpack("<f", f.read(4))[0]
                    vx12f = unpack("<f", f.read(4))[0]
                    vy12f = unpack("<f", f.read(4))[0]
                    vz12f = unpack("<f", f.read(4))[0]
                    type12f = unpack("B", f.read(1))[0]
                    value12f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12f = unpack("<f", f.read(4))[0]
                    vx13f = unpack("<f", f.read(4))[0]
                    vy13f = unpack("<f", f.read(4))[0]
                    vz13f = unpack("<f", f.read(4))[0]
                    type13f = unpack("B", f.read(1))[0]
                    value13f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13f = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1g = unpack("<f", f.read(4))[0]
                    vy1g = unpack("<f", f.read(4))[0]
                    vz1g = unpack("<f", f.read(4))[0]
                    type1g = unpack("B", f.read(1))[0]
                    value1g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1g = unpack("<f", f.read(4))[0]
                    vx2g = unpack("<f", f.read(4))[0]
                    vy2g = unpack("<f", f.read(4))[0]
                    vz2g = unpack("<f", f.read(4))[0]
                    type2g = unpack("B", f.read(1))[0]
                    value2g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2g = unpack("<f", f.read(4))[0]
                    vx3g = unpack("<f", f.read(4))[0]
                    vy3g = unpack("<f", f.read(4))[0]
                    vz3g = unpack("<f", f.read(4))[0]
                    type3g = unpack("B", f.read(1))[0]
                    value3g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3g = unpack("<f", f.read(4))[0]
                    vx4g = unpack("<f", f.read(4))[0]
                    vy4g = unpack("<f", f.read(4))[0]
                    vz4g = unpack("<f", f.read(4))[0]
                    type4g = unpack("B", f.read(1))[0]
                    value4g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4g = unpack("<f", f.read(4))[0]
                    vx5g = unpack("<f", f.read(4))[0]
                    vy5g = unpack("<f", f.read(4))[0]
                    vz5g = unpack("<f", f.read(4))[0]
                    type5g = unpack("B", f.read(1))[0]
                    value5g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5g = unpack("<f", f.read(4))[0]
                    vx6g = unpack("<f", f.read(4))[0]
                    vy6g = unpack("<f", f.read(4))[0]
                    vz6g = unpack("<f", f.read(4))[0]
                    type6g = unpack("B", f.read(1))[0]
                    value6g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6g = unpack("<f", f.read(4))[0]
                    vx7g = unpack("<f", f.read(4))[0]
                    vy7g = unpack("<f", f.read(4))[0]
                    vz7g = unpack("<f", f.read(4))[0]
                    type7g = unpack("B", f.read(1))[0]
                    value7g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7g = unpack("<f", f.read(4))[0]
                    vx8g = unpack("<f", f.read(4))[0]
                    vy8g = unpack("<f", f.read(4))[0]
                    vz8g = unpack("<f", f.read(4))[0]
                    type8g = unpack("B", f.read(1))[0]
                    value8g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8g = unpack("<f", f.read(4))[0]
                    vx9g = unpack("<f", f.read(4))[0]
                    vy9g = unpack("<f", f.read(4))[0]
                    vz9g = unpack("<f", f.read(4))[0]
                    type9g = unpack("B", f.read(1))[0]
                    value9g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9g = unpack("<f", f.read(4))[0]
                    vx10g = unpack("<f", f.read(4))[0]
                    vy10g = unpack("<f", f.read(4))[0]
                    vz10g = unpack("<f", f.read(4))[0]
                    type10g = unpack("B", f.read(1))[0]
                    value10g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10g = unpack("<f", f.read(4))[0]
                    vx11g = unpack("<f", f.read(4))[0]
                    vy11g = unpack("<f", f.read(4))[0]
                    vz11g = unpack("<f", f.read(4))[0]
                    type11g = unpack("B", f.read(1))[0]
                    value11g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11g = unpack("<f", f.read(4))[0]
                    vx12g = unpack("<f", f.read(4))[0]
                    vy12g = unpack("<f", f.read(4))[0]
                    vz12g = unpack("<f", f.read(4))[0]
                    type12g = unpack("B", f.read(1))[0]
                    value12g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12g = unpack("<f", f.read(4))[0]
                    vx13g = unpack("<f", f.read(4))[0]
                    vy13g = unpack("<f", f.read(4))[0]
                    vz13g = unpack("<f", f.read(4))[0]
                    type13g = unpack("B", f.read(1))[0]
                    value13g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13g = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1h = unpack("<f", f.read(4))[0]
                    vy1h = unpack("<f", f.read(4))[0]
                    vz1h = unpack("<f", f.read(4))[0]
                    type1h = unpack("B", f.read(1))[0]
                    value1h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1h = unpack("<f", f.read(4))[0]
                    vx2h = unpack("<f", f.read(4))[0]
                    vy2h = unpack("<f", f.read(4))[0]
                    vz2h = unpack("<f", f.read(4))[0]
                    type2h = unpack("B", f.read(1))[0]
                    value2h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2h = unpack("<f", f.read(4))[0]
                    vx3h = unpack("<f", f.read(4))[0]
                    vy3h = unpack("<f", f.read(4))[0]
                    vz3h = unpack("<f", f.read(4))[0]
                    type3h = unpack("B", f.read(1))[0]
                    value3h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3h = unpack("<f", f.read(4))[0]
                    vx4h = unpack("<f", f.read(4))[0]
                    vy4h = unpack("<f", f.read(4))[0]
                    vz4h = unpack("<f", f.read(4))[0]
                    type4h = unpack("B", f.read(1))[0]
                    value4h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4h = unpack("<f", f.read(4))[0]
                    vx5h = unpack("<f", f.read(4))[0]
                    vy5h = unpack("<f", f.read(4))[0]
                    vz5h = unpack("<f", f.read(4))[0]
                    type5h = unpack("B", f.read(1))[0]
                    value5h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5h = unpack("<f", f.read(4))[0]
                    vx6h = unpack("<f", f.read(4))[0]
                    vy6h = unpack("<f", f.read(4))[0]
                    vz6h = unpack("<f", f.read(4))[0]
                    type6h = unpack("B", f.read(1))[0]
                    value6h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6h = unpack("<f", f.read(4))[0]
                    vx7h = unpack("<f", f.read(4))[0]
                    vy7h = unpack("<f", f.read(4))[0]
                    vz7h = unpack("<f", f.read(4))[0]
                    type7h = unpack("B", f.read(1))[0]
                    value7h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7h = unpack("<f", f.read(4))[0]
                    vx8h = unpack("<f", f.read(4))[0]
                    vy8h = unpack("<f", f.read(4))[0]
                    vz8h = unpack("<f", f.read(4))[0]
                    type8h = unpack("B", f.read(1))[0]
                    value8h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8h = unpack("<f", f.read(4))[0]
                    vx9h = unpack("<f", f.read(4))[0]
                    vy9h = unpack("<f", f.read(4))[0]
                    vz9h = unpack("<f", f.read(4))[0]
                    type9h = unpack("B", f.read(1))[0]
                    value9h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9h = unpack("<f", f.read(4))[0]
                    vx10h = unpack("<f", f.read(4))[0]
                    vy10h = unpack("<f", f.read(4))[0]
                    vz10h = unpack("<f", f.read(4))[0]
                    type10h = unpack("B", f.read(1))[0]
                    value10h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10h = unpack("<f", f.read(4))[0]
                    vx11h = unpack("<f", f.read(4))[0]
                    vy11h = unpack("<f", f.read(4))[0]
                    vz11h = unpack("<f", f.read(4))[0]
                    type11h = unpack("B", f.read(1))[0]
                    value11h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11h = unpack("<f", f.read(4))[0]
                    vx12h = unpack("<f", f.read(4))[0]
                    vy12h = unpack("<f", f.read(4))[0]
                    vz12h = unpack("<f", f.read(4))[0]
                    type12h = unpack("B", f.read(1))[0]
                    value12h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12h = unpack("<f", f.read(4))[0]
                    vx13h = unpack("<f", f.read(4))[0]
                    vy13h = unpack("<f", f.read(4))[0]
                    vz13h = unpack("<f", f.read(4))[0]
                    type13h = unpack("B", f.read(1))[0]
                    value13h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13h = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1i = unpack("<f", f.read(4))[0]
                    vy1i = unpack("<f", f.read(4))[0]
                    vz1i = unpack("<f", f.read(4))[0]
                    type1i = unpack("B", f.read(1))[0]
                    value1i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1i = unpack("<f", f.read(4))[0]
                    vx2i = unpack("<f", f.read(4))[0]
                    vy2i = unpack("<f", f.read(4))[0]
                    vz2i = unpack("<f", f.read(4))[0]
                    type2i = unpack("B", f.read(1))[0]
                    value2i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2i = unpack("<f", f.read(4))[0]
                    vx3i = unpack("<f", f.read(4))[0]
                    vy3i = unpack("<f", f.read(4))[0]
                    vz3i = unpack("<f", f.read(4))[0]
                    type3i = unpack("B", f.read(1))[0]
                    value3i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3i = unpack("<f", f.read(4))[0]
                    vx4i = unpack("<f", f.read(4))[0]
                    vy4i = unpack("<f", f.read(4))[0]
                    vz4i = unpack("<f", f.read(4))[0]
                    type4i = unpack("B", f.read(1))[0]
                    value4i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4i = unpack("<f", f.read(4))[0]
                    vx5i = unpack("<f", f.read(4))[0]
                    vy5i = unpack("<f", f.read(4))[0]
                    vz5i = unpack("<f", f.read(4))[0]
                    type5i = unpack("B", f.read(1))[0]
                    value5i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5i = unpack("<f", f.read(4))[0]
                    vx6i = unpack("<f", f.read(4))[0]
                    vy6i = unpack("<f", f.read(4))[0]
                    vz6i = unpack("<f", f.read(4))[0]
                    type6i = unpack("B", f.read(1))[0]
                    value6i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6i = unpack("<f", f.read(4))[0]
                    vx7i = unpack("<f", f.read(4))[0]
                    vy7i = unpack("<f", f.read(4))[0]
                    vz7i = unpack("<f", f.read(4))[0]
                    type7i = unpack("B", f.read(1))[0]
                    value7i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7i = unpack("<f", f.read(4))[0]
                    vx8i = unpack("<f", f.read(4))[0]
                    vy8i = unpack("<f", f.read(4))[0]
                    vz8i = unpack("<f", f.read(4))[0]
                    type8i = unpack("B", f.read(1))[0]
                    value8i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8i = unpack("<f", f.read(4))[0]
                    vx9i = unpack("<f", f.read(4))[0]
                    vy9i = unpack("<f", f.read(4))[0]
                    vz9i = unpack("<f", f.read(4))[0]
                    type9i = unpack("B", f.read(1))[0]
                    value9i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9i = unpack("<f", f.read(4))[0]
                    vx10i = unpack("<f", f.read(4))[0]
                    vy10i = unpack("<f", f.read(4))[0]
                    vz10i = unpack("<f", f.read(4))[0]
                    type10i = unpack("B", f.read(1))[0]
                    value10i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10i = unpack("<f", f.read(4))[0]
                    vx11i = unpack("<f", f.read(4))[0]
                    vy11i = unpack("<f", f.read(4))[0]
                    vz11i = unpack("<f", f.read(4))[0]
                    type11i = unpack("B", f.read(1))[0]
                    value11i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11i = unpack("<f", f.read(4))[0]
                    vx12i = unpack("<f", f.read(4))[0]
                    vy12i = unpack("<f", f.read(4))[0]
                    vz12i = unpack("<f", f.read(4))[0]
                    type12i = unpack("B", f.read(1))[0]
                    value12i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12i = unpack("<f", f.read(4))[0]
                    vx13i = unpack("<f", f.read(4))[0]
                    vy13i = unpack("<f", f.read(4))[0]
                    vz13i = unpack("<f", f.read(4))[0]
                    type13i = unpack("B", f.read(1))[0]
                    value13i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13i = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1j = unpack("<f", f.read(4))[0]
                    vy1j = unpack("<f", f.read(4))[0]
                    vz1j = unpack("<f", f.read(4))[0]
                    type1j = unpack("B", f.read(1))[0]
                    value1j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1j = unpack("<f", f.read(4))[0]
                    vx2j = unpack("<f", f.read(4))[0]
                    vy2j = unpack("<f", f.read(4))[0]
                    vz2j = unpack("<f", f.read(4))[0]
                    type2j = unpack("B", f.read(1))[0]
                    value2j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2j = unpack("<f", f.read(4))[0]
                    vx3j = unpack("<f", f.read(4))[0]
                    vy3j = unpack("<f", f.read(4))[0]
                    vz3j = unpack("<f", f.read(4))[0]
                    type3j = unpack("B", f.read(1))[0]
                    value3j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3j = unpack("<f", f.read(4))[0]
                    vx4j = unpack("<f", f.read(4))[0]
                    vy4j = unpack("<f", f.read(4))[0]
                    vz4j = unpack("<f", f.read(4))[0]
                    type4j = unpack("B", f.read(1))[0]
                    value4j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4j = unpack("<f", f.read(4))[0]
                    vx5j = unpack("<f", f.read(4))[0]
                    vy5j = unpack("<f", f.read(4))[0]
                    vz5j = unpack("<f", f.read(4))[0]
                    type5j = unpack("B", f.read(1))[0]
                    value5j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5j = unpack("<f", f.read(4))[0]
                    vx6j = unpack("<f", f.read(4))[0]
                    vy6j = unpack("<f", f.read(4))[0]
                    vz6j = unpack("<f", f.read(4))[0]
                    type6j = unpack("B", f.read(1))[0]
                    value6j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6j = unpack("<f", f.read(4))[0]
                    vx7j = unpack("<f", f.read(4))[0]
                    vy7j = unpack("<f", f.read(4))[0]
                    vz7j = unpack("<f", f.read(4))[0]
                    type7j = unpack("B", f.read(1))[0]
                    value7j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7j = unpack("<f", f.read(4))[0]
                    vx8j = unpack("<f", f.read(4))[0]
                    vy8j = unpack("<f", f.read(4))[0]
                    vz8j = unpack("<f", f.read(4))[0]
                    type8j = unpack("B", f.read(1))[0]
                    value8j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8j = unpack("<f", f.read(4))[0]
                    vx9j = unpack("<f", f.read(4))[0]
                    vy9j = unpack("<f", f.read(4))[0]
                    vz9j = unpack("<f", f.read(4))[0]
                    type9j = unpack("B", f.read(1))[0]
                    value9j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9j = unpack("<f", f.read(4))[0]
                    vx10j = unpack("<f", f.read(4))[0]
                    vy10j = unpack("<f", f.read(4))[0]
                    vz10j = unpack("<f", f.read(4))[0]
                    type10j = unpack("B", f.read(1))[0]
                    value10j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10j = unpack("<f", f.read(4))[0]
                    vx11j = unpack("<f", f.read(4))[0]
                    vy11j = unpack("<f", f.read(4))[0]
                    vz11j = unpack("<f", f.read(4))[0]
                    type11j = unpack("B", f.read(1))[0]
                    value11j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11j = unpack("<f", f.read(4))[0]
                    vx12j = unpack("<f", f.read(4))[0]
                    vy12j = unpack("<f", f.read(4))[0]
                    vz12j = unpack("<f", f.read(4))[0]
                    type12j = unpack("B", f.read(1))[0]
                    value12j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12j = unpack("<f", f.read(4))[0]
                    vx13j = unpack("<f", f.read(4))[0]
                    vy13j = unpack("<f", f.read(4))[0]
                    vz13j = unpack("<f", f.read(4))[0]
                    type13j = unpack("B", f.read(1))[0]
                    value13j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13j = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1k = unpack("<f", f.read(4))[0]
                    vy1k = unpack("<f", f.read(4))[0]
                    vz1k = unpack("<f", f.read(4))[0]
                    type1k = unpack("B", f.read(1))[0]
                    value1k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1k = unpack("<f", f.read(4))[0]
                    vx2k = unpack("<f", f.read(4))[0]
                    vy2k = unpack("<f", f.read(4))[0]
                    vz2k = unpack("<f", f.read(4))[0]
                    type2k = unpack("B", f.read(1))[0]
                    value2k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2k = unpack("<f", f.read(4))[0]
                    vx3k = unpack("<f", f.read(4))[0]
                    vy3k = unpack("<f", f.read(4))[0]
                    vz3k = unpack("<f", f.read(4))[0]
                    type3k = unpack("B", f.read(1))[0]
                    value3k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3k = unpack("<f", f.read(4))[0]
                    vx4k = unpack("<f", f.read(4))[0]
                    vy4k = unpack("<f", f.read(4))[0]
                    vz4k = unpack("<f", f.read(4))[0]
                    type4k = unpack("B", f.read(1))[0]
                    value4k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4k = unpack("<f", f.read(4))[0]
                    vx5k = unpack("<f", f.read(4))[0]
                    vy5k = unpack("<f", f.read(4))[0]
                    vz5k = unpack("<f", f.read(4))[0]
                    type5k = unpack("B", f.read(1))[0]
                    value5k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5k = unpack("<f", f.read(4))[0]
                    vx6k = unpack("<f", f.read(4))[0]
                    vy6k = unpack("<f", f.read(4))[0]
                    vz6k = unpack("<f", f.read(4))[0]
                    type6k = unpack("B", f.read(1))[0]
                    value6k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6k = unpack("<f", f.read(4))[0]
                    vx7k = unpack("<f", f.read(4))[0]
                    vy7k = unpack("<f", f.read(4))[0]
                    vz7k = unpack("<f", f.read(4))[0]
                    type7k = unpack("B", f.read(1))[0]
                    value7k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7k = unpack("<f", f.read(4))[0]
                    vx8k = unpack("<f", f.read(4))[0]
                    vy8k = unpack("<f", f.read(4))[0]
                    vz8k = unpack("<f", f.read(4))[0]
                    type8k = unpack("B", f.read(1))[0]
                    value8k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8k = unpack("<f", f.read(4))[0]
                    vx9k = unpack("<f", f.read(4))[0]
                    vy9k = unpack("<f", f.read(4))[0]
                    vz9k = unpack("<f", f.read(4))[0]
                    type9k = unpack("B", f.read(1))[0]
                    value9k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9k = unpack("<f", f.read(4))[0]
                    vx10k = unpack("<f", f.read(4))[0]
                    vy10k = unpack("<f", f.read(4))[0]
                    vz10k = unpack("<f", f.read(4))[0]
                    type10k = unpack("B", f.read(1))[0]
                    value10k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10k = unpack("<f", f.read(4))[0]
                    vx11k = unpack("<f", f.read(4))[0]
                    vy11k = unpack("<f", f.read(4))[0]
                    vz11k = unpack("<f", f.read(4))[0]
                    type11k = unpack("B", f.read(1))[0]
                    value11k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11k = unpack("<f", f.read(4))[0]
                    vx12k = unpack("<f", f.read(4))[0]
                    vy12k = unpack("<f", f.read(4))[0]
                    vz12k = unpack("<f", f.read(4))[0]
                    type12k = unpack("B", f.read(1))[0]
                    value12k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12k = unpack("<f", f.read(4))[0]
                    vx13k = unpack("<f", f.read(4))[0]
                    vy13k = unpack("<f", f.read(4))[0]
                    vz13k = unpack("<f", f.read(4))[0]
                    type13k = unpack("B", f.read(1))[0]
                    value13k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13k = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1l = unpack("<f", f.read(4))[0]
                    vy1l = unpack("<f", f.read(4))[0]
                    vz1l = unpack("<f", f.read(4))[0]
                    type1l = unpack("B", f.read(1))[0]
                    value1l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1l = unpack("<f", f.read(4))[0]
                    vx2l = unpack("<f", f.read(4))[0]
                    vy2l = unpack("<f", f.read(4))[0]
                    vz2l = unpack("<f", f.read(4))[0]
                    type2l = unpack("B", f.read(1))[0]
                    value2l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2l = unpack("<f", f.read(4))[0]
                    vx3l = unpack("<f", f.read(4))[0]
                    vy3l = unpack("<f", f.read(4))[0]
                    vz3l = unpack("<f", f.read(4))[0]
                    type3l = unpack("B", f.read(1))[0]
                    value3l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3l = unpack("<f", f.read(4))[0]
                    vx4l = unpack("<f", f.read(4))[0]
                    vy4l = unpack("<f", f.read(4))[0]
                    vz4l = unpack("<f", f.read(4))[0]
                    type4l = unpack("B", f.read(1))[0]
                    value4l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4l = unpack("<f", f.read(4))[0]
                    vx5l = unpack("<f", f.read(4))[0]
                    vy5l = unpack("<f", f.read(4))[0]
                    vz5l = unpack("<f", f.read(4))[0]
                    type5l = unpack("B", f.read(1))[0]
                    value5l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5l = unpack("<f", f.read(4))[0]
                    vx6l = unpack("<f", f.read(4))[0]
                    vy6l = unpack("<f", f.read(4))[0]
                    vz6l = unpack("<f", f.read(4))[0]
                    type6l = unpack("B", f.read(1))[0]
                    value6l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6l = unpack("<f", f.read(4))[0]
                    vx7l = unpack("<f", f.read(4))[0]
                    vy7l = unpack("<f", f.read(4))[0]
                    vz7l = unpack("<f", f.read(4))[0]
                    type7l = unpack("B", f.read(1))[0]
                    value7l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7l = unpack("<f", f.read(4))[0]
                    vx8l = unpack("<f", f.read(4))[0]
                    vy8l = unpack("<f", f.read(4))[0]
                    vz8l = unpack("<f", f.read(4))[0]
                    type8l = unpack("B", f.read(1))[0]
                    value8l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8l = unpack("<f", f.read(4))[0]
                    vx9l = unpack("<f", f.read(4))[0]
                    vy9l = unpack("<f", f.read(4))[0]
                    vz9l = unpack("<f", f.read(4))[0]
                    type9l = unpack("B", f.read(1))[0]
                    value9l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9l = unpack("<f", f.read(4))[0]
                    vx10l = unpack("<f", f.read(4))[0]
                    vy10l = unpack("<f", f.read(4))[0]
                    vz10l = unpack("<f", f.read(4))[0]
                    type10l = unpack("B", f.read(1))[0]
                    value10l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10l = unpack("<f", f.read(4))[0]
                    vx11l = unpack("<f", f.read(4))[0]
                    vy11l = unpack("<f", f.read(4))[0]
                    vz11l = unpack("<f", f.read(4))[0]
                    type11l = unpack("B", f.read(1))[0]
                    value11l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11l = unpack("<f", f.read(4))[0]
                    vx12l = unpack("<f", f.read(4))[0]
                    vy12l = unpack("<f", f.read(4))[0]
                    vz12l = unpack("<f", f.read(4))[0]
                    type12l = unpack("B", f.read(1))[0]
                    value12l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12l = unpack("<f", f.read(4))[0]
                    vx13l = unpack("<f", f.read(4))[0]
                    vy13l = unpack("<f", f.read(4))[0]
                    vz13l = unpack("<f", f.read(4))[0]
                    type13l = unpack("B", f.read(1))[0]
                    value13l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13l = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1m = unpack("<f", f.read(4))[0]
                    vy1m = unpack("<f", f.read(4))[0]
                    vz1m = unpack("<f", f.read(4))[0]
                    type1m = unpack("B", f.read(1))[0]
                    value1m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1m = unpack("<f", f.read(4))[0]
                    vx2m = unpack("<f", f.read(4))[0]
                    vy2m = unpack("<f", f.read(4))[0]
                    vz2m = unpack("<f", f.read(4))[0]
                    type2m = unpack("B", f.read(1))[0]
                    value2m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2m = unpack("<f", f.read(4))[0]
                    vx3m = unpack("<f", f.read(4))[0]
                    vy3m = unpack("<f", f.read(4))[0]
                    vz3m = unpack("<f", f.read(4))[0]
                    type3m = unpack("B", f.read(1))[0]
                    value3m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3m = unpack("<f", f.read(4))[0]
                    vx4m = unpack("<f", f.read(4))[0]
                    vy4m = unpack("<f", f.read(4))[0]
                    vz4m = unpack("<f", f.read(4))[0]
                    type4m = unpack("B", f.read(1))[0]
                    value4m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4m = unpack("<f", f.read(4))[0]
                    vx5m = unpack("<f", f.read(4))[0]
                    vy5m = unpack("<f", f.read(4))[0]
                    vz5m = unpack("<f", f.read(4))[0]
                    type5m = unpack("B", f.read(1))[0]
                    value5m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5m = unpack("<f", f.read(4))[0]
                    vx6m = unpack("<f", f.read(4))[0]
                    vy6m = unpack("<f", f.read(4))[0]
                    vz6m = unpack("<f", f.read(4))[0]
                    type6m = unpack("B", f.read(1))[0]
                    value6m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6m = unpack("<f", f.read(4))[0]
                    vx7m = unpack("<f", f.read(4))[0]
                    vy7m = unpack("<f", f.read(4))[0]
                    vz7m = unpack("<f", f.read(4))[0]
                    type7m = unpack("B", f.read(1))[0]
                    value7m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7m = unpack("<f", f.read(4))[0]
                    vx8m = unpack("<f", f.read(4))[0]
                    vy8m = unpack("<f", f.read(4))[0]
                    vz8m = unpack("<f", f.read(4))[0]
                    type8m = unpack("B", f.read(1))[0]
                    value8m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8m = unpack("<f", f.read(4))[0]
                    vx9m = unpack("<f", f.read(4))[0]
                    vy9m = unpack("<f", f.read(4))[0]
                    vz9m = unpack("<f", f.read(4))[0]
                    type9m = unpack("B", f.read(1))[0]
                    value9m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9m = unpack("<f", f.read(4))[0]
                    vx10m = unpack("<f", f.read(4))[0]
                    vy10m = unpack("<f", f.read(4))[0]
                    vz10m = unpack("<f", f.read(4))[0]
                    type10m = unpack("B", f.read(1))[0]
                    value10m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10m = unpack("<f", f.read(4))[0]
                    vx11m = unpack("<f", f.read(4))[0]
                    vy11m = unpack("<f", f.read(4))[0]
                    vz11m = unpack("<f", f.read(4))[0]
                    type11m = unpack("B", f.read(1))[0]
                    value11m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11m = unpack("<f", f.read(4))[0]
                    vx12m = unpack("<f", f.read(4))[0]
                    vy12m = unpack("<f", f.read(4))[0]
                    vz12m = unpack("<f", f.read(4))[0]
                    type12m = unpack("B", f.read(1))[0]
                    value12m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12m = unpack("<f", f.read(4))[0]
                    vx13m = unpack("<f", f.read(4))[0]
                    vy13m = unpack("<f", f.read(4))[0]
                    vz13m = unpack("<f", f.read(4))[0]
                    type13m = unpack("B", f.read(1))[0]
                    value13m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13m = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1n = unpack("<f", f.read(4))[0]
                    vy1n = unpack("<f", f.read(4))[0]
                    vz1n = unpack("<f", f.read(4))[0]
                    type1n = unpack("B", f.read(1))[0]
                    value1n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1n = unpack("<f", f.read(4))[0]
                    vx2n = unpack("<f", f.read(4))[0]
                    vy2n = unpack("<f", f.read(4))[0]
                    vz2n = unpack("<f", f.read(4))[0]
                    type2n = unpack("B", f.read(1))[0]
                    value2n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2n = unpack("<f", f.read(4))[0]
                    vx3n = unpack("<f", f.read(4))[0]
                    vy3n = unpack("<f", f.read(4))[0]
                    vz3n = unpack("<f", f.read(4))[0]
                    type3n = unpack("B", f.read(1))[0]
                    value3n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3n = unpack("<f", f.read(4))[0]
                    vx4n = unpack("<f", f.read(4))[0]
                    vy4n = unpack("<f", f.read(4))[0]
                    vz4n = unpack("<f", f.read(4))[0]
                    type4n = unpack("B", f.read(1))[0]
                    value4n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4n = unpack("<f", f.read(4))[0]
                    vx5n = unpack("<f", f.read(4))[0]
                    vy5n = unpack("<f", f.read(4))[0]
                    vz5n = unpack("<f", f.read(4))[0]
                    type5n = unpack("B", f.read(1))[0]
                    value5n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5n = unpack("<f", f.read(4))[0]
                    vx6n = unpack("<f", f.read(4))[0]
                    vy6n = unpack("<f", f.read(4))[0]
                    vz6n = unpack("<f", f.read(4))[0]
                    type6n = unpack("B", f.read(1))[0]
                    value6n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6n = unpack("<f", f.read(4))[0]
                    vx7n = unpack("<f", f.read(4))[0]
                    vy7n = unpack("<f", f.read(4))[0]
                    vz7n = unpack("<f", f.read(4))[0]
                    type7n = unpack("B", f.read(1))[0]
                    value7n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7n = unpack("<f", f.read(4))[0]
                    vx8n = unpack("<f", f.read(4))[0]
                    vy8n = unpack("<f", f.read(4))[0]
                    vz8n = unpack("<f", f.read(4))[0]
                    type8n = unpack("B", f.read(1))[0]
                    value8n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8n = unpack("<f", f.read(4))[0]
                    vx9n = unpack("<f", f.read(4))[0]
                    vy9n = unpack("<f", f.read(4))[0]
                    vz9n = unpack("<f", f.read(4))[0]
                    type9n = unpack("B", f.read(1))[0]
                    value9n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9n = unpack("<f", f.read(4))[0]
                    vx10n = unpack("<f", f.read(4))[0]
                    vy10n = unpack("<f", f.read(4))[0]
                    vz10n = unpack("<f", f.read(4))[0]
                    type10n = unpack("B", f.read(1))[0]
                    value10n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10n = unpack("<f", f.read(4))[0]
                    vx11n = unpack("<f", f.read(4))[0]
                    vy11n = unpack("<f", f.read(4))[0]
                    vz11n = unpack("<f", f.read(4))[0]
                    type11n = unpack("B", f.read(1))[0]
                    value11n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11n = unpack("<f", f.read(4))[0]
                    vx12n = unpack("<f", f.read(4))[0]
                    vy12n = unpack("<f", f.read(4))[0]
                    vz12n = unpack("<f", f.read(4))[0]
                    type12n = unpack("B", f.read(1))[0]
                    value12n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12n = unpack("<f", f.read(4))[0]
                    vx13n = unpack("<f", f.read(4))[0]
                    vy13n = unpack("<f", f.read(4))[0]
                    vz13n = unpack("<f", f.read(4))[0]
                    type13n = unpack("B", f.read(1))[0]
                    value13n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13n = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1o = unpack("<f", f.read(4))[0]
                    vy1o = unpack("<f", f.read(4))[0]
                    vz1o = unpack("<f", f.read(4))[0]
                    type1o = unpack("B", f.read(1))[0]
                    value1o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1o = unpack("<f", f.read(4))[0]
                    vx2o = unpack("<f", f.read(4))[0]
                    vy2o = unpack("<f", f.read(4))[0]
                    vz2o = unpack("<f", f.read(4))[0]
                    type2o = unpack("B", f.read(1))[0]
                    value2o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2o = unpack("<f", f.read(4))[0]
                    vx3o = unpack("<f", f.read(4))[0]
                    vy3o = unpack("<f", f.read(4))[0]
                    vz3o = unpack("<f", f.read(4))[0]
                    type3o = unpack("B", f.read(1))[0]
                    value3o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3o = unpack("<f", f.read(4))[0]
                    vx4o = unpack("<f", f.read(4))[0]
                    vy4o = unpack("<f", f.read(4))[0]
                    vz4o = unpack("<f", f.read(4))[0]
                    type4o = unpack("B", f.read(1))[0]
                    value4o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4o = unpack("<f", f.read(4))[0]
                    vx5o = unpack("<f", f.read(4))[0]
                    vy5o = unpack("<f", f.read(4))[0]
                    vz5o = unpack("<f", f.read(4))[0]
                    type5o = unpack("B", f.read(1))[0]
                    value5o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5o = unpack("<f", f.read(4))[0]
                    vx6o = unpack("<f", f.read(4))[0]
                    vy6o = unpack("<f", f.read(4))[0]
                    vz6o = unpack("<f", f.read(4))[0]
                    type6o = unpack("B", f.read(1))[0]
                    value6o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6o = unpack("<f", f.read(4))[0]
                    vx7o = unpack("<f", f.read(4))[0]
                    vy7o = unpack("<f", f.read(4))[0]
                    vz7o = unpack("<f", f.read(4))[0]
                    type7o = unpack("B", f.read(1))[0]
                    value7o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7o = unpack("<f", f.read(4))[0]
                    vx8o = unpack("<f", f.read(4))[0]
                    vy8o = unpack("<f", f.read(4))[0]
                    vz8o = unpack("<f", f.read(4))[0]
                    type8o = unpack("B", f.read(1))[0]
                    value8o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8o = unpack("<f", f.read(4))[0]
                    vx9o = unpack("<f", f.read(4))[0]
                    vy9o = unpack("<f", f.read(4))[0]
                    vz9o = unpack("<f", f.read(4))[0]
                    type9o = unpack("B", f.read(1))[0]
                    value9o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9o = unpack("<f", f.read(4))[0]
                    vx10o = unpack("<f", f.read(4))[0]
                    vy10o = unpack("<f", f.read(4))[0]
                    vz10o = unpack("<f", f.read(4))[0]
                    type10o = unpack("B", f.read(1))[0]
                    value10o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10o = unpack("<f", f.read(4))[0]
                    vx11o = unpack("<f", f.read(4))[0]
                    vy11o = unpack("<f", f.read(4))[0]
                    vz11o = unpack("<f", f.read(4))[0]
                    type11o = unpack("B", f.read(1))[0]
                    value11o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11o = unpack("<f", f.read(4))[0]
                    vx12o = unpack("<f", f.read(4))[0]
                    vy12o = unpack("<f", f.read(4))[0]
                    vz12o = unpack("<f", f.read(4))[0]
                    type12o = unpack("B", f.read(1))[0]
                    value12o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12o = unpack("<f", f.read(4))[0]
                    vx13o = unpack("<f", f.read(4))[0]
                    vy13o = unpack("<f", f.read(4))[0]
                    vz13o = unpack("<f", f.read(4))[0]
                    type13o = unpack("B", f.read(1))[0]
                    value13o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13o = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1p = unpack("<f", f.read(4))[0]
                    vy1p = unpack("<f", f.read(4))[0]
                    vz1p = unpack("<f", f.read(4))[0]
                    type1p = unpack("B", f.read(1))[0]
                    value1p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1p = unpack("<f", f.read(4))[0]
                    vx2p = unpack("<f", f.read(4))[0]
                    vy2p = unpack("<f", f.read(4))[0]
                    vz2p = unpack("<f", f.read(4))[0]
                    type2p = unpack("B", f.read(1))[0]
                    value2p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2p = unpack("<f", f.read(4))[0]
                    vx3p = unpack("<f", f.read(4))[0]
                    vy3p = unpack("<f", f.read(4))[0]
                    vz3p = unpack("<f", f.read(4))[0]
                    type3p = unpack("B", f.read(1))[0]
                    value3p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3p = unpack("<f", f.read(4))[0]
                    vx4p = unpack("<f", f.read(4))[0]
                    vy4p = unpack("<f", f.read(4))[0]
                    vz4p = unpack("<f", f.read(4))[0]
                    type4p = unpack("B", f.read(1))[0]
                    value4p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4p = unpack("<f", f.read(4))[0]
                    vx5p = unpack("<f", f.read(4))[0]
                    vy5p = unpack("<f", f.read(4))[0]
                    vz5p = unpack("<f", f.read(4))[0]
                    type5p = unpack("B", f.read(1))[0]
                    value5p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5p = unpack("<f", f.read(4))[0]
                    vx6p = unpack("<f", f.read(4))[0]
                    vy6p = unpack("<f", f.read(4))[0]
                    vz6p = unpack("<f", f.read(4))[0]
                    type6p = unpack("B", f.read(1))[0]
                    value6p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6p = unpack("<f", f.read(4))[0]
                    vx7p = unpack("<f", f.read(4))[0]
                    vy7p = unpack("<f", f.read(4))[0]
                    vz7p = unpack("<f", f.read(4))[0]
                    type7p = unpack("B", f.read(1))[0]
                    value7p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7p = unpack("<f", f.read(4))[0]
                    vx8p = unpack("<f", f.read(4))[0]
                    vy8p = unpack("<f", f.read(4))[0]
                    vz8p = unpack("<f", f.read(4))[0]
                    type8p = unpack("B", f.read(1))[0]
                    value8p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8p = unpack("<f", f.read(4))[0]
                    vx9p = unpack("<f", f.read(4))[0]
                    vy9p = unpack("<f", f.read(4))[0]
                    vz9p = unpack("<f", f.read(4))[0]
                    type9p = unpack("B", f.read(1))[0]
                    value9p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9p = unpack("<f", f.read(4))[0]
                    vx10p = unpack("<f", f.read(4))[0]
                    vy10p = unpack("<f", f.read(4))[0]
                    vz10p = unpack("<f", f.read(4))[0]
                    type10p = unpack("B", f.read(1))[0]
                    value10p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10p = unpack("<f", f.read(4))[0]
                    vx11p = unpack("<f", f.read(4))[0]
                    vy11p = unpack("<f", f.read(4))[0]
                    vz11p = unpack("<f", f.read(4))[0]
                    type11p = unpack("B", f.read(1))[0]
                    value11p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11p = unpack("<f", f.read(4))[0]
                    vx12p = unpack("<f", f.read(4))[0]
                    vy12p = unpack("<f", f.read(4))[0]
                    vz12p = unpack("<f", f.read(4))[0]
                    type12p = unpack("B", f.read(1))[0]
                    value12p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12p = unpack("<f", f.read(4))[0]
                    vx13p = unpack("<f", f.read(4))[0]
                    vy13p = unpack("<f", f.read(4))[0]
                    vz13p = unpack("<f", f.read(4))[0]
                    type13p = unpack("B", f.read(1))[0]
                    value13p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13p = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1q = unpack("<f", f.read(4))[0]
                    vy1q = unpack("<f", f.read(4))[0]
                    vz1q = unpack("<f", f.read(4))[0]
                    type1q = unpack("B", f.read(1))[0]
                    value1q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1q = unpack("<f", f.read(4))[0]
                    vx2q = unpack("<f", f.read(4))[0]
                    vy2q = unpack("<f", f.read(4))[0]
                    vz2q = unpack("<f", f.read(4))[0]
                    type2q = unpack("B", f.read(1))[0]
                    value2q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2q = unpack("<f", f.read(4))[0]
                    vx3q = unpack("<f", f.read(4))[0]
                    vy3q = unpack("<f", f.read(4))[0]
                    vz3q = unpack("<f", f.read(4))[0]
                    type3q = unpack("B", f.read(1))[0]
                    value3q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3q = unpack("<f", f.read(4))[0]
                    vx4q = unpack("<f", f.read(4))[0]
                    vy4q = unpack("<f", f.read(4))[0]
                    vz4q = unpack("<f", f.read(4))[0]
                    type4q = unpack("B", f.read(1))[0]
                    value4q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4q = unpack("<f", f.read(4))[0]
                    vx5q = unpack("<f", f.read(4))[0]
                    vy5q = unpack("<f", f.read(4))[0]
                    vz5q = unpack("<f", f.read(4))[0]
                    type5q = unpack("B", f.read(1))[0]
                    value5q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5q = unpack("<f", f.read(4))[0]
                    vx6q = unpack("<f", f.read(4))[0]
                    vy6q = unpack("<f", f.read(4))[0]
                    vz6q = unpack("<f", f.read(4))[0]
                    type6q = unpack("B", f.read(1))[0]
                    value6q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6q = unpack("<f", f.read(4))[0]
                    vx7q = unpack("<f", f.read(4))[0]
                    vy7q = unpack("<f", f.read(4))[0]
                    vz7q = unpack("<f", f.read(4))[0]
                    type7q = unpack("B", f.read(1))[0]
                    value7q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7q = unpack("<f", f.read(4))[0]
                    vx8q = unpack("<f", f.read(4))[0]
                    vy8q = unpack("<f", f.read(4))[0]
                    vz8q = unpack("<f", f.read(4))[0]
                    type8q = unpack("B", f.read(1))[0]
                    value8q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8q = unpack("<f", f.read(4))[0]
                    vx9q = unpack("<f", f.read(4))[0]
                    vy9q = unpack("<f", f.read(4))[0]
                    vz9q = unpack("<f", f.read(4))[0]
                    type9q = unpack("B", f.read(1))[0]
                    value9q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9q = unpack("<f", f.read(4))[0]
                    vx10q = unpack("<f", f.read(4))[0]
                    vy10q = unpack("<f", f.read(4))[0]
                    vz10q = unpack("<f", f.read(4))[0]
                    type10q = unpack("B", f.read(1))[0]
                    value10q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10q = unpack("<f", f.read(4))[0]
                    vx11q = unpack("<f", f.read(4))[0]
                    vy11q = unpack("<f", f.read(4))[0]
                    vz11q = unpack("<f", f.read(4))[0]
                    type11q = unpack("B", f.read(1))[0]
                    value11q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11q = unpack("<f", f.read(4))[0]
                    vx12q = unpack("<f", f.read(4))[0]
                    vy12q = unpack("<f", f.read(4))[0]
                    vz12q = unpack("<f", f.read(4))[0]
                    type12q = unpack("B", f.read(1))[0]
                    value12q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12q = unpack("<f", f.read(4))[0]
                    vx13q = unpack("<f", f.read(4))[0]
                    vy13q = unpack("<f", f.read(4))[0]
                    vz13q = unpack("<f", f.read(4))[0]
                    type13q = unpack("B", f.read(1))[0]
                    value13q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13q = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1r = unpack("<f", f.read(4))[0]
                    vy1r = unpack("<f", f.read(4))[0]
                    vz1r = unpack("<f", f.read(4))[0]
                    type1r = unpack("B", f.read(1))[0]
                    value1r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1r = unpack("<f", f.read(4))[0]
                    vx2r = unpack("<f", f.read(4))[0]
                    vy2r = unpack("<f", f.read(4))[0]
                    vz2r = unpack("<f", f.read(4))[0]
                    type2r = unpack("B", f.read(1))[0]
                    value2r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2r = unpack("<f", f.read(4))[0]
                    vx3r = unpack("<f", f.read(4))[0]
                    vy3r = unpack("<f", f.read(4))[0]
                    vz3r = unpack("<f", f.read(4))[0]
                    type3r = unpack("B", f.read(1))[0]
                    value3r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3r = unpack("<f", f.read(4))[0]
                    vx4r = unpack("<f", f.read(4))[0]
                    vy4r = unpack("<f", f.read(4))[0]
                    vz4r = unpack("<f", f.read(4))[0]
                    type4r = unpack("B", f.read(1))[0]
                    value4r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4r = unpack("<f", f.read(4))[0]
                    vx5r = unpack("<f", f.read(4))[0]
                    vy5r = unpack("<f", f.read(4))[0]
                    vz5r = unpack("<f", f.read(4))[0]
                    type5r = unpack("B", f.read(1))[0]
                    value5r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5r = unpack("<f", f.read(4))[0]
                    vx6r = unpack("<f", f.read(4))[0]
                    vy6r = unpack("<f", f.read(4))[0]
                    vz6r = unpack("<f", f.read(4))[0]
                    type6r = unpack("B", f.read(1))[0]
                    value6r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6r = unpack("<f", f.read(4))[0]
                    vx7r = unpack("<f", f.read(4))[0]
                    vy7r = unpack("<f", f.read(4))[0]
                    vz7r = unpack("<f", f.read(4))[0]
                    type7r = unpack("B", f.read(1))[0]
                    value7r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7r = unpack("<f", f.read(4))[0]
                    vx8r = unpack("<f", f.read(4))[0]
                    vy8r = unpack("<f", f.read(4))[0]
                    vz8r = unpack("<f", f.read(4))[0]
                    type8r = unpack("B", f.read(1))[0]
                    value8r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8r = unpack("<f", f.read(4))[0]
                    vx9r = unpack("<f", f.read(4))[0]
                    vy9r = unpack("<f", f.read(4))[0]
                    vz9r = unpack("<f", f.read(4))[0]
                    type9r = unpack("B", f.read(1))[0]
                    value9r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9r = unpack("<f", f.read(4))[0]
                    vx10r = unpack("<f", f.read(4))[0]
                    vy10r = unpack("<f", f.read(4))[0]
                    vz10r = unpack("<f", f.read(4))[0]
                    type10r = unpack("B", f.read(1))[0]
                    value10r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10r = unpack("<f", f.read(4))[0]
                    vx11r = unpack("<f", f.read(4))[0]
                    vy11r = unpack("<f", f.read(4))[0]
                    vz11r = unpack("<f", f.read(4))[0]
                    type11r = unpack("B", f.read(1))[0]
                    value11r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11r = unpack("<f", f.read(4))[0]
                    vx12r = unpack("<f", f.read(4))[0]
                    vy12r = unpack("<f", f.read(4))[0]
                    vz12r = unpack("<f", f.read(4))[0]
                    type12r = unpack("B", f.read(1))[0]
                    value12r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12r = unpack("<f", f.read(4))[0]
                    vx13r = unpack("<f", f.read(4))[0]
                    vy13r = unpack("<f", f.read(4))[0]
                    vz13r = unpack("<f", f.read(4))[0]
                    type13r = unpack("B", f.read(1))[0]
                    value13r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13r = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1s = unpack("<f", f.read(4))[0]
                    vy1s = unpack("<f", f.read(4))[0]
                    vz1s = unpack("<f", f.read(4))[0]
                    type1s = unpack("B", f.read(1))[0]
                    value1s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1s = unpack("<f", f.read(4))[0]
                    vx2s = unpack("<f", f.read(4))[0]
                    vy2s = unpack("<f", f.read(4))[0]
                    vz2s = unpack("<f", f.read(4))[0]
                    type2s = unpack("B", f.read(1))[0]
                    value2s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2s = unpack("<f", f.read(4))[0]
                    vx3s = unpack("<f", f.read(4))[0]
                    vy3s = unpack("<f", f.read(4))[0]
                    vz3s = unpack("<f", f.read(4))[0]
                    type3s = unpack("B", f.read(1))[0]
                    value3s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3s = unpack("<f", f.read(4))[0]
                    vx4s = unpack("<f", f.read(4))[0]
                    vy4s = unpack("<f", f.read(4))[0]
                    vz4s = unpack("<f", f.read(4))[0]
                    type4s = unpack("B", f.read(1))[0]
                    value4s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4s = unpack("<f", f.read(4))[0]
                    vx5s = unpack("<f", f.read(4))[0]
                    vy5s = unpack("<f", f.read(4))[0]
                    vz5s = unpack("<f", f.read(4))[0]
                    type5s = unpack("B", f.read(1))[0]
                    value5s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5s = unpack("<f", f.read(4))[0]
                    vx6s = unpack("<f", f.read(4))[0]
                    vy6s = unpack("<f", f.read(4))[0]
                    vz6s = unpack("<f", f.read(4))[0]
                    type6s = unpack("B", f.read(1))[0]
                    value6s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6s = unpack("<f", f.read(4))[0]
                    vx7s = unpack("<f", f.read(4))[0]
                    vy7s = unpack("<f", f.read(4))[0]
                    vz7s = unpack("<f", f.read(4))[0]
                    type7s = unpack("B", f.read(1))[0]
                    value7s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7s = unpack("<f", f.read(4))[0]
                    vx8s = unpack("<f", f.read(4))[0]
                    vy8s = unpack("<f", f.read(4))[0]
                    vz8s = unpack("<f", f.read(4))[0]
                    type8s = unpack("B", f.read(1))[0]
                    value8s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8s = unpack("<f", f.read(4))[0]
                    vx9s = unpack("<f", f.read(4))[0]
                    vy9s = unpack("<f", f.read(4))[0]
                    vz9s = unpack("<f", f.read(4))[0]
                    type9s = unpack("B", f.read(1))[0]
                    value9s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9s = unpack("<f", f.read(4))[0]
                    vx10s = unpack("<f", f.read(4))[0]
                    vy10s = unpack("<f", f.read(4))[0]
                    vz10s = unpack("<f", f.read(4))[0]
                    type10s = unpack("B", f.read(1))[0]
                    value10s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10s = unpack("<f", f.read(4))[0]
                    vx11s = unpack("<f", f.read(4))[0]
                    vy11s = unpack("<f", f.read(4))[0]
                    vz11s = unpack("<f", f.read(4))[0]
                    type11s = unpack("B", f.read(1))[0]
                    value11s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11s = unpack("<f", f.read(4))[0]
                    vx12s = unpack("<f", f.read(4))[0]
                    vy12s = unpack("<f", f.read(4))[0]
                    vz12s = unpack("<f", f.read(4))[0]
                    type12s = unpack("B", f.read(1))[0]
                    value12s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12s = unpack("<f", f.read(4))[0]
                    vx13s = unpack("<f", f.read(4))[0]
                    vy13s = unpack("<f", f.read(4))[0]
                    vz13s = unpack("<f", f.read(4))[0]
                    type13s = unpack("B", f.read(1))[0]
                    value13s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13s = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1t = unpack("<f", f.read(4))[0]
                    vy1t = unpack("<f", f.read(4))[0]
                    vz1t = unpack("<f", f.read(4))[0]
                    type1t = unpack("B", f.read(1))[0]
                    value1t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1t = unpack("<f", f.read(4))[0]
                    vx2t = unpack("<f", f.read(4))[0]
                    vy2t = unpack("<f", f.read(4))[0]
                    vz2t = unpack("<f", f.read(4))[0]
                    type2t = unpack("B", f.read(1))[0]
                    value2t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2t = unpack("<f", f.read(4))[0]
                    vx3t = unpack("<f", f.read(4))[0]
                    vy3t = unpack("<f", f.read(4))[0]
                    vz3t = unpack("<f", f.read(4))[0]
                    type3t = unpack("B", f.read(1))[0]
                    value3t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3t = unpack("<f", f.read(4))[0]
                    vx4t = unpack("<f", f.read(4))[0]
                    vy4t = unpack("<f", f.read(4))[0]
                    vz4t = unpack("<f", f.read(4))[0]
                    type4t = unpack("B", f.read(1))[0]
                    value4t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4t = unpack("<f", f.read(4))[0]
                    vx5t = unpack("<f", f.read(4))[0]
                    vy5t = unpack("<f", f.read(4))[0]
                    vz5t = unpack("<f", f.read(4))[0]
                    type5t = unpack("B", f.read(1))[0]
                    value5t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5t = unpack("<f", f.read(4))[0]
                    vx6t = unpack("<f", f.read(4))[0]
                    vy6t = unpack("<f", f.read(4))[0]
                    vz6t = unpack("<f", f.read(4))[0]
                    type6t = unpack("B", f.read(1))[0]
                    value6t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6t = unpack("<f", f.read(4))[0]
                    vx7t = unpack("<f", f.read(4))[0]
                    vy7t = unpack("<f", f.read(4))[0]
                    vz7t = unpack("<f", f.read(4))[0]
                    type7t = unpack("B", f.read(1))[0]
                    value7t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7t = unpack("<f", f.read(4))[0]
                    vx8t = unpack("<f", f.read(4))[0]
                    vy8t = unpack("<f", f.read(4))[0]
                    vz8t = unpack("<f", f.read(4))[0]
                    type8t = unpack("B", f.read(1))[0]
                    value8t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8t = unpack("<f", f.read(4))[0]
                    vx9t = unpack("<f", f.read(4))[0]
                    vy9t = unpack("<f", f.read(4))[0]
                    vz9t = unpack("<f", f.read(4))[0]
                    type9t = unpack("B", f.read(1))[0]
                    value9t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9t = unpack("<f", f.read(4))[0]
                    vx10t = unpack("<f", f.read(4))[0]
                    vy10t = unpack("<f", f.read(4))[0]
                    vz10t = unpack("<f", f.read(4))[0]
                    type10t = unpack("B", f.read(1))[0]
                    value10t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10t = unpack("<f", f.read(4))[0]
                    vx11t = unpack("<f", f.read(4))[0]
                    vy11t = unpack("<f", f.read(4))[0]
                    vz11t = unpack("<f", f.read(4))[0]
                    type11t = unpack("B", f.read(1))[0]
                    value11t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11t = unpack("<f", f.read(4))[0]
                    vx12t = unpack("<f", f.read(4))[0]
                    vy12t = unpack("<f", f.read(4))[0]
                    vz12t = unpack("<f", f.read(4))[0]
                    type12t = unpack("B", f.read(1))[0]
                    value12t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12t = unpack("<f", f.read(4))[0]
                    vx13t = unpack("<f", f.read(4))[0]
                    vy13t = unpack("<f", f.read(4))[0]
                    vz13t = unpack("<f", f.read(4))[0]
                    type13t = unpack("B", f.read(1))[0]
                    value13t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13t = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1u = unpack("<f", f.read(4))[0]
                    vy1u = unpack("<f", f.read(4))[0]
                    vz1u = unpack("<f", f.read(4))[0]
                    type1u = unpack("B", f.read(1))[0]
                    value1u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1u = unpack("<f", f.read(4))[0]
                    vx2u = unpack("<f", f.read(4))[0]
                    vy2u = unpack("<f", f.read(4))[0]
                    vz2u = unpack("<f", f.read(4))[0]
                    type2u = unpack("B", f.read(1))[0]
                    value2u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2u = unpack("<f", f.read(4))[0]
                    vx3u = unpack("<f", f.read(4))[0]
                    vy3u = unpack("<f", f.read(4))[0]
                    vz3u = unpack("<f", f.read(4))[0]
                    type3u = unpack("B", f.read(1))[0]
                    value3u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3u = unpack("<f", f.read(4))[0]
                    vx4u = unpack("<f", f.read(4))[0]
                    vy4u = unpack("<f", f.read(4))[0]
                    vz4u = unpack("<f", f.read(4))[0]
                    type4u = unpack("B", f.read(1))[0]
                    value4u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4u = unpack("<f", f.read(4))[0]
                    vx5u = unpack("<f", f.read(4))[0]
                    vy5u = unpack("<f", f.read(4))[0]
                    vz5u = unpack("<f", f.read(4))[0]
                    type5u = unpack("B", f.read(1))[0]
                    value5u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5u = unpack("<f", f.read(4))[0]
                    vx6u = unpack("<f", f.read(4))[0]
                    vy6u = unpack("<f", f.read(4))[0]
                    vz6u = unpack("<f", f.read(4))[0]
                    type6u = unpack("B", f.read(1))[0]
                    value6u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6u = unpack("<f", f.read(4))[0]
                    vx7u = unpack("<f", f.read(4))[0]
                    vy7u = unpack("<f", f.read(4))[0]
                    vz7u = unpack("<f", f.read(4))[0]
                    type7u = unpack("B", f.read(1))[0]
                    value7u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7u = unpack("<f", f.read(4))[0]
                    vx8u = unpack("<f", f.read(4))[0]
                    vy8u = unpack("<f", f.read(4))[0]
                    vz8u = unpack("<f", f.read(4))[0]
                    type8u = unpack("B", f.read(1))[0]
                    value8u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8u = unpack("<f", f.read(4))[0]
                    vx9u = unpack("<f", f.read(4))[0]
                    vy9u = unpack("<f", f.read(4))[0]
                    vz9u = unpack("<f", f.read(4))[0]
                    type9u = unpack("B", f.read(1))[0]
                    value9u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9u = unpack("<f", f.read(4))[0]
                    vx10u = unpack("<f", f.read(4))[0]
                    vy10u = unpack("<f", f.read(4))[0]
                    vz10u = unpack("<f", f.read(4))[0]
                    type10u = unpack("B", f.read(1))[0]
                    value10u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10u = unpack("<f", f.read(4))[0]
                    vx11u = unpack("<f", f.read(4))[0]
                    vy11u = unpack("<f", f.read(4))[0]
                    vz11u = unpack("<f", f.read(4))[0]
                    type11u = unpack("B", f.read(1))[0]
                    value11u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11u = unpack("<f", f.read(4))[0]
                    vx12u = unpack("<f", f.read(4))[0]
                    vy12u = unpack("<f", f.read(4))[0]
                    vz12u = unpack("<f", f.read(4))[0]
                    type12u = unpack("B", f.read(1))[0]
                    value12u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12u = unpack("<f", f.read(4))[0]
                    vx13u = unpack("<f", f.read(4))[0]
                    vy13u = unpack("<f", f.read(4))[0]
                    vz13u = unpack("<f", f.read(4))[0]
                    type13u = unpack("B", f.read(1))[0]
                    value13u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13u = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1v = unpack("<f", f.read(4))[0]
                    vy1v = unpack("<f", f.read(4))[0]
                    vz1v = unpack("<f", f.read(4))[0]
                    type1v = unpack("B", f.read(1))[0]
                    value1v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1v = unpack("<f", f.read(4))[0]
                    vx2v = unpack("<f", f.read(4))[0]
                    vy2v = unpack("<f", f.read(4))[0]
                    vz2v = unpack("<f", f.read(4))[0]
                    type2v = unpack("B", f.read(1))[0]
                    value2v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2v = unpack("<f", f.read(4))[0]
                    vx3v = unpack("<f", f.read(4))[0]
                    vy3v = unpack("<f", f.read(4))[0]
                    vz3v = unpack("<f", f.read(4))[0]
                    type3v = unpack("B", f.read(1))[0]
                    value3v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3v = unpack("<f", f.read(4))[0]
                    vx4v = unpack("<f", f.read(4))[0]
                    vy4v = unpack("<f", f.read(4))[0]
                    vz4v = unpack("<f", f.read(4))[0]
                    type4v = unpack("B", f.read(1))[0]
                    value4v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4v = unpack("<f", f.read(4))[0]
                    vx5v = unpack("<f", f.read(4))[0]
                    vy5v = unpack("<f", f.read(4))[0]
                    vz5v = unpack("<f", f.read(4))[0]
                    type5v = unpack("B", f.read(1))[0]
                    value5v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5v = unpack("<f", f.read(4))[0]
                    vx6v = unpack("<f", f.read(4))[0]
                    vy6v = unpack("<f", f.read(4))[0]
                    vz6v = unpack("<f", f.read(4))[0]
                    type6v = unpack("B", f.read(1))[0]
                    value6v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6v = unpack("<f", f.read(4))[0]
                    vx7v = unpack("<f", f.read(4))[0]
                    vy7v = unpack("<f", f.read(4))[0]
                    vz7v = unpack("<f", f.read(4))[0]
                    type7v = unpack("B", f.read(1))[0]
                    value7v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7v = unpack("<f", f.read(4))[0]
                    vx8v = unpack("<f", f.read(4))[0]
                    vy8v = unpack("<f", f.read(4))[0]
                    vz8v = unpack("<f", f.read(4))[0]
                    type8v = unpack("B", f.read(1))[0]
                    value8v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8v = unpack("<f", f.read(4))[0]
                    vx9v = unpack("<f", f.read(4))[0]
                    vy9v = unpack("<f", f.read(4))[0]
                    vz9v = unpack("<f", f.read(4))[0]
                    type9v = unpack("B", f.read(1))[0]
                    value9v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9v = unpack("<f", f.read(4))[0]
                    vx10v = unpack("<f", f.read(4))[0]
                    vy10v = unpack("<f", f.read(4))[0]
                    vz10v = unpack("<f", f.read(4))[0]
                    type10v = unpack("B", f.read(1))[0]
                    value10v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10v = unpack("<f", f.read(4))[0]
                    vx11v = unpack("<f", f.read(4))[0]
                    vy11v = unpack("<f", f.read(4))[0]
                    vz11v = unpack("<f", f.read(4))[0]
                    type11v = unpack("B", f.read(1))[0]
                    value11v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11v = unpack("<f", f.read(4))[0]
                    vx12v = unpack("<f", f.read(4))[0]
                    vy12v = unpack("<f", f.read(4))[0]
                    vz12v = unpack("<f", f.read(4))[0]
                    type12v = unpack("B", f.read(1))[0]
                    value12v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12v = unpack("<f", f.read(4))[0]
                    vx13v = unpack("<f", f.read(4))[0]
                    vy13v = unpack("<f", f.read(4))[0]
                    vz13v = unpack("<f", f.read(4))[0]
                    type13v = unpack("B", f.read(1))[0]
                    value13v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13v = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1w = unpack("<f", f.read(4))[0]
                    vy1w = unpack("<f", f.read(4))[0]
                    vz1w = unpack("<f", f.read(4))[0]
                    type1w = unpack("B", f.read(1))[0]
                    value1w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1w = unpack("<f", f.read(4))[0]
                    vx2w = unpack("<f", f.read(4))[0]
                    vy2w = unpack("<f", f.read(4))[0]
                    vz2w = unpack("<f", f.read(4))[0]
                    type2w = unpack("B", f.read(1))[0]
                    value2w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2w = unpack("<f", f.read(4))[0]
                    vx3w = unpack("<f", f.read(4))[0]
                    vy3w = unpack("<f", f.read(4))[0]
                    vz3w = unpack("<f", f.read(4))[0]
                    type3w = unpack("B", f.read(1))[0]
                    value3w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3w = unpack("<f", f.read(4))[0]
                    vx4w = unpack("<f", f.read(4))[0]
                    vy4w = unpack("<f", f.read(4))[0]
                    vz4w = unpack("<f", f.read(4))[0]
                    type4w = unpack("B", f.read(1))[0]
                    value4w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4w = unpack("<f", f.read(4))[0]
                    vx5w = unpack("<f", f.read(4))[0]
                    vy5w = unpack("<f", f.read(4))[0]
                    vz5w = unpack("<f", f.read(4))[0]
                    type5w = unpack("B", f.read(1))[0]
                    value5w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5w = unpack("<f", f.read(4))[0]
                    vx6w = unpack("<f", f.read(4))[0]
                    vy6w = unpack("<f", f.read(4))[0]
                    vz6w = unpack("<f", f.read(4))[0]
                    type6w = unpack("B", f.read(1))[0]
                    value6w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6w = unpack("<f", f.read(4))[0]
                    vx7w = unpack("<f", f.read(4))[0]
                    vy7w = unpack("<f", f.read(4))[0]
                    vz7w = unpack("<f", f.read(4))[0]
                    type7w = unpack("B", f.read(1))[0]
                    value7w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7w = unpack("<f", f.read(4))[0]
                    vx8w = unpack("<f", f.read(4))[0]
                    vy8w = unpack("<f", f.read(4))[0]
                    vz8w = unpack("<f", f.read(4))[0]
                    type8w = unpack("B", f.read(1))[0]
                    value8w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8w = unpack("<f", f.read(4))[0]
                    vx9w = unpack("<f", f.read(4))[0]
                    vy9w = unpack("<f", f.read(4))[0]
                    vz9w = unpack("<f", f.read(4))[0]
                    type9w = unpack("B", f.read(1))[0]
                    value9w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9w = unpack("<f", f.read(4))[0]
                    vx10w = unpack("<f", f.read(4))[0]
                    vy10w = unpack("<f", f.read(4))[0]
                    vz10w = unpack("<f", f.read(4))[0]
                    type10w = unpack("B", f.read(1))[0]
                    value10w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10w = unpack("<f", f.read(4))[0]
                    vx11w = unpack("<f", f.read(4))[0]
                    vy11w = unpack("<f", f.read(4))[0]
                    vz11w = unpack("<f", f.read(4))[0]
                    type11w = unpack("B", f.read(1))[0]
                    value11w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11w = unpack("<f", f.read(4))[0]
                    vx12w = unpack("<f", f.read(4))[0]
                    vy12w = unpack("<f", f.read(4))[0]
                    vz12w = unpack("<f", f.read(4))[0]
                    type12w = unpack("B", f.read(1))[0]
                    value12w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12w = unpack("<f", f.read(4))[0]
                    vx13w = unpack("<f", f.read(4))[0]
                    vy13w = unpack("<f", f.read(4))[0]
                    vz13w = unpack("<f", f.read(4))[0]
                    type13w = unpack("B", f.read(1))[0]
                    value13w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13w = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)



                    vx1x = unpack("<f", f.read(4))[0]
                    vy1x = unpack("<f", f.read(4))[0]
                    vz1x = unpack("<f", f.read(4))[0]
                    type1x = unpack("B", f.read(1))[0]
                    value1x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1x = unpack("<f", f.read(4))[0]
                    vx2x = unpack("<f", f.read(4))[0]
                    vy2x = unpack("<f", f.read(4))[0]
                    vz2x = unpack("<f", f.read(4))[0]
                    type2x = unpack("B", f.read(1))[0]
                    value2x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2x = unpack("<f", f.read(4))[0]
                    vx3x = unpack("<f", f.read(4))[0]
                    vy3x = unpack("<f", f.read(4))[0]
                    vz3x = unpack("<f", f.read(4))[0]
                    type3x = unpack("B", f.read(1))[0]
                    value3x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3x = unpack("<f", f.read(4))[0]
                    vx4x = unpack("<f", f.read(4))[0]
                    vy4x = unpack("<f", f.read(4))[0]
                    vz4x = unpack("<f", f.read(4))[0]
                    type4x = unpack("B", f.read(1))[0]
                    value4x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4x = unpack("<f", f.read(4))[0]
                    vx5x = unpack("<f", f.read(4))[0]
                    vy5x = unpack("<f", f.read(4))[0]
                    vz5x = unpack("<f", f.read(4))[0]
                    type5x = unpack("B", f.read(1))[0]
                    value5x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5x = unpack("<f", f.read(4))[0]
                    vx6x = unpack("<f", f.read(4))[0]
                    vy6x = unpack("<f", f.read(4))[0]
                    vz6x = unpack("<f", f.read(4))[0]
                    type6x = unpack("B", f.read(1))[0]
                    value6x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6x = unpack("<f", f.read(4))[0]
                    vx7x = unpack("<f", f.read(4))[0]
                    vy7x = unpack("<f", f.read(4))[0]
                    vz7x = unpack("<f", f.read(4))[0]
                    type7x = unpack("B", f.read(1))[0]
                    value7x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7x = unpack("<f", f.read(4))[0]
                    vx8x = unpack("<f", f.read(4))[0]
                    vy8x = unpack("<f", f.read(4))[0]
                    vz8x = unpack("<f", f.read(4))[0]
                    type8x = unpack("B", f.read(1))[0]
                    value8x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8x = unpack("<f", f.read(4))[0]
                    vx9x = unpack("<f", f.read(4))[0]
                    vy9x = unpack("<f", f.read(4))[0]
                    vz9x = unpack("<f", f.read(4))[0]
                    type9x = unpack("B", f.read(1))[0]
                    value9x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9x = unpack("<f", f.read(4))[0]
                    vx10x = unpack("<f", f.read(4))[0]
                    vy10x = unpack("<f", f.read(4))[0]
                    vz10x = unpack("<f", f.read(4))[0]
                    type10x = unpack("B", f.read(1))[0]
                    value10x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10x = unpack("<f", f.read(4))[0]
                    vx11x = unpack("<f", f.read(4))[0]
                    vy11x = unpack("<f", f.read(4))[0]
                    vz11x = unpack("<f", f.read(4))[0]
                    type11x = unpack("B", f.read(1))[0]
                    value11x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11x = unpack("<f", f.read(4))[0]
                    vx12x = unpack("<f", f.read(4))[0]
                    vy12x = unpack("<f", f.read(4))[0]
                    vz12x = unpack("<f", f.read(4))[0]
                    type12x = unpack("B", f.read(1))[0]
                    value12x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12x = unpack("<f", f.read(4))[0]
                    vx13x = unpack("<f", f.read(4))[0]
                    vy13x = unpack("<f", f.read(4))[0]
                    vz13x = unpack("<f", f.read(4))[0]
                    type13x = unpack("B", f.read(1))[0]
                    value13x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13x = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1y = unpack("<f", f.read(4))[0]
                    vy1y = unpack("<f", f.read(4))[0]
                    vz1y = unpack("<f", f.read(4))[0]
                    type1y = unpack("B", f.read(1))[0]
                    value1y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1y = unpack("<f", f.read(4))[0]
                    vx2y = unpack("<f", f.read(4))[0]
                    vy2y = unpack("<f", f.read(4))[0]
                    vz2y = unpack("<f", f.read(4))[0]
                    type2y = unpack("B", f.read(1))[0]
                    value2y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2y = unpack("<f", f.read(4))[0]
                    vx3y = unpack("<f", f.read(4))[0]
                    vy3y = unpack("<f", f.read(4))[0]
                    vz3y = unpack("<f", f.read(4))[0]
                    type3y = unpack("B", f.read(1))[0]
                    value3y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3y = unpack("<f", f.read(4))[0]
                    vx4y = unpack("<f", f.read(4))[0]
                    vy4y = unpack("<f", f.read(4))[0]
                    vz4y = unpack("<f", f.read(4))[0]
                    type4y = unpack("B", f.read(1))[0]
                    value4y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4y = unpack("<f", f.read(4))[0]
                    vx5y = unpack("<f", f.read(4))[0]
                    vy5y = unpack("<f", f.read(4))[0]
                    vz5y = unpack("<f", f.read(4))[0]
                    type5y = unpack("B", f.read(1))[0]
                    value5y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5y = unpack("<f", f.read(4))[0]
                    vx6y = unpack("<f", f.read(4))[0]
                    vy6y = unpack("<f", f.read(4))[0]
                    vz6y = unpack("<f", f.read(4))[0]
                    type6y = unpack("B", f.read(1))[0]
                    value6y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6y = unpack("<f", f.read(4))[0]
                    vx7y = unpack("<f", f.read(4))[0]
                    vy7y = unpack("<f", f.read(4))[0]
                    vz7y = unpack("<f", f.read(4))[0]
                    type7y = unpack("B", f.read(1))[0]
                    value7y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7y = unpack("<f", f.read(4))[0]
                    vx8y = unpack("<f", f.read(4))[0]
                    vy8y = unpack("<f", f.read(4))[0]
                    vz8y = unpack("<f", f.read(4))[0]
                    type8y = unpack("B", f.read(1))[0]
                    value8y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8y = unpack("<f", f.read(4))[0]
                    vx9y = unpack("<f", f.read(4))[0]
                    vy9y = unpack("<f", f.read(4))[0]
                    vz9y = unpack("<f", f.read(4))[0]
                    type9y = unpack("B", f.read(1))[0]
                    value9y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9y = unpack("<f", f.read(4))[0]
                    vx10y = unpack("<f", f.read(4))[0]
                    vy10y = unpack("<f", f.read(4))[0]
                    vz10y = unpack("<f", f.read(4))[0]
                    type10y = unpack("B", f.read(1))[0]
                    value10y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10y = unpack("<f", f.read(4))[0]
                    vx11y = unpack("<f", f.read(4))[0]
                    vy11y = unpack("<f", f.read(4))[0]
                    vz11y = unpack("<f", f.read(4))[0]
                    type11y = unpack("B", f.read(1))[0]
                    value11y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11y = unpack("<f", f.read(4))[0]
                    vx12y = unpack("<f", f.read(4))[0]
                    vy12y = unpack("<f", f.read(4))[0]
                    vz12y = unpack("<f", f.read(4))[0]
                    type12y = unpack("B", f.read(1))[0]
                    value12y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12y = unpack("<f", f.read(4))[0]
                    vx13y = unpack("<f", f.read(4))[0]
                    vy13y = unpack("<f", f.read(4))[0]
                    vz13y = unpack("<f", f.read(4))[0]
                    type13y = unpack("B", f.read(1))[0]
                    value13y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13y = unpack("<f", f.read(4))[0]

                    f.seek(-208,1)

                    vx1z = unpack("<f", f.read(4))[0]
                    vy1z = unpack("<f", f.read(4))[0]
                    vz1z = unpack("<f", f.read(4))[0]
                    type1z = unpack("B", f.read(1))[0]
                    value1z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1z = unpack("<f", f.read(4))[0]
                    vx2z = unpack("<f", f.read(4))[0]
                    vy2z = unpack("<f", f.read(4))[0]
                    vz2z = unpack("<f", f.read(4))[0]
                    type2z = unpack("B", f.read(1))[0]
                    value2z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2z = unpack("<f", f.read(4))[0]
                    vx3z = unpack("<f", f.read(4))[0]
                    vy3z = unpack("<f", f.read(4))[0]
                    vz3z = unpack("<f", f.read(4))[0]
                    type3z = unpack("B", f.read(1))[0]
                    value3z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3z = unpack("<f", f.read(4))[0]
                    vx4z = unpack("<f", f.read(4))[0]
                    vy4z = unpack("<f", f.read(4))[0]
                    vz4z = unpack("<f", f.read(4))[0]
                    type4z = unpack("B", f.read(1))[0]
                    value4z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4z = unpack("<f", f.read(4))[0]
                    vx5z = unpack("<f", f.read(4))[0]
                    vy5z = unpack("<f", f.read(4))[0]
                    vz5z = unpack("<f", f.read(4))[0]
                    type5z = unpack("B", f.read(1))[0]
                    value5z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5z = unpack("<f", f.read(4))[0]
                    vx6z = unpack("<f", f.read(4))[0]
                    vy6z = unpack("<f", f.read(4))[0]
                    vz6z = unpack("<f", f.read(4))[0]
                    type6z = unpack("B", f.read(1))[0]
                    value6z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6z = unpack("<f", f.read(4))[0]
                    vx7z = unpack("<f", f.read(4))[0]
                    vy7z = unpack("<f", f.read(4))[0]
                    vz7z = unpack("<f", f.read(4))[0]
                    type7z = unpack("B", f.read(1))[0]
                    value7z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7z = unpack("<f", f.read(4))[0]
                    vx8z = unpack("<f", f.read(4))[0]
                    vy8z = unpack("<f", f.read(4))[0]
                    vz8z = unpack("<f", f.read(4))[0]
                    type8z = unpack("B", f.read(1))[0]
                    value8z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8z = unpack("<f", f.read(4))[0]
                    vx9z = unpack("<f", f.read(4))[0]
                    vy9z = unpack("<f", f.read(4))[0]
                    vz9z = unpack("<f", f.read(4))[0]
                    type9z = unpack("B", f.read(1))[0]
                    value9z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9z = unpack("<f", f.read(4))[0]
                    vx10z = unpack("<f", f.read(4))[0]
                    vy10z = unpack("<f", f.read(4))[0]
                    vz10z = unpack("<f", f.read(4))[0]
                    type10z = unpack("B", f.read(1))[0]
                    value10z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10z = unpack("<f", f.read(4))[0]
                    vx11z = unpack("<f", f.read(4))[0]
                    vy11z = unpack("<f", f.read(4))[0]
                    vz11z = unpack("<f", f.read(4))[0]
                    type11z = unpack("B", f.read(1))[0]
                    value11z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11z = unpack("<f", f.read(4))[0]
                    vx12z = unpack("<f", f.read(4))[0]
                    vy12z = unpack("<f", f.read(4))[0]
                    vz12z = unpack("<f", f.read(4))[0]
                    type12z = unpack("B", f.read(1))[0]
                    value12z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12z = unpack("<f", f.read(4))[0]
                    vx13z = unpack("<f", f.read(4))[0]
                    vy13z = unpack("<f", f.read(4))[0]
                    vz13z = unpack("<f", f.read(4))[0]
                    type13z = unpack("B", f.read(1))[0]
                    value13z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13z = unpack("<f", f.read(4))[0]

                    

                    fa1 = bm_1i.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1i.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1i.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1i.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1i.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1i.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1i.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1i.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1i.verts.new([-vx9,-vy9,-vz9]) # 8
                    fj1 = bm_1i.verts.new([-vx10,-vy10,-vz10]) # 9
                    fk1 = bm_1i.verts.new([-vx11,-vy11,-vz11]) # 10
                    fl1 = bm_1i.verts.new([-vx12,-vy12,-vz12]) # 11
                    fm1 = bm_1i.verts.new([-vx13,-vy13,-vz13]) # 12

                    fa1a = bm_1ii.verts.new([-vx1a,-vy1a,-vz1a]) # 0
                    fb1a = bm_1ii.verts.new([-vx2a,-vy2a,-vz2a]) # 1
                    fc1a = bm_1ii.verts.new([-vx3a,-vy3a,-vz3a]) # 2
                    fd1a = bm_1ii.verts.new([-vx4a,-vy4a,-vz4a]) # 3
                    fe1a = bm_1ii.verts.new([-vx5a,-vy5a,-vz5a]) # 4
                    ff1a = bm_1ii.verts.new([-vx6a,-vy6a,-vz6a]) # 5
                    fg1a = bm_1ii.verts.new([-vx7a,-vy7a,-vz7a]) # 6
                    fh1a = bm_1ii.verts.new([-vx8a,-vy8a,-vz8a]) # 7
                    fi1a = bm_1ii.verts.new([-vx9a,-vy9a,-vz9a]) # 8
                    fj1a = bm_1ii.verts.new([-vx10a,-vy10a,-vz10a]) # 9
                    fk1a = bm_1ii.verts.new([-vx11a,-vy11a,-vz11a]) # 10
                    fl1a = bm_1ii.verts.new([-vx12a,-vy12a,-vz12a]) # 11
                    fm1a = bm_1ii.verts.new([-vx13a,-vy13a,-vz13a]) # 12

                    fa1b = bm_1iii.verts.new([-vx1b,-vy1b,-vz1b]) # 0
                    fb1b = bm_1iii.verts.new([-vx2b,-vy2b,-vz2b]) # 1
                    fc1b = bm_1iii.verts.new([-vx3b,-vy3b,-vz3b]) # 2
                    fd1b = bm_1iii.verts.new([-vx4b,-vy4b,-vz4b]) # 3
                    fe1b = bm_1iii.verts.new([-vx5b,-vy5b,-vz5b]) # 4
                    ff1b = bm_1iii.verts.new([-vx6b,-vy6b,-vz6b]) # 5
                    fg1b = bm_1iii.verts.new([-vx7b,-vy7b,-vz7b]) # 6
                    fh1b = bm_1iii.verts.new([-vx8b,-vy8b,-vz8b]) # 7
                    fi1b = bm_1iii.verts.new([-vx9b,-vy9b,-vz9b]) # 8
                    fj1b = bm_1iii.verts.new([-vx10b,-vy10b,-vz10b]) # 9
                    fk1b = bm_1iii.verts.new([-vx11b,-vy11b,-vz11b]) # 10
                    fl1b = bm_1iii.verts.new([-vx12b,-vy12b,-vz12b]) # 11
                    fm1b = bm_1iii.verts.new([-vx13b,-vy13b,-vz13b]) # 12

                    fa1c = bm_1iiii.verts.new([-vx1c,-vy1c,-vz1c]) # 0
                    fb1c = bm_1iiii.verts.new([-vx2c,-vy2c,-vz2c]) # 1
                    fc1c = bm_1iiii.verts.new([-vx3c,-vy3c,-vz3c]) # 2
                    fd1c = bm_1iiii.verts.new([-vx4c,-vy4c,-vz4c]) # 3
                    fe1c = bm_1iiii.verts.new([-vx5c,-vy5c,-vz5c]) # 4
                    ff1c = bm_1iiii.verts.new([-vx6c,-vy6c,-vz6c]) # 5
                    fg1c = bm_1iiii.verts.new([-vx7c,-vy7c,-vz7c]) # 6
                    fh1c = bm_1iiii.verts.new([-vx8c,-vy8c,-vz8c]) # 7
                    fi1c = bm_1iiii.verts.new([-vx9c,-vy9c,-vz9c]) # 8
                    fj1c = bm_1iiii.verts.new([-vx10c,-vy10c,-vz10c]) # 9
                    fk1c = bm_1iiii.verts.new([-vx11c,-vy11c,-vz11c]) # 10
                    fl1c = bm_1iiii.verts.new([-vx12c,-vy12c,-vz12c]) # 11
                    fm1c = bm_1iiii.verts.new([-vx13c,-vy13c,-vz13c]) # 12

                    fa1d = bm_1iiiii.verts.new([-vx1d,-vy1d,-vz1d]) # 0
                    fb1d = bm_1iiiii.verts.new([-vx2d,-vy2d,-vz2d]) # 1
                    fc1d = bm_1iiiii.verts.new([-vx3d,-vy3d,-vz3d]) # 2
                    fd1d = bm_1iiiii.verts.new([-vx4d,-vy4d,-vz4d]) # 3
                    fe1d = bm_1iiiii.verts.new([-vx5d,-vy5d,-vz5d]) # 4
                    ff1d = bm_1iiiii.verts.new([-vx6d,-vy6d,-vz6d]) # 5
                    fg1d = bm_1iiiii.verts.new([-vx7d,-vy7d,-vz7d]) # 6
                    fh1d = bm_1iiiii.verts.new([-vx8d,-vy8d,-vz8d]) # 7
                    fi1d = bm_1iiiii.verts.new([-vx9d,-vy9d,-vz9d]) # 8
                    fj1d = bm_1iiiii.verts.new([-vx10d,-vy10d,-vz10d]) # 9
                    fk1d = bm_1iiiii.verts.new([-vx11d,-vy11d,-vz11d]) # 10
                    fl1d = bm_1iiiii.verts.new([-vx12d,-vy12d,-vz12d]) # 11
                    fm1d = bm_1iiiii.verts.new([-vx13d,-vy13d,-vz13d]) # 12

                    fa1e = bm_1iiiiii.verts.new([-vx1e,-vy1e,-vz1e]) # 0
                    fb1e = bm_1iiiiii.verts.new([-vx2e,-vy2e,-vz2e]) # 1
                    fc1e = bm_1iiiiii.verts.new([-vx3e,-vy3e,-vz3e]) # 2
                    fd1e = bm_1iiiiii.verts.new([-vx4e,-vy4e,-vz4e]) # 3
                    fe1e = bm_1iiiiii.verts.new([-vx5e,-vy5e,-vz5e]) # 4
                    ff1e = bm_1iiiiii.verts.new([-vx6e,-vy6e,-vz6e]) # 5
                    fg1e = bm_1iiiiii.verts.new([-vx7e,-vy7e,-vz7e]) # 6
                    fh1e = bm_1iiiiii.verts.new([-vx8e,-vy8e,-vz8e]) # 7
                    fi1e = bm_1iiiiii.verts.new([-vx9e,-vy9e,-vz9e]) # 8
                    fj1e = bm_1iiiiii.verts.new([-vx10e,-vy10e,-vz10e]) # 9
                    fk1e = bm_1iiiiii.verts.new([-vx11e,-vy11e,-vz11e]) # 10
                    fl1e = bm_1iiiiii.verts.new([-vx12e,-vy12e,-vz12e]) # 11
                    fm1e = bm_1iiiiii.verts.new([-vx13e,-vy13e,-vz13e]) # 12

                    fa1f = bm_1iiiiiii.verts.new([-vx1f,-vy1f,-vz1f]) # 0
                    fb1f = bm_1iiiiiii.verts.new([-vx2f,-vy2f,-vz2f]) # 1
                    fc1f = bm_1iiiiiii.verts.new([-vx3f,-vy3f,-vz3f]) # 2
                    fd1f = bm_1iiiiiii.verts.new([-vx4f,-vy4f,-vz4f]) # 3
                    fe1f = bm_1iiiiiii.verts.new([-vx5f,-vy5f,-vz5f]) # 4
                    ff1f = bm_1iiiiiii.verts.new([-vx6f,-vy6f,-vz6f]) # 5
                    fg1f = bm_1iiiiiii.verts.new([-vx7f,-vy7f,-vz7f]) # 6
                    fh1f = bm_1iiiiiii.verts.new([-vx8f,-vy8f,-vz8f]) # 7
                    fi1f = bm_1iiiiiii.verts.new([-vx9f,-vy9f,-vz9f]) # 8
                    fj1f = bm_1iiiiiii.verts.new([-vx10f,-vy10f,-vz10f]) # 9
                    fk1f = bm_1iiiiiii.verts.new([-vx11f,-vy11f,-vz11f]) # 10
                    fl1f = bm_1iiiiiii.verts.new([-vx12f,-vy12f,-vz12f]) # 11
                    fm1f = bm_1iiiiiii.verts.new([-vx13f,-vy13f,-vz13f]) # 12

                    fa1g = bm_1iiiiiiii.verts.new([-vx1g,-vy1g,-vz1g]) # 0
                    fb1g = bm_1iiiiiiii.verts.new([-vx2g,-vy2g,-vz2g]) # 1
                    fc1g = bm_1iiiiiiii.verts.new([-vx3g,-vy3g,-vz3g]) # 2
                    fd1g = bm_1iiiiiiii.verts.new([-vx4g,-vy4g,-vz4g]) # 3
                    fe1g = bm_1iiiiiiii.verts.new([-vx5g,-vy5g,-vz5g]) # 4
                    ff1g = bm_1iiiiiiii.verts.new([-vx6g,-vy6g,-vz6g]) # 5
                    fg1g = bm_1iiiiiiii.verts.new([-vx7g,-vy7g,-vz7g]) # 6
                    fh1g = bm_1iiiiiiii.verts.new([-vx8g,-vy8g,-vz8g]) # 7
                    fi1g = bm_1iiiiiiii.verts.new([-vx9g,-vy9g,-vz9g]) # 8
                    fj1g = bm_1iiiiiiii.verts.new([-vx10g,-vy10g,-vz10g]) # 9
                    fk1g = bm_1iiiiiiii.verts.new([-vx11g,-vy11g,-vz11g]) # 10
                    fl1g = bm_1iiiiiiii.verts.new([-vx12g,-vy12g,-vz12g]) # 11
                    fm1g = bm_1iiiiiiii.verts.new([-vx13g,-vy13g,-vz13g]) # 12

                    fa1h = bm_1iiiiiiiii.verts.new([-vx1h,-vy1h,-vz1h]) # 0
                    fb1h = bm_1iiiiiiiii.verts.new([-vx2h,-vy2h,-vz2h]) # 1
                    fc1h = bm_1iiiiiiiii.verts.new([-vx3h,-vy3h,-vz3h]) # 2
                    fd1h = bm_1iiiiiiiii.verts.new([-vx4h,-vy4h,-vz4h]) # 3
                    fe1h = bm_1iiiiiiiii.verts.new([-vx5h,-vy5h,-vz5h]) # 4
                    ff1h = bm_1iiiiiiiii.verts.new([-vx6h,-vy6h,-vz6h]) # 5
                    fg1h = bm_1iiiiiiiii.verts.new([-vx7h,-vy7h,-vz7h]) # 6
                    fh1h = bm_1iiiiiiiii.verts.new([-vx8h,-vy8h,-vz8h]) # 7
                    fi1h = bm_1iiiiiiiii.verts.new([-vx9h,-vy9h,-vz9h]) # 8
                    fj1h = bm_1iiiiiiiii.verts.new([-vx10h,-vy10h,-vz10h]) # 9
                    fk1h = bm_1iiiiiiiii.verts.new([-vx11h,-vy11h,-vz11h]) # 10
                    fl1h = bm_1iiiiiiiii.verts.new([-vx12h,-vy12h,-vz12h]) # 11
                    fm1h = bm_1iiiiiiiii.verts.new([-vx13h,-vy13h,-vz13h]) # 12

                    fa1i = bm_1iiiiiiiiii.verts.new([-vx1i,-vy1i,-vz1i]) # 0
                    fb1i = bm_1iiiiiiiiii.verts.new([-vx2i,-vy2i,-vz2i]) # 1
                    fc1i = bm_1iiiiiiiiii.verts.new([-vx3i,-vy3i,-vz3i]) # 2
                    fd1i = bm_1iiiiiiiiii.verts.new([-vx4i,-vy4i,-vz4i]) # 3
                    fe1i = bm_1iiiiiiiiii.verts.new([-vx5i,-vy5i,-vz5i]) # 4
                    ff1i = bm_1iiiiiiiiii.verts.new([-vx6i,-vy6i,-vz6i]) # 5
                    fg1i = bm_1iiiiiiiiii.verts.new([-vx7i,-vy7i,-vz7i]) # 6
                    fh1i = bm_1iiiiiiiiii.verts.new([-vx8i,-vy8i,-vz8i]) # 7
                    fi1i = bm_1iiiiiiiiii.verts.new([-vx9i,-vy9i,-vz9i]) # 8
                    fj1i = bm_1iiiiiiiiii.verts.new([-vx10i,-vy10i,-vz10i]) # 9
                    fk1i = bm_1iiiiiiiiii.verts.new([-vx11i,-vy11i,-vz11i]) # 10
                    fl1i = bm_1iiiiiiiiii.verts.new([-vx12i,-vy12i,-vz12i]) # 11
                    fm1i = bm_1iiiiiiiiii.verts.new([-vx13i,-vy13i,-vz13i]) # 12

                    fa1j = bm_1iiiiiiiiiii.verts.new([-vx1j,-vy1j,-vz1j]) # 0
                    fb1j = bm_1iiiiiiiiiii.verts.new([-vx2j,-vy2j,-vz2j]) # 1
                    fc1j = bm_1iiiiiiiiiii.verts.new([-vx3j,-vy3j,-vz3j]) # 2
                    fd1j = bm_1iiiiiiiiiii.verts.new([-vx4j,-vy4j,-vz4j]) # 3
                    fe1j = bm_1iiiiiiiiiii.verts.new([-vx5j,-vy5j,-vz5j]) # 4
                    ff1j = bm_1iiiiiiiiiii.verts.new([-vx6j,-vy6j,-vz6j]) # 5
                    fg1j = bm_1iiiiiiiiiii.verts.new([-vx7j,-vy7j,-vz7j]) # 6
                    fh1j = bm_1iiiiiiiiiii.verts.new([-vx8j,-vy8j,-vz8j]) # 7
                    fi1j = bm_1iiiiiiiiiii.verts.new([-vx9j,-vy9j,-vz9j]) # 8
                    fj1j = bm_1iiiiiiiiiii.verts.new([-vx10j,-vy10j,-vz10j]) # 9
                    fk1j = bm_1iiiiiiiiiii.verts.new([-vx11j,-vy11j,-vz11j]) # 10
                    fl1j = bm_1iiiiiiiiiii.verts.new([-vx12j,-vy12j,-vz12j]) # 11
                    fm1j = bm_1iiiiiiiiiii.verts.new([-vx13j,-vy13j,-vz13j]) # 12

                    fa1k = bm_1iiiiiiiiiiii.verts.new([-vx1k,-vy1k,-vz1k]) # 0
                    fb1k = bm_1iiiiiiiiiiii.verts.new([-vx2k,-vy2k,-vz2k]) # 1
                    fc1k = bm_1iiiiiiiiiiii.verts.new([-vx3k,-vy3k,-vz3k]) # 2
                    fd1k = bm_1iiiiiiiiiiii.verts.new([-vx4k,-vy4k,-vz4k]) # 3
                    fe1k = bm_1iiiiiiiiiiii.verts.new([-vx5k,-vy5k,-vz5k]) # 4
                    ff1k = bm_1iiiiiiiiiiii.verts.new([-vx6k,-vy6k,-vz6k]) # 5
                    fg1k = bm_1iiiiiiiiiiii.verts.new([-vx7k,-vy7k,-vz7k]) # 6
                    fh1k = bm_1iiiiiiiiiiii.verts.new([-vx8k,-vy8k,-vz8k]) # 7
                    fi1k = bm_1iiiiiiiiiiii.verts.new([-vx9k,-vy9k,-vz9k]) # 8
                    fj1k = bm_1iiiiiiiiiiii.verts.new([-vx10k,-vy10k,-vz10k]) # 9
                    fk1k = bm_1iiiiiiiiiiii.verts.new([-vx11k,-vy11k,-vz11k]) # 10
                    fl1k = bm_1iiiiiiiiiiii.verts.new([-vx12k,-vy12k,-vz12k]) # 11
                    fm1k = bm_1iiiiiiiiiiii.verts.new([-vx13k,-vy13k,-vz13k]) # 12

                    fa1l = bm_1iiiiiiiiiiiii.verts.new([-vx1l,-vy1l,-vz1l]) # 0
                    fb1l = bm_1iiiiiiiiiiiii.verts.new([-vx2l,-vy2l,-vz2l]) # 1
                    fc1l = bm_1iiiiiiiiiiiii.verts.new([-vx3l,-vy3l,-vz3l]) # 2
                    fd1l = bm_1iiiiiiiiiiiii.verts.new([-vx4l,-vy4l,-vz4l]) # 3
                    fe1l = bm_1iiiiiiiiiiiii.verts.new([-vx5l,-vy5l,-vz5l]) # 4
                    ff1l = bm_1iiiiiiiiiiiii.verts.new([-vx6l,-vy6l,-vz6l]) # 5
                    fg1l = bm_1iiiiiiiiiiiii.verts.new([-vx7l,-vy7l,-vz7l]) # 6
                    fh1l = bm_1iiiiiiiiiiiii.verts.new([-vx8l,-vy8l,-vz8l]) # 7
                    fi1l = bm_1iiiiiiiiiiiii.verts.new([-vx9l,-vy9l,-vz9l]) # 8
                    fj1l = bm_1iiiiiiiiiiiii.verts.new([-vx10l,-vy10l,-vz10l]) # 9
                    fk1l = bm_1iiiiiiiiiiiii.verts.new([-vx11l,-vy11l,-vz11l]) # 10
                    fl1l = bm_1iiiiiiiiiiiii.verts.new([-vx12l,-vy12l,-vz12l]) # 11
                    fm1l = bm_1iiiiiiiiiiiii.verts.new([-vx13l,-vy13l,-vz13l]) # 12

                    fa1m = bm_1iiiiiiiiiiiiii.verts.new([-vx1m,-vy1m,-vz1m]) # 0
                    fb1m = bm_1iiiiiiiiiiiiii.verts.new([-vx2m,-vy2m,-vz2m]) # 1
                    fc1m = bm_1iiiiiiiiiiiiii.verts.new([-vx3m,-vy3m,-vz3m]) # 2
                    fd1m = bm_1iiiiiiiiiiiiii.verts.new([-vx4m,-vy4m,-vz4m]) # 3
                    fe1m = bm_1iiiiiiiiiiiiii.verts.new([-vx5m,-vy5m,-vz5m]) # 4
                    ff1m = bm_1iiiiiiiiiiiiii.verts.new([-vx6m,-vy6m,-vz6m]) # 5
                    fg1m = bm_1iiiiiiiiiiiiii.verts.new([-vx7m,-vy7m,-vz7m]) # 6
                    fh1m = bm_1iiiiiiiiiiiiii.verts.new([-vx8m,-vy8m,-vz8m]) # 7
                    fi1m = bm_1iiiiiiiiiiiiii.verts.new([-vx9m,-vy9m,-vz9m]) # 8
                    fj1m = bm_1iiiiiiiiiiiiii.verts.new([-vx10m,-vy10m,-vz10m]) # 9
                    fk1m = bm_1iiiiiiiiiiiiii.verts.new([-vx11m,-vy11m,-vz11m]) # 10
                    fl1m = bm_1iiiiiiiiiiiiii.verts.new([-vx12m,-vy12m,-vz12m]) # 11
                    fm1m = bm_1iiiiiiiiiiiiii.verts.new([-vx13m,-vy13m,-vz13m]) # 12

                    fa1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx1n,-vy1n,-vz1n]) # 0
                    fb1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx2n,-vy2n,-vz2n]) # 1
                    fc1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx3n,-vy3n,-vz3n]) # 2
                    fd1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx4n,-vy4n,-vz4n]) # 3
                    fe1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx5n,-vy5n,-vz5n]) # 4
                    ff1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx6n,-vy6n,-vz6n]) # 5
                    fg1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx7n,-vy7n,-vz7n]) # 6
                    fh1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx8n,-vy8n,-vz8n]) # 7
                    fi1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx9n,-vy9n,-vz9n]) # 8
                    fj1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx10n,-vy10n,-vz10n]) # 9
                    fk1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx11n,-vy11n,-vz11n]) # 10
                    fl1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx12n,-vy12n,-vz12n]) # 11
                    fm1n = bm_1iiiiiiiiiiiiiii.verts.new([-vx13n,-vy13n,-vz13n]) # 12

                    fa1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx1o,-vy1o,-vz1o]) # 0
                    fb1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx2o,-vy2o,-vz2o]) # 1
                    fc1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx3o,-vy3o,-vz3o]) # 2
                    fd1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx4o,-vy4o,-vz4o]) # 3
                    fe1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx5o,-vy5o,-vz5o]) # 4
                    ff1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx6o,-vy6o,-vz6o]) # 5
                    fg1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx7o,-vy7o,-vz7o]) # 6
                    fh1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx8o,-vy8o,-vz8o]) # 7
                    fi1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx9o,-vy9o,-vz9o]) # 8
                    fj1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx10o,-vy10o,-vz10o]) # 9
                    fk1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx11o,-vy11o,-vz11o]) # 10
                    fl1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx12o,-vy12o,-vz12o]) # 11
                    fm1o = bm_1iiiiiiiiiiiiiiii.verts.new([-vx13o,-vy13o,-vz13o]) # 12

                    fa1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx1p,-vy1p,-vz1p]) # 0
                    fb1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx2p,-vy2p,-vz2p]) # 1
                    fc1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx3p,-vy3p,-vz3p]) # 2
                    fd1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx4p,-vy4p,-vz4p]) # 3
                    fe1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx5p,-vy5p,-vz5p]) # 4
                    ff1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx6p,-vy6p,-vz6p]) # 5
                    fg1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx7p,-vy7p,-vz7p]) # 6
                    fh1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx8p,-vy8p,-vz8p]) # 7
                    fi1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx9p,-vy9p,-vz9p]) # 8
                    fj1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx10p,-vy10p,-vz10p]) # 9
                    fk1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx11p,-vy11p,-vz11p]) # 10
                    fl1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx12p,-vy12p,-vz12p]) # 11
                    fm1p = bm_1iiiiiiiiiiiiiiiii.verts.new([-vx13p,-vy13p,-vz13p]) # 12

                    fa1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx1q,-vy1q,-vz1q]) # 0
                    fb1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx2q,-vy2q,-vz2q]) # 1
                    fc1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx3q,-vy3q,-vz3q]) # 2
                    fd1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx4q,-vy4q,-vz4q]) # 3
                    fe1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx5q,-vy5q,-vz5q]) # 4
                    ff1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx6q,-vy6q,-vz6q]) # 5
                    fg1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx7q,-vy7q,-vz7q]) # 6
                    fh1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx8q,-vy8q,-vz8q]) # 7
                    fi1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx9q,-vy9q,-vz9q]) # 8
                    fj1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx10q,-vy10q,-vz10q]) # 9
                    fk1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx11q,-vy11q,-vz11q]) # 10
                    fl1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx12q,-vy12q,-vz12q]) # 11
                    fm1q = bm_1iiiiiiiiiiiiiiiiii.verts.new([-vx13q,-vy13q,-vz13q]) # 12

                    fa1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx1r,-vy1r,-vz1r]) # 0
                    fb1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx2r,-vy2r,-vz2r]) # 1
                    fc1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx3r,-vy3r,-vz3r]) # 2
                    fd1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx4r,-vy4r,-vz4r]) # 3
                    fe1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx5r,-vy5r,-vz5r]) # 4
                    ff1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx6r,-vy6r,-vz6r]) # 5
                    fg1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx7r,-vy7r,-vz7r]) # 6
                    fh1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx8r,-vy8r,-vz8r]) # 7
                    fi1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx9r,-vy9r,-vz9r]) # 8
                    fj1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx10r,-vy10r,-vz10r]) # 9
                    fk1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx11r,-vy11r,-vz11r]) # 10
                    fl1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx12r,-vy12r,-vz12r]) # 11
                    fm1r = bm_1iiiiiiiiiiiiiiiiiii.verts.new([-vx13r,-vy13r,-vz13r]) # 12

                    fa1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx1s,-vy1s,-vz1s]) # 0
                    fb1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx2s,-vy2s,-vz2s]) # 1
                    fc1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx3s,-vy3s,-vz3s]) # 2
                    fd1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx4s,-vy4s,-vz4s]) # 3
                    fe1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx5s,-vy5s,-vz5s]) # 4
                    ff1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx6s,-vy6s,-vz6s]) # 5
                    fg1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx7s,-vy7s,-vz7s]) # 6
                    fh1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx8s,-vy8s,-vz8s]) # 7
                    fi1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx9s,-vy9s,-vz9s]) # 8
                    fj1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx10s,-vy10s,-vz10s]) # 9
                    fk1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx11s,-vy11s,-vz11s]) # 10
                    fl1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx12s,-vy12s,-vz12s]) # 11
                    fm1s = bm_1iiiiiiiiiiiiiiiiiiii.verts.new([-vx13s,-vy13s,-vz13s]) # 12

                    fa1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx1t,-vy1t,-vz1t]) # 0
                    fb1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx2t,-vy2t,-vz2t]) # 1
                    fc1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx3t,-vy3t,-vz3t]) # 2
                    fd1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx4t,-vy4t,-vz4t]) # 3
                    fe1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx5t,-vy5t,-vz5t]) # 4
                    ff1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx6t,-vy6t,-vz6t]) # 5
                    fg1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx7t,-vy7t,-vz7t]) # 6
                    fh1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx8t,-vy8t,-vz8t]) # 7
                    fi1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx9t,-vy9t,-vz9t]) # 8
                    fj1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx10t,-vy10t,-vz10t]) # 9
                    fk1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx11t,-vy11t,-vz11t]) # 10
                    fl1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx12t,-vy12t,-vz12t]) # 11
                    fm1t = bm_1iiiiiiiiiiiiiiiiiiiii.verts.new([-vx13t,-vy13t,-vz13t]) # 12

                    fa1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx1u,-vy1u,-vz1u]) # 0
                    fb1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx2u,-vy2u,-vz2u]) # 1
                    fc1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx3u,-vy3u,-vz3u]) # 2
                    fd1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx4u,-vy4u,-vz4u]) # 3
                    fe1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx5u,-vy5u,-vz5u]) # 4
                    ff1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx6u,-vy6u,-vz6u]) # 5
                    fg1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx7u,-vy7u,-vz7u]) # 6
                    fh1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx8u,-vy8u,-vz8u]) # 7
                    fi1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx9u,-vy9u,-vz9u]) # 8
                    fj1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx10u,-vy10u,-vz10u]) # 9
                    fk1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx11u,-vy11u,-vz11u]) # 10
                    fl1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx12u,-vy12u,-vz12u]) # 11
                    fm1u = bm_1iiiiiiiiiiiiiiiiiiiiii.verts.new([-vx13u,-vy13u,-vz13u]) # 12

                    fa1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx1v,-vy1v,-vz1v]) # 0
                    fb1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx2v,-vy2v,-vz2v]) # 1
                    fc1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx3v,-vy3v,-vz3v]) # 2
                    fd1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx4v,-vy4v,-vz4v]) # 3
                    fe1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx5v,-vy5v,-vz5v]) # 4
                    ff1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx6v,-vy6v,-vz6v]) # 5
                    fg1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx7v,-vy7v,-vz7v]) # 6
                    fh1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx8v,-vy8v,-vz8v]) # 7
                    fi1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx9v,-vy9v,-vz9v]) # 8
                    fj1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx10v,-vy10v,-vz10v]) # 9
                    fk1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx11v,-vy11v,-vz11v]) # 10
                    fl1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx12v,-vy12v,-vz12v]) # 11
                    fm1v = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx13v,-vy13v,-vz13v]) # 12

                    fa1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx1w,-vy1w,-vz1w]) # 0
                    fb1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx2w,-vy2w,-vz2w]) # 1
                    fc1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx3w,-vy3w,-vz3w]) # 2
                    fd1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx4w,-vy4w,-vz4w]) # 3
                    fe1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx5w,-vy5w,-vz5w]) # 4
                    ff1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx6w,-vy6w,-vz6w]) # 5
                    fg1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx7w,-vy7w,-vz7w]) # 6
                    fh1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx8w,-vy8w,-vz8w]) # 7
                    fi1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx9w,-vy9w,-vz9w]) # 8
                    fj1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx10w,-vy10w,-vz10w]) # 9
                    fk1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx11w,-vy11w,-vz11w]) # 10
                    fl1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx12w,-vy12w,-vz12w]) # 11
                    fm1w = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx13w,-vy13w,-vz13w]) # 12

                    fa1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx1x,-vy1x,-vz1x]) # 0
                    fb1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx2x,-vy2x,-vz2x]) # 1
                    fc1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx3x,-vy3x,-vz3x]) # 2
                    fd1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx4x,-vy4x,-vz4x]) # 3
                    fe1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx5x,-vy5x,-vz5x]) # 4
                    ff1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx6x,-vy6x,-vz6x]) # 5
                    fg1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx7x,-vy7x,-vz7x]) # 6
                    fh1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx8x,-vy8x,-vz8x]) # 7
                    fi1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx9x,-vy9x,-vz9x]) # 8
                    fj1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx10x,-vy10x,-vz10x]) # 9
                    fk1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx11x,-vy11x,-vz11x]) # 10
                    fl1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx12x,-vy12x,-vz12x]) # 11
                    fm1x = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx13x,-vy13x,-vz13x]) # 12

                    fa1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx1y,-vy1y,-vz1y]) # 0
                    fb1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx2y,-vy2y,-vz2y]) # 1
                    fc1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx3y,-vy3y,-vz3y]) # 2
                    fd1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx4y,-vy4y,-vz4y]) # 3
                    fe1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx5y,-vy5y,-vz5y]) # 4
                    ff1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx6y,-vy6y,-vz6y]) # 5
                    fg1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx7y,-vy7y,-vz7y]) # 6
                    fh1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx8y,-vy8y,-vz8y]) # 7
                    fi1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx9y,-vy9y,-vz9y]) # 8
                    fj1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx10y,-vy10y,-vz10y]) # 9
                    fk1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx11y,-vy11y,-vz11y]) # 10
                    fl1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx12y,-vy12y,-vz12y]) # 11
                    fm1y = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx13y,-vy13y,-vz13y]) # 12

                    fa1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx1z,-vy1z,-vz1z]) # 0
                    fb1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx2z,-vy2z,-vz2z]) # 1
                    fc1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx3z,-vy3z,-vz3z]) # 2
                    fd1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx4z,-vy4z,-vz4z]) # 3
                    fe1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx5z,-vy5z,-vz5z]) # 4
                    ff1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx6z,-vy6z,-vz6z]) # 5
                    fg1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx7z,-vy7z,-vz7z]) # 6
                    fh1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx8z,-vy8z,-vz8z]) # 7
                    fi1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx9z,-vy9z,-vz9z]) # 8
                    fj1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx10z,-vy10z,-vz10z]) # 9
                    fk1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx11z,-vy11z,-vz11z]) # 10
                    fl1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx12z,-vy12z,-vz12z]) # 11
                    fm1z = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts.new([-vx13z,-vy13z,-vz13z]) # 12

                    if type1z == 1:
                        if type2z == 1:
                            if type3z == 0:
                                if type4z == 1:
                                    if type5z == 1:
                                        if type6z == 0:
                                            if type7z == 0:
                                                if type8z == 1:
                                                    if type9z == 1:
                                                        if type10z == 0:
                                                            if type11z == 1:
                                                                if type12z == 1:
                                                                    if type13z == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fa1z,fb1z,fc1z])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fd1z,fe1z,ff1z])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fe1z,ff1z,fg1z])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fh1z,fi1z,fj1z])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fk1z,fl1z,fm1z])

                    if type1y == 1:
                        if type2y == 1:
                            if type3y == 0:
                                if type4y == 0:
                                    if type5y == 1:
                                        if type6y == 1:
                                            if type7y == 0:
                                                if type8y == 1:
                                                    if type9y == 1:
                                                        if type10y == 0:
                                                            if type11y == 1:
                                                                if type12y == 1:
                                                                    if type13y == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fa1y,fb1y,fc1y])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fb1y,fc1y,fd1y])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fe1y,ff1y,fg1y])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fh1y,fi1y,fj1y])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fk1y,fl1y,fm1y])

                    if type1x == 1:
                        if type2x == 1:
                            if type3x == 0:
                                if type4x == 1:
                                    if type5x == 1:
                                        if type6x == 0:
                                            if type7x == 1:
                                                if type8x == 1:
                                                    if type9x == 0:
                                                        if type10x == 0:
                                                            if type11x == 1:
                                                                if type12x == 1:
                                                                    if type13x == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fa1x,fb1x,fc1x])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fd1x,fe1x,ff1x])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fg1x,fh1x,fi1x])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fh1x,fi1x,fj1x])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiiii.faces.new([fk1x,fl1x,fm1x])

                    if type1w == 1:
                        if type2w == 1:
                            if type3w == 0:
                                if type4w == 1:
                                    if type5w == 1:
                                        if type6w == 0:
                                            if type7w == 1:
                                                if type8w == 1:
                                                    if type9w == 0:
                                                        if type10w == 1:
                                                            if type11w == 1:
                                                                if type12w == 0:
                                                                    if type13w == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiii.faces.new([fa1w,fb1w,fc1w])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiii.faces.new([fd1w,fe1w,ff1w])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiii.faces.new([fg1w,fh1w,fi1w])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiii.faces.new([fj1w,fk1w,fl1w])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiiii.faces.new([fk1w,fl1w,fm1w])

                    if type1v == 1:
                        if type2v == 1:
                            if type3v == 0:
                                if type4v == 0:
                                    if type5v == 0:
                                        if type6v == 0:
                                            if type7v == 1:
                                                if type8v == 1:
                                                    if type9v == 0:
                                                        if type10v == 0:
                                                            if type11v == 1:
                                                                if type12v == 1:
                                                                    if type13v == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fa1v,fb1v,fc1v])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fb1v,fc1v,fd1v])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fc1v,fd1v,fe1v])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fd1v,fe1v,ff1v])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fg1v,fh1v,fi1v])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fh1v,fi1v,fj1v])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiiii.faces.new([fk1v,fl1v,fm1v])

                    if type1u == 1:
                        if type2u == 1:
                            if type3u == 0:
                                if type4u == 0:
                                    if type5u == 0:
                                        if type6u == 0:
                                            if type7u == 1:
                                                if type8u == 1:
                                                    if type9u == 0:
                                                        if type10u == 1:
                                                            if type11u == 1:
                                                                if type12u == 0:
                                                                    if type13u == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fa1u,fb1u,fc1u])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fb1u,fc1u,fd1u])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fc1u,fd1u,fe1u])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fd1u,fe1u,ff1u])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fg1u,fh1u,fi1u])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fj1u,fk1u,fl1u])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiiii.faces.new([fk1u,fl1u,fm1u])

                    if type1t == 1:
                        if type2t == 1:
                            if type3t == 0:
                                if type4t == 0:
                                    if type5t == 0:
                                        if type6t == 1:
                                            if type7t == 1:
                                                if type8t == 0:
                                                    if type9t == 0:
                                                        if type10t == 0:
                                                            if type11t == 1:
                                                                if type12t == 1:
                                                                    if type13t == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([fa1t,fb1t,fc1t])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([fb1t,fc1t,fd1t])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([fc1t,fd1t,fe1t])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([ff1t,fg1t,fh1t])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([fg1t,fh1t,fi1t])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([fh1t,fi1t,fj1t])
                                                                        bm_1iiiiiiiiiiiiiiiiiiiii.faces.new([fk1t,fl1t,fm1t])

                    if type1s == 1:
                        if type2s == 1:
                            if type3s == 0:
                                if type4s == 0:
                                    if type5s == 0:
                                        if type6s == 1:
                                            if type7s == 1:
                                                if type8s == 0:
                                                    if type9s == 0:
                                                        if type10s == 1:
                                                            if type11s == 1:
                                                                if type12s == 0:
                                                                    if type13s == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([fa1s,fb1s,fc1s])
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([fb1s,fc1s,fd1s])
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([fc1s,fd1s,fe1s])
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([ff1s,fg1s,fh1s])
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([fg1s,fh1s,fi1s])
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([fj1s,fk1s,fl1s])
                                                                        bm_1iiiiiiiiiiiiiiiiiiii.faces.new([fk1s,fl1s,fm1s])

                    if type1r == 1:
                        if type2r == 1:
                            if type3r == 0:
                                if type4r == 0:
                                    if type5r == 0:
                                        if type6r == 1:
                                            if type7r == 1:
                                                if type8r == 0:
                                                    if type9r == 1:
                                                        if type10r == 1:
                                                            if type11r == 0:
                                                                if type12r == 0:
                                                                    if type13r == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([fa1r,fb1r,fc1r])
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([fb1r,fc1r,fd1r])
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([fc1r,fd1r,fe1r])
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([ff1r,fg1r,fh1r])
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([fi1r,fj1r,fk1r])
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([fj1r,fk1r,fl1r])
                                                                        bm_1iiiiiiiiiiiiiiiiiii.faces.new([fk1r,fl1r,fm1r])

                    if type1q == 1:
                        if type2q == 1:
                            if type3q == 0:
                                if type4q == 0:
                                    if type5q == 1:
                                        if type6q == 1:
                                            if type7q == 0:
                                                if type8q == 0:
                                                    if type9q == 0:
                                                        if type10q == 0:
                                                            if type11q == 1:
                                                                if type12q == 1:
                                                                    if type13q == 0:
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([fa1q,fb1q,fc1q])
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([fb1q,fc1q,fd1q])
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([fe1q,ff1q,fg1q])
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([ff1q,fg1q,fh1q])
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([fg1q,fh1q,fi1q])
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([fh1q,fi1q,fj1q])
                                                                        bm_1iiiiiiiiiiiiiiiiii.faces.new([fk1q,fl1q,fm1q])

                    if type1p == 1:
                        if type2p == 1:
                            if type3p == 0:
                                if type4p == 0:
                                    if type5p == 1:
                                        if type6p == 1:
                                            if type7p == 0:
                                                if type8p == 0:
                                                    if type9p == 0:
                                                        if type10p == 1:
                                                            if type11p == 1:
                                                                if type12p == 0:
                                                                    if type13p == 0:
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([fa1p,fb1p,fc1p])
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([fb1p,fc1p,fd1p])
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([fe1p,ff1p,fg1p])
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([ff1p,fg1p,fh1p])
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([fg1p,fh1p,fi1p])
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([fj1p,fk1p,fl1p])
                                                                        bm_1iiiiiiiiiiiiiiiii.faces.new([fk1p,fl1p,fm1p])

                    if type1o == 1:
                        if type2o == 1:
                            if type3o == 0:
                                if type4o == 0:
                                    if type5o == 1:
                                        if type6o == 1:
                                            if type7o == 0:
                                                if type8o == 0:
                                                    if type9o == 1:
                                                        if type10o == 1:
                                                            if type11o == 0:
                                                                if type12o == 0:
                                                                    if type13o == 0:
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([fa1o,fb1o,fc1o])
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([fb1o,fc1o,fd1o])
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([fe1o,ff1o,fg1o])
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([ff1o,fg1o,fh1o])
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([fi1o,fj1o,fk1o])
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([fj1o,fk1o,fl1o])
                                                                        bm_1iiiiiiiiiiiiiiii.faces.new([fk1o,fl1o,fm1o])

                    if type1n == 1:
                        if type2n == 1:
                            if type3n == 0:
                                if type4n == 0:
                                    if type5n == 1:
                                        if type6n == 1:
                                            if type7n == 0:
                                                if type8n == 1:
                                                    if type9n == 1:
                                                        if type10n == 0:
                                                            if type11n == 0:
                                                                if type12n == 0:
                                                                    if type13n == 0:
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fa1n,fb1n,fc1n])
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fb1n,fc1n,fd1n])
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fe1n,ff1n,fg1n])
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fh1n,fi1n,fj1n])
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fi1n,fj1n,fk1n])
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fj1n,fk1n,fl1n])
                                                                        bm_1iiiiiiiiiiiiiii.faces.new([fk1n,fl1n,fm1n])

                    if type1m == 1:
                        if type2m == 1:
                            if type3m == 0:
                                if type4m == 1:
                                    if type5m == 1:
                                        if type6m == 0:
                                            if type7m == 0:
                                                if type8m == 0:
                                                    if type9m == 0:
                                                        if type10m == 0:
                                                            if type11m == 1:
                                                                if type12m == 1:
                                                                    if type13m == 0:
                                                                        bm_1iiiiiiiiiiiiii.faces.new([fa1m,fb1m,fc1m])
                                                                        bm_1iiiiiiiiiiiiii.faces.new([fd1m,fe1m,ff1m])
                                                                        bm_1iiiiiiiiiiiiii.faces.new([fe1m,ff1m,fg1m])
                                                                        bm_1iiiiiiiiiiiiii.faces.new([ff1m,fg1m,fh1m])
                                                                        bm_1iiiiiiiiiiiiii.faces.new([fg1m,fh1m,fi1m])
                                                                        bm_1iiiiiiiiiiiiii.faces.new([fh1m,fi1m,fj1m])
                                                                        bm_1iiiiiiiiiiiiii.faces.new([fk1m,fl1m,fm1m])

                    if type1l == 1:
                        if type2l == 1:
                            if type3l == 0:
                                if type4l == 1:
                                    if type5l == 1:
                                        if type6l == 0:
                                            if type7l == 0:
                                                if type8l == 0:
                                                    if type9l == 0:
                                                        if type10l == 1:
                                                            if type11l == 1:
                                                                if type12l == 0:
                                                                    if type13l == 0:
                                                                        bm_1iiiiiiiiiiiii.faces.new([fa1l,fb1l,fc1l])
                                                                        bm_1iiiiiiiiiiiii.faces.new([fd1l,fe1l,ff1l])
                                                                        bm_1iiiiiiiiiiiii.faces.new([fe1l,ff1l,fg1l])
                                                                        bm_1iiiiiiiiiiiii.faces.new([ff1l,fg1l,fh1l])
                                                                        bm_1iiiiiiiiiiiii.faces.new([fg1l,fh1l,fi1l])
                                                                        bm_1iiiiiiiiiiiii.faces.new([fj1l,fk1l,fl1l])
                                                                        bm_1iiiiiiiiiiiii.faces.new([fk1l,fl1l,fm1l])

                    if type1k == 1:
                        if type2k == 1:
                            if type3k == 0:
                                if type4k == 1:
                                    if type5k == 1:
                                        if type6k == 0:
                                            if type7k == 0:
                                                if type8k == 0:
                                                    if type9k == 1:
                                                        if type10k == 1:
                                                            if type11k == 0:
                                                                if type12k == 0:
                                                                    if type13k == 0:
                                                                        bm_1iiiiiiiiiiii.faces.new([fa1k,fb1k,fc1k])
                                                                        bm_1iiiiiiiiiiii.faces.new([fd1k,fe1k,ff1k])
                                                                        bm_1iiiiiiiiiiii.faces.new([fe1k,ff1k,fg1k])
                                                                        bm_1iiiiiiiiiiii.faces.new([ff1k,fg1k,fh1k])
                                                                        bm_1iiiiiiiiiiii.faces.new([fi1k,fj1k,fk1k])
                                                                        bm_1iiiiiiiiiiii.faces.new([fj1k,fk1k,fl1k])
                                                                        bm_1iiiiiiiiiiii.faces.new([fk1k,fl1k,fm1k])


                    if type1j == 1:
                        if type2j == 1:
                            if type3j == 0:
                                if type4j == 1:
                                    if type5j == 1:
                                        if type6j == 0:
                                            if type7j == 0:
                                                if type8j == 1:
                                                    if type9j == 1:
                                                        if type10j == 0:
                                                            if type11j == 0:
                                                                if type12j == 0:
                                                                    if type13j == 0:
                                                                        bm_1iiiiiiiiiii.faces.new([fa1j,fb1j,fc1j])
                                                                        bm_1iiiiiiiiiii.faces.new([fd1j,fe1j,ff1j])
                                                                        bm_1iiiiiiiiiii.faces.new([fe1j,ff1j,fg1j])
                                                                        bm_1iiiiiiiiiii.faces.new([fh1j,fi1j,fj1j])
                                                                        bm_1iiiiiiiiiii.faces.new([fi1j,fj1j,fk1j])
                                                                        bm_1iiiiiiiiiii.faces.new([fj1j,fk1j,fl1j])
                                                                        bm_1iiiiiiiiiii.faces.new([fk1j,fl1j,fm1j])

                    if type1i == 1:
                        if type2i == 1:
                            if type3i == 0:
                                if type4i == 1:
                                    if type5i == 1:
                                        if type6i == 0:
                                            if type7i == 1:
                                                if type8i == 1:
                                                    if type9i == 0:
                                                        if type10i == 0:
                                                            if type11i == 0:
                                                                if type12i == 0:
                                                                    if type13i == 0:
                                                                        bm_1iiiiiiiiii.faces.new([fa1i,fb1i,fc1i])
                                                                        bm_1iiiiiiiiii.faces.new([fd1i,fe1i,ff1i])
                                                                        bm_1iiiiiiiiii.faces.new([fg1i,fh1i,fi1i])
                                                                        bm_1iiiiiiiiii.faces.new([fh1i,fi1i,fj1i])
                                                                        bm_1iiiiiiiiii.faces.new([fi1i,fj1i,fk1i])
                                                                        bm_1iiiiiiiiii.faces.new([fj1i,fk1i,fl1i])
                                                                        bm_1iiiiiiiiii.faces.new([fk1i,fl1i,fm1i])

                    if type1h == 1:
                        if type2h == 1:
                            if type3h == 0:
                                if type4h == 0:
                                    if type5h == 0:
                                        if type6h == 0:
                                            if type7h == 0:
                                                if type8h == 0:
                                                    if type9h == 0:
                                                        if type10h == 0:
                                                            if type11h == 1:
                                                                if type12h == 1:
                                                                    if type13h == 0:
                                                                        bm_1iiiiiiiii.faces.new([fa1h,fb1h,fc1h])
                                                                        bm_1iiiiiiiii.faces.new([fb1h,fc1h,fd1h])
                                                                        bm_1iiiiiiiii.faces.new([fc1h,fd1h,fe1h])
                                                                        bm_1iiiiiiiii.faces.new([fd1h,fe1h,ff1h])
                                                                        bm_1iiiiiiiii.faces.new([fe1h,ff1h,fg1h])
                                                                        bm_1iiiiiiiii.faces.new([ff1h,fg1h,fh1h])
                                                                        bm_1iiiiiiiii.faces.new([fg1h,fh1h,fi1h])
                                                                        bm_1iiiiiiiii.faces.new([fh1h,fi1h,fj1h])
                                                                        bm_1iiiiiiiii.faces.new([fk1h,fl1h,fm1h])

                    if type1g == 1:
                        if type2g == 1:
                            if type3g == 0:
                                if type4g == 0:
                                    if type5g == 0:
                                        if type6g == 0:
                                            if type7g == 0:
                                                if type8g == 0:
                                                    if type9g == 0:
                                                        if type10g == 1:
                                                            if type11g == 1:
                                                                if type12g == 0:
                                                                    if type13g == 0:
                                                                        bm_1iiiiiiii.faces.new([fa1g,fb1g,fc1g])
                                                                        bm_1iiiiiiii.faces.new([fb1g,fc1g,fd1g])
                                                                        bm_1iiiiiiii.faces.new([fc1g,fd1g,fe1g])
                                                                        bm_1iiiiiiii.faces.new([fd1g,fe1g,ff1g])
                                                                        bm_1iiiiiiii.faces.new([fe1g,ff1g,fg1g])
                                                                        bm_1iiiiiiii.faces.new([ff1g,fg1g,fh1g])
                                                                        bm_1iiiiiiii.faces.new([fg1g,fh1g,fi1g])
                                                                        bm_1iiiiiiii.faces.new([fj1g,fk1g,fl1g])
                                                                        bm_1iiiiiiii.faces.new([fk1g,fl1g,fm1g])

                    

                    if type1f == 1:
                        if type2f == 1:
                            if type3f == 0:
                                if type4f == 0:
                                    if type5f == 0:
                                        if type6f == 0:
                                            if type7f == 0:
                                                if type8f == 0:
                                                    if type9f == 1:
                                                        if type10f == 1:
                                                            if type11f == 0:
                                                                if type12f == 0:
                                                                    if type13f == 0:
                                                                        bm_1iiiiiii.faces.new([fa1f,fb1f,fc1f])
                                                                        bm_1iiiiiii.faces.new([fb1f,fc1f,fd1f])
                                                                        bm_1iiiiiii.faces.new([fc1f,fd1f,fe1f])
                                                                        bm_1iiiiiii.faces.new([fd1f,fe1f,ff1f])
                                                                        bm_1iiiiiii.faces.new([fe1f,ff1f,fg1f])
                                                                        bm_1iiiiiii.faces.new([ff1f,fg1f,fh1f])
                                                                        bm_1iiiiiii.faces.new([fi1f,fj1f,fk1f])
                                                                        bm_1iiiiiii.faces.new([fj1f,fk1f,fl1f])
                                                                        bm_1iiiiiii.faces.new([fk1f,fl1f,fm1f])

                    if type1e == 1:
                        if type2e == 1:
                            if type3e == 0:
                                if type4e == 0:
                                    if type5e == 0:
                                        if type6e == 0:
                                            if type7e == 0:
                                                if type8e == 1:
                                                    if type9e == 1:
                                                        if type10e == 0:
                                                            if type11e == 0:
                                                                if type12e == 0:
                                                                    if type13e == 0:
                                                                        bm_1iiiiii.faces.new([fa1e,fb1e,fc1e])
                                                                        bm_1iiiiii.faces.new([fb1e,fc1e,fd1e])
                                                                        bm_1iiiiii.faces.new([fc1e,fd1e,fe1e])
                                                                        bm_1iiiiii.faces.new([fd1e,fe1e,ff1e])
                                                                        bm_1iiiiii.faces.new([fe1e,ff1e,fg1e])
                                                                        bm_1iiiiii.faces.new([fh1e,fi1e,fj1e])
                                                                        bm_1iiiiii.faces.new([fi1e,fj1e,fk1e])
                                                                        bm_1iiiiii.faces.new([fj1e,fk1e,fl1e])
                                                                        bm_1iiiiii.faces.new([fk1e,fl1e,fm1e])

                    if type1d == 1:
                        if type2d == 1:
                            if type3d == 0:
                                if type4d == 0:
                                    if type5d == 0:
                                        if type6d == 0:
                                            if type7d == 1:
                                                if type8d == 1:
                                                    if type9d == 0:
                                                        if type10d == 0:
                                                            if type11d == 0:
                                                                if type12d == 0:
                                                                    if type13d == 0:
                                                                        bm_1iiiii.faces.new([fa1d,fb1d,fc1d])
                                                                        bm_1iiiii.faces.new([fb1d,fc1d,fd1d])
                                                                        bm_1iiiii.faces.new([fc1d,fd1d,fe1d])
                                                                        bm_1iiiii.faces.new([fd1d,fe1d,ff1d])
                                                                        bm_1iiiii.faces.new([fg1d,fh1d,fi1d])
                                                                        bm_1iiiii.faces.new([fh1d,fi1d,fj1d])
                                                                        bm_1iiiii.faces.new([fi1d,fj1d,fk1d])
                                                                        bm_1iiiii.faces.new([fj1d,fk1d,fl1d])
                                                                        bm_1iiiii.faces.new([fk1d,fl1d,fm1d])

                    if type1c == 1:
                        if type2c == 1:
                            if type3c == 0:
                                if type4c == 0:
                                    if type5c == 0:
                                        if type6c == 1:
                                            if type7c == 1:
                                                if type8c == 0:
                                                    if type9c == 0:
                                                        if type10c == 0:
                                                            if type11c == 0:
                                                                if type12c == 0:
                                                                    if type13c == 0:
                                                                        bm_1iiii.faces.new([fa1c,fb1c,fc1c])
                                                                        bm_1iiii.faces.new([fb1c,fc1c,fd1c])
                                                                        bm_1iiii.faces.new([fc1c,fd1c,fe1c])
                                                                        bm_1iiii.faces.new([ff1c,fg1c,fh1c])
                                                                        bm_1iiii.faces.new([fg1c,fh1c,fi1c])
                                                                        bm_1iiii.faces.new([fh1c,fi1c,fj1c])
                                                                        bm_1iiii.faces.new([fi1c,fj1c,fk1c])
                                                                        bm_1iiii.faces.new([fj1c,fk1c,fl1c])
                                                                        bm_1iiii.faces.new([fk1c,fl1c,fm1c])

                    if type1b == 1:
                        if type2b == 1:
                            if type3b == 0:
                                if type4b == 0:
                                    if type5b == 1:
                                        if type6b == 1:
                                            if type7b == 0:
                                                if type8b == 0:
                                                    if type9b == 0:
                                                        if type10b == 0:
                                                            if type11b == 0:
                                                                if type12b == 0:
                                                                    if type13b == 0:
                                                                        bm_1iii.faces.new([fa1b,fb1b,fc1b])
                                                                        bm_1iii.faces.new([fb1b,fc1b,fd1b])
                                                                        bm_1iii.faces.new([fe1b,ff1b,fg1b])
                                                                        bm_1iii.faces.new([ff1b,fg1b,fh1b])
                                                                        bm_1iii.faces.new([fg1b,fh1b,fi1b])
                                                                        bm_1iii.faces.new([fh1b,fi1b,fj1b])
                                                                        bm_1iii.faces.new([fi1b,fj1b,fk1b])
                                                                        bm_1iii.faces.new([fj1b,fk1b,fl1b])
                                                                        bm_1iii.faces.new([fk1b,fl1b,fm1b])

                    if type1a == 1:
                        if type2a == 1:
                            if type3a == 0:
                                if type4a == 1:
                                    if type5a == 1:
                                        if type6a == 0:
                                            if type7a == 0:
                                                if type8a == 0:
                                                    if type9a == 0:
                                                        if type10a == 0:
                                                            if type11a == 0:
                                                                if type12a == 0:
                                                                    if type13a == 0:
                                                                        bm_1ii.faces.new([fa1a,fb1a,fc1a])
                                                                        bm_1ii.faces.new([fd1a,fe1a,ff1a])
                                                                        bm_1ii.faces.new([fe1a,ff1a,fg1a])
                                                                        bm_1ii.faces.new([ff1a,fg1a,fh1a])
                                                                        bm_1ii.faces.new([fg1a,fh1a,fi1a])
                                                                        bm_1ii.faces.new([fh1a,fi1a,fj1a])
                                                                        bm_1ii.faces.new([fi1a,fj1a,fk1a])
                                                                        bm_1ii.faces.new([fj1a,fk1a,fl1a])
                                                                        bm_1ii.faces.new([fk1a,fl1a,fm1a])

                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        if type10 == 0:
                                                            if type11 == 0:
                                                                if type12 == 0:
                                                                    if type13 == 0:
                                                                        bm_1i.faces.new([fa1,fb1,fc1])
                                                                        bm_1i.faces.new([fb1,fc1,fd1])
                                                                        bm_1i.faces.new([fc1,fd1,fe1])
                                                                        bm_1i.faces.new([fd1,fe1,ff1])
                                                                        bm_1i.faces.new([fe1,ff1,fg1])
                                                                        bm_1i.faces.new([ff1,fg1,fh1])
                                                                        bm_1i.faces.new([fg1,fh1,fi1])
                                                                        bm_1i.faces.new([fh1,fi1,fj1])
                                                                        bm_1i.faces.new([fi1,fj1,fk1])
                                                                        bm_1i.faces.new([fj1,fk1,fl1])
                                                                        bm_1i.faces.new([fk1,fl1,fm1])

            elif vertexCount == 14:
                for i in range(vertexCount//14):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    vx10 = unpack("<f", f.read(4))[0]
                    vy10 = unpack("<f", f.read(4))[0]
                    vz10 = unpack("<f", f.read(4))[0]
                    type10 = unpack("B", f.read(1))[0]
                    value10 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10 = unpack("<f", f.read(4))[0]
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx12 = unpack("<f", f.read(4))[0]
                    vy12 = unpack("<f", f.read(4))[0]
                    vz12 = unpack("<f", f.read(4))[0]
                    type12 = unpack("B", f.read(1))[0]
                    value12 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12 = unpack("<f", f.read(4))[0]
                    vx13 = unpack("<f", f.read(4))[0]
                    vy13 = unpack("<f", f.read(4))[0]
                    vz13 = unpack("<f", f.read(4))[0]
                    type13 = unpack("B", f.read(1))[0]
                    value13 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13 = unpack("<f", f.read(4))[0]
                    vx14 = unpack("<f", f.read(4))[0]
                    vy14 = unpack("<f", f.read(4))[0]
                    vz14 = unpack("<f", f.read(4))[0]
                    type14 = unpack("B", f.read(1))[0]
                    value14 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14 = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1a = unpack("<f", f.read(4))[0]
                    vy1a = unpack("<f", f.read(4))[0]
                    vz1a = unpack("<f", f.read(4))[0]
                    type1a = unpack("B", f.read(1))[0]
                    value1a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1a = unpack("<f", f.read(4))[0]
                    vx2a = unpack("<f", f.read(4))[0]
                    vy2a = unpack("<f", f.read(4))[0]
                    vz2a = unpack("<f", f.read(4))[0]
                    type2a = unpack("B", f.read(1))[0]
                    value2a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2a = unpack("<f", f.read(4))[0]
                    vx3a = unpack("<f", f.read(4))[0]
                    vy3a = unpack("<f", f.read(4))[0]
                    vz3a = unpack("<f", f.read(4))[0]
                    type3a = unpack("B", f.read(1))[0]
                    value3a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3a = unpack("<f", f.read(4))[0]
                    vx4a = unpack("<f", f.read(4))[0]
                    vy4a = unpack("<f", f.read(4))[0]
                    vz4a = unpack("<f", f.read(4))[0]
                    type4a = unpack("B", f.read(1))[0]
                    value4a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4a = unpack("<f", f.read(4))[0]
                    vx5a = unpack("<f", f.read(4))[0]
                    vy5a = unpack("<f", f.read(4))[0]
                    vz5a = unpack("<f", f.read(4))[0]
                    type5a = unpack("B", f.read(1))[0]
                    value5a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5a = unpack("<f", f.read(4))[0]
                    vx6a = unpack("<f", f.read(4))[0]
                    vy6a = unpack("<f", f.read(4))[0]
                    vz6a = unpack("<f", f.read(4))[0]
                    type6a = unpack("B", f.read(1))[0]
                    value6a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6a = unpack("<f", f.read(4))[0]
                    vx7a = unpack("<f", f.read(4))[0]
                    vy7a = unpack("<f", f.read(4))[0]
                    vz7a = unpack("<f", f.read(4))[0]
                    type7a = unpack("B", f.read(1))[0]
                    value7a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7a = unpack("<f", f.read(4))[0]
                    vx8a = unpack("<f", f.read(4))[0]
                    vy8a = unpack("<f", f.read(4))[0]
                    vz8a = unpack("<f", f.read(4))[0]
                    type8a = unpack("B", f.read(1))[0]
                    value8a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8a = unpack("<f", f.read(4))[0]
                    vx9a = unpack("<f", f.read(4))[0]
                    vy9a = unpack("<f", f.read(4))[0]
                    vz9a = unpack("<f", f.read(4))[0]
                    type9a = unpack("B", f.read(1))[0]
                    value9a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9a = unpack("<f", f.read(4))[0]
                    vx10a = unpack("<f", f.read(4))[0]
                    vy10a = unpack("<f", f.read(4))[0]
                    vz10a = unpack("<f", f.read(4))[0]
                    type10a = unpack("B", f.read(1))[0]
                    value10a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10a = unpack("<f", f.read(4))[0]
                    vx11a = unpack("<f", f.read(4))[0]
                    vy11a = unpack("<f", f.read(4))[0]
                    vz11a = unpack("<f", f.read(4))[0]
                    type11a = unpack("B", f.read(1))[0]
                    value11a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11a = unpack("<f", f.read(4))[0]
                    vx12a = unpack("<f", f.read(4))[0]
                    vy12a = unpack("<f", f.read(4))[0]
                    vz12a = unpack("<f", f.read(4))[0]
                    type12a = unpack("B", f.read(1))[0]
                    value12a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12a = unpack("<f", f.read(4))[0]
                    vx13a = unpack("<f", f.read(4))[0]
                    vy13a = unpack("<f", f.read(4))[0]
                    vz13a = unpack("<f", f.read(4))[0]
                    type13a = unpack("B", f.read(1))[0]
                    value13a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13a = unpack("<f", f.read(4))[0]
                    vx14a = unpack("<f", f.read(4))[0]
                    vy14a = unpack("<f", f.read(4))[0]
                    vz14a = unpack("<f", f.read(4))[0]
                    type14a = unpack("B", f.read(1))[0]
                    value14a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14a = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1b = unpack("<f", f.read(4))[0]
                    vy1b = unpack("<f", f.read(4))[0]
                    vz1b = unpack("<f", f.read(4))[0]
                    type1b = unpack("B", f.read(1))[0]
                    value1b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1b = unpack("<f", f.read(4))[0]
                    vx2b = unpack("<f", f.read(4))[0]
                    vy2b = unpack("<f", f.read(4))[0]
                    vz2b = unpack("<f", f.read(4))[0]
                    type2b = unpack("B", f.read(1))[0]
                    value2b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2b = unpack("<f", f.read(4))[0]
                    vx3b = unpack("<f", f.read(4))[0]
                    vy3b = unpack("<f", f.read(4))[0]
                    vz3b = unpack("<f", f.read(4))[0]
                    type3b = unpack("B", f.read(1))[0]
                    value3b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3b = unpack("<f", f.read(4))[0]
                    vx4b = unpack("<f", f.read(4))[0]
                    vy4b = unpack("<f", f.read(4))[0]
                    vz4b = unpack("<f", f.read(4))[0]
                    type4b = unpack("B", f.read(1))[0]
                    value4b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4b = unpack("<f", f.read(4))[0]
                    vx5b = unpack("<f", f.read(4))[0]
                    vy5b = unpack("<f", f.read(4))[0]
                    vz5b = unpack("<f", f.read(4))[0]
                    type5b = unpack("B", f.read(1))[0]
                    value5b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5b = unpack("<f", f.read(4))[0]
                    vx6b = unpack("<f", f.read(4))[0]
                    vy6b = unpack("<f", f.read(4))[0]
                    vz6b = unpack("<f", f.read(4))[0]
                    type6b = unpack("B", f.read(1))[0]
                    value6b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6b = unpack("<f", f.read(4))[0]
                    vx7b = unpack("<f", f.read(4))[0]
                    vy7b = unpack("<f", f.read(4))[0]
                    vz7b = unpack("<f", f.read(4))[0]
                    type7b = unpack("B", f.read(1))[0]
                    value7b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7b = unpack("<f", f.read(4))[0]
                    vx8b = unpack("<f", f.read(4))[0]
                    vy8b = unpack("<f", f.read(4))[0]
                    vz8b = unpack("<f", f.read(4))[0]
                    type8b = unpack("B", f.read(1))[0]
                    value8b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8b = unpack("<f", f.read(4))[0]
                    vx9b = unpack("<f", f.read(4))[0]
                    vy9b = unpack("<f", f.read(4))[0]
                    vz9b = unpack("<f", f.read(4))[0]
                    type9b = unpack("B", f.read(1))[0]
                    value9b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9b = unpack("<f", f.read(4))[0]
                    vx10b = unpack("<f", f.read(4))[0]
                    vy10b = unpack("<f", f.read(4))[0]
                    vz10b = unpack("<f", f.read(4))[0]
                    type10b = unpack("B", f.read(1))[0]
                    value10b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10b = unpack("<f", f.read(4))[0]
                    vx11b = unpack("<f", f.read(4))[0]
                    vy11b= unpack("<f", f.read(4))[0]
                    vz11b = unpack("<f", f.read(4))[0]
                    type11b = unpack("B", f.read(1))[0]
                    value11b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11b = unpack("<f", f.read(4))[0]
                    vx12b = unpack("<f", f.read(4))[0]
                    vy12b = unpack("<f", f.read(4))[0]
                    vz12b = unpack("<f", f.read(4))[0]
                    type12b = unpack("B", f.read(1))[0]
                    value12b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12b = unpack("<f", f.read(4))[0]
                    vx13b = unpack("<f", f.read(4))[0]
                    vy13b = unpack("<f", f.read(4))[0]
                    vz13b = unpack("<f", f.read(4))[0]
                    type13b = unpack("B", f.read(1))[0]
                    value13b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13b = unpack("<f", f.read(4))[0]
                    vx14b = unpack("<f", f.read(4))[0]
                    vy14b = unpack("<f", f.read(4))[0]
                    vz14b = unpack("<f", f.read(4))[0]
                    type14b = unpack("B", f.read(1))[0]
                    value14b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14b = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1c = unpack("<f", f.read(4))[0]
                    vy1c = unpack("<f", f.read(4))[0]
                    vz1c = unpack("<f", f.read(4))[0]
                    type1c = unpack("B", f.read(1))[0]
                    value1c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1c = unpack("<f", f.read(4))[0]
                    vx2c = unpack("<f", f.read(4))[0]
                    vy2c = unpack("<f", f.read(4))[0]
                    vz2c = unpack("<f", f.read(4))[0]
                    type2c = unpack("B", f.read(1))[0]
                    value2c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2c = unpack("<f", f.read(4))[0]
                    vx3c = unpack("<f", f.read(4))[0]
                    vy3c = unpack("<f", f.read(4))[0]
                    vz3c = unpack("<f", f.read(4))[0]
                    type3c = unpack("B", f.read(1))[0]
                    value3c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3c = unpack("<f", f.read(4))[0]
                    vx4c = unpack("<f", f.read(4))[0]
                    vy4c = unpack("<f", f.read(4))[0]
                    vz4c = unpack("<f", f.read(4))[0]
                    type4c = unpack("B", f.read(1))[0]
                    value4c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4c = unpack("<f", f.read(4))[0]
                    vx5c = unpack("<f", f.read(4))[0]
                    vy5c = unpack("<f", f.read(4))[0]
                    vz5c = unpack("<f", f.read(4))[0]
                    type5c = unpack("B", f.read(1))[0]
                    value5c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5c = unpack("<f", f.read(4))[0]
                    vx6c = unpack("<f", f.read(4))[0]
                    vy6c = unpack("<f", f.read(4))[0]
                    vz6c = unpack("<f", f.read(4))[0]
                    type6c = unpack("B", f.read(1))[0]
                    value6c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6c = unpack("<f", f.read(4))[0]
                    vx7c = unpack("<f", f.read(4))[0]
                    vy7c = unpack("<f", f.read(4))[0]
                    vz7c = unpack("<f", f.read(4))[0]
                    type7c = unpack("B", f.read(1))[0]
                    value7c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7c = unpack("<f", f.read(4))[0]
                    vx8c = unpack("<f", f.read(4))[0]
                    vy8c = unpack("<f", f.read(4))[0]
                    vz8c = unpack("<f", f.read(4))[0]
                    type8c = unpack("B", f.read(1))[0]
                    value8c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8c = unpack("<f", f.read(4))[0]
                    vx9c = unpack("<f", f.read(4))[0]
                    vy9c = unpack("<f", f.read(4))[0]
                    vz9c = unpack("<f", f.read(4))[0]
                    type9c = unpack("B", f.read(1))[0]
                    value9c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9c = unpack("<f", f.read(4))[0]
                    vx10c = unpack("<f", f.read(4))[0]
                    vy10c = unpack("<f", f.read(4))[0]
                    vz10c = unpack("<f", f.read(4))[0]
                    type10c = unpack("B", f.read(1))[0]
                    value10c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10c = unpack("<f", f.read(4))[0]
                    vx11c = unpack("<f", f.read(4))[0]
                    vy11c = unpack("<f", f.read(4))[0]
                    vz11c = unpack("<f", f.read(4))[0]
                    type11c = unpack("B", f.read(1))[0]
                    value11c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11c = unpack("<f", f.read(4))[0]
                    vx12c = unpack("<f", f.read(4))[0]
                    vy12c = unpack("<f", f.read(4))[0]
                    vz12c = unpack("<f", f.read(4))[0]
                    type12c = unpack("B", f.read(1))[0]
                    value12c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12c = unpack("<f", f.read(4))[0]
                    vx13c = unpack("<f", f.read(4))[0]
                    vy13c = unpack("<f", f.read(4))[0]
                    vz13c = unpack("<f", f.read(4))[0]
                    type13c = unpack("B", f.read(1))[0]
                    value13c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13c = unpack("<f", f.read(4))[0]
                    vx14c = unpack("<f", f.read(4))[0]
                    vy14c = unpack("<f", f.read(4))[0]
                    vz14c = unpack("<f", f.read(4))[0]
                    type14c = unpack("B", f.read(1))[0]
                    value14c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14c = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1d = unpack("<f", f.read(4))[0]
                    vy1d = unpack("<f", f.read(4))[0]
                    vz1d = unpack("<f", f.read(4))[0]
                    type1d = unpack("B", f.read(1))[0]
                    value1d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1d = unpack("<f", f.read(4))[0]
                    vx2d = unpack("<f", f.read(4))[0]
                    vy2d = unpack("<f", f.read(4))[0]
                    vz2d = unpack("<f", f.read(4))[0]
                    type2d = unpack("B", f.read(1))[0]
                    value2d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2d = unpack("<f", f.read(4))[0]
                    vx3d = unpack("<f", f.read(4))[0]
                    vy3d = unpack("<f", f.read(4))[0]
                    vz3d = unpack("<f", f.read(4))[0]
                    type3d = unpack("B", f.read(1))[0]
                    value3d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3d = unpack("<f", f.read(4))[0]
                    vx4d = unpack("<f", f.read(4))[0]
                    vy4d = unpack("<f", f.read(4))[0]
                    vz4d = unpack("<f", f.read(4))[0]
                    type4d = unpack("B", f.read(1))[0]
                    value4d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4d = unpack("<f", f.read(4))[0]
                    vx5d = unpack("<f", f.read(4))[0]
                    vy5d = unpack("<f", f.read(4))[0]
                    vz5d = unpack("<f", f.read(4))[0]
                    type5d = unpack("B", f.read(1))[0]
                    value5d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5d = unpack("<f", f.read(4))[0]
                    vx6d = unpack("<f", f.read(4))[0]
                    vy6d = unpack("<f", f.read(4))[0]
                    vz6d = unpack("<f", f.read(4))[0]
                    type6d = unpack("B", f.read(1))[0]
                    value6d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6d = unpack("<f", f.read(4))[0]
                    vx7d = unpack("<f", f.read(4))[0]
                    vy7d = unpack("<f", f.read(4))[0]
                    vz7d = unpack("<f", f.read(4))[0]
                    type7d = unpack("B", f.read(1))[0]
                    value7d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7d = unpack("<f", f.read(4))[0]
                    vx8d = unpack("<f", f.read(4))[0]
                    vy8d = unpack("<f", f.read(4))[0]
                    vz8d = unpack("<f", f.read(4))[0]
                    type8d = unpack("B", f.read(1))[0]
                    value8d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8d = unpack("<f", f.read(4))[0]
                    vx9d = unpack("<f", f.read(4))[0]
                    vy9d = unpack("<f", f.read(4))[0]
                    vz9d = unpack("<f", f.read(4))[0]
                    type9d = unpack("B", f.read(1))[0]
                    value9d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9d = unpack("<f", f.read(4))[0]
                    vx10d = unpack("<f", f.read(4))[0]
                    vy10d = unpack("<f", f.read(4))[0]
                    vz10d = unpack("<f", f.read(4))[0]
                    type10d = unpack("B", f.read(1))[0]
                    value10d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10d = unpack("<f", f.read(4))[0]
                    vx11d = unpack("<f", f.read(4))[0]
                    vy11d = unpack("<f", f.read(4))[0]
                    vz11d = unpack("<f", f.read(4))[0]
                    type11d = unpack("B", f.read(1))[0]
                    value11d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11d = unpack("<f", f.read(4))[0]
                    vx12d = unpack("<f", f.read(4))[0]
                    vy12d = unpack("<f", f.read(4))[0]
                    vz12d = unpack("<f", f.read(4))[0]
                    type12d = unpack("B", f.read(1))[0]
                    value12d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12d = unpack("<f", f.read(4))[0]
                    vx13d = unpack("<f", f.read(4))[0]
                    vy13d = unpack("<f", f.read(4))[0]
                    vz13d = unpack("<f", f.read(4))[0]
                    type13d = unpack("B", f.read(1))[0]
                    value13d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13d = unpack("<f", f.read(4))[0]
                    vx14d = unpack("<f", f.read(4))[0]
                    vy14d = unpack("<f", f.read(4))[0]
                    vz14d = unpack("<f", f.read(4))[0]
                    type14d = unpack("B", f.read(1))[0]
                    value14d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14d = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1d = unpack("<f", f.read(4))[0]
                    vy1d = unpack("<f", f.read(4))[0]
                    vz1d = unpack("<f", f.read(4))[0]
                    type1d = unpack("B", f.read(1))[0]
                    value1d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1d = unpack("<f", f.read(4))[0]
                    vx2d = unpack("<f", f.read(4))[0]
                    vy2d = unpack("<f", f.read(4))[0]
                    vz2d = unpack("<f", f.read(4))[0]
                    type2d = unpack("B", f.read(1))[0]
                    value2d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2d = unpack("<f", f.read(4))[0]
                    vx3d = unpack("<f", f.read(4))[0]
                    vy3d = unpack("<f", f.read(4))[0]
                    vz3d = unpack("<f", f.read(4))[0]
                    type3d = unpack("B", f.read(1))[0]
                    value3d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3d = unpack("<f", f.read(4))[0]
                    vx4d = unpack("<f", f.read(4))[0]
                    vy4d = unpack("<f", f.read(4))[0]
                    vz4d = unpack("<f", f.read(4))[0]
                    type4d = unpack("B", f.read(1))[0]
                    value4d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4d = unpack("<f", f.read(4))[0]
                    vx5d = unpack("<f", f.read(4))[0]
                    vy5d = unpack("<f", f.read(4))[0]
                    vz5d = unpack("<f", f.read(4))[0]
                    type5d = unpack("B", f.read(1))[0]
                    value5d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5d = unpack("<f", f.read(4))[0]
                    vx6d = unpack("<f", f.read(4))[0]
                    vy6d = unpack("<f", f.read(4))[0]
                    vz6d = unpack("<f", f.read(4))[0]
                    type6d = unpack("B", f.read(1))[0]
                    value6d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6d = unpack("<f", f.read(4))[0]
                    vx7d = unpack("<f", f.read(4))[0]
                    vy7d = unpack("<f", f.read(4))[0]
                    vz7d = unpack("<f", f.read(4))[0]
                    type7d = unpack("B", f.read(1))[0]
                    value7d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7d = unpack("<f", f.read(4))[0]
                    vx8d = unpack("<f", f.read(4))[0]
                    vy8d = unpack("<f", f.read(4))[0]
                    vz8d = unpack("<f", f.read(4))[0]
                    type8d = unpack("B", f.read(1))[0]
                    value8d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8d = unpack("<f", f.read(4))[0]
                    vx9d = unpack("<f", f.read(4))[0]
                    vy9d = unpack("<f", f.read(4))[0]
                    vz9d = unpack("<f", f.read(4))[0]
                    type9d = unpack("B", f.read(1))[0]
                    value9d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9d = unpack("<f", f.read(4))[0]
                    vx10d = unpack("<f", f.read(4))[0]
                    vy10d = unpack("<f", f.read(4))[0]
                    vz10d = unpack("<f", f.read(4))[0]
                    type10d = unpack("B", f.read(1))[0]
                    value10d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10d = unpack("<f", f.read(4))[0]
                    vx11d = unpack("<f", f.read(4))[0]
                    vy11d = unpack("<f", f.read(4))[0]
                    vz11d = unpack("<f", f.read(4))[0]
                    type11d = unpack("B", f.read(1))[0]
                    value11d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11d = unpack("<f", f.read(4))[0]
                    vx12d = unpack("<f", f.read(4))[0]
                    vy12d = unpack("<f", f.read(4))[0]
                    vz12d = unpack("<f", f.read(4))[0]
                    type12d = unpack("B", f.read(1))[0]
                    value12d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12d = unpack("<f", f.read(4))[0]
                    vx13d = unpack("<f", f.read(4))[0]
                    vy13d = unpack("<f", f.read(4))[0]
                    vz13d = unpack("<f", f.read(4))[0]
                    type13d = unpack("B", f.read(1))[0]
                    value13d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13d = unpack("<f", f.read(4))[0]
                    vx14d = unpack("<f", f.read(4))[0]
                    vy14d = unpack("<f", f.read(4))[0]
                    vz14d = unpack("<f", f.read(4))[0]
                    type14d = unpack("B", f.read(1))[0]
                    value14d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14d = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1e = unpack("<f", f.read(4))[0]
                    vy1e = unpack("<f", f.read(4))[0]
                    vz1e = unpack("<f", f.read(4))[0]
                    type1e = unpack("B", f.read(1))[0]
                    value1e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1e = unpack("<f", f.read(4))[0]
                    vx2e = unpack("<f", f.read(4))[0]
                    vy2e = unpack("<f", f.read(4))[0]
                    vz2e = unpack("<f", f.read(4))[0]
                    type2e = unpack("B", f.read(1))[0]
                    value2e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2e = unpack("<f", f.read(4))[0]
                    vx3e = unpack("<f", f.read(4))[0]
                    vy3e = unpack("<f", f.read(4))[0]
                    vz3e = unpack("<f", f.read(4))[0]
                    type3e = unpack("B", f.read(1))[0]
                    value3e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3e = unpack("<f", f.read(4))[0]
                    vx4e = unpack("<f", f.read(4))[0]
                    vy4e = unpack("<f", f.read(4))[0]
                    vz4e = unpack("<f", f.read(4))[0]
                    type4e = unpack("B", f.read(1))[0]
                    value4e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4e = unpack("<f", f.read(4))[0]
                    vx5e = unpack("<f", f.read(4))[0]
                    vy5e = unpack("<f", f.read(4))[0]
                    vz5e = unpack("<f", f.read(4))[0]
                    type5e = unpack("B", f.read(1))[0]
                    value5e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5e = unpack("<f", f.read(4))[0]
                    vx6e = unpack("<f", f.read(4))[0]
                    vy6e = unpack("<f", f.read(4))[0]
                    vz6e = unpack("<f", f.read(4))[0]
                    type6e = unpack("B", f.read(1))[0]
                    value6e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6e = unpack("<f", f.read(4))[0]
                    vx7e = unpack("<f", f.read(4))[0]
                    vy7e = unpack("<f", f.read(4))[0]
                    vz7e = unpack("<f", f.read(4))[0]
                    type7e = unpack("B", f.read(1))[0]
                    value7e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7e = unpack("<f", f.read(4))[0]
                    vx8e = unpack("<f", f.read(4))[0]
                    vy8e = unpack("<f", f.read(4))[0]
                    vz8e = unpack("<f", f.read(4))[0]
                    type8e = unpack("B", f.read(1))[0]
                    value8e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8e = unpack("<f", f.read(4))[0]
                    vx9e = unpack("<f", f.read(4))[0]
                    vy9e = unpack("<f", f.read(4))[0]
                    vz9e = unpack("<f", f.read(4))[0]
                    type9e = unpack("B", f.read(1))[0]
                    value9e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9e = unpack("<f", f.read(4))[0]
                    vx10e = unpack("<f", f.read(4))[0]
                    vy10e = unpack("<f", f.read(4))[0]
                    vz10e = unpack("<f", f.read(4))[0]
                    type10e = unpack("B", f.read(1))[0]
                    value10e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10e = unpack("<f", f.read(4))[0]
                    vx11e = unpack("<f", f.read(4))[0]
                    vy11e = unpack("<f", f.read(4))[0]
                    vz11e = unpack("<f", f.read(4))[0]
                    type11e = unpack("B", f.read(1))[0]
                    value11e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11e = unpack("<f", f.read(4))[0]
                    vx12e = unpack("<f", f.read(4))[0]
                    vy12e = unpack("<f", f.read(4))[0]
                    vz12e = unpack("<f", f.read(4))[0]
                    type12e = unpack("B", f.read(1))[0]
                    value12e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12e = unpack("<f", f.read(4))[0]
                    vx13e = unpack("<f", f.read(4))[0]
                    vy13e = unpack("<f", f.read(4))[0]
                    vz13e = unpack("<f", f.read(4))[0]
                    type13e = unpack("B", f.read(1))[0]
                    value13e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13e = unpack("<f", f.read(4))[0]
                    vx14e = unpack("<f", f.read(4))[0]
                    vy14e = unpack("<f", f.read(4))[0]
                    vz14e = unpack("<f", f.read(4))[0]
                    type14e = unpack("B", f.read(1))[0]
                    value14e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14e = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1f = unpack("<f", f.read(4))[0]
                    vy1f = unpack("<f", f.read(4))[0]
                    vz1f = unpack("<f", f.read(4))[0]
                    type1f = unpack("B", f.read(1))[0]
                    value1f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1f = unpack("<f", f.read(4))[0]
                    vx2f = unpack("<f", f.read(4))[0]
                    vy2f = unpack("<f", f.read(4))[0]
                    vz2f = unpack("<f", f.read(4))[0]
                    type2f = unpack("B", f.read(1))[0]
                    value2f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2f = unpack("<f", f.read(4))[0]
                    vx3f = unpack("<f", f.read(4))[0]
                    vy3f = unpack("<f", f.read(4))[0]
                    vz3f = unpack("<f", f.read(4))[0]
                    type3f = unpack("B", f.read(1))[0]
                    value3f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3f = unpack("<f", f.read(4))[0]
                    vx4f = unpack("<f", f.read(4))[0]
                    vy4f = unpack("<f", f.read(4))[0]
                    vz4f = unpack("<f", f.read(4))[0]
                    type4f = unpack("B", f.read(1))[0]
                    value4f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4f = unpack("<f", f.read(4))[0]
                    vx5f = unpack("<f", f.read(4))[0]
                    vy5f = unpack("<f", f.read(4))[0]
                    vz5f = unpack("<f", f.read(4))[0]
                    type5f = unpack("B", f.read(1))[0]
                    value5f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5f = unpack("<f", f.read(4))[0]
                    vx6f = unpack("<f", f.read(4))[0]
                    vy6f = unpack("<f", f.read(4))[0]
                    vz6f = unpack("<f", f.read(4))[0]
                    type6f = unpack("B", f.read(1))[0]
                    value6f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6f = unpack("<f", f.read(4))[0]
                    vx7f = unpack("<f", f.read(4))[0]
                    vy7f = unpack("<f", f.read(4))[0]
                    vz7f = unpack("<f", f.read(4))[0]
                    type7f = unpack("B", f.read(1))[0]
                    value7f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7f = unpack("<f", f.read(4))[0]
                    vx8f = unpack("<f", f.read(4))[0]
                    vy8f = unpack("<f", f.read(4))[0]
                    vz8f = unpack("<f", f.read(4))[0]
                    type8f = unpack("B", f.read(1))[0]
                    value8f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8f = unpack("<f", f.read(4))[0]
                    vx9f = unpack("<f", f.read(4))[0]
                    vy9f = unpack("<f", f.read(4))[0]
                    vz9f = unpack("<f", f.read(4))[0]
                    type9f = unpack("B", f.read(1))[0]
                    value9f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9f = unpack("<f", f.read(4))[0]
                    vx10f = unpack("<f", f.read(4))[0]
                    vy10f = unpack("<f", f.read(4))[0]
                    vz10f = unpack("<f", f.read(4))[0]
                    type10f = unpack("B", f.read(1))[0]
                    value10f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10f = unpack("<f", f.read(4))[0]
                    vx11f = unpack("<f", f.read(4))[0]
                    vy11f = unpack("<f", f.read(4))[0]
                    vz11f = unpack("<f", f.read(4))[0]
                    type11f = unpack("B", f.read(1))[0]
                    value11f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11f = unpack("<f", f.read(4))[0]
                    vx12f = unpack("<f", f.read(4))[0]
                    vy12f = unpack("<f", f.read(4))[0]
                    vz12f = unpack("<f", f.read(4))[0]
                    type12f = unpack("B", f.read(1))[0]
                    value12f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12f = unpack("<f", f.read(4))[0]
                    vx13f = unpack("<f", f.read(4))[0]
                    vy13f = unpack("<f", f.read(4))[0]
                    vz13f = unpack("<f", f.read(4))[0]
                    type13f = unpack("B", f.read(1))[0]
                    value13f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13f = unpack("<f", f.read(4))[0]
                    vx14f = unpack("<f", f.read(4))[0]
                    vy14f = unpack("<f", f.read(4))[0]
                    vz14f = unpack("<f", f.read(4))[0]
                    type14f = unpack("B", f.read(1))[0]
                    value14f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14f = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1g = unpack("<f", f.read(4))[0]
                    vy1g = unpack("<f", f.read(4))[0]
                    vz1g = unpack("<f", f.read(4))[0]
                    type1g = unpack("B", f.read(1))[0]
                    value1g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1g = unpack("<f", f.read(4))[0]
                    vx2g = unpack("<f", f.read(4))[0]
                    vy2g = unpack("<f", f.read(4))[0]
                    vz2g = unpack("<f", f.read(4))[0]
                    type2g = unpack("B", f.read(1))[0]
                    value2g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2g = unpack("<f", f.read(4))[0]
                    vx3g = unpack("<f", f.read(4))[0]
                    vy3g = unpack("<f", f.read(4))[0]
                    vz3g = unpack("<f", f.read(4))[0]
                    type3g = unpack("B", f.read(1))[0]
                    value3g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3g = unpack("<f", f.read(4))[0]
                    vx4g = unpack("<f", f.read(4))[0]
                    vy4g = unpack("<f", f.read(4))[0]
                    vz4g = unpack("<f", f.read(4))[0]
                    type4g = unpack("B", f.read(1))[0]
                    value4g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4g = unpack("<f", f.read(4))[0]
                    vx5g = unpack("<f", f.read(4))[0]
                    vy5g = unpack("<f", f.read(4))[0]
                    vz5g = unpack("<f", f.read(4))[0]
                    type5g = unpack("B", f.read(1))[0]
                    value5g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5g = unpack("<f", f.read(4))[0]
                    vx6g = unpack("<f", f.read(4))[0]
                    vy6g = unpack("<f", f.read(4))[0]
                    vz6g = unpack("<f", f.read(4))[0]
                    type6g = unpack("B", f.read(1))[0]
                    value6g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6g = unpack("<f", f.read(4))[0]
                    vx7g = unpack("<f", f.read(4))[0]
                    vy7g = unpack("<f", f.read(4))[0]
                    vz7g = unpack("<f", f.read(4))[0]
                    type7g = unpack("B", f.read(1))[0]
                    value7g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7g = unpack("<f", f.read(4))[0]
                    vx8g = unpack("<f", f.read(4))[0]
                    vy8g = unpack("<f", f.read(4))[0]
                    vz8g = unpack("<f", f.read(4))[0]
                    type8g = unpack("B", f.read(1))[0]
                    value8g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8g = unpack("<f", f.read(4))[0]
                    vx9g = unpack("<f", f.read(4))[0]
                    vy9g = unpack("<f", f.read(4))[0]
                    vz9g = unpack("<f", f.read(4))[0]
                    type9g = unpack("B", f.read(1))[0]
                    value9g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9g = unpack("<f", f.read(4))[0]
                    vx10g = unpack("<f", f.read(4))[0]
                    vy10g = unpack("<f", f.read(4))[0]
                    vz10g = unpack("<f", f.read(4))[0]
                    type10g = unpack("B", f.read(1))[0]
                    value10g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10g = unpack("<f", f.read(4))[0]
                    vx11g = unpack("<f", f.read(4))[0]
                    vy11g = unpack("<f", f.read(4))[0]
                    vz11g = unpack("<f", f.read(4))[0]
                    type11g = unpack("B", f.read(1))[0]
                    value11g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11g = unpack("<f", f.read(4))[0]
                    vx12g = unpack("<f", f.read(4))[0]
                    vy12g = unpack("<f", f.read(4))[0]
                    vz12g = unpack("<f", f.read(4))[0]
                    type12g = unpack("B", f.read(1))[0]
                    value12g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12g = unpack("<f", f.read(4))[0]
                    vx13g = unpack("<f", f.read(4))[0]
                    vy13g = unpack("<f", f.read(4))[0]
                    vz13g = unpack("<f", f.read(4))[0]
                    type13g = unpack("B", f.read(1))[0]
                    value13g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13g = unpack("<f", f.read(4))[0]
                    vx14g = unpack("<f", f.read(4))[0]
                    vy14g = unpack("<f", f.read(4))[0]
                    vz14g = unpack("<f", f.read(4))[0]
                    type14g = unpack("B", f.read(1))[0]
                    value14g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14g = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1h = unpack("<f", f.read(4))[0]
                    vy1h = unpack("<f", f.read(4))[0]
                    vz1h = unpack("<f", f.read(4))[0]
                    type1h = unpack("B", f.read(1))[0]
                    value1h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1h = unpack("<f", f.read(4))[0]
                    vx2h = unpack("<f", f.read(4))[0]
                    vy2h = unpack("<f", f.read(4))[0]
                    vz2h = unpack("<f", f.read(4))[0]
                    type2h = unpack("B", f.read(1))[0]
                    value2h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2h = unpack("<f", f.read(4))[0]
                    vx3h = unpack("<f", f.read(4))[0]
                    vy3h = unpack("<f", f.read(4))[0]
                    vz3h = unpack("<f", f.read(4))[0]
                    type3h = unpack("B", f.read(1))[0]
                    value3h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3h = unpack("<f", f.read(4))[0]
                    vx4h = unpack("<f", f.read(4))[0]
                    vy4h = unpack("<f", f.read(4))[0]
                    vz4h = unpack("<f", f.read(4))[0]
                    type4h = unpack("B", f.read(1))[0]
                    value4h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4h = unpack("<f", f.read(4))[0]
                    vx5h = unpack("<f", f.read(4))[0]
                    vy5h = unpack("<f", f.read(4))[0]
                    vz5h = unpack("<f", f.read(4))[0]
                    type5h = unpack("B", f.read(1))[0]
                    value5h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5h = unpack("<f", f.read(4))[0]
                    vx6h = unpack("<f", f.read(4))[0]
                    vy6h = unpack("<f", f.read(4))[0]
                    vz6h = unpack("<f", f.read(4))[0]
                    type6h = unpack("B", f.read(1))[0]
                    value6h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6h = unpack("<f", f.read(4))[0]
                    vx7h = unpack("<f", f.read(4))[0]
                    vy7h = unpack("<f", f.read(4))[0]
                    vz7h = unpack("<f", f.read(4))[0]
                    type7h = unpack("B", f.read(1))[0]
                    value7h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7h = unpack("<f", f.read(4))[0]
                    vx8h = unpack("<f", f.read(4))[0]
                    vy8h = unpack("<f", f.read(4))[0]
                    vz8h = unpack("<f", f.read(4))[0]
                    type8h = unpack("B", f.read(1))[0]
                    value8h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8h = unpack("<f", f.read(4))[0]
                    vx9h = unpack("<f", f.read(4))[0]
                    vy9h = unpack("<f", f.read(4))[0]
                    vz9h = unpack("<f", f.read(4))[0]
                    type9h = unpack("B", f.read(1))[0]
                    value9h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9h = unpack("<f", f.read(4))[0]
                    vx10h = unpack("<f", f.read(4))[0]
                    vy10h = unpack("<f", f.read(4))[0]
                    vz10h = unpack("<f", f.read(4))[0]
                    type10h = unpack("B", f.read(1))[0]
                    value10h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10h = unpack("<f", f.read(4))[0]
                    vx11h = unpack("<f", f.read(4))[0]
                    vy11h = unpack("<f", f.read(4))[0]
                    vz11h = unpack("<f", f.read(4))[0]
                    type11h = unpack("B", f.read(1))[0]
                    value11h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11h = unpack("<f", f.read(4))[0]
                    vx12h = unpack("<f", f.read(4))[0]
                    vy12h = unpack("<f", f.read(4))[0]
                    vz12h = unpack("<f", f.read(4))[0]
                    type12h = unpack("B", f.read(1))[0]
                    value12h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12h = unpack("<f", f.read(4))[0]
                    vx13h = unpack("<f", f.read(4))[0]
                    vy13h = unpack("<f", f.read(4))[0]
                    vz13h = unpack("<f", f.read(4))[0]
                    type13h = unpack("B", f.read(1))[0]
                    value13h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13h = unpack("<f", f.read(4))[0]
                    vx14h = unpack("<f", f.read(4))[0]
                    vy14h = unpack("<f", f.read(4))[0]
                    vz14h = unpack("<f", f.read(4))[0]
                    type14h = unpack("B", f.read(1))[0]
                    value14h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14h = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1i = unpack("<f", f.read(4))[0]
                    vy1i = unpack("<f", f.read(4))[0]
                    vz1i = unpack("<f", f.read(4))[0]
                    type1i = unpack("B", f.read(1))[0]
                    value1i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1i = unpack("<f", f.read(4))[0]
                    vx2i = unpack("<f", f.read(4))[0]
                    vy2i = unpack("<f", f.read(4))[0]
                    vz2i = unpack("<f", f.read(4))[0]
                    type2i = unpack("B", f.read(1))[0]
                    value2i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2i = unpack("<f", f.read(4))[0]
                    vx3i = unpack("<f", f.read(4))[0]
                    vy3i = unpack("<f", f.read(4))[0]
                    vz3i = unpack("<f", f.read(4))[0]
                    type3i = unpack("B", f.read(1))[0]
                    value3i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3i = unpack("<f", f.read(4))[0]
                    vx4i = unpack("<f", f.read(4))[0]
                    vy4i = unpack("<f", f.read(4))[0]
                    vz4i = unpack("<f", f.read(4))[0]
                    type4i = unpack("B", f.read(1))[0]
                    value4i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4i = unpack("<f", f.read(4))[0]
                    vx5i = unpack("<f", f.read(4))[0]
                    vy5i = unpack("<f", f.read(4))[0]
                    vz5i = unpack("<f", f.read(4))[0]
                    type5i = unpack("B", f.read(1))[0]
                    value5i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5i = unpack("<f", f.read(4))[0]
                    vx6i = unpack("<f", f.read(4))[0]
                    vy6i = unpack("<f", f.read(4))[0]
                    vz6i = unpack("<f", f.read(4))[0]
                    type6i = unpack("B", f.read(1))[0]
                    value6i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6i = unpack("<f", f.read(4))[0]
                    vx7i = unpack("<f", f.read(4))[0]
                    vy7i = unpack("<f", f.read(4))[0]
                    vz7i = unpack("<f", f.read(4))[0]
                    type7i = unpack("B", f.read(1))[0]
                    value7i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7i = unpack("<f", f.read(4))[0]
                    vx8i = unpack("<f", f.read(4))[0]
                    vy8i = unpack("<f", f.read(4))[0]
                    vz8i = unpack("<f", f.read(4))[0]
                    type8i = unpack("B", f.read(1))[0]
                    value8i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8i = unpack("<f", f.read(4))[0]
                    vx9i = unpack("<f", f.read(4))[0]
                    vy9i = unpack("<f", f.read(4))[0]
                    vz9i = unpack("<f", f.read(4))[0]
                    type9i = unpack("B", f.read(1))[0]
                    value9i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9i = unpack("<f", f.read(4))[0]
                    vx10i = unpack("<f", f.read(4))[0]
                    vy10i = unpack("<f", f.read(4))[0]
                    vz10i = unpack("<f", f.read(4))[0]
                    type10i = unpack("B", f.read(1))[0]
                    value10i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10i = unpack("<f", f.read(4))[0]
                    vx11i = unpack("<f", f.read(4))[0]
                    vy11i = unpack("<f", f.read(4))[0]
                    vz11i = unpack("<f", f.read(4))[0]
                    type11i = unpack("B", f.read(1))[0]
                    value11i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11i = unpack("<f", f.read(4))[0]
                    vx12i = unpack("<f", f.read(4))[0]
                    vy12i = unpack("<f", f.read(4))[0]
                    vz12i = unpack("<f", f.read(4))[0]
                    type12i = unpack("B", f.read(1))[0]
                    value12i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12i = unpack("<f", f.read(4))[0]
                    vx13i = unpack("<f", f.read(4))[0]
                    vy13i = unpack("<f", f.read(4))[0]
                    vz13i = unpack("<f", f.read(4))[0]
                    type13i = unpack("B", f.read(1))[0]
                    value13i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13i = unpack("<f", f.read(4))[0]
                    vx14i = unpack("<f", f.read(4))[0]
                    vy14i = unpack("<f", f.read(4))[0]
                    vz14i = unpack("<f", f.read(4))[0]
                    type14i = unpack("B", f.read(1))[0]
                    value14i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14i = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1j = unpack("<f", f.read(4))[0]
                    vy1j = unpack("<f", f.read(4))[0]
                    vz1j = unpack("<f", f.read(4))[0]
                    type1j = unpack("B", f.read(1))[0]
                    value1j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1j = unpack("<f", f.read(4))[0]
                    vx2j = unpack("<f", f.read(4))[0]
                    vy2j = unpack("<f", f.read(4))[0]
                    vz2j = unpack("<f", f.read(4))[0]
                    type2j = unpack("B", f.read(1))[0]
                    value2j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2j = unpack("<f", f.read(4))[0]
                    vx3j = unpack("<f", f.read(4))[0]
                    vy3j = unpack("<f", f.read(4))[0]
                    vz3j = unpack("<f", f.read(4))[0]
                    type3j = unpack("B", f.read(1))[0]
                    value3j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3j = unpack("<f", f.read(4))[0]
                    vx4j = unpack("<f", f.read(4))[0]
                    vy4j = unpack("<f", f.read(4))[0]
                    vz4j = unpack("<f", f.read(4))[0]
                    type4j = unpack("B", f.read(1))[0]
                    value4j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4j = unpack("<f", f.read(4))[0]
                    vx5j = unpack("<f", f.read(4))[0]
                    vy5j = unpack("<f", f.read(4))[0]
                    vz5j = unpack("<f", f.read(4))[0]
                    type5j = unpack("B", f.read(1))[0]
                    value5j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5j = unpack("<f", f.read(4))[0]
                    vx6j = unpack("<f", f.read(4))[0]
                    vy6j = unpack("<f", f.read(4))[0]
                    vz6j = unpack("<f", f.read(4))[0]
                    type6j = unpack("B", f.read(1))[0]
                    value6j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6j = unpack("<f", f.read(4))[0]
                    vx7j = unpack("<f", f.read(4))[0]
                    vy7j = unpack("<f", f.read(4))[0]
                    vz7j = unpack("<f", f.read(4))[0]
                    type7j = unpack("B", f.read(1))[0]
                    value7j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7j = unpack("<f", f.read(4))[0]
                    vx8j = unpack("<f", f.read(4))[0]
                    vy8j = unpack("<f", f.read(4))[0]
                    vz8j = unpack("<f", f.read(4))[0]
                    type8j = unpack("B", f.read(1))[0]
                    value8j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8j = unpack("<f", f.read(4))[0]
                    vx9j = unpack("<f", f.read(4))[0]
                    vy9j = unpack("<f", f.read(4))[0]
                    vz9j = unpack("<f", f.read(4))[0]
                    type9j = unpack("B", f.read(1))[0]
                    value9j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9j = unpack("<f", f.read(4))[0]
                    vx10j = unpack("<f", f.read(4))[0]
                    vy10j = unpack("<f", f.read(4))[0]
                    vz10j = unpack("<f", f.read(4))[0]
                    type10j = unpack("B", f.read(1))[0]
                    value10j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10j = unpack("<f", f.read(4))[0]
                    vx11j = unpack("<f", f.read(4))[0]
                    vy11j = unpack("<f", f.read(4))[0]
                    vz11j = unpack("<f", f.read(4))[0]
                    type11j = unpack("B", f.read(1))[0]
                    value11j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11j = unpack("<f", f.read(4))[0]
                    vx12j = unpack("<f", f.read(4))[0]
                    vy12j = unpack("<f", f.read(4))[0]
                    vz12j = unpack("<f", f.read(4))[0]
                    type12j = unpack("B", f.read(1))[0]
                    value12j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12j = unpack("<f", f.read(4))[0]
                    vx13j = unpack("<f", f.read(4))[0]
                    vy13j = unpack("<f", f.read(4))[0]
                    vz13j = unpack("<f", f.read(4))[0]
                    type13j = unpack("B", f.read(1))[0]
                    value13j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13j = unpack("<f", f.read(4))[0]
                    vx14j = unpack("<f", f.read(4))[0]
                    vy14j = unpack("<f", f.read(4))[0]
                    vz14j = unpack("<f", f.read(4))[0]
                    type14j = unpack("B", f.read(1))[0]
                    value14j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14j = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1k = unpack("<f", f.read(4))[0]
                    vy1k = unpack("<f", f.read(4))[0]
                    vz1k = unpack("<f", f.read(4))[0]
                    type1k = unpack("B", f.read(1))[0]
                    value1k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1k = unpack("<f", f.read(4))[0]
                    vx2k = unpack("<f", f.read(4))[0]
                    vy2k = unpack("<f", f.read(4))[0]
                    vz2k = unpack("<f", f.read(4))[0]
                    type2k = unpack("B", f.read(1))[0]
                    value2k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2k = unpack("<f", f.read(4))[0]
                    vx3k = unpack("<f", f.read(4))[0]
                    vy3k = unpack("<f", f.read(4))[0]
                    vz3k = unpack("<f", f.read(4))[0]
                    type3k = unpack("B", f.read(1))[0]
                    value3k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3k = unpack("<f", f.read(4))[0]
                    vx4k = unpack("<f", f.read(4))[0]
                    vy4k = unpack("<f", f.read(4))[0]
                    vz4k = unpack("<f", f.read(4))[0]
                    type4k = unpack("B", f.read(1))[0]
                    value4k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4k = unpack("<f", f.read(4))[0]
                    vx5k = unpack("<f", f.read(4))[0]
                    vy5k = unpack("<f", f.read(4))[0]
                    vz5k = unpack("<f", f.read(4))[0]
                    type5k = unpack("B", f.read(1))[0]
                    value5k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5k = unpack("<f", f.read(4))[0]
                    vx6k = unpack("<f", f.read(4))[0]
                    vy6k = unpack("<f", f.read(4))[0]
                    vz6k = unpack("<f", f.read(4))[0]
                    type6k = unpack("B", f.read(1))[0]
                    value6k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6k = unpack("<f", f.read(4))[0]
                    vx7k = unpack("<f", f.read(4))[0]
                    vy7k = unpack("<f", f.read(4))[0]
                    vz7k = unpack("<f", f.read(4))[0]
                    type7k = unpack("B", f.read(1))[0]
                    value7k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7k = unpack("<f", f.read(4))[0]
                    vx8k = unpack("<f", f.read(4))[0]
                    vy8k = unpack("<f", f.read(4))[0]
                    vz8k = unpack("<f", f.read(4))[0]
                    type8k = unpack("B", f.read(1))[0]
                    value8k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8k = unpack("<f", f.read(4))[0]
                    vx9k = unpack("<f", f.read(4))[0]
                    vy9k = unpack("<f", f.read(4))[0]
                    vz9k = unpack("<f", f.read(4))[0]
                    type9k = unpack("B", f.read(1))[0]
                    value9k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9k = unpack("<f", f.read(4))[0]
                    vx10k = unpack("<f", f.read(4))[0]
                    vy10k = unpack("<f", f.read(4))[0]
                    vz10k = unpack("<f", f.read(4))[0]
                    type10k = unpack("B", f.read(1))[0]
                    value10k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10k = unpack("<f", f.read(4))[0]
                    vx11k = unpack("<f", f.read(4))[0]
                    vy11k = unpack("<f", f.read(4))[0]
                    vz11k = unpack("<f", f.read(4))[0]
                    type11k = unpack("B", f.read(1))[0]
                    value11k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11k = unpack("<f", f.read(4))[0]
                    vx12k = unpack("<f", f.read(4))[0]
                    vy12k = unpack("<f", f.read(4))[0]
                    vz12k = unpack("<f", f.read(4))[0]
                    type12k = unpack("B", f.read(1))[0]
                    value12k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12k = unpack("<f", f.read(4))[0]
                    vx13k = unpack("<f", f.read(4))[0]
                    vy13k = unpack("<f", f.read(4))[0]
                    vz13k = unpack("<f", f.read(4))[0]
                    type13k = unpack("B", f.read(1))[0]
                    value13k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13k = unpack("<f", f.read(4))[0]
                    vx14k = unpack("<f", f.read(4))[0]
                    vy14k = unpack("<f", f.read(4))[0]
                    vz14k = unpack("<f", f.read(4))[0]
                    type14k = unpack("B", f.read(1))[0]
                    value14k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14k = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1l = unpack("<f", f.read(4))[0]
                    vy1l = unpack("<f", f.read(4))[0]
                    vz1l = unpack("<f", f.read(4))[0]
                    type1l = unpack("B", f.read(1))[0]
                    value1l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1l = unpack("<f", f.read(4))[0]
                    vx2l = unpack("<f", f.read(4))[0]
                    vy2l = unpack("<f", f.read(4))[0]
                    vz2l = unpack("<f", f.read(4))[0]
                    type2l = unpack("B", f.read(1))[0]
                    value2l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2l = unpack("<f", f.read(4))[0]
                    vx3l = unpack("<f", f.read(4))[0]
                    vy3l = unpack("<f", f.read(4))[0]
                    vz3l = unpack("<f", f.read(4))[0]
                    type3l = unpack("B", f.read(1))[0]
                    value3l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3l = unpack("<f", f.read(4))[0]
                    vx4l = unpack("<f", f.read(4))[0]
                    vy4l = unpack("<f", f.read(4))[0]
                    vz4l = unpack("<f", f.read(4))[0]
                    type4l = unpack("B", f.read(1))[0]
                    value4l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4l = unpack("<f", f.read(4))[0]
                    vx5l = unpack("<f", f.read(4))[0]
                    vy5l = unpack("<f", f.read(4))[0]
                    vz5l = unpack("<f", f.read(4))[0]
                    type5l = unpack("B", f.read(1))[0]
                    value5l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5l = unpack("<f", f.read(4))[0]
                    vx6l = unpack("<f", f.read(4))[0]
                    vy6l = unpack("<f", f.read(4))[0]
                    vz6l = unpack("<f", f.read(4))[0]
                    type6l = unpack("B", f.read(1))[0]
                    value6l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6l = unpack("<f", f.read(4))[0]
                    vx7l = unpack("<f", f.read(4))[0]
                    vy7l = unpack("<f", f.read(4))[0]
                    vz7l = unpack("<f", f.read(4))[0]
                    type7l = unpack("B", f.read(1))[0]
                    value7l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7l = unpack("<f", f.read(4))[0]
                    vx8l = unpack("<f", f.read(4))[0]
                    vy8l = unpack("<f", f.read(4))[0]
                    vz8l = unpack("<f", f.read(4))[0]
                    type8l = unpack("B", f.read(1))[0]
                    value8l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8l = unpack("<f", f.read(4))[0]
                    vx9l = unpack("<f", f.read(4))[0]
                    vy9l = unpack("<f", f.read(4))[0]
                    vz9l = unpack("<f", f.read(4))[0]
                    type9l = unpack("B", f.read(1))[0]
                    value9l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9l = unpack("<f", f.read(4))[0]
                    vx10l = unpack("<f", f.read(4))[0]
                    vy10l = unpack("<f", f.read(4))[0]
                    vz10l = unpack("<f", f.read(4))[0]
                    type10l = unpack("B", f.read(1))[0]
                    value10l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10l = unpack("<f", f.read(4))[0]
                    vx11l = unpack("<f", f.read(4))[0]
                    vy11l = unpack("<f", f.read(4))[0]
                    vz11l = unpack("<f", f.read(4))[0]
                    type11l = unpack("B", f.read(1))[0]
                    value11l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11l = unpack("<f", f.read(4))[0]
                    vx12l = unpack("<f", f.read(4))[0]
                    vy12l = unpack("<f", f.read(4))[0]
                    vz12l = unpack("<f", f.read(4))[0]
                    type12l = unpack("B", f.read(1))[0]
                    value12l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12l = unpack("<f", f.read(4))[0]
                    vx13l = unpack("<f", f.read(4))[0]
                    vy13l = unpack("<f", f.read(4))[0]
                    vz13l = unpack("<f", f.read(4))[0]
                    type13l = unpack("B", f.read(1))[0]
                    value13l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13l = unpack("<f", f.read(4))[0]
                    vx14l = unpack("<f", f.read(4))[0]
                    vy14l = unpack("<f", f.read(4))[0]
                    vz14l = unpack("<f", f.read(4))[0]
                    type14l = unpack("B", f.read(1))[0]
                    value14l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14l = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1m = unpack("<f", f.read(4))[0]
                    vy1m = unpack("<f", f.read(4))[0]
                    vz1m = unpack("<f", f.read(4))[0]
                    type1m = unpack("B", f.read(1))[0]
                    value1m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1m = unpack("<f", f.read(4))[0]
                    vx2m = unpack("<f", f.read(4))[0]
                    vy2m = unpack("<f", f.read(4))[0]
                    vz2m = unpack("<f", f.read(4))[0]
                    type2m = unpack("B", f.read(1))[0]
                    value2m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2m = unpack("<f", f.read(4))[0]
                    vx3m = unpack("<f", f.read(4))[0]
                    vy3m = unpack("<f", f.read(4))[0]
                    vz3m = unpack("<f", f.read(4))[0]
                    type3m = unpack("B", f.read(1))[0]
                    value3m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3m = unpack("<f", f.read(4))[0]
                    vx4m = unpack("<f", f.read(4))[0]
                    vy4m = unpack("<f", f.read(4))[0]
                    vz4m = unpack("<f", f.read(4))[0]
                    type4m = unpack("B", f.read(1))[0]
                    value4m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4m = unpack("<f", f.read(4))[0]
                    vx5m = unpack("<f", f.read(4))[0]
                    vy5m = unpack("<f", f.read(4))[0]
                    vz5m = unpack("<f", f.read(4))[0]
                    type5m = unpack("B", f.read(1))[0]
                    value5m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5m = unpack("<f", f.read(4))[0]
                    vx6m = unpack("<f", f.read(4))[0]
                    vy6m = unpack("<f", f.read(4))[0]
                    vz6m = unpack("<f", f.read(4))[0]
                    type6m = unpack("B", f.read(1))[0]
                    value6m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6m = unpack("<f", f.read(4))[0]
                    vx7m = unpack("<f", f.read(4))[0]
                    vy7m = unpack("<f", f.read(4))[0]
                    vz7m = unpack("<f", f.read(4))[0]
                    type7m = unpack("B", f.read(1))[0]
                    value7m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7m = unpack("<f", f.read(4))[0]
                    vx8m = unpack("<f", f.read(4))[0]
                    vy8m = unpack("<f", f.read(4))[0]
                    vz8m = unpack("<f", f.read(4))[0]
                    type8m = unpack("B", f.read(1))[0]
                    value8m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8m = unpack("<f", f.read(4))[0]
                    vx9m = unpack("<f", f.read(4))[0]
                    vy9m = unpack("<f", f.read(4))[0]
                    vz9m = unpack("<f", f.read(4))[0]
                    type9m = unpack("B", f.read(1))[0]
                    value9m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9m = unpack("<f", f.read(4))[0]
                    vx10m = unpack("<f", f.read(4))[0]
                    vy10m = unpack("<f", f.read(4))[0]
                    vz10m = unpack("<f", f.read(4))[0]
                    type10m = unpack("B", f.read(1))[0]
                    value10m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10m = unpack("<f", f.read(4))[0]
                    vx11m = unpack("<f", f.read(4))[0]
                    vy11m = unpack("<f", f.read(4))[0]
                    vz11m = unpack("<f", f.read(4))[0]
                    type11m = unpack("B", f.read(1))[0]
                    value11m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11m = unpack("<f", f.read(4))[0]
                    vx12m = unpack("<f", f.read(4))[0]
                    vy12m = unpack("<f", f.read(4))[0]
                    vz12m = unpack("<f", f.read(4))[0]
                    type12m = unpack("B", f.read(1))[0]
                    value12m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12m = unpack("<f", f.read(4))[0]
                    vx13m = unpack("<f", f.read(4))[0]
                    vy13m = unpack("<f", f.read(4))[0]
                    vz13m = unpack("<f", f.read(4))[0]
                    type13m = unpack("B", f.read(1))[0]
                    value13m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13m = unpack("<f", f.read(4))[0]
                    vx14m = unpack("<f", f.read(4))[0]
                    vy14m = unpack("<f", f.read(4))[0]
                    vz14m = unpack("<f", f.read(4))[0]
                    type14m = unpack("B", f.read(1))[0]
                    value14m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14m = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1n = unpack("<f", f.read(4))[0]
                    vy1n = unpack("<f", f.read(4))[0]
                    vz1n = unpack("<f", f.read(4))[0]
                    type1n = unpack("B", f.read(1))[0]
                    value1n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1n = unpack("<f", f.read(4))[0]
                    vx2n = unpack("<f", f.read(4))[0]
                    vy2n = unpack("<f", f.read(4))[0]
                    vz2n = unpack("<f", f.read(4))[0]
                    type2n = unpack("B", f.read(1))[0]
                    value2n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2n = unpack("<f", f.read(4))[0]
                    vx3n = unpack("<f", f.read(4))[0]
                    vy3n = unpack("<f", f.read(4))[0]
                    vz3n = unpack("<f", f.read(4))[0]
                    type3n = unpack("B", f.read(1))[0]
                    value3n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3n = unpack("<f", f.read(4))[0]
                    vx4n = unpack("<f", f.read(4))[0]
                    vy4n = unpack("<f", f.read(4))[0]
                    vz4n = unpack("<f", f.read(4))[0]
                    type4n = unpack("B", f.read(1))[0]
                    value4n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4n = unpack("<f", f.read(4))[0]
                    vx5n = unpack("<f", f.read(4))[0]
                    vy5n = unpack("<f", f.read(4))[0]
                    vz5n = unpack("<f", f.read(4))[0]
                    type5n = unpack("B", f.read(1))[0]
                    value5n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5n = unpack("<f", f.read(4))[0]
                    vx6n = unpack("<f", f.read(4))[0]
                    vy6n = unpack("<f", f.read(4))[0]
                    vz6n = unpack("<f", f.read(4))[0]
                    type6n = unpack("B", f.read(1))[0]
                    value6n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6n = unpack("<f", f.read(4))[0]
                    vx7n = unpack("<f", f.read(4))[0]
                    vy7n = unpack("<f", f.read(4))[0]
                    vz7n = unpack("<f", f.read(4))[0]
                    type7n = unpack("B", f.read(1))[0]
                    value7n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7n = unpack("<f", f.read(4))[0]
                    vx8n = unpack("<f", f.read(4))[0]
                    vy8n = unpack("<f", f.read(4))[0]
                    vz8n = unpack("<f", f.read(4))[0]
                    type8n = unpack("B", f.read(1))[0]
                    value8n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8n = unpack("<f", f.read(4))[0]
                    vx9n = unpack("<f", f.read(4))[0]
                    vy9n = unpack("<f", f.read(4))[0]
                    vz9n = unpack("<f", f.read(4))[0]
                    type9n = unpack("B", f.read(1))[0]
                    value9n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9n = unpack("<f", f.read(4))[0]
                    vx10n = unpack("<f", f.read(4))[0]
                    vy10n = unpack("<f", f.read(4))[0]
                    vz10n = unpack("<f", f.read(4))[0]
                    type10n = unpack("B", f.read(1))[0]
                    value10n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10n = unpack("<f", f.read(4))[0]
                    vx11n = unpack("<f", f.read(4))[0]
                    vy11n = unpack("<f", f.read(4))[0]
                    vz11n = unpack("<f", f.read(4))[0]
                    type11n = unpack("B", f.read(1))[0]
                    value11n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11n = unpack("<f", f.read(4))[0]
                    vx12n = unpack("<f", f.read(4))[0]
                    vy12n = unpack("<f", f.read(4))[0]
                    vz12n = unpack("<f", f.read(4))[0]
                    type12n = unpack("B", f.read(1))[0]
                    value12n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12n = unpack("<f", f.read(4))[0]
                    vx13n = unpack("<f", f.read(4))[0]
                    vy13n = unpack("<f", f.read(4))[0]
                    vz13n = unpack("<f", f.read(4))[0]
                    type13n = unpack("B", f.read(1))[0]
                    value13n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13n = unpack("<f", f.read(4))[0]
                    vx14n = unpack("<f", f.read(4))[0]
                    vy14n = unpack("<f", f.read(4))[0]
                    vz14n = unpack("<f", f.read(4))[0]
                    type14n = unpack("B", f.read(1))[0]
                    value14n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14n = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1o = unpack("<f", f.read(4))[0]
                    vy1o = unpack("<f", f.read(4))[0]
                    vz1o = unpack("<f", f.read(4))[0]
                    type1o = unpack("B", f.read(1))[0]
                    value1o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1o = unpack("<f", f.read(4))[0]
                    vx2o = unpack("<f", f.read(4))[0]
                    vy2o = unpack("<f", f.read(4))[0]
                    vz2o = unpack("<f", f.read(4))[0]
                    type2o = unpack("B", f.read(1))[0]
                    value2o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2o = unpack("<f", f.read(4))[0]
                    vx3o = unpack("<f", f.read(4))[0]
                    vy3o = unpack("<f", f.read(4))[0]
                    vz3o = unpack("<f", f.read(4))[0]
                    type3o = unpack("B", f.read(1))[0]
                    value3o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3o = unpack("<f", f.read(4))[0]
                    vx4o = unpack("<f", f.read(4))[0]
                    vy4o = unpack("<f", f.read(4))[0]
                    vz4o = unpack("<f", f.read(4))[0]
                    type4o = unpack("B", f.read(1))[0]
                    value4o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4o = unpack("<f", f.read(4))[0]
                    vx5o = unpack("<f", f.read(4))[0]
                    vy5o = unpack("<f", f.read(4))[0]
                    vz5o = unpack("<f", f.read(4))[0]
                    type5o = unpack("B", f.read(1))[0]
                    value5o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5o = unpack("<f", f.read(4))[0]
                    vx6o = unpack("<f", f.read(4))[0]
                    vy6o = unpack("<f", f.read(4))[0]
                    vz6o = unpack("<f", f.read(4))[0]
                    type6o = unpack("B", f.read(1))[0]
                    value6o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6o = unpack("<f", f.read(4))[0]
                    vx7o = unpack("<f", f.read(4))[0]
                    vy7o = unpack("<f", f.read(4))[0]
                    vz7o = unpack("<f", f.read(4))[0]
                    type7o = unpack("B", f.read(1))[0]
                    value7o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7o = unpack("<f", f.read(4))[0]
                    vx8o = unpack("<f", f.read(4))[0]
                    vy8o = unpack("<f", f.read(4))[0]
                    vz8o = unpack("<f", f.read(4))[0]
                    type8o = unpack("B", f.read(1))[0]
                    value8o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8o = unpack("<f", f.read(4))[0]
                    vx9o = unpack("<f", f.read(4))[0]
                    vy9o = unpack("<f", f.read(4))[0]
                    vz9o = unpack("<f", f.read(4))[0]
                    type9o = unpack("B", f.read(1))[0]
                    value9o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9o = unpack("<f", f.read(4))[0]
                    vx10o = unpack("<f", f.read(4))[0]
                    vy10o = unpack("<f", f.read(4))[0]
                    vz10o = unpack("<f", f.read(4))[0]
                    type10o = unpack("B", f.read(1))[0]
                    value10o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10o = unpack("<f", f.read(4))[0]
                    vx11o = unpack("<f", f.read(4))[0]
                    vy11o = unpack("<f", f.read(4))[0]
                    vz11o = unpack("<f", f.read(4))[0]
                    type11o = unpack("B", f.read(1))[0]
                    value11o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11o = unpack("<f", f.read(4))[0]
                    vx12o = unpack("<f", f.read(4))[0]
                    vy12o = unpack("<f", f.read(4))[0]
                    vz12o = unpack("<f", f.read(4))[0]
                    type12o = unpack("B", f.read(1))[0]
                    value12o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12o = unpack("<f", f.read(4))[0]
                    vx13o = unpack("<f", f.read(4))[0]
                    vy13o = unpack("<f", f.read(4))[0]
                    vz13o = unpack("<f", f.read(4))[0]
                    type13o = unpack("B", f.read(1))[0]
                    value13o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13o = unpack("<f", f.read(4))[0]
                    vx14o = unpack("<f", f.read(4))[0]
                    vy14o = unpack("<f", f.read(4))[0]
                    vz14o = unpack("<f", f.read(4))[0]
                    type14o = unpack("B", f.read(1))[0]
                    value14o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14o = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1p = unpack("<f", f.read(4))[0]
                    vy1p = unpack("<f", f.read(4))[0]
                    vz1p = unpack("<f", f.read(4))[0]
                    type1p = unpack("B", f.read(1))[0]
                    value1p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1p = unpack("<f", f.read(4))[0]
                    vx2p = unpack("<f", f.read(4))[0]
                    vy2p = unpack("<f", f.read(4))[0]
                    vz2p = unpack("<f", f.read(4))[0]
                    type2p = unpack("B", f.read(1))[0]
                    value2p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2p = unpack("<f", f.read(4))[0]
                    vx3p = unpack("<f", f.read(4))[0]
                    vy3p = unpack("<f", f.read(4))[0]
                    vz3p = unpack("<f", f.read(4))[0]
                    type3p = unpack("B", f.read(1))[0]
                    value3p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3p = unpack("<f", f.read(4))[0]
                    vx4p = unpack("<f", f.read(4))[0]
                    vy4p = unpack("<f", f.read(4))[0]
                    vz4p = unpack("<f", f.read(4))[0]
                    type4p = unpack("B", f.read(1))[0]
                    value4p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4p = unpack("<f", f.read(4))[0]
                    vx5p = unpack("<f", f.read(4))[0]
                    vy5p = unpack("<f", f.read(4))[0]
                    vz5p = unpack("<f", f.read(4))[0]
                    type5p = unpack("B", f.read(1))[0]
                    value5p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5p = unpack("<f", f.read(4))[0]
                    vx6p = unpack("<f", f.read(4))[0]
                    vy6p = unpack("<f", f.read(4))[0]
                    vz6p = unpack("<f", f.read(4))[0]
                    type6p = unpack("B", f.read(1))[0]
                    value6p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6p = unpack("<f", f.read(4))[0]
                    vx7p = unpack("<f", f.read(4))[0]
                    vy7p = unpack("<f", f.read(4))[0]
                    vz7p = unpack("<f", f.read(4))[0]
                    type7p = unpack("B", f.read(1))[0]
                    value7p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7p = unpack("<f", f.read(4))[0]
                    vx8p = unpack("<f", f.read(4))[0]
                    vy8p = unpack("<f", f.read(4))[0]
                    vz8p = unpack("<f", f.read(4))[0]
                    type8p = unpack("B", f.read(1))[0]
                    value8p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8p = unpack("<f", f.read(4))[0]
                    vx9p = unpack("<f", f.read(4))[0]
                    vy9p = unpack("<f", f.read(4))[0]
                    vz9p = unpack("<f", f.read(4))[0]
                    type9p = unpack("B", f.read(1))[0]
                    value9p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9p = unpack("<f", f.read(4))[0]
                    vx10p = unpack("<f", f.read(4))[0]
                    vy10p = unpack("<f", f.read(4))[0]
                    vz10p = unpack("<f", f.read(4))[0]
                    type10p = unpack("B", f.read(1))[0]
                    value10p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10p = unpack("<f", f.read(4))[0]
                    vx11p = unpack("<f", f.read(4))[0]
                    vy11p = unpack("<f", f.read(4))[0]
                    vz11p = unpack("<f", f.read(4))[0]
                    type11p = unpack("B", f.read(1))[0]
                    value11p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11p = unpack("<f", f.read(4))[0]
                    vx12p = unpack("<f", f.read(4))[0]
                    vy12p = unpack("<f", f.read(4))[0]
                    vz12p = unpack("<f", f.read(4))[0]
                    type12p = unpack("B", f.read(1))[0]
                    value12p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12p = unpack("<f", f.read(4))[0]
                    vx13p = unpack("<f", f.read(4))[0]
                    vy13p = unpack("<f", f.read(4))[0]
                    vz13p = unpack("<f", f.read(4))[0]
                    type13p = unpack("B", f.read(1))[0]
                    value13p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13p = unpack("<f", f.read(4))[0]
                    vx14p = unpack("<f", f.read(4))[0]
                    vy14p = unpack("<f", f.read(4))[0]
                    vz14p = unpack("<f", f.read(4))[0]
                    type14p = unpack("B", f.read(1))[0]
                    value14p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14p = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1q = unpack("<f", f.read(4))[0]
                    vy1q = unpack("<f", f.read(4))[0]
                    vz1q = unpack("<f", f.read(4))[0]
                    type1q = unpack("B", f.read(1))[0]
                    value1q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1q = unpack("<f", f.read(4))[0]
                    vx2q = unpack("<f", f.read(4))[0]
                    vy2q = unpack("<f", f.read(4))[0]
                    vz2q = unpack("<f", f.read(4))[0]
                    type2q = unpack("B", f.read(1))[0]
                    value2q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2q = unpack("<f", f.read(4))[0]
                    vx3q = unpack("<f", f.read(4))[0]
                    vy3q = unpack("<f", f.read(4))[0]
                    vz3q = unpack("<f", f.read(4))[0]
                    type3q = unpack("B", f.read(1))[0]
                    value3q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3q = unpack("<f", f.read(4))[0]
                    vx4q = unpack("<f", f.read(4))[0]
                    vy4q = unpack("<f", f.read(4))[0]
                    vz4q = unpack("<f", f.read(4))[0]
                    type4q = unpack("B", f.read(1))[0]
                    value4q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4q = unpack("<f", f.read(4))[0]
                    vx5q = unpack("<f", f.read(4))[0]
                    vy5q = unpack("<f", f.read(4))[0]
                    vz5q = unpack("<f", f.read(4))[0]
                    type5q = unpack("B", f.read(1))[0]
                    value5q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5q = unpack("<f", f.read(4))[0]
                    vx6q = unpack("<f", f.read(4))[0]
                    vy6q = unpack("<f", f.read(4))[0]
                    vz6q = unpack("<f", f.read(4))[0]
                    type6q = unpack("B", f.read(1))[0]
                    value6q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6q = unpack("<f", f.read(4))[0]
                    vx7q = unpack("<f", f.read(4))[0]
                    vy7q = unpack("<f", f.read(4))[0]
                    vz7q = unpack("<f", f.read(4))[0]
                    type7q = unpack("B", f.read(1))[0]
                    value7q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7q = unpack("<f", f.read(4))[0]
                    vx8q = unpack("<f", f.read(4))[0]
                    vy8q = unpack("<f", f.read(4))[0]
                    vz8q = unpack("<f", f.read(4))[0]
                    type8q = unpack("B", f.read(1))[0]
                    value8q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8q = unpack("<f", f.read(4))[0]
                    vx9q = unpack("<f", f.read(4))[0]
                    vy9q = unpack("<f", f.read(4))[0]
                    vz9q = unpack("<f", f.read(4))[0]
                    type9q = unpack("B", f.read(1))[0]
                    value9q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9q = unpack("<f", f.read(4))[0]
                    vx10q = unpack("<f", f.read(4))[0]
                    vy10q = unpack("<f", f.read(4))[0]
                    vz10q = unpack("<f", f.read(4))[0]
                    type10q = unpack("B", f.read(1))[0]
                    value10q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10q = unpack("<f", f.read(4))[0]
                    vx11q = unpack("<f", f.read(4))[0]
                    vy11q = unpack("<f", f.read(4))[0]
                    vz11q = unpack("<f", f.read(4))[0]
                    type11q = unpack("B", f.read(1))[0]
                    value11q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11q = unpack("<f", f.read(4))[0]
                    vx12q = unpack("<f", f.read(4))[0]
                    vy12q = unpack("<f", f.read(4))[0]
                    vz12q = unpack("<f", f.read(4))[0]
                    type12q = unpack("B", f.read(1))[0]
                    value12q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12q = unpack("<f", f.read(4))[0]
                    vx13q = unpack("<f", f.read(4))[0]
                    vy13q = unpack("<f", f.read(4))[0]
                    vz13q = unpack("<f", f.read(4))[0]
                    type13q = unpack("B", f.read(1))[0]
                    value13q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13q = unpack("<f", f.read(4))[0]
                    vx14q = unpack("<f", f.read(4))[0]
                    vy14q = unpack("<f", f.read(4))[0]
                    vz14q = unpack("<f", f.read(4))[0]
                    type14q = unpack("B", f.read(1))[0]
                    value14q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14q = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1r = unpack("<f", f.read(4))[0]
                    vy1r = unpack("<f", f.read(4))[0]
                    vz1r = unpack("<f", f.read(4))[0]
                    type1r = unpack("B", f.read(1))[0]
                    value1r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1r = unpack("<f", f.read(4))[0]
                    vx2r = unpack("<f", f.read(4))[0]
                    vy2r = unpack("<f", f.read(4))[0]
                    vz2r = unpack("<f", f.read(4))[0]
                    type2r = unpack("B", f.read(1))[0]
                    value2r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2r = unpack("<f", f.read(4))[0]
                    vx3r = unpack("<f", f.read(4))[0]
                    vy3r = unpack("<f", f.read(4))[0]
                    vz3r = unpack("<f", f.read(4))[0]
                    type3r = unpack("B", f.read(1))[0]
                    value3r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3r = unpack("<f", f.read(4))[0]
                    vx4r = unpack("<f", f.read(4))[0]
                    vy4r = unpack("<f", f.read(4))[0]
                    vz4r = unpack("<f", f.read(4))[0]
                    type4r = unpack("B", f.read(1))[0]
                    value4r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4r = unpack("<f", f.read(4))[0]
                    vx5r = unpack("<f", f.read(4))[0]
                    vy5r = unpack("<f", f.read(4))[0]
                    vz5r = unpack("<f", f.read(4))[0]
                    type5r = unpack("B", f.read(1))[0]
                    value5r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5r = unpack("<f", f.read(4))[0]
                    vx6r = unpack("<f", f.read(4))[0]
                    vy6r = unpack("<f", f.read(4))[0]
                    vz6r = unpack("<f", f.read(4))[0]
                    type6r = unpack("B", f.read(1))[0]
                    value6r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6r = unpack("<f", f.read(4))[0]
                    vx7r = unpack("<f", f.read(4))[0]
                    vy7r = unpack("<f", f.read(4))[0]
                    vz7r = unpack("<f", f.read(4))[0]
                    type7r = unpack("B", f.read(1))[0]
                    value7r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7r = unpack("<f", f.read(4))[0]
                    vx8r = unpack("<f", f.read(4))[0]
                    vy8r = unpack("<f", f.read(4))[0]
                    vz8r = unpack("<f", f.read(4))[0]
                    type8r = unpack("B", f.read(1))[0]
                    value8r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8r = unpack("<f", f.read(4))[0]
                    vx9r = unpack("<f", f.read(4))[0]
                    vy9r = unpack("<f", f.read(4))[0]
                    vz9r = unpack("<f", f.read(4))[0]
                    type9r = unpack("B", f.read(1))[0]
                    value9r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9r = unpack("<f", f.read(4))[0]
                    vx10r = unpack("<f", f.read(4))[0]
                    vy10r = unpack("<f", f.read(4))[0]
                    vz10r = unpack("<f", f.read(4))[0]
                    type10r = unpack("B", f.read(1))[0]
                    value10r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10r = unpack("<f", f.read(4))[0]
                    vx11r = unpack("<f", f.read(4))[0]
                    vy11r = unpack("<f", f.read(4))[0]
                    vz11r = unpack("<f", f.read(4))[0]
                    type11r = unpack("B", f.read(1))[0]
                    value11r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11r = unpack("<f", f.read(4))[0]
                    vx12r = unpack("<f", f.read(4))[0]
                    vy12r = unpack("<f", f.read(4))[0]
                    vz12r = unpack("<f", f.read(4))[0]
                    type12r = unpack("B", f.read(1))[0]
                    value12r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12r = unpack("<f", f.read(4))[0]
                    vx13r = unpack("<f", f.read(4))[0]
                    vy13r = unpack("<f", f.read(4))[0]
                    vz13r = unpack("<f", f.read(4))[0]
                    type13r = unpack("B", f.read(1))[0]
                    value13r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13r = unpack("<f", f.read(4))[0]
                    vx14r = unpack("<f", f.read(4))[0]
                    vy14r = unpack("<f", f.read(4))[0]
                    vz14r = unpack("<f", f.read(4))[0]
                    type14r = unpack("B", f.read(1))[0]
                    value14r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14r = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1s = unpack("<f", f.read(4))[0]
                    vy1s = unpack("<f", f.read(4))[0]
                    vz1s = unpack("<f", f.read(4))[0]
                    type1s = unpack("B", f.read(1))[0]
                    value1s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1s = unpack("<f", f.read(4))[0]
                    vx2s = unpack("<f", f.read(4))[0]
                    vy2s = unpack("<f", f.read(4))[0]
                    vz2s = unpack("<f", f.read(4))[0]
                    type2s = unpack("B", f.read(1))[0]
                    value2s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2s = unpack("<f", f.read(4))[0]
                    vx3s = unpack("<f", f.read(4))[0]
                    vy3s = unpack("<f", f.read(4))[0]
                    vz3s = unpack("<f", f.read(4))[0]
                    type3s = unpack("B", f.read(1))[0]
                    value3s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3s = unpack("<f", f.read(4))[0]
                    vx4s = unpack("<f", f.read(4))[0]
                    vy4s = unpack("<f", f.read(4))[0]
                    vz4s = unpack("<f", f.read(4))[0]
                    type4s = unpack("B", f.read(1))[0]
                    value4s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4s = unpack("<f", f.read(4))[0]
                    vx5s = unpack("<f", f.read(4))[0]
                    vy5s = unpack("<f", f.read(4))[0]
                    vz5s = unpack("<f", f.read(4))[0]
                    type5s = unpack("B", f.read(1))[0]
                    value5s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5s = unpack("<f", f.read(4))[0]
                    vx6s = unpack("<f", f.read(4))[0]
                    vy6s = unpack("<f", f.read(4))[0]
                    vz6s = unpack("<f", f.read(4))[0]
                    type6s = unpack("B", f.read(1))[0]
                    value6s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6s = unpack("<f", f.read(4))[0]
                    vx7s = unpack("<f", f.read(4))[0]
                    vy7s = unpack("<f", f.read(4))[0]
                    vz7s = unpack("<f", f.read(4))[0]
                    type7s = unpack("B", f.read(1))[0]
                    value7s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7s = unpack("<f", f.read(4))[0]
                    vx8s = unpack("<f", f.read(4))[0]
                    vy8s = unpack("<f", f.read(4))[0]
                    vz8s = unpack("<f", f.read(4))[0]
                    type8s = unpack("B", f.read(1))[0]
                    value8s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8s = unpack("<f", f.read(4))[0]
                    vx9s = unpack("<f", f.read(4))[0]
                    vy9s = unpack("<f", f.read(4))[0]
                    vz9s = unpack("<f", f.read(4))[0]
                    type9s = unpack("B", f.read(1))[0]
                    value9s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9s = unpack("<f", f.read(4))[0]
                    vx10s = unpack("<f", f.read(4))[0]
                    vy10s = unpack("<f", f.read(4))[0]
                    vz10s = unpack("<f", f.read(4))[0]
                    type10s = unpack("B", f.read(1))[0]
                    value10s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10s = unpack("<f", f.read(4))[0]
                    vx11s = unpack("<f", f.read(4))[0]
                    vy11s = unpack("<f", f.read(4))[0]
                    vz11s = unpack("<f", f.read(4))[0]
                    type11s = unpack("B", f.read(1))[0]
                    value11s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11s = unpack("<f", f.read(4))[0]
                    vx12s = unpack("<f", f.read(4))[0]
                    vy12s = unpack("<f", f.read(4))[0]
                    vz12s = unpack("<f", f.read(4))[0]
                    type12s = unpack("B", f.read(1))[0]
                    value12s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12s = unpack("<f", f.read(4))[0]
                    vx13s = unpack("<f", f.read(4))[0]
                    vy13s = unpack("<f", f.read(4))[0]
                    vz13s = unpack("<f", f.read(4))[0]
                    type13s = unpack("B", f.read(1))[0]
                    value13s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13s = unpack("<f", f.read(4))[0]
                    vx14s = unpack("<f", f.read(4))[0]
                    vy14s = unpack("<f", f.read(4))[0]
                    vz14s = unpack("<f", f.read(4))[0]
                    type14s = unpack("B", f.read(1))[0]
                    value14s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14s = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1t = unpack("<f", f.read(4))[0]
                    vy1t = unpack("<f", f.read(4))[0]
                    vz1t = unpack("<f", f.read(4))[0]
                    type1t = unpack("B", f.read(1))[0]
                    value1t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1t = unpack("<f", f.read(4))[0]
                    vx2t = unpack("<f", f.read(4))[0]
                    vy2t = unpack("<f", f.read(4))[0]
                    vz2t = unpack("<f", f.read(4))[0]
                    type2t = unpack("B", f.read(1))[0]
                    value2t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2t = unpack("<f", f.read(4))[0]
                    vx3t = unpack("<f", f.read(4))[0]
                    vy3t = unpack("<f", f.read(4))[0]
                    vz3t = unpack("<f", f.read(4))[0]
                    type3t = unpack("B", f.read(1))[0]
                    value3t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3t = unpack("<f", f.read(4))[0]
                    vx4t = unpack("<f", f.read(4))[0]
                    vy4t = unpack("<f", f.read(4))[0]
                    vz4t = unpack("<f", f.read(4))[0]
                    type4t = unpack("B", f.read(1))[0]
                    value4t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4t = unpack("<f", f.read(4))[0]
                    vx5t = unpack("<f", f.read(4))[0]
                    vy5t = unpack("<f", f.read(4))[0]
                    vz5t = unpack("<f", f.read(4))[0]
                    type5t = unpack("B", f.read(1))[0]
                    value5t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5t = unpack("<f", f.read(4))[0]
                    vx6t = unpack("<f", f.read(4))[0]
                    vy6t = unpack("<f", f.read(4))[0]
                    vz6t = unpack("<f", f.read(4))[0]
                    type6t = unpack("B", f.read(1))[0]
                    value6t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6t = unpack("<f", f.read(4))[0]
                    vx7t = unpack("<f", f.read(4))[0]
                    vy7t = unpack("<f", f.read(4))[0]
                    vz7t = unpack("<f", f.read(4))[0]
                    type7t = unpack("B", f.read(1))[0]
                    value7t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7t = unpack("<f", f.read(4))[0]
                    vx8t = unpack("<f", f.read(4))[0]
                    vy8t = unpack("<f", f.read(4))[0]
                    vz8t = unpack("<f", f.read(4))[0]
                    type8t = unpack("B", f.read(1))[0]
                    value8t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8t = unpack("<f", f.read(4))[0]
                    vx9t = unpack("<f", f.read(4))[0]
                    vy9t = unpack("<f", f.read(4))[0]
                    vz9t = unpack("<f", f.read(4))[0]
                    type9t = unpack("B", f.read(1))[0]
                    value9t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9t = unpack("<f", f.read(4))[0]
                    vx10t = unpack("<f", f.read(4))[0]
                    vy10t = unpack("<f", f.read(4))[0]
                    vz10t = unpack("<f", f.read(4))[0]
                    type10t = unpack("B", f.read(1))[0]
                    value10t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10t = unpack("<f", f.read(4))[0]
                    vx11t = unpack("<f", f.read(4))[0]
                    vy11t = unpack("<f", f.read(4))[0]
                    vz11t = unpack("<f", f.read(4))[0]
                    type11t = unpack("B", f.read(1))[0]
                    value11t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11t = unpack("<f", f.read(4))[0]
                    vx12t = unpack("<f", f.read(4))[0]
                    vy12t = unpack("<f", f.read(4))[0]
                    vz12t = unpack("<f", f.read(4))[0]
                    type12t = unpack("B", f.read(1))[0]
                    value12t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12t = unpack("<f", f.read(4))[0]
                    vx13t = unpack("<f", f.read(4))[0]
                    vy13t = unpack("<f", f.read(4))[0]
                    vz13t = unpack("<f", f.read(4))[0]
                    type13t = unpack("B", f.read(1))[0]
                    value13t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13t = unpack("<f", f.read(4))[0]
                    vx14t = unpack("<f", f.read(4))[0]
                    vy14t = unpack("<f", f.read(4))[0]
                    vz14t = unpack("<f", f.read(4))[0]
                    type14t = unpack("B", f.read(1))[0]
                    value14t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14t = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1u = unpack("<f", f.read(4))[0]
                    vy1u = unpack("<f", f.read(4))[0]
                    vz1u = unpack("<f", f.read(4))[0]
                    type1u = unpack("B", f.read(1))[0]
                    value1u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1u = unpack("<f", f.read(4))[0]
                    vx2u = unpack("<f", f.read(4))[0]
                    vy2u = unpack("<f", f.read(4))[0]
                    vz2u = unpack("<f", f.read(4))[0]
                    type2u = unpack("B", f.read(1))[0]
                    value2u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2u = unpack("<f", f.read(4))[0]
                    vx3u = unpack("<f", f.read(4))[0]
                    vy3u = unpack("<f", f.read(4))[0]
                    vz3u = unpack("<f", f.read(4))[0]
                    type3u = unpack("B", f.read(1))[0]
                    value3u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3u = unpack("<f", f.read(4))[0]
                    vx4u = unpack("<f", f.read(4))[0]
                    vy4u = unpack("<f", f.read(4))[0]
                    vz4u = unpack("<f", f.read(4))[0]
                    type4u = unpack("B", f.read(1))[0]
                    value4u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4u = unpack("<f", f.read(4))[0]
                    vx5u = unpack("<f", f.read(4))[0]
                    vy5u = unpack("<f", f.read(4))[0]
                    vz5u = unpack("<f", f.read(4))[0]
                    type5u = unpack("B", f.read(1))[0]
                    value5u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5u = unpack("<f", f.read(4))[0]
                    vx6u = unpack("<f", f.read(4))[0]
                    vy6u = unpack("<f", f.read(4))[0]
                    vz6u = unpack("<f", f.read(4))[0]
                    type6u = unpack("B", f.read(1))[0]
                    value6u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6u = unpack("<f", f.read(4))[0]
                    vx7u = unpack("<f", f.read(4))[0]
                    vy7u = unpack("<f", f.read(4))[0]
                    vz7u = unpack("<f", f.read(4))[0]
                    type7u = unpack("B", f.read(1))[0]
                    value7u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7u = unpack("<f", f.read(4))[0]
                    vx8u = unpack("<f", f.read(4))[0]
                    vy8u = unpack("<f", f.read(4))[0]
                    vz8u = unpack("<f", f.read(4))[0]
                    type8u = unpack("B", f.read(1))[0]
                    value8u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8u = unpack("<f", f.read(4))[0]
                    vx9u = unpack("<f", f.read(4))[0]
                    vy9u = unpack("<f", f.read(4))[0]
                    vz9u = unpack("<f", f.read(4))[0]
                    type9u = unpack("B", f.read(1))[0]
                    value9u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9u = unpack("<f", f.read(4))[0]
                    vx10u = unpack("<f", f.read(4))[0]
                    vy10u = unpack("<f", f.read(4))[0]
                    vz10u = unpack("<f", f.read(4))[0]
                    type10u = unpack("B", f.read(1))[0]
                    value10u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10u = unpack("<f", f.read(4))[0]
                    vx11u = unpack("<f", f.read(4))[0]
                    vy11u = unpack("<f", f.read(4))[0]
                    vz11u = unpack("<f", f.read(4))[0]
                    type11u = unpack("B", f.read(1))[0]
                    value11u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11u = unpack("<f", f.read(4))[0]
                    vx12u = unpack("<f", f.read(4))[0]
                    vy12u = unpack("<f", f.read(4))[0]
                    vz12u = unpack("<f", f.read(4))[0]
                    type12u = unpack("B", f.read(1))[0]
                    value12u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12u = unpack("<f", f.read(4))[0]
                    vx13u = unpack("<f", f.read(4))[0]
                    vy13u = unpack("<f", f.read(4))[0]
                    vz13u = unpack("<f", f.read(4))[0]
                    type13u = unpack("B", f.read(1))[0]
                    value13u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13u = unpack("<f", f.read(4))[0]
                    vx14u = unpack("<f", f.read(4))[0]
                    vy14u = unpack("<f", f.read(4))[0]
                    vz14u = unpack("<f", f.read(4))[0]
                    type14u = unpack("B", f.read(1))[0]
                    value14u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14u = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1v = unpack("<f", f.read(4))[0]
                    vy1v = unpack("<f", f.read(4))[0]
                    vz1v = unpack("<f", f.read(4))[0]
                    type1v = unpack("B", f.read(1))[0]
                    value1v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1v = unpack("<f", f.read(4))[0]
                    vx2v = unpack("<f", f.read(4))[0]
                    vy2v = unpack("<f", f.read(4))[0]
                    vz2v = unpack("<f", f.read(4))[0]
                    type2v = unpack("B", f.read(1))[0]
                    value2v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2v = unpack("<f", f.read(4))[0]
                    vx3v = unpack("<f", f.read(4))[0]
                    vy3v = unpack("<f", f.read(4))[0]
                    vz3v = unpack("<f", f.read(4))[0]
                    type3v = unpack("B", f.read(1))[0]
                    value3v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3v = unpack("<f", f.read(4))[0]
                    vx4v = unpack("<f", f.read(4))[0]
                    vy4v = unpack("<f", f.read(4))[0]
                    vz4v = unpack("<f", f.read(4))[0]
                    type4v = unpack("B", f.read(1))[0]
                    value4v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4v = unpack("<f", f.read(4))[0]
                    vx5v = unpack("<f", f.read(4))[0]
                    vy5v = unpack("<f", f.read(4))[0]
                    vz5v = unpack("<f", f.read(4))[0]
                    type5v = unpack("B", f.read(1))[0]
                    value5v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5v = unpack("<f", f.read(4))[0]
                    vx6v = unpack("<f", f.read(4))[0]
                    vy6v = unpack("<f", f.read(4))[0]
                    vz6v = unpack("<f", f.read(4))[0]
                    type6v = unpack("B", f.read(1))[0]
                    value6v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6v = unpack("<f", f.read(4))[0]
                    vx7v = unpack("<f", f.read(4))[0]
                    vy7v = unpack("<f", f.read(4))[0]
                    vz7v = unpack("<f", f.read(4))[0]
                    type7v = unpack("B", f.read(1))[0]
                    value7v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7v = unpack("<f", f.read(4))[0]
                    vx8v = unpack("<f", f.read(4))[0]
                    vy8v = unpack("<f", f.read(4))[0]
                    vz8v = unpack("<f", f.read(4))[0]
                    type8v = unpack("B", f.read(1))[0]
                    value8v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8v = unpack("<f", f.read(4))[0]
                    vx9v = unpack("<f", f.read(4))[0]
                    vy9v = unpack("<f", f.read(4))[0]
                    vz9v = unpack("<f", f.read(4))[0]
                    type9v = unpack("B", f.read(1))[0]
                    value9v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9v = unpack("<f", f.read(4))[0]
                    vx10v = unpack("<f", f.read(4))[0]
                    vy10v = unpack("<f", f.read(4))[0]
                    vz10v = unpack("<f", f.read(4))[0]
                    type10v = unpack("B", f.read(1))[0]
                    value10v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10v = unpack("<f", f.read(4))[0]
                    vx11v = unpack("<f", f.read(4))[0]
                    vy11v = unpack("<f", f.read(4))[0]
                    vz11v = unpack("<f", f.read(4))[0]
                    type11v = unpack("B", f.read(1))[0]
                    value11v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11v = unpack("<f", f.read(4))[0]
                    vx12v = unpack("<f", f.read(4))[0]
                    vy12v = unpack("<f", f.read(4))[0]
                    vz12v = unpack("<f", f.read(4))[0]
                    type12v = unpack("B", f.read(1))[0]
                    value12v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12v = unpack("<f", f.read(4))[0]
                    vx13v = unpack("<f", f.read(4))[0]
                    vy13v = unpack("<f", f.read(4))[0]
                    vz13v = unpack("<f", f.read(4))[0]
                    type13v = unpack("B", f.read(1))[0]
                    value13v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13v = unpack("<f", f.read(4))[0]
                    vx14v = unpack("<f", f.read(4))[0]
                    vy14v = unpack("<f", f.read(4))[0]
                    vz14v = unpack("<f", f.read(4))[0]
                    type14v = unpack("B", f.read(1))[0]
                    value14v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14v = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1w = unpack("<f", f.read(4))[0]
                    vy1w = unpack("<f", f.read(4))[0]
                    vz1w = unpack("<f", f.read(4))[0]
                    type1w = unpack("B", f.read(1))[0]
                    value1w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1w = unpack("<f", f.read(4))[0]
                    vx2w = unpack("<f", f.read(4))[0]
                    vy2w = unpack("<f", f.read(4))[0]
                    vz2w = unpack("<f", f.read(4))[0]
                    type2w = unpack("B", f.read(1))[0]
                    value2w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2w = unpack("<f", f.read(4))[0]
                    vx3w = unpack("<f", f.read(4))[0]
                    vy3w = unpack("<f", f.read(4))[0]
                    vz3w = unpack("<f", f.read(4))[0]
                    type3w = unpack("B", f.read(1))[0]
                    value3w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3w = unpack("<f", f.read(4))[0]
                    vx4w = unpack("<f", f.read(4))[0]
                    vy4w = unpack("<f", f.read(4))[0]
                    vz4w = unpack("<f", f.read(4))[0]
                    type4w = unpack("B", f.read(1))[0]
                    value4w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4w = unpack("<f", f.read(4))[0]
                    vx5w = unpack("<f", f.read(4))[0]
                    vy5w = unpack("<f", f.read(4))[0]
                    vz5w = unpack("<f", f.read(4))[0]
                    type5w = unpack("B", f.read(1))[0]
                    value5w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5w = unpack("<f", f.read(4))[0]
                    vx6w = unpack("<f", f.read(4))[0]
                    vy6w = unpack("<f", f.read(4))[0]
                    vz6w = unpack("<f", f.read(4))[0]
                    type6w = unpack("B", f.read(1))[0]
                    value6w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6w = unpack("<f", f.read(4))[0]
                    vx7w = unpack("<f", f.read(4))[0]
                    vy7w = unpack("<f", f.read(4))[0]
                    vz7w = unpack("<f", f.read(4))[0]
                    type7w = unpack("B", f.read(1))[0]
                    value7w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7w = unpack("<f", f.read(4))[0]
                    vx8w = unpack("<f", f.read(4))[0]
                    vy8w = unpack("<f", f.read(4))[0]
                    vz8w = unpack("<f", f.read(4))[0]
                    type8w = unpack("B", f.read(1))[0]
                    value8w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8w = unpack("<f", f.read(4))[0]
                    vx9w = unpack("<f", f.read(4))[0]
                    vy9w = unpack("<f", f.read(4))[0]
                    vz9w = unpack("<f", f.read(4))[0]
                    type9w = unpack("B", f.read(1))[0]
                    value9w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9w = unpack("<f", f.read(4))[0]
                    vx10w = unpack("<f", f.read(4))[0]
                    vy10w = unpack("<f", f.read(4))[0]
                    vz10w = unpack("<f", f.read(4))[0]
                    type10w = unpack("B", f.read(1))[0]
                    value10w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10w = unpack("<f", f.read(4))[0]
                    vx11w = unpack("<f", f.read(4))[0]
                    vy11w = unpack("<f", f.read(4))[0]
                    vz11w = unpack("<f", f.read(4))[0]
                    type11w = unpack("B", f.read(1))[0]
                    value11w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11w = unpack("<f", f.read(4))[0]
                    vx12w = unpack("<f", f.read(4))[0]
                    vy12w = unpack("<f", f.read(4))[0]
                    vz12w = unpack("<f", f.read(4))[0]
                    type12w = unpack("B", f.read(1))[0]
                    value12w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12w = unpack("<f", f.read(4))[0]
                    vx13w = unpack("<f", f.read(4))[0]
                    vy13w = unpack("<f", f.read(4))[0]
                    vz13w = unpack("<f", f.read(4))[0]
                    type13w = unpack("B", f.read(1))[0]
                    value13w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13w = unpack("<f", f.read(4))[0]
                    vx14w = unpack("<f", f.read(4))[0]
                    vy14w = unpack("<f", f.read(4))[0]
                    vz14w = unpack("<f", f.read(4))[0]
                    type14w = unpack("B", f.read(1))[0]
                    value14w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14w = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1x = unpack("<f", f.read(4))[0]
                    vy1x = unpack("<f", f.read(4))[0]
                    vz1x = unpack("<f", f.read(4))[0]
                    type1x = unpack("B", f.read(1))[0]
                    value1x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1x = unpack("<f", f.read(4))[0]
                    vx2x = unpack("<f", f.read(4))[0]
                    vy2x = unpack("<f", f.read(4))[0]
                    vz2x = unpack("<f", f.read(4))[0]
                    type2x = unpack("B", f.read(1))[0]
                    value2x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2x = unpack("<f", f.read(4))[0]
                    vx3x = unpack("<f", f.read(4))[0]
                    vy3x = unpack("<f", f.read(4))[0]
                    vz3x = unpack("<f", f.read(4))[0]
                    type3x = unpack("B", f.read(1))[0]
                    value3x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3x = unpack("<f", f.read(4))[0]
                    vx4x = unpack("<f", f.read(4))[0]
                    vy4x = unpack("<f", f.read(4))[0]
                    vz4x = unpack("<f", f.read(4))[0]
                    type4x = unpack("B", f.read(1))[0]
                    value4x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4x = unpack("<f", f.read(4))[0]
                    vx5x = unpack("<f", f.read(4))[0]
                    vy5x = unpack("<f", f.read(4))[0]
                    vz5x = unpack("<f", f.read(4))[0]
                    type5x = unpack("B", f.read(1))[0]
                    value5x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5x = unpack("<f", f.read(4))[0]
                    vx6x = unpack("<f", f.read(4))[0]
                    vy6x = unpack("<f", f.read(4))[0]
                    vz6x = unpack("<f", f.read(4))[0]
                    type6x = unpack("B", f.read(1))[0]
                    value6x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6x = unpack("<f", f.read(4))[0]
                    vx7x = unpack("<f", f.read(4))[0]
                    vy7x = unpack("<f", f.read(4))[0]
                    vz7x = unpack("<f", f.read(4))[0]
                    type7x = unpack("B", f.read(1))[0]
                    value7x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7x = unpack("<f", f.read(4))[0]
                    vx8x = unpack("<f", f.read(4))[0]
                    vy8x = unpack("<f", f.read(4))[0]
                    vz8x = unpack("<f", f.read(4))[0]
                    type8x = unpack("B", f.read(1))[0]
                    value8x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8x = unpack("<f", f.read(4))[0]
                    vx9x = unpack("<f", f.read(4))[0]
                    vy9x = unpack("<f", f.read(4))[0]
                    vz9x = unpack("<f", f.read(4))[0]
                    type9x = unpack("B", f.read(1))[0]
                    value9x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9x = unpack("<f", f.read(4))[0]
                    vx10x = unpack("<f", f.read(4))[0]
                    vy10x = unpack("<f", f.read(4))[0]
                    vz10x = unpack("<f", f.read(4))[0]
                    type10x = unpack("B", f.read(1))[0]
                    value10x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10x = unpack("<f", f.read(4))[0]
                    vx11x = unpack("<f", f.read(4))[0]
                    vy11x = unpack("<f", f.read(4))[0]
                    vz11x = unpack("<f", f.read(4))[0]
                    type11x = unpack("B", f.read(1))[0]
                    value11x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11x = unpack("<f", f.read(4))[0]
                    vx12x = unpack("<f", f.read(4))[0]
                    vy12x = unpack("<f", f.read(4))[0]
                    vz12x = unpack("<f", f.read(4))[0]
                    type12x = unpack("B", f.read(1))[0]
                    value12x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12x = unpack("<f", f.read(4))[0]
                    vx13x = unpack("<f", f.read(4))[0]
                    vy13x = unpack("<f", f.read(4))[0]
                    vz13x = unpack("<f", f.read(4))[0]
                    type13x = unpack("B", f.read(1))[0]
                    value13x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13x = unpack("<f", f.read(4))[0]
                    vx14x = unpack("<f", f.read(4))[0]
                    vy14x = unpack("<f", f.read(4))[0]
                    vz14x = unpack("<f", f.read(4))[0]
                    type14x = unpack("B", f.read(1))[0]
                    value14x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14x = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1y = unpack("<f", f.read(4))[0]
                    vy1y = unpack("<f", f.read(4))[0]
                    vz1y = unpack("<f", f.read(4))[0]
                    type1y = unpack("B", f.read(1))[0]
                    value1y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1y = unpack("<f", f.read(4))[0]
                    vx2y = unpack("<f", f.read(4))[0]
                    vy2y = unpack("<f", f.read(4))[0]
                    vz2y = unpack("<f", f.read(4))[0]
                    type2y = unpack("B", f.read(1))[0]
                    value2y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2y = unpack("<f", f.read(4))[0]
                    vx3y = unpack("<f", f.read(4))[0]
                    vy3y = unpack("<f", f.read(4))[0]
                    vz3y = unpack("<f", f.read(4))[0]
                    type3y = unpack("B", f.read(1))[0]
                    value3y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3y = unpack("<f", f.read(4))[0]
                    vx4y = unpack("<f", f.read(4))[0]
                    vy4y = unpack("<f", f.read(4))[0]
                    vz4y = unpack("<f", f.read(4))[0]
                    type4y = unpack("B", f.read(1))[0]
                    value4y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4y = unpack("<f", f.read(4))[0]
                    vx5y = unpack("<f", f.read(4))[0]
                    vy5y = unpack("<f", f.read(4))[0]
                    vz5y = unpack("<f", f.read(4))[0]
                    type5y = unpack("B", f.read(1))[0]
                    value5y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5y = unpack("<f", f.read(4))[0]
                    vx6y = unpack("<f", f.read(4))[0]
                    vy6y = unpack("<f", f.read(4))[0]
                    vz6y = unpack("<f", f.read(4))[0]
                    type6y = unpack("B", f.read(1))[0]
                    value6y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6y = unpack("<f", f.read(4))[0]
                    vx7y = unpack("<f", f.read(4))[0]
                    vy7y = unpack("<f", f.read(4))[0]
                    vz7y = unpack("<f", f.read(4))[0]
                    type7y = unpack("B", f.read(1))[0]
                    value7y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7y = unpack("<f", f.read(4))[0]
                    vx8y = unpack("<f", f.read(4))[0]
                    vy8y = unpack("<f", f.read(4))[0]
                    vz8y = unpack("<f", f.read(4))[0]
                    type8y = unpack("B", f.read(1))[0]
                    value8y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8y = unpack("<f", f.read(4))[0]
                    vx9y = unpack("<f", f.read(4))[0]
                    vy9y = unpack("<f", f.read(4))[0]
                    vz9y = unpack("<f", f.read(4))[0]
                    type9y = unpack("B", f.read(1))[0]
                    value9y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9y = unpack("<f", f.read(4))[0]
                    vx10y = unpack("<f", f.read(4))[0]
                    vy10y = unpack("<f", f.read(4))[0]
                    vz10y = unpack("<f", f.read(4))[0]
                    type10y = unpack("B", f.read(1))[0]
                    value10y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10y = unpack("<f", f.read(4))[0]
                    vx11y = unpack("<f", f.read(4))[0]
                    vy11y = unpack("<f", f.read(4))[0]
                    vz11y = unpack("<f", f.read(4))[0]
                    type11y = unpack("B", f.read(1))[0]
                    value11y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11y = unpack("<f", f.read(4))[0]
                    vx12y = unpack("<f", f.read(4))[0]
                    vy12y = unpack("<f", f.read(4))[0]
                    vz12y = unpack("<f", f.read(4))[0]
                    type12y = unpack("B", f.read(1))[0]
                    value12y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12y = unpack("<f", f.read(4))[0]
                    vx13y = unpack("<f", f.read(4))[0]
                    vy13y = unpack("<f", f.read(4))[0]
                    vz13y = unpack("<f", f.read(4))[0]
                    type13y = unpack("B", f.read(1))[0]
                    value13y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13y = unpack("<f", f.read(4))[0]
                    vx14y = unpack("<f", f.read(4))[0]
                    vy14y = unpack("<f", f.read(4))[0]
                    vz14y = unpack("<f", f.read(4))[0]
                    type14y = unpack("B", f.read(1))[0]
                    value14y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14y = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1z = unpack("<f", f.read(4))[0]
                    vy1z = unpack("<f", f.read(4))[0]
                    vz1z = unpack("<f", f.read(4))[0]
                    type1z = unpack("B", f.read(1))[0]
                    value1z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1z = unpack("<f", f.read(4))[0]
                    vx2z = unpack("<f", f.read(4))[0]
                    vy2z = unpack("<f", f.read(4))[0]
                    vz2z = unpack("<f", f.read(4))[0]
                    type2z = unpack("B", f.read(1))[0]
                    value2z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2z = unpack("<f", f.read(4))[0]
                    vx3z = unpack("<f", f.read(4))[0]
                    vy3z = unpack("<f", f.read(4))[0]
                    vz3z = unpack("<f", f.read(4))[0]
                    type3z = unpack("B", f.read(1))[0]
                    value3z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3z = unpack("<f", f.read(4))[0]
                    vx4z = unpack("<f", f.read(4))[0]
                    vy4z = unpack("<f", f.read(4))[0]
                    vz4z = unpack("<f", f.read(4))[0]
                    type4z = unpack("B", f.read(1))[0]
                    value4z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4z = unpack("<f", f.read(4))[0]
                    vx5z = unpack("<f", f.read(4))[0]
                    vy5z = unpack("<f", f.read(4))[0]
                    vz5z = unpack("<f", f.read(4))[0]
                    type5z = unpack("B", f.read(1))[0]
                    value5z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5z = unpack("<f", f.read(4))[0]
                    vx6z = unpack("<f", f.read(4))[0]
                    vy6z = unpack("<f", f.read(4))[0]
                    vz6z = unpack("<f", f.read(4))[0]
                    type6z = unpack("B", f.read(1))[0]
                    value6z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6z = unpack("<f", f.read(4))[0]
                    vx7z = unpack("<f", f.read(4))[0]
                    vy7z = unpack("<f", f.read(4))[0]
                    vz7z = unpack("<f", f.read(4))[0]
                    type7z = unpack("B", f.read(1))[0]
                    value7z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7z = unpack("<f", f.read(4))[0]
                    vx8z = unpack("<f", f.read(4))[0]
                    vy8z = unpack("<f", f.read(4))[0]
                    vz8z = unpack("<f", f.read(4))[0]
                    type8z = unpack("B", f.read(1))[0]
                    value8z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8z = unpack("<f", f.read(4))[0]
                    vx9z = unpack("<f", f.read(4))[0]
                    vy9z = unpack("<f", f.read(4))[0]
                    vz9z = unpack("<f", f.read(4))[0]
                    type9z = unpack("B", f.read(1))[0]
                    value9z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9z = unpack("<f", f.read(4))[0]
                    vx10z = unpack("<f", f.read(4))[0]
                    vy10z = unpack("<f", f.read(4))[0]
                    vz10z = unpack("<f", f.read(4))[0]
                    type10z = unpack("B", f.read(1))[0]
                    value10z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10z = unpack("<f", f.read(4))[0]
                    vx11z = unpack("<f", f.read(4))[0]
                    vy11z = unpack("<f", f.read(4))[0]
                    vz11z = unpack("<f", f.read(4))[0]
                    type11z = unpack("B", f.read(1))[0]
                    value11z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11z = unpack("<f", f.read(4))[0]
                    vx12z = unpack("<f", f.read(4))[0]
                    vy12z = unpack("<f", f.read(4))[0]
                    vz12z = unpack("<f", f.read(4))[0]
                    type12z = unpack("B", f.read(1))[0]
                    value12z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12z = unpack("<f", f.read(4))[0]
                    vx13z = unpack("<f", f.read(4))[0]
                    vy13z = unpack("<f", f.read(4))[0]
                    vz13z = unpack("<f", f.read(4))[0]
                    type13z = unpack("B", f.read(1))[0]
                    value13z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13z = unpack("<f", f.read(4))[0]
                    vx14z = unpack("<f", f.read(4))[0]
                    vy14z = unpack("<f", f.read(4))[0]
                    vz14z = unpack("<f", f.read(4))[0]
                    type14z = unpack("B", f.read(1))[0]
                    value14z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14z = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1aa = unpack("<f", f.read(4))[0]
                    vy1aa = unpack("<f", f.read(4))[0]
                    vz1aa = unpack("<f", f.read(4))[0]
                    type1aa = unpack("B", f.read(1))[0]
                    value1aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1aa = unpack("<f", f.read(4))[0]
                    vx2aa = unpack("<f", f.read(4))[0]
                    vy2aa = unpack("<f", f.read(4))[0]
                    vz2aa = unpack("<f", f.read(4))[0]
                    type2aa = unpack("B", f.read(1))[0]
                    value2aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2aa = unpack("<f", f.read(4))[0]
                    vx3aa = unpack("<f", f.read(4))[0]
                    vy3aa = unpack("<f", f.read(4))[0]
                    vz3aa = unpack("<f", f.read(4))[0]
                    type3aa = unpack("B", f.read(1))[0]
                    value3aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3aa = unpack("<f", f.read(4))[0]
                    vx4aa = unpack("<f", f.read(4))[0]
                    vy4aa = unpack("<f", f.read(4))[0]
                    vz4aa = unpack("<f", f.read(4))[0]
                    type4aa = unpack("B", f.read(1))[0]
                    value4aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4aa = unpack("<f", f.read(4))[0]
                    vx5aa = unpack("<f", f.read(4))[0]
                    vy5aa = unpack("<f", f.read(4))[0]
                    vz5aa = unpack("<f", f.read(4))[0]
                    type5aa = unpack("B", f.read(1))[0]
                    value5aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5aa = unpack("<f", f.read(4))[0]
                    vx6aa = unpack("<f", f.read(4))[0]
                    vy6aa = unpack("<f", f.read(4))[0]
                    vz6aa = unpack("<f", f.read(4))[0]
                    type6aa = unpack("B", f.read(1))[0]
                    value6aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6aa = unpack("<f", f.read(4))[0]
                    vx7aa = unpack("<f", f.read(4))[0]
                    vy7aa = unpack("<f", f.read(4))[0]
                    vz7aa = unpack("<f", f.read(4))[0]
                    type7aa = unpack("B", f.read(1))[0]
                    value7aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7aa = unpack("<f", f.read(4))[0]
                    vx8aa = unpack("<f", f.read(4))[0]
                    vy8aa = unpack("<f", f.read(4))[0]
                    vz8aa = unpack("<f", f.read(4))[0]
                    type8aa = unpack("B", f.read(1))[0]
                    value8aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8aa = unpack("<f", f.read(4))[0]
                    vx9aa = unpack("<f", f.read(4))[0]
                    vy9aa = unpack("<f", f.read(4))[0]
                    vz9aa = unpack("<f", f.read(4))[0]
                    type9aa = unpack("B", f.read(1))[0]
                    value9aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9aa = unpack("<f", f.read(4))[0]
                    vx10aa = unpack("<f", f.read(4))[0]
                    vy10aa = unpack("<f", f.read(4))[0]
                    vz10aa = unpack("<f", f.read(4))[0]
                    type10aa = unpack("B", f.read(1))[0]
                    value10aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10aa = unpack("<f", f.read(4))[0]
                    vx11aa = unpack("<f", f.read(4))[0]
                    vy11aa = unpack("<f", f.read(4))[0]
                    vz11aa = unpack("<f", f.read(4))[0]
                    type11aa = unpack("B", f.read(1))[0]
                    value11aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aa = unpack("<f", f.read(4))[0]
                    vx12aa = unpack("<f", f.read(4))[0]
                    vy12aa = unpack("<f", f.read(4))[0]
                    vz12aa = unpack("<f", f.read(4))[0]
                    type12aa = unpack("B", f.read(1))[0]
                    value12aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12aa = unpack("<f", f.read(4))[0]
                    vx13aa = unpack("<f", f.read(4))[0]
                    vy13aa = unpack("<f", f.read(4))[0]
                    vz13aa = unpack("<f", f.read(4))[0]
                    type13aa = unpack("B", f.read(1))[0]
                    value13aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13aa = unpack("<f", f.read(4))[0]
                    vx14aa = unpack("<f", f.read(4))[0]
                    vy14aa = unpack("<f", f.read(4))[0]
                    vz14aa = unpack("<f", f.read(4))[0]
                    type14aa = unpack("B", f.read(1))[0]
                    value14aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14aa = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ab = unpack("<f", f.read(4))[0]
                    vy1ab = unpack("<f", f.read(4))[0]
                    vz1ab = unpack("<f", f.read(4))[0]
                    type1ab = unpack("B", f.read(1))[0]
                    value1ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ab = unpack("<f", f.read(4))[0]
                    vx2ab = unpack("<f", f.read(4))[0]
                    vy2ab = unpack("<f", f.read(4))[0]
                    vz2ab = unpack("<f", f.read(4))[0]
                    type2ab = unpack("B", f.read(1))[0]
                    value2ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ab = unpack("<f", f.read(4))[0]
                    vx3ab = unpack("<f", f.read(4))[0]
                    vy3ab = unpack("<f", f.read(4))[0]
                    vz3ab = unpack("<f", f.read(4))[0]
                    type3ab = unpack("B", f.read(1))[0]
                    value3ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ab = unpack("<f", f.read(4))[0]
                    vx4ab = unpack("<f", f.read(4))[0]
                    vy4ab = unpack("<f", f.read(4))[0]
                    vz4ab = unpack("<f", f.read(4))[0]
                    type4ab = unpack("B", f.read(1))[0]
                    value4ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ab = unpack("<f", f.read(4))[0]
                    vx5ab = unpack("<f", f.read(4))[0]
                    vy5ab = unpack("<f", f.read(4))[0]
                    vz5ab = unpack("<f", f.read(4))[0]
                    type5ab = unpack("B", f.read(1))[0]
                    value5ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ab = unpack("<f", f.read(4))[0]
                    vx6ab = unpack("<f", f.read(4))[0]
                    vy6ab = unpack("<f", f.read(4))[0]
                    vz6ab = unpack("<f", f.read(4))[0]
                    type6ab = unpack("B", f.read(1))[0]
                    value6ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ab = unpack("<f", f.read(4))[0]
                    vx7ab = unpack("<f", f.read(4))[0]
                    vy7ab = unpack("<f", f.read(4))[0]
                    vz7ab = unpack("<f", f.read(4))[0]
                    type7ab = unpack("B", f.read(1))[0]
                    value7ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ab = unpack("<f", f.read(4))[0]
                    vx8ab = unpack("<f", f.read(4))[0]
                    vy8ab = unpack("<f", f.read(4))[0]
                    vz8ab = unpack("<f", f.read(4))[0]
                    type8ab = unpack("B", f.read(1))[0]
                    value8ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ab = unpack("<f", f.read(4))[0]
                    vx9ab = unpack("<f", f.read(4))[0]
                    vy9ab = unpack("<f", f.read(4))[0]
                    vz9ab = unpack("<f", f.read(4))[0]
                    type9ab = unpack("B", f.read(1))[0]
                    value9ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ab = unpack("<f", f.read(4))[0]
                    vx10ab = unpack("<f", f.read(4))[0]
                    vy10ab = unpack("<f", f.read(4))[0]
                    vz10ab = unpack("<f", f.read(4))[0]
                    type10ab = unpack("B", f.read(1))[0]
                    value10ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ab = unpack("<f", f.read(4))[0]
                    vx11ab = unpack("<f", f.read(4))[0]
                    vy11ab = unpack("<f", f.read(4))[0]
                    vz11ab = unpack("<f", f.read(4))[0]
                    type11ab = unpack("B", f.read(1))[0]
                    value11ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ab = unpack("<f", f.read(4))[0]
                    vx12ab = unpack("<f", f.read(4))[0]
                    vy12ab = unpack("<f", f.read(4))[0]
                    vz12ab = unpack("<f", f.read(4))[0]
                    type12ab = unpack("B", f.read(1))[0]
                    value12ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ab = unpack("<f", f.read(4))[0]
                    vx13ab = unpack("<f", f.read(4))[0]
                    vy13ab = unpack("<f", f.read(4))[0]
                    vz13ab = unpack("<f", f.read(4))[0]
                    type13ab = unpack("B", f.read(1))[0]
                    value13ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ab = unpack("<f", f.read(4))[0]
                    vx14ab = unpack("<f", f.read(4))[0]
                    vy14ab = unpack("<f", f.read(4))[0]
                    vz14ab = unpack("<f", f.read(4))[0]
                    type14ab = unpack("B", f.read(1))[0]
                    value14ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ab = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ac = unpack("<f", f.read(4))[0]
                    vy1ac = unpack("<f", f.read(4))[0]
                    vz1ac = unpack("<f", f.read(4))[0]
                    type1ac = unpack("B", f.read(1))[0]
                    value1ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ac = unpack("<f", f.read(4))[0]
                    vx2ac = unpack("<f", f.read(4))[0]
                    vy2ac = unpack("<f", f.read(4))[0]
                    vz2ac = unpack("<f", f.read(4))[0]
                    type2ac = unpack("B", f.read(1))[0]
                    value2ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ac = unpack("<f", f.read(4))[0]
                    vx3ac = unpack("<f", f.read(4))[0]
                    vy3ac = unpack("<f", f.read(4))[0]
                    vz3ac = unpack("<f", f.read(4))[0]
                    type3ac = unpack("B", f.read(1))[0]
                    value3ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ac = unpack("<f", f.read(4))[0]
                    vx4ac = unpack("<f", f.read(4))[0]
                    vy4ac = unpack("<f", f.read(4))[0]
                    vz4ac = unpack("<f", f.read(4))[0]
                    type4ac = unpack("B", f.read(1))[0]
                    value4ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ac = unpack("<f", f.read(4))[0]
                    vx5ac = unpack("<f", f.read(4))[0]
                    vy5ac = unpack("<f", f.read(4))[0]
                    vz5ac = unpack("<f", f.read(4))[0]
                    type5ac = unpack("B", f.read(1))[0]
                    value5ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ac = unpack("<f", f.read(4))[0]
                    vx6ac = unpack("<f", f.read(4))[0]
                    vy6ac = unpack("<f", f.read(4))[0]
                    vz6ac = unpack("<f", f.read(4))[0]
                    type6ac = unpack("B", f.read(1))[0]
                    value6ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ac = unpack("<f", f.read(4))[0]
                    vx7ac = unpack("<f", f.read(4))[0]
                    vy7ac = unpack("<f", f.read(4))[0]
                    vz7ac = unpack("<f", f.read(4))[0]
                    type7ac = unpack("B", f.read(1))[0]
                    value7ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ac = unpack("<f", f.read(4))[0]
                    vx8ac = unpack("<f", f.read(4))[0]
                    vy8ac = unpack("<f", f.read(4))[0]
                    vz8ac = unpack("<f", f.read(4))[0]
                    type8ac = unpack("B", f.read(1))[0]
                    value8ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ac = unpack("<f", f.read(4))[0]
                    vx9ac = unpack("<f", f.read(4))[0]
                    vy9ac = unpack("<f", f.read(4))[0]
                    vz9ac = unpack("<f", f.read(4))[0]
                    type9ac = unpack("B", f.read(1))[0]
                    value9ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ac = unpack("<f", f.read(4))[0]
                    vx10ac = unpack("<f", f.read(4))[0]
                    vy10ac = unpack("<f", f.read(4))[0]
                    vz10ac = unpack("<f", f.read(4))[0]
                    type10ac = unpack("B", f.read(1))[0]
                    value10ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ac = unpack("<f", f.read(4))[0]
                    vx11ac = unpack("<f", f.read(4))[0]
                    vy11ac = unpack("<f", f.read(4))[0]
                    vz11ac = unpack("<f", f.read(4))[0]
                    type11ac = unpack("B", f.read(1))[0]
                    value11ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ac = unpack("<f", f.read(4))[0]
                    vx12ac = unpack("<f", f.read(4))[0]
                    vy12ac = unpack("<f", f.read(4))[0]
                    vz12ac = unpack("<f", f.read(4))[0]
                    type12ac = unpack("B", f.read(1))[0]
                    value12ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ac = unpack("<f", f.read(4))[0]
                    vx13ac = unpack("<f", f.read(4))[0]
                    vy13ac = unpack("<f", f.read(4))[0]
                    vz13ac = unpack("<f", f.read(4))[0]
                    type13ac = unpack("B", f.read(1))[0]
                    value13ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ac = unpack("<f", f.read(4))[0]
                    vx14ac = unpack("<f", f.read(4))[0]
                    vy14ac = unpack("<f", f.read(4))[0]
                    vz14ac = unpack("<f", f.read(4))[0]
                    type14ac = unpack("B", f.read(1))[0]
                    value14ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ac = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ad = unpack("<f", f.read(4))[0]
                    vy1ad = unpack("<f", f.read(4))[0]
                    vz1ad = unpack("<f", f.read(4))[0]
                    type1ad = unpack("B", f.read(1))[0]
                    value1ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ad = unpack("<f", f.read(4))[0]
                    vx2ad = unpack("<f", f.read(4))[0]
                    vy2ad = unpack("<f", f.read(4))[0]
                    vz2ad = unpack("<f", f.read(4))[0]
                    type2ad = unpack("B", f.read(1))[0]
                    value2ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ad = unpack("<f", f.read(4))[0]
                    vx3ad = unpack("<f", f.read(4))[0]
                    vy3ad = unpack("<f", f.read(4))[0]
                    vz3ad = unpack("<f", f.read(4))[0]
                    type3ad = unpack("B", f.read(1))[0]
                    value3ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ad = unpack("<f", f.read(4))[0]
                    vx4ad = unpack("<f", f.read(4))[0]
                    vy4ad = unpack("<f", f.read(4))[0]
                    vz4ad = unpack("<f", f.read(4))[0]
                    type4ad = unpack("B", f.read(1))[0]
                    value4ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ad = unpack("<f", f.read(4))[0]
                    vx5ad = unpack("<f", f.read(4))[0]
                    vy5ad = unpack("<f", f.read(4))[0]
                    vz5ad = unpack("<f", f.read(4))[0]
                    type5ad = unpack("B", f.read(1))[0]
                    value5ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ad = unpack("<f", f.read(4))[0]
                    vx6ad = unpack("<f", f.read(4))[0]
                    vy6ad = unpack("<f", f.read(4))[0]
                    vz6ad = unpack("<f", f.read(4))[0]
                    type6ad = unpack("B", f.read(1))[0]
                    value6ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ad = unpack("<f", f.read(4))[0]
                    vx7ad = unpack("<f", f.read(4))[0]
                    vy7ad = unpack("<f", f.read(4))[0]
                    vz7ad = unpack("<f", f.read(4))[0]
                    type7ad = unpack("B", f.read(1))[0]
                    value7ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ad = unpack("<f", f.read(4))[0]
                    vx8ad = unpack("<f", f.read(4))[0]
                    vy8ad = unpack("<f", f.read(4))[0]
                    vz8ad = unpack("<f", f.read(4))[0]
                    type8ad = unpack("B", f.read(1))[0]
                    value8ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ad = unpack("<f", f.read(4))[0]
                    vx9ad = unpack("<f", f.read(4))[0]
                    vy9ad = unpack("<f", f.read(4))[0]
                    vz9ad = unpack("<f", f.read(4))[0]
                    type9ad = unpack("B", f.read(1))[0]
                    value9ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ad = unpack("<f", f.read(4))[0]
                    vx10ad = unpack("<f", f.read(4))[0]
                    vy10ad = unpack("<f", f.read(4))[0]
                    vz10ad = unpack("<f", f.read(4))[0]
                    type10ad = unpack("B", f.read(1))[0]
                    value10ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ad = unpack("<f", f.read(4))[0]
                    vx11ad = unpack("<f", f.read(4))[0]
                    vy11ad = unpack("<f", f.read(4))[0]
                    vz11ad = unpack("<f", f.read(4))[0]
                    type11ad = unpack("B", f.read(1))[0]
                    value11ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ad = unpack("<f", f.read(4))[0]
                    vx12ad = unpack("<f", f.read(4))[0]
                    vy12ad = unpack("<f", f.read(4))[0]
                    vz12ad = unpack("<f", f.read(4))[0]
                    type12ad = unpack("B", f.read(1))[0]
                    value12ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ad = unpack("<f", f.read(4))[0]
                    vx13ad = unpack("<f", f.read(4))[0]
                    vy13ad = unpack("<f", f.read(4))[0]
                    vz13ad = unpack("<f", f.read(4))[0]
                    type13ad = unpack("B", f.read(1))[0]
                    value13ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ad = unpack("<f", f.read(4))[0]
                    vx14ad = unpack("<f", f.read(4))[0]
                    vy14ad = unpack("<f", f.read(4))[0]
                    vz14ad = unpack("<f", f.read(4))[0]
                    type14ad = unpack("B", f.read(1))[0]
                    value14ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ad = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ae = unpack("<f", f.read(4))[0]
                    vy1ae = unpack("<f", f.read(4))[0]
                    vz1ae = unpack("<f", f.read(4))[0]
                    type1ae = unpack("B", f.read(1))[0]
                    value1ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ae = unpack("<f", f.read(4))[0]
                    vx2ae = unpack("<f", f.read(4))[0]
                    vy2ae = unpack("<f", f.read(4))[0]
                    vz2ae = unpack("<f", f.read(4))[0]
                    type2ae = unpack("B", f.read(1))[0]
                    value2ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ae = unpack("<f", f.read(4))[0]
                    vx3ae = unpack("<f", f.read(4))[0]
                    vy3ae = unpack("<f", f.read(4))[0]
                    vz3ae = unpack("<f", f.read(4))[0]
                    type3ae = unpack("B", f.read(1))[0]
                    value3ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ae = unpack("<f", f.read(4))[0]
                    vx4ae = unpack("<f", f.read(4))[0]
                    vy4ae = unpack("<f", f.read(4))[0]
                    vz4ae = unpack("<f", f.read(4))[0]
                    type4ae = unpack("B", f.read(1))[0]
                    value4ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ae = unpack("<f", f.read(4))[0]
                    vx5ae = unpack("<f", f.read(4))[0]
                    vy5ae = unpack("<f", f.read(4))[0]
                    vz5ae = unpack("<f", f.read(4))[0]
                    type5ae = unpack("B", f.read(1))[0]
                    value5ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ae = unpack("<f", f.read(4))[0]
                    vx6ae = unpack("<f", f.read(4))[0]
                    vy6ae = unpack("<f", f.read(4))[0]
                    vz6ae = unpack("<f", f.read(4))[0]
                    type6ae = unpack("B", f.read(1))[0]
                    value6ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ae = unpack("<f", f.read(4))[0]
                    vx7ae = unpack("<f", f.read(4))[0]
                    vy7ae = unpack("<f", f.read(4))[0]
                    vz7ae = unpack("<f", f.read(4))[0]
                    type7ae = unpack("B", f.read(1))[0]
                    value7ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ae = unpack("<f", f.read(4))[0]
                    vx8ae = unpack("<f", f.read(4))[0]
                    vy8ae = unpack("<f", f.read(4))[0]
                    vz8ae = unpack("<f", f.read(4))[0]
                    type8ae = unpack("B", f.read(1))[0]
                    value8ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ae = unpack("<f", f.read(4))[0]
                    vx9ae = unpack("<f", f.read(4))[0]
                    vy9ae = unpack("<f", f.read(4))[0]
                    vz9ae = unpack("<f", f.read(4))[0]
                    type9ae = unpack("B", f.read(1))[0]
                    value9ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ae = unpack("<f", f.read(4))[0]
                    vx10ae = unpack("<f", f.read(4))[0]
                    vy10ae = unpack("<f", f.read(4))[0]
                    vz10ae = unpack("<f", f.read(4))[0]
                    type10ae = unpack("B", f.read(1))[0]
                    value10ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ae = unpack("<f", f.read(4))[0]
                    vx11ae = unpack("<f", f.read(4))[0]
                    vy11ae = unpack("<f", f.read(4))[0]
                    vz11ae = unpack("<f", f.read(4))[0]
                    type11ae = unpack("B", f.read(1))[0]
                    value11ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ae = unpack("<f", f.read(4))[0]
                    vx12ae = unpack("<f", f.read(4))[0]
                    vy12ae = unpack("<f", f.read(4))[0]
                    vz12ae = unpack("<f", f.read(4))[0]
                    type12ae = unpack("B", f.read(1))[0]
                    value12ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ae = unpack("<f", f.read(4))[0]
                    vx13ae = unpack("<f", f.read(4))[0]
                    vy13ae = unpack("<f", f.read(4))[0]
                    vz13ae = unpack("<f", f.read(4))[0]
                    type13ae = unpack("B", f.read(1))[0]
                    value13ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ae = unpack("<f", f.read(4))[0]
                    vx14ae = unpack("<f", f.read(4))[0]
                    vy14ae = unpack("<f", f.read(4))[0]
                    vz14ae = unpack("<f", f.read(4))[0]
                    type14ae = unpack("B", f.read(1))[0]
                    value14ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ae = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1af = unpack("<f", f.read(4))[0]
                    vy1af = unpack("<f", f.read(4))[0]
                    vz1af = unpack("<f", f.read(4))[0]
                    type1af = unpack("B", f.read(1))[0]
                    value1af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1af = unpack("<f", f.read(4))[0]
                    vx2af = unpack("<f", f.read(4))[0]
                    vy2af = unpack("<f", f.read(4))[0]
                    vz2af = unpack("<f", f.read(4))[0]
                    type2af = unpack("B", f.read(1))[0]
                    value2af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2af = unpack("<f", f.read(4))[0]
                    vx3af = unpack("<f", f.read(4))[0]
                    vy3af = unpack("<f", f.read(4))[0]
                    vz3af = unpack("<f", f.read(4))[0]
                    type3af = unpack("B", f.read(1))[0]
                    value3af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3af = unpack("<f", f.read(4))[0]
                    vx4af = unpack("<f", f.read(4))[0]
                    vy4af = unpack("<f", f.read(4))[0]
                    vz4af = unpack("<f", f.read(4))[0]
                    type4af = unpack("B", f.read(1))[0]
                    value4af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4af = unpack("<f", f.read(4))[0]
                    vx5af = unpack("<f", f.read(4))[0]
                    vy5af = unpack("<f", f.read(4))[0]
                    vz5af = unpack("<f", f.read(4))[0]
                    type5af = unpack("B", f.read(1))[0]
                    value5af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5af = unpack("<f", f.read(4))[0]
                    vx6af = unpack("<f", f.read(4))[0]
                    vy6af = unpack("<f", f.read(4))[0]
                    vz6af = unpack("<f", f.read(4))[0]
                    type6af = unpack("B", f.read(1))[0]
                    value6af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6af = unpack("<f", f.read(4))[0]
                    vx7af = unpack("<f", f.read(4))[0]
                    vy7af = unpack("<f", f.read(4))[0]
                    vz7af = unpack("<f", f.read(4))[0]
                    type7af = unpack("B", f.read(1))[0]
                    value7af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7af = unpack("<f", f.read(4))[0]
                    vx8af = unpack("<f", f.read(4))[0]
                    vy8af = unpack("<f", f.read(4))[0]
                    vz8af = unpack("<f", f.read(4))[0]
                    type8af = unpack("B", f.read(1))[0]
                    value8af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8af = unpack("<f", f.read(4))[0]
                    vx9af = unpack("<f", f.read(4))[0]
                    vy9af = unpack("<f", f.read(4))[0]
                    vz9af = unpack("<f", f.read(4))[0]
                    type9af = unpack("B", f.read(1))[0]
                    value9af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9af = unpack("<f", f.read(4))[0]
                    vx10af = unpack("<f", f.read(4))[0]
                    vy10af = unpack("<f", f.read(4))[0]
                    vz10af = unpack("<f", f.read(4))[0]
                    type10af = unpack("B", f.read(1))[0]
                    value10af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10af = unpack("<f", f.read(4))[0]
                    vx11af = unpack("<f", f.read(4))[0]
                    vy11af = unpack("<f", f.read(4))[0]
                    vz11af = unpack("<f", f.read(4))[0]
                    type11af = unpack("B", f.read(1))[0]
                    value11af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11af = unpack("<f", f.read(4))[0]
                    vx12af = unpack("<f", f.read(4))[0]
                    vy12af = unpack("<f", f.read(4))[0]
                    vz12af = unpack("<f", f.read(4))[0]
                    type12af = unpack("B", f.read(1))[0]
                    value12af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12af = unpack("<f", f.read(4))[0]
                    vx13af = unpack("<f", f.read(4))[0]
                    vy13af = unpack("<f", f.read(4))[0]
                    vz13af = unpack("<f", f.read(4))[0]
                    type13af = unpack("B", f.read(1))[0]
                    value13af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13af = unpack("<f", f.read(4))[0]
                    vx14af = unpack("<f", f.read(4))[0]
                    vy14af = unpack("<f", f.read(4))[0]
                    vz14af = unpack("<f", f.read(4))[0]
                    type14af = unpack("B", f.read(1))[0]
                    value14af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14af = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ag = unpack("<f", f.read(4))[0]
                    vy1ag = unpack("<f", f.read(4))[0]
                    vz1ag = unpack("<f", f.read(4))[0]
                    type1ag = unpack("B", f.read(1))[0]
                    value1ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ag = unpack("<f", f.read(4))[0]
                    vx2ag = unpack("<f", f.read(4))[0]
                    vy2ag = unpack("<f", f.read(4))[0]
                    vz2ag = unpack("<f", f.read(4))[0]
                    type2ag = unpack("B", f.read(1))[0]
                    value2ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ag = unpack("<f", f.read(4))[0]
                    vx3ag = unpack("<f", f.read(4))[0]
                    vy3ag = unpack("<f", f.read(4))[0]
                    vz3ag = unpack("<f", f.read(4))[0]
                    type3ag = unpack("B", f.read(1))[0]
                    value3ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ag = unpack("<f", f.read(4))[0]
                    vx4ag = unpack("<f", f.read(4))[0]
                    vy4ag = unpack("<f", f.read(4))[0]
                    vz4ag = unpack("<f", f.read(4))[0]
                    type4ag = unpack("B", f.read(1))[0]
                    value4ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ag = unpack("<f", f.read(4))[0]
                    vx5ag = unpack("<f", f.read(4))[0]
                    vy5ag = unpack("<f", f.read(4))[0]
                    vz5ag = unpack("<f", f.read(4))[0]
                    type5ag = unpack("B", f.read(1))[0]
                    value5ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ag = unpack("<f", f.read(4))[0]
                    vx6ag = unpack("<f", f.read(4))[0]
                    vy6ag = unpack("<f", f.read(4))[0]
                    vz6ag = unpack("<f", f.read(4))[0]
                    type6ag = unpack("B", f.read(1))[0]
                    value6ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ag = unpack("<f", f.read(4))[0]
                    vx7ag = unpack("<f", f.read(4))[0]
                    vy7ag = unpack("<f", f.read(4))[0]
                    vz7ag = unpack("<f", f.read(4))[0]
                    type7ag = unpack("B", f.read(1))[0]
                    value7ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ag = unpack("<f", f.read(4))[0]
                    vx8ag = unpack("<f", f.read(4))[0]
                    vy8ag = unpack("<f", f.read(4))[0]
                    vz8ag = unpack("<f", f.read(4))[0]
                    type8ag = unpack("B", f.read(1))[0]
                    value8ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ag = unpack("<f", f.read(4))[0]
                    vx9ag = unpack("<f", f.read(4))[0]
                    vy9ag = unpack("<f", f.read(4))[0]
                    vz9ag = unpack("<f", f.read(4))[0]
                    type9ag = unpack("B", f.read(1))[0]
                    value9ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ag = unpack("<f", f.read(4))[0]
                    vx10ag = unpack("<f", f.read(4))[0]
                    vy10ag = unpack("<f", f.read(4))[0]
                    vz10ag = unpack("<f", f.read(4))[0]
                    type10ag = unpack("B", f.read(1))[0]
                    value10ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ag = unpack("<f", f.read(4))[0]
                    vx11ag = unpack("<f", f.read(4))[0]
                    vy11ag = unpack("<f", f.read(4))[0]
                    vz11ag = unpack("<f", f.read(4))[0]
                    type11ag = unpack("B", f.read(1))[0]
                    value11ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ag = unpack("<f", f.read(4))[0]
                    vx12ag = unpack("<f", f.read(4))[0]
                    vy12ag = unpack("<f", f.read(4))[0]
                    vz12ag = unpack("<f", f.read(4))[0]
                    type12ag = unpack("B", f.read(1))[0]
                    value12ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ag = unpack("<f", f.read(4))[0]
                    vx13ag = unpack("<f", f.read(4))[0]
                    vy13ag = unpack("<f", f.read(4))[0]
                    vz13ag = unpack("<f", f.read(4))[0]
                    type13ag = unpack("B", f.read(1))[0]
                    value13ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ag = unpack("<f", f.read(4))[0]
                    vx14ag = unpack("<f", f.read(4))[0]
                    vy14ag = unpack("<f", f.read(4))[0]
                    vz14ag = unpack("<f", f.read(4))[0]
                    type14ag = unpack("B", f.read(1))[0]
                    value14ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ag = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ah = unpack("<f", f.read(4))[0]
                    vy1ah = unpack("<f", f.read(4))[0]
                    vz1ah = unpack("<f", f.read(4))[0]
                    type1ah = unpack("B", f.read(1))[0]
                    value1ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ah = unpack("<f", f.read(4))[0]
                    vx2ah = unpack("<f", f.read(4))[0]
                    vy2ah = unpack("<f", f.read(4))[0]
                    vz2ah = unpack("<f", f.read(4))[0]
                    type2ah = unpack("B", f.read(1))[0]
                    value2ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ah = unpack("<f", f.read(4))[0]
                    vx3ah = unpack("<f", f.read(4))[0]
                    vy3ah = unpack("<f", f.read(4))[0]
                    vz3ah = unpack("<f", f.read(4))[0]
                    type3ah = unpack("B", f.read(1))[0]
                    value3ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ah = unpack("<f", f.read(4))[0]
                    vx4ah = unpack("<f", f.read(4))[0]
                    vy4ah = unpack("<f", f.read(4))[0]
                    vz4ah = unpack("<f", f.read(4))[0]
                    type4ah = unpack("B", f.read(1))[0]
                    value4ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ah = unpack("<f", f.read(4))[0]
                    vx5ah = unpack("<f", f.read(4))[0]
                    vy5ah = unpack("<f", f.read(4))[0]
                    vz5ah = unpack("<f", f.read(4))[0]
                    type5ah = unpack("B", f.read(1))[0]
                    value5ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ah = unpack("<f", f.read(4))[0]
                    vx6ah = unpack("<f", f.read(4))[0]
                    vy6ah = unpack("<f", f.read(4))[0]
                    vz6ah = unpack("<f", f.read(4))[0]
                    type6ah = unpack("B", f.read(1))[0]
                    value6ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ah = unpack("<f", f.read(4))[0]
                    vx7ah = unpack("<f", f.read(4))[0]
                    vy7ah = unpack("<f", f.read(4))[0]
                    vz7ah = unpack("<f", f.read(4))[0]
                    type7ah = unpack("B", f.read(1))[0]
                    value7ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ah = unpack("<f", f.read(4))[0]
                    vx8ah = unpack("<f", f.read(4))[0]
                    vy8ah = unpack("<f", f.read(4))[0]
                    vz8ah = unpack("<f", f.read(4))[0]
                    type8ah = unpack("B", f.read(1))[0]
                    value8ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ah = unpack("<f", f.read(4))[0]
                    vx9ah = unpack("<f", f.read(4))[0]
                    vy9ah = unpack("<f", f.read(4))[0]
                    vz9ah = unpack("<f", f.read(4))[0]
                    type9ah = unpack("B", f.read(1))[0]
                    value9ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ah = unpack("<f", f.read(4))[0]
                    vx10ah = unpack("<f", f.read(4))[0]
                    vy10ah = unpack("<f", f.read(4))[0]
                    vz10ah = unpack("<f", f.read(4))[0]
                    type10ah = unpack("B", f.read(1))[0]
                    value10ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ah = unpack("<f", f.read(4))[0]
                    vx11ah = unpack("<f", f.read(4))[0]
                    vy11ah = unpack("<f", f.read(4))[0]
                    vz11ah = unpack("<f", f.read(4))[0]
                    type11ah = unpack("B", f.read(1))[0]
                    value11ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ah = unpack("<f", f.read(4))[0]
                    vx12ah = unpack("<f", f.read(4))[0]
                    vy12ah = unpack("<f", f.read(4))[0]
                    vz12ah = unpack("<f", f.read(4))[0]
                    type12ah = unpack("B", f.read(1))[0]
                    value12ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ah = unpack("<f", f.read(4))[0]
                    vx13ah = unpack("<f", f.read(4))[0]
                    vy13ah = unpack("<f", f.read(4))[0]
                    vz13ah = unpack("<f", f.read(4))[0]
                    type13ah = unpack("B", f.read(1))[0]
                    value13ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ah = unpack("<f", f.read(4))[0]
                    vx14ah = unpack("<f", f.read(4))[0]
                    vy14ah = unpack("<f", f.read(4))[0]
                    vz14ah = unpack("<f", f.read(4))[0]
                    type14ah = unpack("B", f.read(1))[0]
                    value14ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ah = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1ai = unpack("<f", f.read(4))[0]
                    vy1ai = unpack("<f", f.read(4))[0]
                    vz1ai = unpack("<f", f.read(4))[0]
                    type1ai = unpack("B", f.read(1))[0]
                    value1ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ai = unpack("<f", f.read(4))[0]
                    vx2ai = unpack("<f", f.read(4))[0]
                    vy2ai = unpack("<f", f.read(4))[0]
                    vz2ai = unpack("<f", f.read(4))[0]
                    type2ai = unpack("B", f.read(1))[0]
                    value2ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ai = unpack("<f", f.read(4))[0]
                    vx3ai = unpack("<f", f.read(4))[0]
                    vy3ai = unpack("<f", f.read(4))[0]
                    vz3ai = unpack("<f", f.read(4))[0]
                    type3ai = unpack("B", f.read(1))[0]
                    value3ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ai = unpack("<f", f.read(4))[0]
                    vx4ai = unpack("<f", f.read(4))[0]
                    vy4ai = unpack("<f", f.read(4))[0]
                    vz4ai = unpack("<f", f.read(4))[0]
                    type4ai = unpack("B", f.read(1))[0]
                    value4ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ai = unpack("<f", f.read(4))[0]
                    vx5ai = unpack("<f", f.read(4))[0]
                    vy5ai = unpack("<f", f.read(4))[0]
                    vz5ai = unpack("<f", f.read(4))[0]
                    type5ai = unpack("B", f.read(1))[0]
                    value5ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ai = unpack("<f", f.read(4))[0]
                    vx6ai = unpack("<f", f.read(4))[0]
                    vy6ai = unpack("<f", f.read(4))[0]
                    vz6ai = unpack("<f", f.read(4))[0]
                    type6ai = unpack("B", f.read(1))[0]
                    value6ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ai = unpack("<f", f.read(4))[0]
                    vx7ai = unpack("<f", f.read(4))[0]
                    vy7ai = unpack("<f", f.read(4))[0]
                    vz7ai = unpack("<f", f.read(4))[0]
                    type7ai = unpack("B", f.read(1))[0]
                    value7ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ai = unpack("<f", f.read(4))[0]
                    vx8ai = unpack("<f", f.read(4))[0]
                    vy8ai = unpack("<f", f.read(4))[0]
                    vz8ai = unpack("<f", f.read(4))[0]
                    type8ai = unpack("B", f.read(1))[0]
                    value8ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ai = unpack("<f", f.read(4))[0]
                    vx9ai = unpack("<f", f.read(4))[0]
                    vy9ai = unpack("<f", f.read(4))[0]
                    vz9ai = unpack("<f", f.read(4))[0]
                    type9ai = unpack("B", f.read(1))[0]
                    value9ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ai = unpack("<f", f.read(4))[0]
                    vx10ai = unpack("<f", f.read(4))[0]
                    vy10ai = unpack("<f", f.read(4))[0]
                    vz10ai = unpack("<f", f.read(4))[0]
                    type10ai = unpack("B", f.read(1))[0]
                    value10ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ai = unpack("<f", f.read(4))[0]
                    vx11ai = unpack("<f", f.read(4))[0]
                    vy11ai = unpack("<f", f.read(4))[0]
                    vz11ai = unpack("<f", f.read(4))[0]
                    type11ai = unpack("B", f.read(1))[0]
                    value11ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ai = unpack("<f", f.read(4))[0]
                    vx12ai = unpack("<f", f.read(4))[0]
                    vy12ai = unpack("<f", f.read(4))[0]
                    vz12ai = unpack("<f", f.read(4))[0]
                    type12ai = unpack("B", f.read(1))[0]
                    value12ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ai = unpack("<f", f.read(4))[0]
                    vx13ai = unpack("<f", f.read(4))[0]
                    vy13ai = unpack("<f", f.read(4))[0]
                    vz13ai = unpack("<f", f.read(4))[0]
                    type13ai = unpack("B", f.read(1))[0]
                    value13ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ai = unpack("<f", f.read(4))[0]
                    vx14ai = unpack("<f", f.read(4))[0]
                    vy14ai = unpack("<f", f.read(4))[0]
                    vz14ai = unpack("<f", f.read(4))[0]
                    type14ai = unpack("B", f.read(1))[0]
                    value14ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ai = unpack("<f", f.read(4))[0]

                    f.seek(-224,1)

                    vx1aj = unpack("<f", f.read(4))[0]
                    vy1aj = unpack("<f", f.read(4))[0]
                    vz1aj = unpack("<f", f.read(4))[0]
                    type1aj = unpack("B", f.read(1))[0]
                    value1aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1aj = unpack("<f", f.read(4))[0]
                    vx2aj = unpack("<f", f.read(4))[0]
                    vy2aj = unpack("<f", f.read(4))[0]
                    vz2aj = unpack("<f", f.read(4))[0]
                    type2aj = unpack("B", f.read(1))[0]
                    value2aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2aj = unpack("<f", f.read(4))[0]
                    vx3aj = unpack("<f", f.read(4))[0]
                    vy3aj = unpack("<f", f.read(4))[0]
                    vz3aj = unpack("<f", f.read(4))[0]
                    type3aj = unpack("B", f.read(1))[0]
                    value3aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3aj = unpack("<f", f.read(4))[0]
                    vx4aj = unpack("<f", f.read(4))[0]
                    vy4aj = unpack("<f", f.read(4))[0]
                    vz4aj = unpack("<f", f.read(4))[0]
                    type4aj = unpack("B", f.read(1))[0]
                    value4aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4aj = unpack("<f", f.read(4))[0]
                    vx5aj = unpack("<f", f.read(4))[0]
                    vy5aj = unpack("<f", f.read(4))[0]
                    vz5aj = unpack("<f", f.read(4))[0]
                    type5aj = unpack("B", f.read(1))[0]
                    value5aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5aj = unpack("<f", f.read(4))[0]
                    vx6aj = unpack("<f", f.read(4))[0]
                    vy6aj = unpack("<f", f.read(4))[0]
                    vz6aj = unpack("<f", f.read(4))[0]
                    type6aj = unpack("B", f.read(1))[0]
                    value6aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6aj = unpack("<f", f.read(4))[0]
                    vx7aj = unpack("<f", f.read(4))[0]
                    vy7aj = unpack("<f", f.read(4))[0]
                    vz7aj = unpack("<f", f.read(4))[0]
                    type7aj = unpack("B", f.read(1))[0]
                    value7aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7aj = unpack("<f", f.read(4))[0]
                    vx8aj = unpack("<f", f.read(4))[0]
                    vy8aj = unpack("<f", f.read(4))[0]
                    vz8aj = unpack("<f", f.read(4))[0]
                    type8aj = unpack("B", f.read(1))[0]
                    value8aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8aj = unpack("<f", f.read(4))[0]
                    vx9aj = unpack("<f", f.read(4))[0]
                    vy9aj = unpack("<f", f.read(4))[0]
                    vz9aj = unpack("<f", f.read(4))[0]
                    type9aj = unpack("B", f.read(1))[0]
                    value9aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9aj = unpack("<f", f.read(4))[0]
                    vx10aj = unpack("<f", f.read(4))[0]
                    vy10aj = unpack("<f", f.read(4))[0]
                    vz10aj = unpack("<f", f.read(4))[0]
                    type10aj = unpack("B", f.read(1))[0]
                    value10aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10aj = unpack("<f", f.read(4))[0]
                    vx11aj = unpack("<f", f.read(4))[0]
                    vy11aj = unpack("<f", f.read(4))[0]
                    vz11aj = unpack("<f", f.read(4))[0]
                    type11aj = unpack("B", f.read(1))[0]
                    value11aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aj = unpack("<f", f.read(4))[0]
                    vx12aj = unpack("<f", f.read(4))[0]
                    vy12aj = unpack("<f", f.read(4))[0]
                    vz12aj = unpack("<f", f.read(4))[0]
                    type12aj = unpack("B", f.read(1))[0]
                    value12aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12aj = unpack("<f", f.read(4))[0]
                    vx13aj = unpack("<f", f.read(4))[0]
                    vy13aj = unpack("<f", f.read(4))[0]
                    vz13aj = unpack("<f", f.read(4))[0]
                    type13aj = unpack("B", f.read(1))[0]
                    value13aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13aj = unpack("<f", f.read(4))[0]
                    vx14aj = unpack("<f", f.read(4))[0]
                    vy14aj = unpack("<f", f.read(4))[0]
                    vz14aj = unpack("<f", f.read(4))[0]
                    type14aj = unpack("B", f.read(1))[0]
                    value14aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14aj = unpack("<f", f.read(4))[0]

                    
                    

                    fa1 = bm_1jj.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1jj.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1jj.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1jj.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1jj.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1jj.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1jj.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1jj.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1jj.verts.new([-vx9,-vy9,-vz9]) # 8
                    fj1 = bm_1jj.verts.new([-vx10,-vy10,-vz10]) # 9
                    fk1 = bm_1jj.verts.new([-vx11,-vy11,-vz11]) # 10
                    fl1 = bm_1jj.verts.new([-vx12,-vy12,-vz12]) # 11
                    fm1 = bm_1jj.verts.new([-vx13,-vy13,-vz13]) # 12
                    fn1 = bm_1jj.verts.new([-vx14,-vy14,-vz14]) # 13

                    fa1a = bm_1jjj.verts.new([-vx1a,-vy1a,-vz1a]) # 0
                    fb1a = bm_1jjj.verts.new([-vx2a,-vy2a,-vz2a]) # 1
                    fc1a = bm_1jjj.verts.new([-vx3a,-vy3a,-vz3a]) # 2
                    fd1a = bm_1jjj.verts.new([-vx4a,-vy4a,-vz4a]) # 3
                    fe1a = bm_1jjj.verts.new([-vx5a,-vy5a,-vz5a]) # 4
                    ff1a = bm_1jjj.verts.new([-vx6a,-vy6a,-vz6a]) # 5
                    fg1a = bm_1jjj.verts.new([-vx7a,-vy7a,-vz7a]) # 6
                    fh1a = bm_1jjj.verts.new([-vx8a,-vy8a,-vz8a]) # 7
                    fi1a = bm_1jjj.verts.new([-vx9a,-vy9a,-vz9a]) # 8
                    fj1a = bm_1jjj.verts.new([-vx10a,-vy10a,-vz10a]) # 9
                    fk1a = bm_1jjj.verts.new([-vx11a,-vy11a,-vz11a]) # 10
                    fl1a = bm_1jjj.verts.new([-vx12a,-vy12a,-vz12a]) # 11
                    fm1a = bm_1jjj.verts.new([-vx13a,-vy13a,-vz13a]) # 12
                    fn1a = bm_1jjj.verts.new([-vx14a,-vy14a,-vz14a]) # 13

                    fa1b = bm_1jjjj.verts.new([-vx1b,-vy1b,-vz1b]) # 0
                    fb1b = bm_1jjjj.verts.new([-vx2b,-vy2b,-vz2b]) # 1
                    fc1b = bm_1jjjj.verts.new([-vx3b,-vy3b,-vz3b]) # 2
                    fd1b = bm_1jjjj.verts.new([-vx4b,-vy4b,-vz4b]) # 3
                    fe1b = bm_1jjjj.verts.new([-vx5b,-vy5b,-vz5b]) # 4
                    ff1b = bm_1jjjj.verts.new([-vx6b,-vy6b,-vz6b]) # 5
                    fg1b = bm_1jjjj.verts.new([-vx7b,-vy7b,-vz7b]) # 6
                    fh1b = bm_1jjjj.verts.new([-vx8b,-vy8b,-vz8b]) # 7
                    fi1b = bm_1jjjj.verts.new([-vx9b,-vy9b,-vz9b]) # 8
                    fj1b = bm_1jjjj.verts.new([-vx10b,-vy10b,-vz10b]) # 9
                    fk1b = bm_1jjjj.verts.new([-vx11b,-vy11b,-vz11b]) # 10
                    fl1b = bm_1jjjj.verts.new([-vx12b,-vy12b,-vz12b]) # 11
                    fm1b = bm_1jjjj.verts.new([-vx13b,-vy13b,-vz13b]) # 12
                    fn1b = bm_1jjjj.verts.new([-vx14b,-vy14b,-vz14b]) # 13

                    fa1c = bm_1jjjjj.verts.new([-vx1c,-vy1c,-vz1c]) # 0
                    fb1c = bm_1jjjjj.verts.new([-vx2c,-vy2c,-vz2c]) # 1
                    fc1c = bm_1jjjjj.verts.new([-vx3c,-vy3c,-vz3c]) # 2
                    fd1c = bm_1jjjjj.verts.new([-vx4c,-vy4c,-vz4c]) # 3
                    fe1c = bm_1jjjjj.verts.new([-vx5c,-vy5c,-vz5c]) # 4
                    ff1c = bm_1jjjjj.verts.new([-vx6c,-vy6c,-vz6c]) # 5
                    fg1c = bm_1jjjjj.verts.new([-vx7c,-vy7c,-vz7c]) # 6
                    fh1c = bm_1jjjjj.verts.new([-vx8c,-vy8c,-vz8c]) # 7
                    fi1c = bm_1jjjjj.verts.new([-vx9c,-vy9c,-vz9c]) # 8
                    fj1c = bm_1jjjjj.verts.new([-vx10c,-vy10c,-vz10c]) # 9
                    fk1c = bm_1jjjjj.verts.new([-vx11c,-vy11c,-vz11c]) # 10
                    fl1c = bm_1jjjjj.verts.new([-vx12c,-vy12c,-vz12c]) # 11
                    fm1c = bm_1jjjjj.verts.new([-vx13c,-vy13c,-vz13c]) # 12
                    fn1c = bm_1jjjjj.verts.new([-vx14c,-vy14c,-vz14c]) # 13

                    fa1d = bm_1jjjjjj.verts.new([-vx1d,-vy1d,-vz1d]) # 0
                    fb1d = bm_1jjjjjj.verts.new([-vx2d,-vy2d,-vz2d]) # 1
                    fc1d = bm_1jjjjjj.verts.new([-vx3d,-vy3d,-vz3d]) # 2
                    fd1d = bm_1jjjjjj.verts.new([-vx4d,-vy4d,-vz4d]) # 3
                    fe1d = bm_1jjjjjj.verts.new([-vx5d,-vy5d,-vz5d]) # 4
                    ff1d = bm_1jjjjjj.verts.new([-vx6d,-vy6d,-vz6d]) # 5
                    fg1d = bm_1jjjjjj.verts.new([-vx7d,-vy7d,-vz7d]) # 6
                    fh1d = bm_1jjjjjj.verts.new([-vx8d,-vy8d,-vz8d]) # 7
                    fi1d = bm_1jjjjjj.verts.new([-vx9d,-vy9d,-vz9d]) # 8
                    fj1d = bm_1jjjjjj.verts.new([-vx10d,-vy10d,-vz10d]) # 9
                    fk1d = bm_1jjjjjj.verts.new([-vx11d,-vy11d,-vz11d]) # 10
                    fl1d = bm_1jjjjjj.verts.new([-vx12d,-vy12d,-vz12d]) # 11
                    fm1d = bm_1jjjjjj.verts.new([-vx13d,-vy13d,-vz13d]) # 12
                    fn1d = bm_1jjjjjj.verts.new([-vx14d,-vy14d,-vz14d]) # 13

                    fa1e = bm_1jjjjjjj.verts.new([-vx1e,-vy1e,-vz1e]) # 0
                    fb1e = bm_1jjjjjjj.verts.new([-vx2e,-vy2e,-vz2e]) # 1
                    fc1e = bm_1jjjjjjj.verts.new([-vx3e,-vy3e,-vz3e]) # 2
                    fd1e = bm_1jjjjjjj.verts.new([-vx4e,-vy4e,-vz4e]) # 3
                    fe1e = bm_1jjjjjjj.verts.new([-vx5e,-vy5e,-vz5e]) # 4
                    ff1e = bm_1jjjjjjj.verts.new([-vx6e,-vy6e,-vz6e]) # 5
                    fg1e = bm_1jjjjjjj.verts.new([-vx7e,-vy7e,-vz7e]) # 6
                    fh1e = bm_1jjjjjjj.verts.new([-vx8e,-vy8e,-vz8e]) # 7
                    fi1e = bm_1jjjjjjj.verts.new([-vx9e,-vy9e,-vz9e]) # 8
                    fj1e = bm_1jjjjjjj.verts.new([-vx10e,-vy10e,-vz10e]) # 9
                    fk1e = bm_1jjjjjjj.verts.new([-vx11e,-vy11e,-vz11e]) # 10
                    fl1e = bm_1jjjjjjj.verts.new([-vx12e,-vy12e,-vz12e]) # 11
                    fm1e = bm_1jjjjjjj.verts.new([-vx13e,-vy13e,-vz13e]) # 12
                    fn1e = bm_1jjjjjjj.verts.new([-vx14e,-vy14e,-vz14e]) # 13

                    fa1f = bm_1jjjjjjjj.verts.new([-vx1f,-vy1f,-vz1f]) # 0
                    fb1f = bm_1jjjjjjjj.verts.new([-vx2f,-vy2f,-vz2f]) # 1
                    fc1f = bm_1jjjjjjjj.verts.new([-vx3f,-vy3f,-vz3f]) # 2
                    fd1f = bm_1jjjjjjjj.verts.new([-vx4f,-vy4f,-vz4f]) # 3
                    fe1f = bm_1jjjjjjjj.verts.new([-vx5f,-vy5f,-vz5f]) # 4
                    ff1f = bm_1jjjjjjjj.verts.new([-vx6f,-vy6f,-vz6f]) # 5
                    fg1f = bm_1jjjjjjjj.verts.new([-vx7f,-vy7f,-vz7f]) # 6
                    fh1f = bm_1jjjjjjjj.verts.new([-vx8f,-vy8f,-vz8f]) # 7
                    fi1f = bm_1jjjjjjjj.verts.new([-vx9f,-vy9f,-vz9f]) # 8
                    fj1f = bm_1jjjjjjjj.verts.new([-vx10f,-vy10f,-vz10f]) # 9
                    fk1f = bm_1jjjjjjjj.verts.new([-vx11f,-vy11f,-vz11f]) # 10
                    fl1f = bm_1jjjjjjjj.verts.new([-vx12f,-vy12f,-vz12f]) # 11
                    fm1f = bm_1jjjjjjjj.verts.new([-vx13f,-vy13f,-vz13f]) # 12
                    fn1f = bm_1jjjjjjjj.verts.new([-vx14f,-vy14f,-vz14f]) # 13

                    fa1g = bm_1jjjjjjjjj.verts.new([-vx1g,-vy1g,-vz1g]) # 0
                    fb1g = bm_1jjjjjjjjj.verts.new([-vx2g,-vy2g,-vz2g]) # 1
                    fc1g = bm_1jjjjjjjjj.verts.new([-vx3g,-vy3g,-vz3g]) # 2
                    fd1g = bm_1jjjjjjjjj.verts.new([-vx4g,-vy4g,-vz4g]) # 3
                    fe1g = bm_1jjjjjjjjj.verts.new([-vx5g,-vy5g,-vz5g]) # 4
                    ff1g = bm_1jjjjjjjjj.verts.new([-vx6g,-vy6g,-vz6g]) # 5
                    fg1g = bm_1jjjjjjjjj.verts.new([-vx7g,-vy7g,-vz7g]) # 6
                    fh1g = bm_1jjjjjjjjj.verts.new([-vx8g,-vy8g,-vz8g]) # 7
                    fi1g = bm_1jjjjjjjjj.verts.new([-vx9g,-vy9g,-vz9g]) # 8
                    fj1g = bm_1jjjjjjjjj.verts.new([-vx10g,-vy10g,-vz10g]) # 9
                    fk1g = bm_1jjjjjjjjj.verts.new([-vx11g,-vy11g,-vz11g]) # 10
                    fl1g = bm_1jjjjjjjjj.verts.new([-vx12g,-vy12g,-vz12g]) # 11
                    fm1g = bm_1jjjjjjjjj.verts.new([-vx13g,-vy13g,-vz13g]) # 12
                    fn1g = bm_1jjjjjjjjj.verts.new([-vx14g,-vy14g,-vz14g]) # 13

                    fa1h = bm_1jjjjjjjjjj.verts.new([-vx1h,-vy1h,-vz1h]) # 0
                    fb1h = bm_1jjjjjjjjjj.verts.new([-vx2h,-vy2h,-vz2h]) # 1
                    fc1h = bm_1jjjjjjjjjj.verts.new([-vx3h,-vy3h,-vz3h]) # 2
                    fd1h = bm_1jjjjjjjjjj.verts.new([-vx4h,-vy4h,-vz4h]) # 3
                    fe1h = bm_1jjjjjjjjjj.verts.new([-vx5h,-vy5h,-vz5h]) # 4
                    ff1h = bm_1jjjjjjjjjj.verts.new([-vx6h,-vy6h,-vz6h]) # 5
                    fg1h = bm_1jjjjjjjjjj.verts.new([-vx7h,-vy7h,-vz7h]) # 6
                    fh1h = bm_1jjjjjjjjjj.verts.new([-vx8h,-vy8h,-vz8h]) # 7
                    fi1h = bm_1jjjjjjjjjj.verts.new([-vx9h,-vy9h,-vz9h]) # 8
                    fj1h = bm_1jjjjjjjjjj.verts.new([-vx10h,-vy10h,-vz10h]) # 9
                    fk1h = bm_1jjjjjjjjjj.verts.new([-vx11h,-vy11h,-vz11h]) # 10
                    fl1h = bm_1jjjjjjjjjj.verts.new([-vx12h,-vy12h,-vz12h]) # 11
                    fm1h = bm_1jjjjjjjjjj.verts.new([-vx13h,-vy13h,-vz13h]) # 12
                    fn1h = bm_1jjjjjjjjjj.verts.new([-vx14h,-vy14h,-vz14h]) # 13

                    fa1i = bm_1jjjjjjjjjjj.verts.new([-vx1i,-vy1i,-vz1i]) # 0
                    fb1i = bm_1jjjjjjjjjjj.verts.new([-vx2i,-vy2i,-vz2i]) # 1
                    fc1i = bm_1jjjjjjjjjjj.verts.new([-vx3i,-vy3i,-vz3i]) # 2
                    fd1i = bm_1jjjjjjjjjjj.verts.new([-vx4i,-vy4i,-vz4i]) # 3
                    fe1i = bm_1jjjjjjjjjjj.verts.new([-vx5i,-vy5i,-vz5i]) # 4
                    ff1i = bm_1jjjjjjjjjjj.verts.new([-vx6i,-vy6i,-vz6i]) # 5
                    fg1i = bm_1jjjjjjjjjjj.verts.new([-vx7i,-vy7i,-vz7i]) # 6
                    fh1i = bm_1jjjjjjjjjjj.verts.new([-vx8i,-vy8i,-vz8i]) # 7
                    fi1i = bm_1jjjjjjjjjjj.verts.new([-vx9i,-vy9i,-vz9i]) # 8
                    fj1i = bm_1jjjjjjjjjjj.verts.new([-vx10i,-vy10i,-vz10i]) # 9
                    fk1i = bm_1jjjjjjjjjjj.verts.new([-vx11i,-vy11i,-vz11i]) # 10
                    fl1i = bm_1jjjjjjjjjjj.verts.new([-vx12i,-vy12i,-vz12i]) # 11
                    fm1i = bm_1jjjjjjjjjjj.verts.new([-vx13i,-vy13i,-vz13i]) # 12
                    fn1i = bm_1jjjjjjjjjjj.verts.new([-vx14i,-vy14i,-vz14i]) # 13

                    fa1j = bm_1jjjjjjjjjjjj.verts.new([-vx1j,-vy1j,-vz1j]) # 0
                    fb1j = bm_1jjjjjjjjjjjj.verts.new([-vx2j,-vy2j,-vz2j]) # 1
                    fc1j = bm_1jjjjjjjjjjjj.verts.new([-vx3j,-vy3j,-vz3j]) # 2
                    fd1j = bm_1jjjjjjjjjjjj.verts.new([-vx4j,-vy4j,-vz4j]) # 3
                    fe1j = bm_1jjjjjjjjjjjj.verts.new([-vx5j,-vy5j,-vz5j]) # 4
                    ff1j = bm_1jjjjjjjjjjjj.verts.new([-vx6j,-vy6j,-vz6j]) # 5
                    fg1j = bm_1jjjjjjjjjjjj.verts.new([-vx7j,-vy7j,-vz7j]) # 6
                    fh1j = bm_1jjjjjjjjjjjj.verts.new([-vx8j,-vy8j,-vz8j]) # 7
                    fi1j = bm_1jjjjjjjjjjjj.verts.new([-vx9j,-vy9j,-vz9j]) # 8
                    fj1j = bm_1jjjjjjjjjjjj.verts.new([-vx10j,-vy10j,-vz10j]) # 9
                    fk1j = bm_1jjjjjjjjjjjj.verts.new([-vx11j,-vy11j,-vz11j]) # 10
                    fl1j = bm_1jjjjjjjjjjjj.verts.new([-vx12j,-vy12j,-vz12j]) # 11
                    fm1j = bm_1jjjjjjjjjjjj.verts.new([-vx13j,-vy13j,-vz13j]) # 12
                    fn1j = bm_1jjjjjjjjjjjj.verts.new([-vx14j,-vy14j,-vz14j]) # 13

                    fa1k = bm_1jjjjjjjjjjjjj.verts.new([-vx1k,-vy1k,-vz1k]) # 0
                    fb1k = bm_1jjjjjjjjjjjjj.verts.new([-vx2k,-vy2k,-vz2k]) # 1
                    fc1k = bm_1jjjjjjjjjjjjj.verts.new([-vx3k,-vy3k,-vz3k]) # 2
                    fd1k = bm_1jjjjjjjjjjjjj.verts.new([-vx4k,-vy4k,-vz4k]) # 3
                    fe1k = bm_1jjjjjjjjjjjjj.verts.new([-vx5k,-vy5k,-vz5k]) # 4
                    ff1k = bm_1jjjjjjjjjjjjj.verts.new([-vx6k,-vy6k,-vz6k]) # 5
                    fg1k = bm_1jjjjjjjjjjjjj.verts.new([-vx7k,-vy7k,-vz7k]) # 6
                    fh1k = bm_1jjjjjjjjjjjjj.verts.new([-vx8k,-vy8k,-vz8k]) # 7
                    fi1k = bm_1jjjjjjjjjjjjj.verts.new([-vx9k,-vy9k,-vz9k]) # 8
                    fj1k = bm_1jjjjjjjjjjjjj.verts.new([-vx10k,-vy10k,-vz10k]) # 9
                    fk1k = bm_1jjjjjjjjjjjjj.verts.new([-vx11k,-vy11k,-vz11k]) # 10
                    fl1k = bm_1jjjjjjjjjjjjj.verts.new([-vx12k,-vy12k,-vz12k]) # 11
                    fm1k = bm_1jjjjjjjjjjjjj.verts.new([-vx13k,-vy13k,-vz13k]) # 12
                    fn1k = bm_1jjjjjjjjjjjjj.verts.new([-vx14k,-vy14k,-vz14k]) # 13

                    fa1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx1l,-vy1l,-vz1l]) # 0
                    fb1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx2l,-vy2l,-vz2l]) # 1
                    fc1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx3l,-vy3l,-vz3l]) # 2
                    fd1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx4l,-vy4l,-vz4l]) # 3
                    fe1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx5l,-vy5l,-vz5l]) # 4
                    ff1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx6l,-vy6l,-vz6l]) # 5
                    fg1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx7l,-vy7l,-vz7l]) # 6
                    fh1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx8l,-vy8l,-vz8l]) # 7
                    fi1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx9l,-vy9l,-vz9l]) # 8
                    fj1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx10l,-vy10l,-vz10l]) # 9
                    fk1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx11l,-vy11l,-vz11l]) # 10
                    fl1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx12l,-vy12l,-vz12l]) # 11
                    fm1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx13l,-vy13l,-vz13l]) # 12
                    fn1l = bm_1jjjjjjjjjjjjjj.verts.new([-vx14l,-vy14l,-vz14l]) # 13

                    fa1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx1m,-vy1m,-vz1m]) # 0
                    fb1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx2m,-vy2m,-vz2m]) # 1
                    fc1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx3m,-vy3m,-vz3m]) # 2
                    fd1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx4m,-vy4m,-vz4m]) # 3
                    fe1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx5m,-vy5m,-vz5m]) # 4
                    ff1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx6m,-vy6m,-vz6m]) # 5
                    fg1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx7m,-vy7m,-vz7m]) # 6
                    fh1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx8m,-vy8m,-vz8m]) # 7
                    fi1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx9m,-vy9m,-vz9m]) # 8
                    fj1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx10m,-vy10m,-vz10m]) # 9
                    fk1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx11m,-vy11m,-vz11m]) # 10
                    fl1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx12m,-vy12m,-vz12m]) # 11
                    fm1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx13m,-vy13m,-vz13m]) # 12
                    fn1m = bm_1jjjjjjjjjjjjjjj.verts.new([-vx14m,-vy14m,-vz14m]) # 13

                    fa1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx1n,-vy1n,-vz1n]) # 0
                    fb1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx2n,-vy2n,-vz2n]) # 1
                    fc1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx3n,-vy3n,-vz3n]) # 2
                    fd1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx4n,-vy4n,-vz4n]) # 3
                    fe1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx5n,-vy5n,-vz5n]) # 4
                    ff1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx6n,-vy6n,-vz6n]) # 5
                    fg1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx7n,-vy7n,-vz7n]) # 6
                    fh1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx8n,-vy8n,-vz8n]) # 7
                    fi1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx9n,-vy9n,-vz9n]) # 8
                    fj1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx10n,-vy10n,-vz10n]) # 9
                    fk1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx11n,-vy11n,-vz11n]) # 10
                    fl1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx12n,-vy12n,-vz12n]) # 11
                    fm1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx13n,-vy13n,-vz13n]) # 12
                    fn1n = bm_1jjjjjjjjjjjjjjjj.verts.new([-vx14n,-vy14n,-vz14n]) # 13

                    fa1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx1o,-vy1o,-vz1o]) # 0
                    fb1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx2o,-vy2o,-vz2o]) # 1
                    fc1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx3o,-vy3o,-vz3o]) # 2
                    fd1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx4o,-vy4o,-vz4o]) # 3
                    fe1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx5o,-vy5o,-vz5o]) # 4
                    ff1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx6o,-vy6o,-vz6o]) # 5
                    fg1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx7o,-vy7o,-vz7o]) # 6
                    fh1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx8o,-vy8o,-vz8o]) # 7
                    fi1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx9o,-vy9o,-vz9o]) # 8
                    fj1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx10o,-vy10o,-vz10o]) # 9
                    fk1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx11o,-vy11o,-vz11o]) # 10
                    fl1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx12o,-vy12o,-vz12o]) # 11
                    fm1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx13o,-vy13o,-vz13o]) # 12
                    fn1o = bm_1jjjjjjjjjjjjjjjjj.verts.new([-vx14o,-vy14o,-vz14o]) # 13

                    fa1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx1p,-vy1p,-vz1p]) # 0
                    fb1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx2p,-vy2p,-vz2p]) # 1
                    fc1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx3p,-vy3p,-vz3p]) # 2
                    fd1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx4p,-vy4p,-vz4p]) # 3
                    fe1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx5p,-vy5p,-vz5p]) # 4
                    ff1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx6p,-vy6p,-vz6p]) # 5
                    fg1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx7p,-vy7p,-vz7p]) # 6
                    fh1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx8p,-vy8p,-vz8p]) # 7
                    fi1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx9p,-vy9p,-vz9p]) # 8
                    fj1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx10p,-vy10p,-vz10p]) # 9
                    fk1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx11p,-vy11p,-vz11p]) # 10
                    fl1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx12p,-vy12p,-vz12p]) # 11
                    fm1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx13p,-vy13p,-vz13p]) # 12
                    fn1p = bm_1jjjjjjjjjjjjjjjjjj.verts.new([-vx14p,-vy14p,-vz14p]) # 13

                    fa1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx1q,-vy1q,-vz1q]) # 0
                    fb1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx2q,-vy2q,-vz2q]) # 1
                    fc1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx3q,-vy3q,-vz3q]) # 2
                    fd1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx4q,-vy4q,-vz4q]) # 3
                    fe1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx5q,-vy5q,-vz5q]) # 4
                    ff1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx6q,-vy6q,-vz6q]) # 5
                    fg1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx7q,-vy7q,-vz7q]) # 6
                    fh1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx8q,-vy8q,-vz8q]) # 7
                    fi1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx9q,-vy9q,-vz9q]) # 8
                    fj1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx10q,-vy10q,-vz10q]) # 9
                    fk1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx11q,-vy11q,-vz11q]) # 10
                    fl1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx12q,-vy12q,-vz12q]) # 11
                    fm1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx13q,-vy13q,-vz13q]) # 12
                    fn1q = bm_1jjjjjjjjjjjjjjjjjjj.verts.new([-vx14q,-vy14q,-vz14q]) # 13

                    fa1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx1r,-vy1r,-vz1r]) # 0
                    fb1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx2r,-vy2r,-vz2r]) # 1
                    fc1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx3r,-vy3r,-vz3r]) # 2
                    fd1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx4r,-vy4r,-vz4r]) # 3
                    fe1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx5r,-vy5r,-vz5r]) # 4
                    ff1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx6r,-vy6r,-vz6r]) # 5
                    fg1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx7r,-vy7r,-vz7r]) # 6
                    fh1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx8r,-vy8r,-vz8r]) # 7
                    fi1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx9r,-vy9r,-vz9r]) # 8
                    fj1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx10r,-vy10r,-vz10r]) # 9
                    fk1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx11r,-vy11r,-vz11r]) # 10
                    fl1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx12r,-vy12r,-vz12r]) # 11
                    fm1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx13r,-vy13r,-vz13r]) # 12
                    fn1r = bm_1jjjjjjjjjjjjjjjjjjjj.verts.new([-vx14r,-vy14r,-vz14r]) # 13

                    fa1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1s,-vy1s,-vz1s]) # 0
                    fb1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2s,-vy2s,-vz2s]) # 1
                    fc1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3s,-vy3s,-vz3s]) # 2
                    fd1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4s,-vy4s,-vz4s]) # 3
                    fe1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5s,-vy5s,-vz5s]) # 4
                    ff1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6s,-vy6s,-vz6s]) # 5
                    fg1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7s,-vy7s,-vz7s]) # 6
                    fh1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8s,-vy8s,-vz8s]) # 7
                    fi1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9s,-vy9s,-vz9s]) # 8
                    fj1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10s,-vy10s,-vz10s]) # 9
                    fk1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11s,-vy11s,-vz11s]) # 10
                    fl1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12s,-vy12s,-vz12s]) # 11
                    fm1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13s,-vy13s,-vz13s]) # 12
                    fn1s = bm_1jjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14s,-vy14s,-vz14s]) # 13

                    fa1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1t,-vy1t,-vz1t]) # 0
                    fb1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2t,-vy2t,-vz2t]) # 1
                    fc1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3t,-vy3t,-vz3t]) # 2
                    fd1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4t,-vy4t,-vz4t]) # 3
                    fe1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5t,-vy5t,-vz5t]) # 4
                    ff1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6t,-vy6t,-vz6t]) # 5
                    fg1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7t,-vy7t,-vz7t]) # 6
                    fh1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8t,-vy8t,-vz8t]) # 7
                    fi1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9t,-vy9t,-vz9t]) # 8
                    fj1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10t,-vy10t,-vz10t]) # 9
                    fk1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11t,-vy11t,-vz11t]) # 10
                    fl1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12t,-vy12t,-vz12t]) # 11
                    fm1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13t,-vy13t,-vz13t]) # 12
                    fn1t = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14t,-vy14t,-vz14t]) # 13

                    fa1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1u,-vy1u,-vz1u]) # 0
                    fb1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2u,-vy2u,-vz2u]) # 1
                    fc1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3u,-vy3u,-vz3u]) # 2
                    fd1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4u,-vy4u,-vz4u]) # 3
                    fe1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5u,-vy5u,-vz5u]) # 4
                    ff1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6u,-vy6u,-vz6u]) # 5
                    fg1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7u,-vy7u,-vz7u]) # 6
                    fh1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8u,-vy8u,-vz8u]) # 7
                    fi1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9u,-vy9u,-vz9u]) # 8
                    fj1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10u,-vy10u,-vz10u]) # 9
                    fk1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11u,-vy11u,-vz11u]) # 10
                    fl1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12u,-vy12u,-vz12u]) # 11
                    fm1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13u,-vy13u,-vz13u]) # 12
                    fn1u = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14u,-vy14u,-vz14u]) # 13

                    fa1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1v,-vy1v,-vz1v]) # 0
                    fb1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2v,-vy2v,-vz2v]) # 1
                    fc1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3v,-vy3v,-vz3v]) # 2
                    fd1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4v,-vy4v,-vz4v]) # 3
                    fe1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5v,-vy5v,-vz5v]) # 4
                    ff1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6v,-vy6v,-vz6v]) # 5
                    fg1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7v,-vy7v,-vz7v]) # 6
                    fh1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8v,-vy8v,-vz8v]) # 7
                    fi1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9v,-vy9v,-vz9v]) # 8
                    fj1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10v,-vy10v,-vz10v]) # 9
                    fk1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11v,-vy11v,-vz11v]) # 10
                    fl1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12v,-vy12v,-vz12v]) # 11
                    fm1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13v,-vy13v,-vz13v]) # 12
                    fn1v = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14v,-vy14v,-vz14v]) # 13

                    fa1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1w,-vy1w,-vz1w]) # 0
                    fb1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2w,-vy2w,-vz2w]) # 1
                    fc1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3w,-vy3w,-vz3w]) # 2
                    fd1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4w,-vy4w,-vz4w]) # 3
                    fe1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5w,-vy5w,-vz5w]) # 4
                    ff1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6w,-vy6w,-vz6w]) # 5
                    fg1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7w,-vy7w,-vz7w]) # 6
                    fh1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8w,-vy8w,-vz8w]) # 7
                    fi1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9w,-vy9w,-vz9w]) # 8
                    fj1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10w,-vy10w,-vz10w]) # 9
                    fk1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11w,-vy11w,-vz11w]) # 10
                    fl1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12w,-vy12w,-vz12w]) # 11
                    fm1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13w,-vy13w,-vz13w]) # 12
                    fn1w = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14w,-vy14w,-vz14w]) # 13

                    fa1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1x,-vy1x,-vz1x]) # 0
                    fb1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2x,-vy2x,-vz2x]) # 1
                    fc1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3x,-vy3x,-vz3x]) # 2
                    fd1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4x,-vy4x,-vz4x]) # 3
                    fe1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5x,-vy5x,-vz5x]) # 4
                    ff1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6x,-vy6x,-vz6x]) # 5
                    fg1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7x,-vy7x,-vz7x]) # 6
                    fh1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8x,-vy8x,-vz8x]) # 7
                    fi1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9x,-vy9x,-vz9x]) # 8
                    fj1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10x,-vy10x,-vz10x]) # 9
                    fk1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11x,-vy11x,-vz11x]) # 10
                    fl1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12x,-vy12x,-vz12x]) # 11
                    fm1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13x,-vy13x,-vz13x]) # 12
                    fn1x = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14x,-vy14x,-vz14x]) # 13

                    fa1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1y,-vy1y,-vz1y]) # 0
                    fb1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2y,-vy2y,-vz2y]) # 1
                    fc1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3y,-vy3y,-vz3y]) # 2
                    fd1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4y,-vy4y,-vz4y]) # 3
                    fe1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5y,-vy5y,-vz5y]) # 4
                    ff1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6y,-vy6y,-vz6y]) # 5
                    fg1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7y,-vy7y,-vz7y]) # 6
                    fh1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8y,-vy8y,-vz8y]) # 7
                    fi1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9y,-vy9y,-vz9y]) # 8
                    fj1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10y,-vy10y,-vz10y]) # 9
                    fk1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11y,-vy11y,-vz11y]) # 10
                    fl1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12y,-vy12y,-vz12y]) # 11
                    fm1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13y,-vy13y,-vz13y]) # 12
                    fn1y = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14y,-vy14y,-vz14y]) # 13

                    fa1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1z,-vy1z,-vz1z]) # 0
                    fb1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2z,-vy2z,-vz2z]) # 1
                    fc1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3z,-vy3z,-vz3z]) # 2
                    fd1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4z,-vy4z,-vz4z]) # 3
                    fe1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5z,-vy5z,-vz5z]) # 4
                    ff1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6z,-vy6z,-vz6z]) # 5
                    fg1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7z,-vy7z,-vz7z]) # 6
                    fh1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8z,-vy8z,-vz8z]) # 7
                    fi1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9z,-vy9z,-vz9z]) # 8
                    fj1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10z,-vy10z,-vz10z]) # 9
                    fk1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11z,-vy11z,-vz11z]) # 10
                    fl1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12z,-vy12z,-vz12z]) # 11
                    fm1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13z,-vy13z,-vz13z]) # 12
                    fn1z = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14z,-vy14z,-vz14z]) # 13

                    fa1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1aa,-vy1aa,-vz1aa]) # 0
                    fb1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2aa,-vy2aa,-vz2aa]) # 1
                    fc1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3aa,-vy3aa,-vz3aa]) # 2
                    fd1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4aa,-vy4aa,-vz4aa]) # 3
                    fe1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5aa,-vy5aa,-vz5aa]) # 4
                    ff1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6aa,-vy6aa,-vz6aa]) # 5
                    fg1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7aa,-vy7aa,-vz7aa]) # 6
                    fh1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8aa,-vy8aa,-vz8aa]) # 7
                    fi1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9aa,-vy9aa,-vz9aa]) # 8
                    fj1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10aa,-vy10aa,-vz10aa]) # 9
                    fk1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11aa,-vy11aa,-vz11aa]) # 10
                    fl1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12aa,-vy12aa,-vz12aa]) # 11
                    fm1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13aa,-vy13aa,-vz13aa]) # 12
                    fn1aa = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14aa,-vy14aa,-vz14aa]) # 13

                    fa1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ab,-vy1ab,-vz1ab]) # 0
                    fb1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ab,-vy2ab,-vz2ab]) # 1
                    fc1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ab,-vy3ab,-vz3ab]) # 2
                    fd1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ab,-vy4ab,-vz4ab]) # 3
                    fe1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ab,-vy5ab,-vz5ab]) # 4
                    ff1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ab,-vy6ab,-vz6ab]) # 5
                    fg1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ab,-vy7ab,-vz7ab]) # 6
                    fh1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ab,-vy8ab,-vz8ab]) # 7
                    fi1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ab,-vy9ab,-vz9ab]) # 8
                    fj1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ab,-vy10ab,-vz10ab]) # 9
                    fk1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ab,-vy11ab,-vz11ab]) # 10
                    fl1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ab,-vy12ab,-vz12ab]) # 11
                    fm1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ab,-vy13ab,-vz13ab]) # 12
                    fn1ab = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ab,-vy14ab,-vz14ab]) # 13

                    fa1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ac,-vy1ac,-vz1ac]) # 0
                    fb1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ac,-vy2ac,-vz2ac]) # 1
                    fc1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ac,-vy3ac,-vz3ac]) # 2
                    fd1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ac,-vy4ac,-vz4ac]) # 3
                    fe1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ac,-vy5ac,-vz5ac]) # 4
                    ff1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ac,-vy6ac,-vz6ac]) # 5
                    fg1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ac,-vy7ac,-vz7ac]) # 6
                    fh1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ac,-vy8ac,-vz8ac]) # 7
                    fi1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ac,-vy9ac,-vz9ac]) # 8
                    fj1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ac,-vy10ac,-vz10ac]) # 9
                    fk1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ac,-vy11ac,-vz11ac]) # 10
                    fl1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ac,-vy12ac,-vz12ac]) # 11
                    fm1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ac,-vy13ac,-vz13ac]) # 12
                    fn1ac = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ac,-vy14ac,-vz14ac]) # 13

                    fa1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ad,-vy1ad,-vz1ad]) # 0
                    fb1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ad,-vy2ad,-vz2ad]) # 1
                    fc1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ad,-vy3ad,-vz3ad]) # 2
                    fd1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ad,-vy4ad,-vz4ad]) # 3
                    fe1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ad,-vy5ad,-vz5ad]) # 4
                    ff1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ad,-vy6ad,-vz6ad]) # 5
                    fg1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ad,-vy7ad,-vz7ad]) # 6
                    fh1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ad,-vy8ad,-vz8ad]) # 7
                    fi1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ad,-vy9ad,-vz9ad]) # 8
                    fj1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ad,-vy10ad,-vz10ad]) # 9
                    fk1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ad,-vy11ad,-vz11ad]) # 10
                    fl1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ad,-vy12ad,-vz12ad]) # 11
                    fm1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ad,-vy13ad,-vz13ad]) # 12
                    fn1ad = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ad,-vy14ad,-vz14ad]) # 13

                    fa1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ae,-vy1ae,-vz1ae]) # 0
                    fb1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ae,-vy2ae,-vz2ae]) # 1
                    fc1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ae,-vy3ae,-vz3ae]) # 2
                    fd1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ae,-vy4ae,-vz4ae]) # 3
                    fe1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ae,-vy5ae,-vz5ae]) # 4
                    ff1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ae,-vy6ae,-vz6ae]) # 5
                    fg1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ae,-vy7ae,-vz7ae]) # 6
                    fh1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ae,-vy8ae,-vz8ae]) # 7
                    fi1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ae,-vy9ae,-vz9ae]) # 8
                    fj1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ae,-vy10ae,-vz10ae]) # 9
                    fk1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ae,-vy11ae,-vz11ae]) # 10
                    fl1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ae,-vy12ae,-vz12ae]) # 11
                    fm1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ae,-vy13ae,-vz13ae]) # 12
                    fn1ae = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ae,-vy14ae,-vz14ae]) # 13

                    fa1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1af,-vy1af,-vz1af]) # 0
                    fb1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2af,-vy2af,-vz2af]) # 1
                    fc1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3af,-vy3af,-vz3af]) # 2
                    fd1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4af,-vy4af,-vz4af]) # 3
                    fe1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5af,-vy5af,-vz5af]) # 4
                    ff1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6af,-vy6af,-vz6af]) # 5
                    fg1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7af,-vy7af,-vz7af]) # 6
                    fh1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8af,-vy8af,-vz8af]) # 7
                    fi1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9af,-vy9af,-vz9af]) # 8
                    fj1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10af,-vy10af,-vz10af]) # 9
                    fk1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11af,-vy11af,-vz11af]) # 10
                    fl1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12af,-vy12af,-vz12af]) # 11
                    fm1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13af,-vy13af,-vz13af]) # 12
                    fn1af = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14af,-vy14af,-vz14af]) # 13

                    fa1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ag,-vy1ag,-vz1ag]) # 0
                    fb1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ag,-vy2ag,-vz2ag]) # 1
                    fc1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ag,-vy3ag,-vz3ag]) # 2
                    fd1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ag,-vy4ag,-vz4ag]) # 3
                    fe1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ag,-vy5ag,-vz5ag]) # 4
                    ff1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ag,-vy6ag,-vz6ag]) # 5
                    fg1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ag,-vy7ag,-vz7ag]) # 6
                    fh1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ag,-vy8ag,-vz8ag]) # 7
                    fi1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ag,-vy9ag,-vz9ag]) # 8
                    fj1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ag,-vy10ag,-vz10ag]) # 9
                    fk1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ag,-vy11ag,-vz11ag]) # 10
                    fl1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ag,-vy12ag,-vz12ag]) # 11
                    fm1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ag,-vy13ag,-vz13ag]) # 12
                    fn1ag = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ag,-vy14ag,-vz14ag]) # 13

                    fa1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ah,-vy1ah,-vz1ah]) # 0
                    fb1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ah,-vy2ah,-vz2ah]) # 1
                    fc1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ah,-vy3ah,-vz3ah]) # 2
                    fd1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ah,-vy4ah,-vz4ah]) # 3
                    fe1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ah,-vy5ah,-vz5ah]) # 4
                    ff1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ah,-vy6ah,-vz6ah]) # 5
                    fg1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ah,-vy7ah,-vz7ah]) # 6
                    fh1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ah,-vy8ah,-vz8ah]) # 7
                    fi1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ah,-vy9ah,-vz9ah]) # 8
                    fj1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ah,-vy10ah,-vz10ah]) # 9
                    fk1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ah,-vy11ah,-vz11ah]) # 10
                    fl1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ah,-vy12ah,-vz12ah]) # 11
                    fm1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ah,-vy13ah,-vz13ah]) # 12
                    fn1ah = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ah,-vy14ah,-vz14ah]) # 13

                    fa1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1ai,-vy1ai,-vz1ai]) # 0
                    fb1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2ai,-vy2ai,-vz2ai]) # 1
                    fc1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3ai,-vy3ai,-vz3ai]) # 2
                    fd1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4ai,-vy4ai,-vz4ai]) # 3
                    fe1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5ai,-vy5ai,-vz5ai]) # 4
                    ff1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6ai,-vy6ai,-vz6ai]) # 5
                    fg1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7ai,-vy7ai,-vz7ai]) # 6
                    fh1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8ai,-vy8ai,-vz8ai]) # 7
                    fi1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9ai,-vy9ai,-vz9ai]) # 8
                    fj1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10ai,-vy10ai,-vz10ai]) # 9
                    fk1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11ai,-vy11ai,-vz11ai]) # 10
                    fl1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12ai,-vy12ai,-vz12ai]) # 11
                    fm1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13ai,-vy13ai,-vz13ai]) # 12
                    fn1ai = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14ai,-vy14ai,-vz14ai]) # 13

                    fa1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx1aj,-vy1aj,-vz1aj]) # 0
                    fb1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx2aj,-vy2aj,-vz2aj]) # 1
                    fc1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx3aj,-vy3aj,-vz3aj]) # 2
                    fd1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx4aj,-vy4aj,-vz4aj]) # 3
                    fe1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx5aj,-vy5aj,-vz5aj]) # 4
                    ff1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx6aj,-vy6aj,-vz6aj]) # 5
                    fg1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx7aj,-vy7aj,-vz7aj]) # 6
                    fh1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx8aj,-vy8aj,-vz8aj]) # 7
                    fi1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx9aj,-vy9aj,-vz9aj]) # 8
                    fj1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx10aj,-vy10aj,-vz10aj]) # 9
                    fk1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx11aj,-vy11aj,-vz11aj]) # 10
                    fl1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx12aj,-vy12aj,-vz12aj]) # 11
                    fm1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx13aj,-vy13aj,-vz13aj]) # 12
                    fn1aj = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts.new([-vx14aj,-vy14aj,-vz14aj]) # 13

                    if type1aj == 1:
                        if type2aj == 1:
                            if type3aj == 0:
                                if type4aj == 1:
                                    if type5aj == 1:
                                        if type6aj == 0:
                                            if type7aj == 0:
                                                if type8aj == 1:
                                                    if type9aj == 1:
                                                        if type10aj == 0:
                                                            if type11aj == 0:
                                                                if type12aj == 1:
                                                                    if type13aj == 1:
                                                                        if type14aj == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1aj,fb1aj,fc1aj])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1aj,fe1aj,ff1aj])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1aj,ff1aj,fg1aj])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1aj,fi1aj,fj1aj])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1aj,fj1aj,fk1aj])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1aj,fm1aj,fn1aj])

                    if type1ai == 1:
                        if type2ai == 1:
                            if type3ai == 0:
                                if type4ai == 1:
                                    if type5ai == 1:
                                        if type6ai == 0:
                                            if type7ai == 0:
                                                if type8ai == 1:
                                                    if type9ai == 1:
                                                        if type10ai == 0:
                                                            if type11ai == 1:
                                                                if type12ai == 1:
                                                                    if type13ai == 0:
                                                                        if type14ai == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ai,fb1ai,fc1ai])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1ai,fe1ai,ff1ai])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1ai,ff1ai,fg1ai])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1ai,fi1ai,fj1ai])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1ai,fl1ai,fm1ai])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ai,fm1ai,fn1ai])

                    if type1ah == 1:
                        if type2ah == 1:
                            if type3ah == 0:
                                if type4ah == 0:
                                    if type5ah == 1:
                                        if type6ah == 1:
                                            if type7ah == 0:
                                                if type8ah == 1:
                                                    if type9ah == 1:
                                                        if type10ah == 0:
                                                            if type11ah == 0:
                                                                if type12ah == 1:
                                                                    if type13ah == 1:
                                                                        if type14ah == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ah,fb1ah,fc1ah])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1ah,fc1ah,fd1ah])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1ah,ff1ah,fg1ah])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1ah,fi1ah,fj1ah])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1ah,fj1ah,fk1ah])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ah,fm1ah,fn1ah])

                    if type1ag == 1:
                        if type2ag == 1:
                            if type3ag == 0:
                                if type4ag == 0:
                                    if type5ag == 1:
                                        if type6ag == 1:
                                            if type7ag == 0:
                                                if type8ag == 1:
                                                    if type9ag == 1:
                                                        if type10ag == 0:
                                                            if type11ag == 1:
                                                                if type12ag == 1:
                                                                    if type13ag == 0:
                                                                        if type14ag == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ag,fb1ag,fc1ag])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1ag,fc1ag,fd1ag])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1ag,ff1ag,fg1ag])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1ag,fi1ag,fj1ag])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1ag,fl1ag,fm1ag])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ag,fm1ag,fn1ag])

                    if type1af == 1:
                        if type2af == 1:
                            if type3af == 0:
                                if type4af == 1:
                                    if type5af == 1:
                                        if type6af == 0:
                                            if type7af == 1:
                                                if type8af == 1:
                                                    if type9af == 0:
                                                        if type10af == 0:
                                                            if type11af == 0:
                                                                if type12af == 1:
                                                                    if type13af == 1:
                                                                        if type14af == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1af,fb1af,fc1af])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1af,fe1af,ff1af])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1af,fh1af,fi1af])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1af,fi1af,fj1af])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1af,fl1af,fm1af])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1af,fm1af,fn1af])

                    if type1ae == 1:
                        if type2ae == 1:
                            if type3ae == 0:
                                if type4ae == 1:
                                    if type5ae == 1:
                                        if type6ae == 0:
                                            if type7ae == 1:
                                                if type8ae == 1:
                                                    if type9ae == 0:
                                                        if type10ae == 0:
                                                            if type11ae == 1:
                                                                if type12ae == 1:
                                                                    if type13ae == 0:
                                                                        if type14ae == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ae,fb1ae,fc1ae])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1ae,fe1ae,ff1ae])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1ae,fh1ae,fi1ae])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1ae,fi1ae,fj1ae])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1ae,fl1ae,fm1ae])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ae,fm1ae,fn1ae])

                    if type1ad == 1:
                        if type2ad == 1:
                            if type3ad == 0:
                                if type4ad == 1:
                                    if type5ad == 1:
                                        if type6ad == 0:
                                            if type7ad == 1:
                                                if type8ad == 1:
                                                    if type9ad == 0:
                                                        if type10ad == 1:
                                                            if type11ad == 1:
                                                                if type12ad == 0:
                                                                    if type13ad == 0:
                                                                        if type14ad == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ad,fb1ad,fc1ad])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1ad,fe1ad,ff1ad])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1ad,fh1ad,fi1ad])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fj1ad,fk1ad,fl1ad])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1ad,fl1ad,fm1ad])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ad,fm1ad,fn1ad])

                    if type1ac == 1:
                        if type2ac == 1:
                            if type3ac == 0:
                                if type4ac == 0:
                                    if type5ac == 0:
                                        if type6ac == 0:
                                            if type7ac == 0:
                                                if type8ac == 0:
                                                    if type9ac == 1:
                                                        if type10ac == 1:
                                                            if type11ac == 0:
                                                                if type12ac == 1:
                                                                    if type13ac == 1:
                                                                        if type14ac == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ac,fb1ac,fc1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1ac,fc1ac,fd1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1ac,fd1ac,fe1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1ac,fe1ac,ff1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1ac,ff1ac,fg1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([ff1ac,fg1ac,fh1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1ac,fj1ac,fk1ac])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ac,fm1ac,fn1ac])

                    if type1ab == 1:
                        if type2ab == 1:
                            if type3ab == 0:
                                if type4ab == 0:
                                    if type5ab == 0:
                                        if type6ab == 0:
                                            if type7ab == 0:
                                                if type8ab == 1:
                                                    if type9ab == 1:
                                                        if type10ab == 0:
                                                            if type11ab == 0:
                                                                if type12ab == 1:
                                                                    if type13ab == 1:
                                                                        if type14ab == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1ab,fb1ab,fc1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1ab,fc1ab,fd1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1ab,fd1ab,fe1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1ab,fe1ab,ff1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1ab,ff1ab,fg1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1ab,fi1ab,fj1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1ab,fj1ab,fk1ab])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1ab,fm1ab,fn1ab])

                    if type1aa == 1:
                        if type2aa == 1:
                            if type3aa == 0:
                                if type4aa == 0:
                                    if type5aa == 0:
                                        if type6aa == 0:
                                            if type7aa == 0:
                                                if type8aa == 1:
                                                    if type9aa == 1:
                                                        if type10aa == 0:
                                                            if type11aa == 1:
                                                                if type12aa == 1:
                                                                    if type13aa == 0:
                                                                        if type14aa == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1aa,fb1aa,fc1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1aa,fc1aa,fd1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1aa,fd1aa,fe1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1aa,fe1aa,ff1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1aa,ff1aa,fg1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1aa,fi1aa,fj1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1aa,fl1aa,fm1aa])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1aa,fm1aa,fn1aa])

                    if type1z == 1:
                        if type2z == 1:
                            if type3z == 0:
                                if type4z == 0:
                                    if type5z == 0:
                                        if type6z == 0:
                                            if type7z == 1:
                                                if type8z == 1:
                                                    if type9z == 0:
                                                        if type10z == 0:
                                                            if type11z == 0:
                                                                if type12z == 1:
                                                                    if type13z == 1:
                                                                        if type14z == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1z,fb1z,fc1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1z,fc1z,fd1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1z,fd1z,fe1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1z,fe1z,ff1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1z,fh1z,fi1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1z,fi1z,fj1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1z,fj1z,fk1z])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1z,fm1z,fn1z])

                    if type1y == 1:
                        if type2y == 1:
                            if type3y == 0:
                                if type4y == 0:
                                    if type5y == 0:
                                        if type6y == 0:
                                            if type7y == 1:
                                                if type8y == 1:
                                                    if type9y == 0:
                                                        if type10y == 0:
                                                            if type11y == 1:
                                                                if type12y == 1:
                                                                    if type13y == 0:
                                                                        if type14y == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1y,fb1y,fc1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1y,fc1y,fd1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1y,fd1y,fe1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fd1y,fe1y,ff1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1y,fh1y,fi1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1y,fi1y,fj1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1y,fl1y,fm1y])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1y,fm1y,fn1y])

                    if type1x == 1:
                        if type2x == 1:
                            if type3x == 0:
                                if type4x == 0:
                                    if type5x == 0:
                                        if type6x == 1:
                                            if type7x == 1:
                                                if type8x == 0:
                                                    if type9x == 0:
                                                        if type10x == 0:
                                                            if type11x == 0:
                                                                if type12x == 1:
                                                                    if type13x == 1:
                                                                        if type14x == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1x,fb1x,fc1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1x,fc1x,fd1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1x,fd1x,fe1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([ff1x,fg1x,fh1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1x,fh1x,fi1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1x,fi1x,fj1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1x,fj1x,fk1x])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1x,fm1x,fn1x])

                    if type1w == 1:
                        if type2w == 1:
                            if type3w == 0:
                                if type4w == 0:
                                    if type5w == 0:
                                        if type6w == 1:
                                            if type7w == 1:
                                                if type8w == 0:
                                                    if type9w == 0:
                                                        if type10w == 0:
                                                            if type11w == 1:
                                                                if type12w == 1:
                                                                    if type13w == 0:
                                                                        if type14w == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1w,fb1w,fc1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1w,fc1w,fd1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1w,fd1w,fe1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([ff1w,fg1w,fh1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1w,fh1w,fi1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1w,fi1w,fj1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1w,fl1w,fm1w])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1w,fm1w,fn1w])

                    if type1v == 1:
                        if type2v == 1:
                            if type3v == 0:
                                if type4v == 0:
                                    if type5v == 0:
                                        if type6v == 1:
                                            if type7v == 1:
                                                if type8v == 0:
                                                    if type9v == 0:
                                                        if type10v == 1:
                                                            if type11v == 1:
                                                                if type12v == 0:
                                                                    if type13v == 0:
                                                                        if type14v == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1v,fb1v,fc1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1v,fc1v,fd1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1v,fd1v,fe1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([ff1v,fg1v,fh1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1v,fh1v,fi1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fj1v,fk1v,fl1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1v,fl1v,fm1v])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1v,fm1v,fn1v])

                    if type1u == 1:
                        if type2u == 1:
                            if type3u == 0:
                                if type4u == 0:
                                    if type5u == 0:
                                        if type6u == 1:
                                            if type7u == 1:
                                                if type8u == 0:
                                                    if type9u == 1:
                                                        if type10u == 1:
                                                            if type11u == 0:
                                                                if type12u == 0:
                                                                    if type13u == 0:
                                                                        if type14u == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1u,fb1u,fc1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1u,fc1u,fd1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fc1u,fd1u,fe1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([ff1u,fg1u,fh1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1u,fj1u,fk1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fj1u,fk1u,fl1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fk1u,fl1u,fm1u])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1u,fm1u,fn1u])

                    if type1t == 1:
                        if type2t == 1:
                            if type3t == 0:
                                if type4t == 0:
                                    if type5t == 1:
                                        if type6t == 1:
                                            if type7t == 0:
                                                if type8t == 0:
                                                    if type9t == 0:
                                                        if type10t == 0:
                                                            if type11t == 0:
                                                                if type12t == 1:
                                                                    if type13t == 1:
                                                                        if type14t == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fa1t,fb1t,fc1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fb1t,fc1t,fd1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fe1t,ff1t,fg1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([ff1t,fg1t,fh1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fg1t,fh1t,fi1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fh1t,fi1t,fj1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fi1t,fj1t,fk1t])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjjj.faces.new([fl1t,fm1t,fn1t])

                    if type1s == 1:
                        if type2s == 1:
                            if type3s == 0:
                                if type4s == 0:
                                    if type5s == 1:
                                        if type6s == 1:
                                            if type7s == 0:
                                                if type8s == 0:
                                                    if type9s == 0:
                                                        if type10s == 0:
                                                            if type11s == 1:
                                                                if type12s == 1:
                                                                    if type13s == 0:
                                                                        if type14s == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fa1s,fb1s,fc1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fb1s,fc1s,fd1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fe1s,ff1s,fg1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([ff1s,fg1s,fh1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fg1s,fh1s,fi1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fh1s,fi1s,fj1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fk1s,fl1s,fm1s])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjjj.faces.new([fl1s,fm1s,fn1s])

                    if type1r == 1:
                        if type2r == 1:
                            if type3r == 0:
                                if type4r == 0:
                                    if type5r == 1:
                                        if type6r == 1:
                                            if type7r == 0:
                                                if type8r == 0:
                                                    if type9r == 0:
                                                        if type10r == 1:
                                                            if type11r == 1:
                                                                if type12r == 0:
                                                                    if type13r == 0:
                                                                        if type14r == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fa1r,fb1r,fc1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fb1r,fc1r,fd1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fe1r,ff1r,fg1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([ff1r,fg1r,fh1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fg1r,fh1r,fi1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fj1r,fk1r,fl1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fk1r,fl1r,fm1r])
                                                                            bm_1jjjjjjjjjjjjjjjjjjjj.faces.new([fl1r,fm1r,fn1r])

                    if type1q == 1:
                        if type2q == 1:
                            if type3q == 0:
                                if type4q == 0:
                                    if type5q == 1:
                                        if type6q == 1:
                                            if type7q == 0:
                                                if type8q == 0:
                                                    if type9q == 1:
                                                        if type10q == 1:
                                                            if type11q == 0:
                                                                if type12q == 0:
                                                                    if type13q == 0:
                                                                        if type14q == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fa1q,fb1q,fc1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fb1q,fc1q,fd1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fe1q,ff1q,fg1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([ff1q,fg1q,fh1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fi1q,fj1q,fk1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fj1q,fk1q,fl1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fk1q,fl1q,fm1q])
                                                                            bm_1jjjjjjjjjjjjjjjjjjj.faces.new([fl1q,fm1q,fn1q])

                    if type1p == 1:
                        if type2p == 1:
                            if type3p == 0:
                                if type4p == 0:
                                    if type5p == 1:
                                        if type6p == 1:
                                            if type7p == 0:
                                                if type8p == 1:
                                                    if type9p == 1:
                                                        if type10p == 0:
                                                            if type11p == 0:
                                                                if type12p == 0:
                                                                    if type13p == 0:
                                                                        if type14p == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fa1p,fb1p,fc1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fb1p,fc1p,fd1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fe1p,ff1p,fg1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fh1p,fi1p,fj1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fi1p,fj1p,fk1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fj1p,fk1p,fl1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fk1p,fl1p,fm1p])
                                                                            bm_1jjjjjjjjjjjjjjjjjj.faces.new([fl1p,fm1p,fn1p])

                    if type1o == 1:
                        if type2o == 1:
                            if type3o == 0:
                                if type4o == 1:
                                    if type5o == 1:
                                        if type6o == 0:
                                            if type7o == 0:
                                                if type8o == 0:
                                                    if type9o == 0:
                                                        if type10o == 0:
                                                            if type11o == 0:
                                                                if type12o == 1:
                                                                    if type13o == 1:
                                                                        if type14o == 0:
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fa1o,fb1o,fc1o])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fd1o,fe1o,ff1o])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fe1o,ff1o,fg1o])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([ff1o,fg1o,fh1o])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fg1o,fh1o,filo])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fh1o,fi1o,fj1o])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fk1o,fl1o,fm1o])
                                                                            bm_1jjjjjjjjjjjjjjjjj.faces.new([fl1o,fm1o,fn1o])

                    if type1n == 1:
                        if type2n == 1:
                            if type3n == 0:
                                if type4n == 1:
                                    if type5n == 1:
                                        if type6n == 0:
                                            if type7n == 0:
                                                if type8n == 0:
                                                    if type9n == 0:
                                                        if type10n == 0:
                                                            if type11n == 1:
                                                                if type12n == 1:
                                                                    if type13n == 0:
                                                                        if type14n == 0:
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fa1n,fb1n,fc1n])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fd1n,fe1n,ff1n])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fe1n,ff1n,fg1n])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([ff1n,fg1n,fh1n])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fg1n,fh1n,filn])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fh1n,fi1n,fj1n])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fk1n,fl1n,fm1n])
                                                                            bm_1jjjjjjjjjjjjjjjj.faces.new([fl1n,fm1n,fn1n])

                    if type1m == 1:
                        if type2m == 1:
                            if type3m == 0:
                                if type4m == 1:
                                    if type5m == 1:
                                        if type6m == 0:
                                            if type7m == 0:
                                                if type8m == 0:
                                                    if type9m == 0:
                                                        if type10m == 1:
                                                            if type11m == 1:
                                                                if type12m == 0:
                                                                    if type13m == 0:
                                                                        if type14m == 0:
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fa1m,fb1m,fc1m])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fd1m,fe1m,ff1m])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fe1m,ff1m,fg1m])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([ff1m,fg1m,fh1m])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fg1m,fh1m,film])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fj1m,fk1m,fl1m])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fk1m,fl1m,fm1m])
                                                                            bm_1jjjjjjjjjjjjjjj.faces.new([fl1m,fm1m,fn1m])

                    if type1l == 1:
                        if type2l == 1:
                            if type3l == 0:
                                if type4l == 1:
                                    if type5l == 1:
                                        if type6l == 0:
                                            if type7l == 0:
                                                if type8l == 0:
                                                    if type9l == 1:
                                                        if type10l == 1:
                                                            if type11l == 0:
                                                                if type12l == 0:
                                                                    if type13l == 0:
                                                                        if type14l == 0:
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fa1l,fb1l,fc1l])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fd1l,fe1l,ff1l])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fe1l,ff1l,fg1l])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([ff1l,fg1l,fh1l])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fi1l,fj1l,fkll])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fj1l,fk1l,fl1l])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fk1l,fl1l,fm1l])
                                                                            bm_1jjjjjjjjjjjjjj.faces.new([fl1l,fm1l,fn1l])

                    if type1k == 1:
                        if type2k == 1:
                            if type3k == 0:
                                if type4k == 1:
                                    if type5k == 1:
                                        if type6k == 0:
                                            if type7k == 0:
                                                if type8k == 1:
                                                    if type9k == 1:
                                                        if type10k == 0:
                                                            if type11k == 0:
                                                                if type12k == 0:
                                                                    if type13k == 0:
                                                                        if type14k == 0:
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fa1k,fb1k,fc1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fd1k,fe1k,ff1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fe1k,ff1k,fg1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fh1k,fi1k,fj1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fi1k,fj1k,fk1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fj1k,fk1k,fl1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fk1k,fl1k,fm1k])
                                                                            bm_1jjjjjjjjjjjjj.faces.new([fl1k,fm1k,fn1k])

                    if type1j == 1:
                        if type2j == 1:
                            if type3j == 0:
                                if type4j == 1:
                                    if type5j == 1:
                                        if type6j == 0:
                                            if type7j == 1:
                                                if type8j == 1:
                                                    if type9j == 0:
                                                        if type10j == 0:
                                                            if type11j == 0:
                                                                if type12j == 0:
                                                                    if type13j == 0:
                                                                        if type14j == 0:
                                                                            bm_1jjjjjjjjjjjj.faces.new([fa1j,fb1j,fc1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fd1j,fe1j,ff1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fg1j,fh1j,fi1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fh1j,fi1j,fj1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fi1j,fj1j,fk1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fj1j,fk1j,fl1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fk1j,fl1j,fm1j])
                                                                            bm_1jjjjjjjjjjjj.faces.new([fl1j,fm1j,fn1j])

                    if type1i == 1:
                        if type2i == 1:
                            if type3i == 0:
                                if type4i == 0:
                                    if type5i == 0:
                                        if type6i == 0:
                                            if type7i == 0:
                                                if type8i == 0:
                                                    if type9i == 0:
                                                        if type10i == 0:
                                                            if type11i == 0:
                                                                if type12i == 1:
                                                                    if type13i == 1:
                                                                        if type14i == 0:
                                                                            bm_1jjjjjjjjjjj.faces.new([fa1i,fb1i,fc1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fb1i,fc1i,fd1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fc1i,fd1i,fe1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fd1i,fe1i,ff1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fe1i,ff1i,fg1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([ff1i,fg1i,fh1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fg1i,fh1i,fi1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fh1i,fi1i,fj1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fi1i,fj1i,fk1i])
                                                                            bm_1jjjjjjjjjjj.faces.new([fl1i,fm1i,fn1i])

                    if type1h == 1:
                        if type2h == 1:
                            if type3h == 0:
                                if type4h == 0:
                                    if type5h == 0:
                                        if type6h == 0:
                                            if type7h == 0:
                                                if type8h == 0:
                                                    if type9h == 0:
                                                        if type10h == 0:
                                                            if type11h == 1:
                                                                if type12h == 1:
                                                                    if type13h == 0:
                                                                        if type14h == 0:
                                                                            bm_1jjjjjjjjjj.faces.new([fa1h,fb1h,fc1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fb1h,fc1h,fd1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fc1h,fd1h,fe1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fd1h,fe1h,ff1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fe1h,ff1h,fg1h])
                                                                            bm_1jjjjjjjjjj.faces.new([ff1h,fg1h,fh1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fg1h,fh1h,fi1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fh1h,fi1h,fj1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fk1h,fl1h,fm1h])
                                                                            bm_1jjjjjjjjjj.faces.new([fl1h,fm1h,fn1h])

                    if type1g == 1:
                        if type2g == 1:
                            if type3g == 0:
                                if type4g == 0:
                                    if type5g == 0:
                                        if type6g == 0:
                                            if type7g == 0:
                                                if type8g == 0:
                                                    if type9g == 0:
                                                        if type10g == 1:
                                                            if type11g == 1:
                                                                if type12g == 0:
                                                                    if type13g == 0:
                                                                        if type14g == 0:
                                                                            bm_1jjjjjjjjj.faces.new([fa1g,fb1g,fc1g])
                                                                            bm_1jjjjjjjjj.faces.new([fb1g,fc1g,fd1g])
                                                                            bm_1jjjjjjjjj.faces.new([fc1g,fd1g,fe1g])
                                                                            bm_1jjjjjjjjj.faces.new([fd1g,fe1g,ff1g])
                                                                            bm_1jjjjjjjjj.faces.new([fe1g,ff1g,fg1g])
                                                                            bm_1jjjjjjjjj.faces.new([ff1g,fg1g,fh1g])
                                                                            bm_1jjjjjjjjj.faces.new([fg1g,fh1g,fi1g])
                                                                            bm_1jjjjjjjjj.faces.new([fj1g,fk1g,fl1g])
                                                                            bm_1jjjjjjjjj.faces.new([fk1g,fl1g,fm1g])
                                                                            bm_1jjjjjjjjj.faces.new([fl1g,fm1g,fn1g])

                    if type1f == 1:
                        if type2f == 1:
                            if type3f == 0:
                                if type4f == 0:
                                    if type5f == 0:
                                        if type6f == 0:
                                            if type7f == 0:
                                                if type8f == 0:
                                                    if type9f == 1:
                                                        if type10f == 1:
                                                            if type11f == 0:
                                                                if type12f == 0:
                                                                    if type13f == 0:
                                                                        if type14f == 0:
                                                                            bm_1jjjjjjjj.faces.new([fa1f,fb1f,fc1f])
                                                                            bm_1jjjjjjjj.faces.new([fb1f,fc1f,fd1f])
                                                                            bm_1jjjjjjjj.faces.new([fc1f,fd1f,fe1f])
                                                                            bm_1jjjjjjjj.faces.new([fd1f,fe1f,ff1f])
                                                                            bm_1jjjjjjjj.faces.new([fe1f,ff1f,fg1f])
                                                                            bm_1jjjjjjjj.faces.new([ff1f,fg1f,fh1f])
                                                                            bm_1jjjjjjjj.faces.new([fi1f,fj1f,fk1f])
                                                                            bm_1jjjjjjjj.faces.new([fj1f,fk1f,fl1f])
                                                                            bm_1jjjjjjjj.faces.new([fk1f,fl1f,fm1f])
                                                                            bm_1jjjjjjjj.faces.new([fl1f,fm1f,fn1f])

                    if type1e == 1:
                        if type2e == 1:
                            if type3e == 0:
                                if type4e == 0:
                                    if type5e == 0:
                                        if type6e == 0:
                                            if type7e == 0:
                                                if type8e == 1:
                                                    if type9e == 1:
                                                        if type10e == 0:
                                                            if type11e == 0:
                                                                if type12e == 0:
                                                                    if type13e == 0:
                                                                        if type14e == 0:
                                                                            bm_1jjjjjjj.faces.new([fa1e,fb1e,fc1e])
                                                                            bm_1jjjjjjj.faces.new([fb1e,fc1e,fd1e])
                                                                            bm_1jjjjjjj.faces.new([fc1e,fd1e,fe1e])
                                                                            bm_1jjjjjjj.faces.new([fd1e,fe1e,ff1e])
                                                                            bm_1jjjjjjj.faces.new([fg1e,fh1e,fi1e])
                                                                            bm_1jjjjjjj.faces.new([fh1e,fi1e,fj1e])
                                                                            bm_1jjjjjjj.faces.new([fi1e,fj1e,fk1e])
                                                                            bm_1jjjjjjj.faces.new([fj1e,fk1e,fl1e])
                                                                            bm_1jjjjjjj.faces.new([fk1e,fl1e,fm1e])
                                                                            bm_1jjjjjjj.faces.new([fl1e,fm1e,fn1e])

                    if type1d == 1:
                        if type2d == 1:
                            if type3d == 0:
                                if type4d == 0:
                                    if type5d == 0:
                                        if type6d == 0:
                                            if type7d== 1:
                                                if type8d == 1:
                                                    if type9d == 0:
                                                        if type10d == 0:
                                                            if type11d == 0:
                                                                if type12d == 0:
                                                                    if type13d == 0:
                                                                        if type14d == 0:
                                                                            bm_1jjjjjj.faces.new([fa1d,fb1d,fc1d])
                                                                            bm_1jjjjjj.faces.new([fb1d,fc1d,fd1d])
                                                                            bm_1jjjjjj.faces.new([fc1d,fd1d,fe1d])
                                                                            bm_1jjjjjj.faces.new([ff1d,fg1d,fh1d])
                                                                            bm_1jjjjjj.faces.new([fg1d,fh1d,fi1d])
                                                                            bm_1jjjjjj.faces.new([fh1d,fi1d,fj1d])
                                                                            bm_1jjjjjj.faces.new([fi1d,fj1d,fk1d])
                                                                            bm_1jjjjjj.faces.new([fj1d,fk1d,fl1d])
                                                                            bm_1jjjjjj.faces.new([fk1d,fl1d,fm1d])
                                                                            bm_1jjjjjj.faces.new([fl1d,fm1d,fn1d])

                    if type1c == 1:
                        if type2c == 1:
                            if type3c == 0:
                                if type4c == 0:
                                    if type5c == 0:
                                        if type6c == 1:
                                            if type7c== 1:
                                                if type8c == 0:
                                                    if type9c == 0:
                                                        if type10c == 0:
                                                            if type11c == 0:
                                                                if type12c == 0:
                                                                    if type13c == 0:
                                                                        if type14c == 0:
                                                                            bm_1jjjjj.faces.new([fa1c,fb1c,fc1c])
                                                                            bm_1jjjjj.faces.new([fb1c,fc1c,fd1c])
                                                                            bm_1jjjjj.faces.new([fe1c,ff1c,fg1c])
                                                                            bm_1jjjjj.faces.new([ff1c,fg1c,fh1c])
                                                                            bm_1jjjjj.faces.new([fg1c,fh1c,fi1c])
                                                                            bm_1jjjjj.faces.new([fh1c,fi1c,fj1c])
                                                                            bm_1jjjjj.faces.new([fi1c,fj1c,fk1c])
                                                                            bm_1jjjjj.faces.new([fj1c,fk1c,fl1c])
                                                                            bm_1jjjjj.faces.new([fk1c,fl1c,fm1c])
                                                                            bm_1jjjjj.faces.new([fl1c,fm1c,fn1c])

                    if type1b == 1:
                        if type2b == 1:
                            if type3b == 0:
                                if type4b == 0:
                                    if type5b == 1:
                                        if type6b == 1:
                                            if type7b == 0:
                                                if type8b == 0:
                                                    if type9b == 0:
                                                        if type10b == 0:
                                                            if type11b == 0:
                                                                if type12b == 0:
                                                                    if type13b == 0:
                                                                        if type14b == 0:
                                                                            bm_1jjjj.faces.new([fa1b,fb1b,fc1b])
                                                                            bm_1jjjj.faces.new([fb1b,fc1b,fd1b])
                                                                            bm_1jjjj.faces.new([fe1b,ff1b,fg1b])
                                                                            bm_1jjjj.faces.new([ff1b,fg1b,fh1b])
                                                                            bm_1jjjj.faces.new([fg1b,fh1b,fi1b])
                                                                            bm_1jjjj.faces.new([fh1b,fi1b,fj1b])
                                                                            bm_1jjjj.faces.new([fi1b,fj1b,fk1b])
                                                                            bm_1jjjj.faces.new([fj1b,fk1b,fl1b])
                                                                            bm_1jjjj.faces.new([fk1b,fl1b,fm1b])
                                                                            bm_1jjjj.faces.new([fl1b,fm1b,fn1b])

                    if type1a == 1:
                        if type2a == 1:
                            if type3a == 0:
                                if type4a == 1:
                                    if type5a == 1:
                                        if type6a == 0:
                                            if type7a == 0:
                                                if type8a == 0:
                                                    if type9a == 0:
                                                        if type10a == 0:
                                                            if type11a == 0:
                                                                if type12a == 0:
                                                                    if type13a == 0:
                                                                        if type14a == 0:
                                                                            bm_1jjj.faces.new([fa1a,fb1a,fc1a])
                                                                            bm_1jjj.faces.new([fd1a,fe1a,ff1a])
                                                                            bm_1jjj.faces.new([fe1a,ff1a,fg1a])
                                                                            bm_1jjj.faces.new([ff1a,fg1a,fh1a])
                                                                            bm_1jjj.faces.new([fg1a,fh1a,fi1a])
                                                                            bm_1jjj.faces.new([fh1a,fi1a,fj1a])
                                                                            bm_1jjj.faces.new([fi1a,fj1a,fk1a])
                                                                            bm_1jjj.faces.new([fj1a,fk1a,fl1a])
                                                                            bm_1jjj.faces.new([fk1a,fl1a,fm1a])
                                                                            bm_1jjj.faces.new([fl1a,fm1a,fn1a])

                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        if type10 == 0:
                                                            if type11 == 0:
                                                                if type12 == 0:
                                                                    if type13 == 0:
                                                                        if type14 == 0:
                                                                            bm_1jj.faces.new([fa1,fb1,fc1])
                                                                            bm_1jj.faces.new([fb1,fc1,fd1])
                                                                            bm_1jj.faces.new([fc1,fd1,fe1])
                                                                            bm_1jj.faces.new([fd1,fe1,ff1])
                                                                            bm_1jj.faces.new([fe1,ff1,fg1])
                                                                            bm_1jj.faces.new([ff1,fg1,fh1])
                                                                            bm_1jj.faces.new([fg1,fh1,fi1])
                                                                            bm_1jj.faces.new([fh1,fi1,fj1])
                                                                            bm_1jj.faces.new([fi1,fj1,fk1])
                                                                            bm_1jj.faces.new([fj1,fk1,fl1])
                                                                            bm_1jj.faces.new([fk1,fl1,fm1])
                                                                            bm_1jj.faces.new([fl1,fm1,fn1])

            elif vertexCount == 15:
                for i in range(vertexCount//15):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    type1 = unpack("B", f.read(1))[0]
                    value1 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1 = unpack("<f", f.read(4))[0]
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    type2 = unpack("B", f.read(1))[0]
                    value2 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2 = unpack("<f", f.read(4))[0]
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    type3 = unpack("B", f.read(1))[0]
                    value3 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3 = unpack("<f", f.read(4))[0]
                    vx4 = unpack("<f", f.read(4))[0]
                    vy4 = unpack("<f", f.read(4))[0]
                    vz4 = unpack("<f", f.read(4))[0]
                    type4 = unpack("B", f.read(1))[0]
                    value4 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4 = unpack("<f", f.read(4))[0]
                    vx5 = unpack("<f", f.read(4))[0]
                    vy5 = unpack("<f", f.read(4))[0]
                    vz5 = unpack("<f", f.read(4))[0]
                    type5 = unpack("B", f.read(1))[0]
                    value5 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5 = unpack("<f", f.read(4))[0]
                    vx6 = unpack("<f", f.read(4))[0]
                    vy6 = unpack("<f", f.read(4))[0]
                    vz6 = unpack("<f", f.read(4))[0]
                    type6 = unpack("B", f.read(1))[0]
                    value6 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6 = unpack("<f", f.read(4))[0]
                    vx7 = unpack("<f", f.read(4))[0]
                    vy7 = unpack("<f", f.read(4))[0]
                    vz7 = unpack("<f", f.read(4))[0]
                    type7 = unpack("B", f.read(1))[0]
                    value7 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7 = unpack("<f", f.read(4))[0]
                    vx8 = unpack("<f", f.read(4))[0]
                    vy8 = unpack("<f", f.read(4))[0]
                    vz8 = unpack("<f", f.read(4))[0]
                    type8 = unpack("B", f.read(1))[0]
                    value8 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8 = unpack("<f", f.read(4))[0]
                    vx9 = unpack("<f", f.read(4))[0]
                    vy9 = unpack("<f", f.read(4))[0]
                    vz9 = unpack("<f", f.read(4))[0]
                    type9 = unpack("B", f.read(1))[0]
                    value9 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9 = unpack("<f", f.read(4))[0]
                    vx10 = unpack("<f", f.read(4))[0]
                    vy10 = unpack("<f", f.read(4))[0]
                    vz10 = unpack("<f", f.read(4))[0]
                    type10 = unpack("B", f.read(1))[0]
                    value10 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10 = unpack("<f", f.read(4))[0]
                    vx11 = unpack("<f", f.read(4))[0]
                    vy11 = unpack("<f", f.read(4))[0]
                    vz11 = unpack("<f", f.read(4))[0]
                    type11 = unpack("B", f.read(1))[0]
                    value11 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11 = unpack("<f", f.read(4))[0]
                    vx12 = unpack("<f", f.read(4))[0]
                    vy12 = unpack("<f", f.read(4))[0]
                    vz12 = unpack("<f", f.read(4))[0]
                    type12 = unpack("B", f.read(1))[0]
                    value12 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12 = unpack("<f", f.read(4))[0]
                    vx13 = unpack("<f", f.read(4))[0]
                    vy13 = unpack("<f", f.read(4))[0]
                    vz13 = unpack("<f", f.read(4))[0]
                    type13 = unpack("B", f.read(1))[0]
                    value13 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13 = unpack("<f", f.read(4))[0]
                    vx14 = unpack("<f", f.read(4))[0]
                    vy14 = unpack("<f", f.read(4))[0]
                    vz14 = unpack("<f", f.read(4))[0]
                    type14 = unpack("B", f.read(1))[0]
                    value14 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14 = unpack("<f", f.read(4))[0]
                    vx15 = unpack("<f", f.read(4))[0]
                    vy15 = unpack("<f", f.read(4))[0]
                    vz15 = unpack("<f", f.read(4))[0]
                    type15 = unpack("B", f.read(1))[0]
                    value15 = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15 = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1a = unpack("<f", f.read(4))[0]
                    vy1a = unpack("<f", f.read(4))[0]
                    vz1a = unpack("<f", f.read(4))[0]
                    type1a = unpack("B", f.read(1))[0]
                    value1a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1a = unpack("<f", f.read(4))[0]
                    vx2a = unpack("<f", f.read(4))[0]
                    vy2a = unpack("<f", f.read(4))[0]
                    vz2a = unpack("<f", f.read(4))[0]
                    type2a = unpack("B", f.read(1))[0]
                    value2a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2a = unpack("<f", f.read(4))[0]
                    vx3a = unpack("<f", f.read(4))[0]
                    vy3a = unpack("<f", f.read(4))[0]
                    vz3a = unpack("<f", f.read(4))[0]
                    type3a = unpack("B", f.read(1))[0]
                    value3a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3a = unpack("<f", f.read(4))[0]
                    vx4a = unpack("<f", f.read(4))[0]
                    vy4a = unpack("<f", f.read(4))[0]
                    vz4a = unpack("<f", f.read(4))[0]
                    type4a = unpack("B", f.read(1))[0]
                    value4a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4a = unpack("<f", f.read(4))[0]
                    vx5a = unpack("<f", f.read(4))[0]
                    vy5a = unpack("<f", f.read(4))[0]
                    vz5a = unpack("<f", f.read(4))[0]
                    type5a = unpack("B", f.read(1))[0]
                    value5a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5a = unpack("<f", f.read(4))[0]
                    vx6a = unpack("<f", f.read(4))[0]
                    vy6a = unpack("<f", f.read(4))[0]
                    vz6a = unpack("<f", f.read(4))[0]
                    type6a = unpack("B", f.read(1))[0]
                    value6a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6a = unpack("<f", f.read(4))[0]
                    vx7a = unpack("<f", f.read(4))[0]
                    vy7a = unpack("<f", f.read(4))[0]
                    vz7a = unpack("<f", f.read(4))[0]
                    type7a = unpack("B", f.read(1))[0]
                    value7a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7a = unpack("<f", f.read(4))[0]
                    vx8a = unpack("<f", f.read(4))[0]
                    vy8a = unpack("<f", f.read(4))[0]
                    vz8a = unpack("<f", f.read(4))[0]
                    type8a = unpack("B", f.read(1))[0]
                    value8a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8a = unpack("<f", f.read(4))[0]
                    vx9a = unpack("<f", f.read(4))[0]
                    vy9a = unpack("<f", f.read(4))[0]
                    vz9a = unpack("<f", f.read(4))[0]
                    type9a = unpack("B", f.read(1))[0]
                    value9a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9a = unpack("<f", f.read(4))[0]
                    vx10a = unpack("<f", f.read(4))[0]
                    vy10a = unpack("<f", f.read(4))[0]
                    vz10a = unpack("<f", f.read(4))[0]
                    type10a = unpack("B", f.read(1))[0]
                    value10a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10a = unpack("<f", f.read(4))[0]
                    vx11a = unpack("<f", f.read(4))[0]
                    vy11a = unpack("<f", f.read(4))[0]
                    vz11a = unpack("<f", f.read(4))[0]
                    type11a = unpack("B", f.read(1))[0]
                    value11a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11a = unpack("<f", f.read(4))[0]
                    vx12a = unpack("<f", f.read(4))[0]
                    vy12a = unpack("<f", f.read(4))[0]
                    vz12a = unpack("<f", f.read(4))[0]
                    type12a = unpack("B", f.read(1))[0]
                    value12a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12a = unpack("<f", f.read(4))[0]
                    vx13a = unpack("<f", f.read(4))[0]
                    vy13a = unpack("<f", f.read(4))[0]
                    vz13a = unpack("<f", f.read(4))[0]
                    type13a = unpack("B", f.read(1))[0]
                    value13a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13a = unpack("<f", f.read(4))[0]
                    vx14a = unpack("<f", f.read(4))[0]
                    vy14a = unpack("<f", f.read(4))[0]
                    vz14a = unpack("<f", f.read(4))[0]
                    type14a = unpack("B", f.read(1))[0]
                    value14a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14a = unpack("<f", f.read(4))[0]
                    vx15a = unpack("<f", f.read(4))[0]
                    vy15a = unpack("<f", f.read(4))[0]
                    vz15a = unpack("<f", f.read(4))[0]
                    type15a = unpack("B", f.read(1))[0]
                    value15a = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15a = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1b = unpack("<f", f.read(4))[0]
                    vy1b = unpack("<f", f.read(4))[0]
                    vz1b = unpack("<f", f.read(4))[0]
                    type1b = unpack("B", f.read(1))[0]
                    value1b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1b = unpack("<f", f.read(4))[0]
                    vx2b = unpack("<f", f.read(4))[0]
                    vy2b = unpack("<f", f.read(4))[0]
                    vz2b = unpack("<f", f.read(4))[0]
                    type2b = unpack("B", f.read(1))[0]
                    value2b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2b = unpack("<f", f.read(4))[0]
                    vx3b = unpack("<f", f.read(4))[0]
                    vy3b = unpack("<f", f.read(4))[0]
                    vz3b = unpack("<f", f.read(4))[0]
                    type3b = unpack("B", f.read(1))[0]
                    value3b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3b = unpack("<f", f.read(4))[0]
                    vx4b = unpack("<f", f.read(4))[0]
                    vy4b = unpack("<f", f.read(4))[0]
                    vz4b = unpack("<f", f.read(4))[0]
                    type4b = unpack("B", f.read(1))[0]
                    value4b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4b = unpack("<f", f.read(4))[0]
                    vx5b = unpack("<f", f.read(4))[0]
                    vy5b = unpack("<f", f.read(4))[0]
                    vz5b = unpack("<f", f.read(4))[0]
                    type5b = unpack("B", f.read(1))[0]
                    value5b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5b = unpack("<f", f.read(4))[0]
                    vx6b = unpack("<f", f.read(4))[0]
                    vy6b = unpack("<f", f.read(4))[0]
                    vz6b = unpack("<f", f.read(4))[0]
                    type6b = unpack("B", f.read(1))[0]
                    value6b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6b = unpack("<f", f.read(4))[0]
                    vx7b = unpack("<f", f.read(4))[0]
                    vy7b = unpack("<f", f.read(4))[0]
                    vz7b = unpack("<f", f.read(4))[0]
                    type7b = unpack("B", f.read(1))[0]
                    value7b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7b = unpack("<f", f.read(4))[0]
                    vx8b = unpack("<f", f.read(4))[0]
                    vy8b = unpack("<f", f.read(4))[0]
                    vz8b = unpack("<f", f.read(4))[0]
                    type8b = unpack("B", f.read(1))[0]
                    value8b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8b = unpack("<f", f.read(4))[0]
                    vx9b = unpack("<f", f.read(4))[0]
                    vy9b = unpack("<f", f.read(4))[0]
                    vz9b = unpack("<f", f.read(4))[0]
                    type9b = unpack("B", f.read(1))[0]
                    value9b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9b = unpack("<f", f.read(4))[0]
                    vx10b = unpack("<f", f.read(4))[0]
                    vy10b = unpack("<f", f.read(4))[0]
                    vz10b = unpack("<f", f.read(4))[0]
                    type10b = unpack("B", f.read(1))[0]
                    value10b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10b = unpack("<f", f.read(4))[0]
                    vx11b = unpack("<f", f.read(4))[0]
                    vy11b = unpack("<f", f.read(4))[0]
                    vz11b = unpack("<f", f.read(4))[0]
                    type11b = unpack("B", f.read(1))[0]
                    value11b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11b = unpack("<f", f.read(4))[0]
                    vx12b = unpack("<f", f.read(4))[0]
                    vy12b = unpack("<f", f.read(4))[0]
                    vz12b = unpack("<f", f.read(4))[0]
                    type12b = unpack("B", f.read(1))[0]
                    value12b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12b = unpack("<f", f.read(4))[0]
                    vx13b = unpack("<f", f.read(4))[0]
                    vy13b = unpack("<f", f.read(4))[0]
                    vz13b = unpack("<f", f.read(4))[0]
                    type13b = unpack("B", f.read(1))[0]
                    value13b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13b = unpack("<f", f.read(4))[0]
                    vx14b = unpack("<f", f.read(4))[0]
                    vy14b = unpack("<f", f.read(4))[0]
                    vz14b = unpack("<f", f.read(4))[0]
                    type14b = unpack("B", f.read(1))[0]
                    value14b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14b = unpack("<f", f.read(4))[0]
                    vx15b = unpack("<f", f.read(4))[0]
                    vy15b = unpack("<f", f.read(4))[0]
                    vz15b = unpack("<f", f.read(4))[0]
                    type15b = unpack("B", f.read(1))[0]
                    value15b = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15b = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1c = unpack("<f", f.read(4))[0]
                    vy1c = unpack("<f", f.read(4))[0]
                    vz1c = unpack("<f", f.read(4))[0]
                    type1c = unpack("B", f.read(1))[0]
                    value1c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1c = unpack("<f", f.read(4))[0]
                    vx2c = unpack("<f", f.read(4))[0]
                    vy2c = unpack("<f", f.read(4))[0]
                    vz2c = unpack("<f", f.read(4))[0]
                    type2c = unpack("B", f.read(1))[0]
                    value2c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2c = unpack("<f", f.read(4))[0]
                    vx3c = unpack("<f", f.read(4))[0]
                    vy3c = unpack("<f", f.read(4))[0]
                    vz3c = unpack("<f", f.read(4))[0]
                    type3c = unpack("B", f.read(1))[0]
                    value3c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3c = unpack("<f", f.read(4))[0]
                    vx4c = unpack("<f", f.read(4))[0]
                    vy4c = unpack("<f", f.read(4))[0]
                    vz4c = unpack("<f", f.read(4))[0]
                    type4c = unpack("B", f.read(1))[0]
                    value4c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4c = unpack("<f", f.read(4))[0]
                    vx5c = unpack("<f", f.read(4))[0]
                    vy5c = unpack("<f", f.read(4))[0]
                    vz5c = unpack("<f", f.read(4))[0]
                    type5c = unpack("B", f.read(1))[0]
                    value5c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5c = unpack("<f", f.read(4))[0]
                    vx6c = unpack("<f", f.read(4))[0]
                    vy6c = unpack("<f", f.read(4))[0]
                    vz6c = unpack("<f", f.read(4))[0]
                    type6c = unpack("B", f.read(1))[0]
                    value6c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6c = unpack("<f", f.read(4))[0]
                    vx7c = unpack("<f", f.read(4))[0]
                    vy7c = unpack("<f", f.read(4))[0]
                    vz7c = unpack("<f", f.read(4))[0]
                    type7c = unpack("B", f.read(1))[0]
                    value7c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7c = unpack("<f", f.read(4))[0]
                    vx8c = unpack("<f", f.read(4))[0]
                    vy8c = unpack("<f", f.read(4))[0]
                    vz8c = unpack("<f", f.read(4))[0]
                    type8c = unpack("B", f.read(1))[0]
                    value8c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8c = unpack("<f", f.read(4))[0]
                    vx9c = unpack("<f", f.read(4))[0]
                    vy9c = unpack("<f", f.read(4))[0]
                    vz9c = unpack("<f", f.read(4))[0]
                    type9c = unpack("B", f.read(1))[0]
                    value9c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9c = unpack("<f", f.read(4))[0]
                    vx10c = unpack("<f", f.read(4))[0]
                    vy10c = unpack("<f", f.read(4))[0]
                    vz10c = unpack("<f", f.read(4))[0]
                    type10c = unpack("B", f.read(1))[0]
                    value10c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10c = unpack("<f", f.read(4))[0]
                    vx11c = unpack("<f", f.read(4))[0]
                    vy11c = unpack("<f", f.read(4))[0]
                    vz11c = unpack("<f", f.read(4))[0]
                    type11c = unpack("B", f.read(1))[0]
                    value11c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11c = unpack("<f", f.read(4))[0]
                    vx12c = unpack("<f", f.read(4))[0]
                    vy12c = unpack("<f", f.read(4))[0]
                    vz12c = unpack("<f", f.read(4))[0]
                    type12c = unpack("B", f.read(1))[0]
                    value12c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12c = unpack("<f", f.read(4))[0]
                    vx13c = unpack("<f", f.read(4))[0]
                    vy13c = unpack("<f", f.read(4))[0]
                    vz13c = unpack("<f", f.read(4))[0]
                    type13c = unpack("B", f.read(1))[0]
                    value13c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13c = unpack("<f", f.read(4))[0]
                    vx14c = unpack("<f", f.read(4))[0]
                    vy14c = unpack("<f", f.read(4))[0]
                    vz14c = unpack("<f", f.read(4))[0]
                    type14c = unpack("B", f.read(1))[0]
                    value14c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14c = unpack("<f", f.read(4))[0]
                    vx15c = unpack("<f", f.read(4))[0]
                    vy15c = unpack("<f", f.read(4))[0]
                    vz15c = unpack("<f", f.read(4))[0]
                    type15c = unpack("B", f.read(1))[0]
                    value15c = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15c = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1d = unpack("<f", f.read(4))[0]
                    vy1d = unpack("<f", f.read(4))[0]
                    vz1d = unpack("<f", f.read(4))[0]
                    type1d = unpack("B", f.read(1))[0]
                    value1d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1d = unpack("<f", f.read(4))[0]
                    vx2d = unpack("<f", f.read(4))[0]
                    vy2d = unpack("<f", f.read(4))[0]
                    vz2d = unpack("<f", f.read(4))[0]
                    type2d = unpack("B", f.read(1))[0]
                    value2d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2d = unpack("<f", f.read(4))[0]
                    vx3d = unpack("<f", f.read(4))[0]
                    vy3d = unpack("<f", f.read(4))[0]
                    vz3d = unpack("<f", f.read(4))[0]
                    type3d = unpack("B", f.read(1))[0]
                    value3d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3d = unpack("<f", f.read(4))[0]
                    vx4d = unpack("<f", f.read(4))[0]
                    vy4d = unpack("<f", f.read(4))[0]
                    vz4d = unpack("<f", f.read(4))[0]
                    type4d = unpack("B", f.read(1))[0]
                    value4d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4d = unpack("<f", f.read(4))[0]
                    vx5d = unpack("<f", f.read(4))[0]
                    vy5d = unpack("<f", f.read(4))[0]
                    vz5d = unpack("<f", f.read(4))[0]
                    type5d = unpack("B", f.read(1))[0]
                    value5d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5d = unpack("<f", f.read(4))[0]
                    vx6d = unpack("<f", f.read(4))[0]
                    vy6d = unpack("<f", f.read(4))[0]
                    vz6d = unpack("<f", f.read(4))[0]
                    type6d = unpack("B", f.read(1))[0]
                    value6d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6d = unpack("<f", f.read(4))[0]
                    vx7d = unpack("<f", f.read(4))[0]
                    vy7d = unpack("<f", f.read(4))[0]
                    vz7d = unpack("<f", f.read(4))[0]
                    type7d = unpack("B", f.read(1))[0]
                    value7d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7d = unpack("<f", f.read(4))[0]
                    vx8d = unpack("<f", f.read(4))[0]
                    vy8d = unpack("<f", f.read(4))[0]
                    vz8d = unpack("<f", f.read(4))[0]
                    type8d = unpack("B", f.read(1))[0]
                    value8d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8d = unpack("<f", f.read(4))[0]
                    vx9d = unpack("<f", f.read(4))[0]
                    vy9d = unpack("<f", f.read(4))[0]
                    vz9d = unpack("<f", f.read(4))[0]
                    type9d = unpack("B", f.read(1))[0]
                    value9d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9d = unpack("<f", f.read(4))[0]
                    vx10d = unpack("<f", f.read(4))[0]
                    vy10d = unpack("<f", f.read(4))[0]
                    vz10d = unpack("<f", f.read(4))[0]
                    type10d = unpack("B", f.read(1))[0]
                    value10d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10d = unpack("<f", f.read(4))[0]
                    vx11d = unpack("<f", f.read(4))[0]
                    vy11d = unpack("<f", f.read(4))[0]
                    vz11d = unpack("<f", f.read(4))[0]
                    type11d = unpack("B", f.read(1))[0]
                    value11d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11d = unpack("<f", f.read(4))[0]
                    vx12d = unpack("<f", f.read(4))[0]
                    vy12d = unpack("<f", f.read(4))[0]
                    vz12d = unpack("<f", f.read(4))[0]
                    type12d = unpack("B", f.read(1))[0]
                    value12d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12d = unpack("<f", f.read(4))[0]
                    vx13d = unpack("<f", f.read(4))[0]
                    vy13d = unpack("<f", f.read(4))[0]
                    vz13d = unpack("<f", f.read(4))[0]
                    type13d = unpack("B", f.read(1))[0]
                    value13d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13d = unpack("<f", f.read(4))[0]
                    vx14d = unpack("<f", f.read(4))[0]
                    vy14d = unpack("<f", f.read(4))[0]
                    vz14d = unpack("<f", f.read(4))[0]
                    type14d = unpack("B", f.read(1))[0]
                    value14d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14d = unpack("<f", f.read(4))[0]
                    vx15d = unpack("<f", f.read(4))[0]
                    vy15d = unpack("<f", f.read(4))[0]
                    vz15d = unpack("<f", f.read(4))[0]
                    type15d = unpack("B", f.read(1))[0]
                    value15d = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15d = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1e = unpack("<f", f.read(4))[0]
                    vy1e = unpack("<f", f.read(4))[0]
                    vz1e = unpack("<f", f.read(4))[0]
                    type1e = unpack("B", f.read(1))[0]
                    value1e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1e = unpack("<f", f.read(4))[0]
                    vx2e = unpack("<f", f.read(4))[0]
                    vy2e = unpack("<f", f.read(4))[0]
                    vz2e = unpack("<f", f.read(4))[0]
                    type2e = unpack("B", f.read(1))[0]
                    value2e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2e = unpack("<f", f.read(4))[0]
                    vx3e = unpack("<f", f.read(4))[0]
                    vy3e = unpack("<f", f.read(4))[0]
                    vz3e = unpack("<f", f.read(4))[0]
                    type3e = unpack("B", f.read(1))[0]
                    value3e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3e = unpack("<f", f.read(4))[0]
                    vx4e = unpack("<f", f.read(4))[0]
                    vy4e = unpack("<f", f.read(4))[0]
                    vz4e = unpack("<f", f.read(4))[0]
                    type4e = unpack("B", f.read(1))[0]
                    value4e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4e = unpack("<f", f.read(4))[0]
                    vx5e = unpack("<f", f.read(4))[0]
                    vy5e = unpack("<f", f.read(4))[0]
                    vz5e = unpack("<f", f.read(4))[0]
                    type5e = unpack("B", f.read(1))[0]
                    value5e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5e = unpack("<f", f.read(4))[0]
                    vx6e = unpack("<f", f.read(4))[0]
                    vy6e = unpack("<f", f.read(4))[0]
                    vz6e = unpack("<f", f.read(4))[0]
                    type6e = unpack("B", f.read(1))[0]
                    value6e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6e = unpack("<f", f.read(4))[0]
                    vx7e = unpack("<f", f.read(4))[0]
                    vy7e = unpack("<f", f.read(4))[0]
                    vz7e = unpack("<f", f.read(4))[0]
                    type7e = unpack("B", f.read(1))[0]
                    value7e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7e = unpack("<f", f.read(4))[0]
                    vx8e = unpack("<f", f.read(4))[0]
                    vy8e = unpack("<f", f.read(4))[0]
                    vz8e = unpack("<f", f.read(4))[0]
                    type8e = unpack("B", f.read(1))[0]
                    value8e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8e = unpack("<f", f.read(4))[0]
                    vx9e = unpack("<f", f.read(4))[0]
                    vy9e = unpack("<f", f.read(4))[0]
                    vz9e = unpack("<f", f.read(4))[0]
                    type9e = unpack("B", f.read(1))[0]
                    value9e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9e = unpack("<f", f.read(4))[0]
                    vx10e = unpack("<f", f.read(4))[0]
                    vy10e = unpack("<f", f.read(4))[0]
                    vz10e = unpack("<f", f.read(4))[0]
                    type10e = unpack("B", f.read(1))[0]
                    value10e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10e = unpack("<f", f.read(4))[0]
                    vx11e = unpack("<f", f.read(4))[0]
                    vy11e = unpack("<f", f.read(4))[0]
                    vz11e = unpack("<f", f.read(4))[0]
                    type11e = unpack("B", f.read(1))[0]
                    value11e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11e = unpack("<f", f.read(4))[0]
                    vx12e = unpack("<f", f.read(4))[0]
                    vy12e = unpack("<f", f.read(4))[0]
                    vz12e = unpack("<f", f.read(4))[0]
                    type12e = unpack("B", f.read(1))[0]
                    value12e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12e = unpack("<f", f.read(4))[0]
                    vx13e = unpack("<f", f.read(4))[0]
                    vy13e = unpack("<f", f.read(4))[0]
                    vz13e = unpack("<f", f.read(4))[0]
                    type13e = unpack("B", f.read(1))[0]
                    value13e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13e = unpack("<f", f.read(4))[0]
                    vx14e = unpack("<f", f.read(4))[0]
                    vy14e = unpack("<f", f.read(4))[0]
                    vz14e = unpack("<f", f.read(4))[0]
                    type14e = unpack("B", f.read(1))[0]
                    value14e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14e = unpack("<f", f.read(4))[0]
                    vx15e = unpack("<f", f.read(4))[0]
                    vy15e = unpack("<f", f.read(4))[0]
                    vz15e = unpack("<f", f.read(4))[0]
                    type15e = unpack("B", f.read(1))[0]
                    value15e = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15e = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1f = unpack("<f", f.read(4))[0]
                    vy1f = unpack("<f", f.read(4))[0]
                    vz1f = unpack("<f", f.read(4))[0]
                    type1f = unpack("B", f.read(1))[0]
                    value1f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1f = unpack("<f", f.read(4))[0]
                    vx2f = unpack("<f", f.read(4))[0]
                    vy2f = unpack("<f", f.read(4))[0]
                    vz2f = unpack("<f", f.read(4))[0]
                    type2f = unpack("B", f.read(1))[0]
                    value2f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2f = unpack("<f", f.read(4))[0]
                    vx3f = unpack("<f", f.read(4))[0]
                    vy3f = unpack("<f", f.read(4))[0]
                    vz3f = unpack("<f", f.read(4))[0]
                    type3f = unpack("B", f.read(1))[0]
                    value3f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3f = unpack("<f", f.read(4))[0]
                    vx4f = unpack("<f", f.read(4))[0]
                    vy4f = unpack("<f", f.read(4))[0]
                    vz4f = unpack("<f", f.read(4))[0]
                    type4f = unpack("B", f.read(1))[0]
                    value4f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4f = unpack("<f", f.read(4))[0]
                    vx5f = unpack("<f", f.read(4))[0]
                    vy5f = unpack("<f", f.read(4))[0]
                    vz5f = unpack("<f", f.read(4))[0]
                    type5f = unpack("B", f.read(1))[0]
                    value5f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5f = unpack("<f", f.read(4))[0]
                    vx6f = unpack("<f", f.read(4))[0]
                    vy6f = unpack("<f", f.read(4))[0]
                    vz6f = unpack("<f", f.read(4))[0]
                    type6f = unpack("B", f.read(1))[0]
                    value6f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6f = unpack("<f", f.read(4))[0]
                    vx7f = unpack("<f", f.read(4))[0]
                    vy7f = unpack("<f", f.read(4))[0]
                    vz7f = unpack("<f", f.read(4))[0]
                    type7f = unpack("B", f.read(1))[0]
                    value7f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7f = unpack("<f", f.read(4))[0]
                    vx8f = unpack("<f", f.read(4))[0]
                    vy8f = unpack("<f", f.read(4))[0]
                    vz8f = unpack("<f", f.read(4))[0]
                    type8f = unpack("B", f.read(1))[0]
                    value8f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8f = unpack("<f", f.read(4))[0]
                    vx9f = unpack("<f", f.read(4))[0]
                    vy9f = unpack("<f", f.read(4))[0]
                    vz9f = unpack("<f", f.read(4))[0]
                    type9f = unpack("B", f.read(1))[0]
                    value9f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9f = unpack("<f", f.read(4))[0]
                    vx10f = unpack("<f", f.read(4))[0]
                    vy10f = unpack("<f", f.read(4))[0]
                    vz10f = unpack("<f", f.read(4))[0]
                    type10f = unpack("B", f.read(1))[0]
                    value10f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10f = unpack("<f", f.read(4))[0]
                    vx11f = unpack("<f", f.read(4))[0]
                    vy11f = unpack("<f", f.read(4))[0]
                    vz11f = unpack("<f", f.read(4))[0]
                    type11f = unpack("B", f.read(1))[0]
                    value11f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11f = unpack("<f", f.read(4))[0]
                    vx12f = unpack("<f", f.read(4))[0]
                    vy12f = unpack("<f", f.read(4))[0]
                    vz12f = unpack("<f", f.read(4))[0]
                    type12f = unpack("B", f.read(1))[0]
                    value12f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12f = unpack("<f", f.read(4))[0]
                    vx13f = unpack("<f", f.read(4))[0]
                    vy13f = unpack("<f", f.read(4))[0]
                    vz13f = unpack("<f", f.read(4))[0]
                    type13f = unpack("B", f.read(1))[0]
                    value13f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13f = unpack("<f", f.read(4))[0]
                    vx14f = unpack("<f", f.read(4))[0]
                    vy14f = unpack("<f", f.read(4))[0]
                    vz14f = unpack("<f", f.read(4))[0]
                    type14f = unpack("B", f.read(1))[0]
                    value14f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14f = unpack("<f", f.read(4))[0]
                    vx15f = unpack("<f", f.read(4))[0]
                    vy15f = unpack("<f", f.read(4))[0]
                    vz15f = unpack("<f", f.read(4))[0]
                    type15f = unpack("B", f.read(1))[0]
                    value15f = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15f = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1g = unpack("<f", f.read(4))[0]
                    vy1g = unpack("<f", f.read(4))[0]
                    vz1g = unpack("<f", f.read(4))[0]
                    type1g = unpack("B", f.read(1))[0]
                    value1g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1g = unpack("<f", f.read(4))[0]
                    vx2g = unpack("<f", f.read(4))[0]
                    vy2g = unpack("<f", f.read(4))[0]
                    vz2g = unpack("<f", f.read(4))[0]
                    type2g = unpack("B", f.read(1))[0]
                    value2g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2g = unpack("<f", f.read(4))[0]
                    vx3g = unpack("<f", f.read(4))[0]
                    vy3g = unpack("<f", f.read(4))[0]
                    vz3g = unpack("<f", f.read(4))[0]
                    type3g = unpack("B", f.read(1))[0]
                    value3g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3g = unpack("<f", f.read(4))[0]
                    vx4g = unpack("<f", f.read(4))[0]
                    vy4g = unpack("<f", f.read(4))[0]
                    vz4g = unpack("<f", f.read(4))[0]
                    type4g = unpack("B", f.read(1))[0]
                    value4g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4g = unpack("<f", f.read(4))[0]
                    vx5g = unpack("<f", f.read(4))[0]
                    vy5g = unpack("<f", f.read(4))[0]
                    vz5g = unpack("<f", f.read(4))[0]
                    type5g = unpack("B", f.read(1))[0]
                    value5g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5g = unpack("<f", f.read(4))[0]
                    vx6g = unpack("<f", f.read(4))[0]
                    vy6g = unpack("<f", f.read(4))[0]
                    vz6g = unpack("<f", f.read(4))[0]
                    type6g = unpack("B", f.read(1))[0]
                    value6g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6g = unpack("<f", f.read(4))[0]
                    vx7g = unpack("<f", f.read(4))[0]
                    vy7g = unpack("<f", f.read(4))[0]
                    vz7g = unpack("<f", f.read(4))[0]
                    type7g = unpack("B", f.read(1))[0]
                    value7g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7g = unpack("<f", f.read(4))[0]
                    vx8g = unpack("<f", f.read(4))[0]
                    vy8g = unpack("<f", f.read(4))[0]
                    vz8g = unpack("<f", f.read(4))[0]
                    type8g = unpack("B", f.read(1))[0]
                    value8g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8g = unpack("<f", f.read(4))[0]
                    vx9g = unpack("<f", f.read(4))[0]
                    vy9g = unpack("<f", f.read(4))[0]
                    vz9g = unpack("<f", f.read(4))[0]
                    type9g = unpack("B", f.read(1))[0]
                    value9g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9g = unpack("<f", f.read(4))[0]
                    vx10g = unpack("<f", f.read(4))[0]
                    vy10g = unpack("<f", f.read(4))[0]
                    vz10g = unpack("<f", f.read(4))[0]
                    type10g = unpack("B", f.read(1))[0]
                    value10g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10g = unpack("<f", f.read(4))[0]
                    vx11g = unpack("<f", f.read(4))[0]
                    vy11g = unpack("<f", f.read(4))[0]
                    vz11g = unpack("<f", f.read(4))[0]
                    type11g = unpack("B", f.read(1))[0]
                    value11g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11g = unpack("<f", f.read(4))[0]
                    vx12g = unpack("<f", f.read(4))[0]
                    vy12g = unpack("<f", f.read(4))[0]
                    vz12g = unpack("<f", f.read(4))[0]
                    type12g = unpack("B", f.read(1))[0]
                    value12g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12g = unpack("<f", f.read(4))[0]
                    vx13g = unpack("<f", f.read(4))[0]
                    vy13g = unpack("<f", f.read(4))[0]
                    vz13g = unpack("<f", f.read(4))[0]
                    type13g = unpack("B", f.read(1))[0]
                    value13g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13g = unpack("<f", f.read(4))[0]
                    vx14g = unpack("<f", f.read(4))[0]
                    vy14g = unpack("<f", f.read(4))[0]
                    vz14g = unpack("<f", f.read(4))[0]
                    type14g = unpack("B", f.read(1))[0]
                    value14g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14g = unpack("<f", f.read(4))[0]
                    vx15g = unpack("<f", f.read(4))[0]
                    vy15g = unpack("<f", f.read(4))[0]
                    vz15g = unpack("<f", f.read(4))[0]
                    type15g = unpack("B", f.read(1))[0]
                    value15g = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15g = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1h = unpack("<f", f.read(4))[0]
                    vy1h = unpack("<f", f.read(4))[0]
                    vz1h = unpack("<f", f.read(4))[0]
                    type1h = unpack("B", f.read(1))[0]
                    value1h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1h = unpack("<f", f.read(4))[0]
                    vx2h = unpack("<f", f.read(4))[0]
                    vy2h = unpack("<f", f.read(4))[0]
                    vz2h = unpack("<f", f.read(4))[0]
                    type2h = unpack("B", f.read(1))[0]
                    value2h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2h = unpack("<f", f.read(4))[0]
                    vx3h = unpack("<f", f.read(4))[0]
                    vy3h = unpack("<f", f.read(4))[0]
                    vz3h = unpack("<f", f.read(4))[0]
                    type3h = unpack("B", f.read(1))[0]
                    value3h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3h = unpack("<f", f.read(4))[0]
                    vx4h = unpack("<f", f.read(4))[0]
                    vy4h = unpack("<f", f.read(4))[0]
                    vz4h = unpack("<f", f.read(4))[0]
                    type4h = unpack("B", f.read(1))[0]
                    value4h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4h = unpack("<f", f.read(4))[0]
                    vx5h = unpack("<f", f.read(4))[0]
                    vy5h = unpack("<f", f.read(4))[0]
                    vz5h = unpack("<f", f.read(4))[0]
                    type5h = unpack("B", f.read(1))[0]
                    value5h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5h = unpack("<f", f.read(4))[0]
                    vx6h = unpack("<f", f.read(4))[0]
                    vy6h = unpack("<f", f.read(4))[0]
                    vz6h = unpack("<f", f.read(4))[0]
                    type6h = unpack("B", f.read(1))[0]
                    value6h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6h = unpack("<f", f.read(4))[0]
                    vx7h = unpack("<f", f.read(4))[0]
                    vy7h = unpack("<f", f.read(4))[0]
                    vz7h = unpack("<f", f.read(4))[0]
                    type7h = unpack("B", f.read(1))[0]
                    value7h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7h = unpack("<f", f.read(4))[0]
                    vx8h = unpack("<f", f.read(4))[0]
                    vy8h = unpack("<f", f.read(4))[0]
                    vz8h = unpack("<f", f.read(4))[0]
                    type8h = unpack("B", f.read(1))[0]
                    value8h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8h = unpack("<f", f.read(4))[0]
                    vx9h = unpack("<f", f.read(4))[0]
                    vy9h = unpack("<f", f.read(4))[0]
                    vz9h = unpack("<f", f.read(4))[0]
                    type9h = unpack("B", f.read(1))[0]
                    value9h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9h = unpack("<f", f.read(4))[0]
                    vx10h = unpack("<f", f.read(4))[0]
                    vy10h = unpack("<f", f.read(4))[0]
                    vz10h = unpack("<f", f.read(4))[0]
                    type10h = unpack("B", f.read(1))[0]
                    value10h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10h = unpack("<f", f.read(4))[0]
                    vx11h = unpack("<f", f.read(4))[0]
                    vy11h = unpack("<f", f.read(4))[0]
                    vz11h = unpack("<f", f.read(4))[0]
                    type11h = unpack("B", f.read(1))[0]
                    value11h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11h = unpack("<f", f.read(4))[0]
                    vx12h = unpack("<f", f.read(4))[0]
                    vy12h = unpack("<f", f.read(4))[0]
                    vz12h = unpack("<f", f.read(4))[0]
                    type12h = unpack("B", f.read(1))[0]
                    value12h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12h = unpack("<f", f.read(4))[0]
                    vx13h = unpack("<f", f.read(4))[0]
                    vy13h = unpack("<f", f.read(4))[0]
                    vz13h = unpack("<f", f.read(4))[0]
                    type13h = unpack("B", f.read(1))[0]
                    value13h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13h = unpack("<f", f.read(4))[0]
                    vx14h = unpack("<f", f.read(4))[0]
                    vy14h = unpack("<f", f.read(4))[0]
                    vz14h = unpack("<f", f.read(4))[0]
                    type14h = unpack("B", f.read(1))[0]
                    value14h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14h = unpack("<f", f.read(4))[0]
                    vx15h = unpack("<f", f.read(4))[0]
                    vy15h = unpack("<f", f.read(4))[0]
                    vz15h = unpack("<f", f.read(4))[0]
                    type15h = unpack("B", f.read(1))[0]
                    value15h = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15h = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1i = unpack("<f", f.read(4))[0]
                    vy1i = unpack("<f", f.read(4))[0]
                    vz1i = unpack("<f", f.read(4))[0]
                    type1i = unpack("B", f.read(1))[0]
                    value1i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1i = unpack("<f", f.read(4))[0]
                    vx2i = unpack("<f", f.read(4))[0]
                    vy2i = unpack("<f", f.read(4))[0]
                    vz2i = unpack("<f", f.read(4))[0]
                    type2i = unpack("B", f.read(1))[0]
                    value2i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2i = unpack("<f", f.read(4))[0]
                    vx3i = unpack("<f", f.read(4))[0]
                    vy3i = unpack("<f", f.read(4))[0]
                    vz3i = unpack("<f", f.read(4))[0]
                    type3i = unpack("B", f.read(1))[0]
                    value3i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3i = unpack("<f", f.read(4))[0]
                    vx4i = unpack("<f", f.read(4))[0]
                    vy4i = unpack("<f", f.read(4))[0]
                    vz4i = unpack("<f", f.read(4))[0]
                    type4i = unpack("B", f.read(1))[0]
                    value4i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4i = unpack("<f", f.read(4))[0]
                    vx5i = unpack("<f", f.read(4))[0]
                    vy5i = unpack("<f", f.read(4))[0]
                    vz5i = unpack("<f", f.read(4))[0]
                    type5i = unpack("B", f.read(1))[0]
                    value5i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5i = unpack("<f", f.read(4))[0]
                    vx6i = unpack("<f", f.read(4))[0]
                    vy6i = unpack("<f", f.read(4))[0]
                    vz6i = unpack("<f", f.read(4))[0]
                    type6i = unpack("B", f.read(1))[0]
                    value6i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6i = unpack("<f", f.read(4))[0]
                    vx7i = unpack("<f", f.read(4))[0]
                    vy7i = unpack("<f", f.read(4))[0]
                    vz7i = unpack("<f", f.read(4))[0]
                    type7i = unpack("B", f.read(1))[0]
                    value7i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7i = unpack("<f", f.read(4))[0]
                    vx8i = unpack("<f", f.read(4))[0]
                    vy8i = unpack("<f", f.read(4))[0]
                    vz8i = unpack("<f", f.read(4))[0]
                    type8i = unpack("B", f.read(1))[0]
                    value8i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8i = unpack("<f", f.read(4))[0]
                    vx9i = unpack("<f", f.read(4))[0]
                    vy9i = unpack("<f", f.read(4))[0]
                    vz9i = unpack("<f", f.read(4))[0]
                    type9i = unpack("B", f.read(1))[0]
                    value9i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9i = unpack("<f", f.read(4))[0]
                    vx10i = unpack("<f", f.read(4))[0]
                    vy10i = unpack("<f", f.read(4))[0]
                    vz10i = unpack("<f", f.read(4))[0]
                    type10i = unpack("B", f.read(1))[0]
                    value10i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10i = unpack("<f", f.read(4))[0]
                    vx11i = unpack("<f", f.read(4))[0]
                    vy11i = unpack("<f", f.read(4))[0]
                    vz11i = unpack("<f", f.read(4))[0]
                    type11i = unpack("B", f.read(1))[0]
                    value11i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11i = unpack("<f", f.read(4))[0]
                    vx12i = unpack("<f", f.read(4))[0]
                    vy12i = unpack("<f", f.read(4))[0]
                    vz12i = unpack("<f", f.read(4))[0]
                    type12i = unpack("B", f.read(1))[0]
                    value12i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12i = unpack("<f", f.read(4))[0]
                    vx13i = unpack("<f", f.read(4))[0]
                    vy13i = unpack("<f", f.read(4))[0]
                    vz13i = unpack("<f", f.read(4))[0]
                    type13i = unpack("B", f.read(1))[0]
                    value13i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13i = unpack("<f", f.read(4))[0]
                    vx14i = unpack("<f", f.read(4))[0]
                    vy14i = unpack("<f", f.read(4))[0]
                    vz14i = unpack("<f", f.read(4))[0]
                    type14i = unpack("B", f.read(1))[0]
                    value14i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14i = unpack("<f", f.read(4))[0]
                    vx15i = unpack("<f", f.read(4))[0]
                    vy15i = unpack("<f", f.read(4))[0]
                    vz15i = unpack("<f", f.read(4))[0]
                    type15i = unpack("B", f.read(1))[0]
                    value15i = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15i = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1j = unpack("<f", f.read(4))[0]
                    vy1j = unpack("<f", f.read(4))[0]
                    vz1j = unpack("<f", f.read(4))[0]
                    type1j = unpack("B", f.read(1))[0]
                    value1j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1j = unpack("<f", f.read(4))[0]
                    vx2j = unpack("<f", f.read(4))[0]
                    vy2j = unpack("<f", f.read(4))[0]
                    vz2j = unpack("<f", f.read(4))[0]
                    type2j = unpack("B", f.read(1))[0]
                    value2j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2j = unpack("<f", f.read(4))[0]
                    vx3j = unpack("<f", f.read(4))[0]
                    vy3j = unpack("<f", f.read(4))[0]
                    vz3j = unpack("<f", f.read(4))[0]
                    type3j = unpack("B", f.read(1))[0]
                    value3j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3j = unpack("<f", f.read(4))[0]
                    vx4j = unpack("<f", f.read(4))[0]
                    vy4j = unpack("<f", f.read(4))[0]
                    vz4j = unpack("<f", f.read(4))[0]
                    type4j = unpack("B", f.read(1))[0]
                    value4j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4j = unpack("<f", f.read(4))[0]
                    vx5j = unpack("<f", f.read(4))[0]
                    vy5j = unpack("<f", f.read(4))[0]
                    vz5j = unpack("<f", f.read(4))[0]
                    type5j = unpack("B", f.read(1))[0]
                    value5j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5j = unpack("<f", f.read(4))[0]
                    vx6j = unpack("<f", f.read(4))[0]
                    vy6j = unpack("<f", f.read(4))[0]
                    vz6j = unpack("<f", f.read(4))[0]
                    type6j = unpack("B", f.read(1))[0]
                    value6j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6j = unpack("<f", f.read(4))[0]
                    vx7j = unpack("<f", f.read(4))[0]
                    vy7j = unpack("<f", f.read(4))[0]
                    vz7j = unpack("<f", f.read(4))[0]
                    type7j = unpack("B", f.read(1))[0]
                    value7j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7j = unpack("<f", f.read(4))[0]
                    vx8j = unpack("<f", f.read(4))[0]
                    vy8j = unpack("<f", f.read(4))[0]
                    vz8j = unpack("<f", f.read(4))[0]
                    type8j = unpack("B", f.read(1))[0]
                    value8j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8j = unpack("<f", f.read(4))[0]
                    vx9j = unpack("<f", f.read(4))[0]
                    vy9j = unpack("<f", f.read(4))[0]
                    vz9j = unpack("<f", f.read(4))[0]
                    type9j = unpack("B", f.read(1))[0]
                    value9j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9j = unpack("<f", f.read(4))[0]
                    vx10j = unpack("<f", f.read(4))[0]
                    vy10j = unpack("<f", f.read(4))[0]
                    vz10j = unpack("<f", f.read(4))[0]
                    type10j = unpack("B", f.read(1))[0]
                    value10j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10j = unpack("<f", f.read(4))[0]
                    vx11j = unpack("<f", f.read(4))[0]
                    vy11j = unpack("<f", f.read(4))[0]
                    vz11j = unpack("<f", f.read(4))[0]
                    type11j = unpack("B", f.read(1))[0]
                    value11j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11j = unpack("<f", f.read(4))[0]
                    vx12j = unpack("<f", f.read(4))[0]
                    vy12j = unpack("<f", f.read(4))[0]
                    vz12j = unpack("<f", f.read(4))[0]
                    type12j = unpack("B", f.read(1))[0]
                    value12j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12j = unpack("<f", f.read(4))[0]
                    vx13j = unpack("<f", f.read(4))[0]
                    vy13j = unpack("<f", f.read(4))[0]
                    vz13j = unpack("<f", f.read(4))[0]
                    type13j = unpack("B", f.read(1))[0]
                    value13j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13j = unpack("<f", f.read(4))[0]
                    vx14j = unpack("<f", f.read(4))[0]
                    vy14j = unpack("<f", f.read(4))[0]
                    vz14j = unpack("<f", f.read(4))[0]
                    type14j = unpack("B", f.read(1))[0]
                    value14j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14j = unpack("<f", f.read(4))[0]
                    vx15j = unpack("<f", f.read(4))[0]
                    vy15j = unpack("<f", f.read(4))[0]
                    vz15j = unpack("<f", f.read(4))[0]
                    type15j = unpack("B", f.read(1))[0]
                    value15j = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15j = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1k = unpack("<f", f.read(4))[0]
                    vy1k = unpack("<f", f.read(4))[0]
                    vz1k = unpack("<f", f.read(4))[0]
                    type1k = unpack("B", f.read(1))[0]
                    value1k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1k = unpack("<f", f.read(4))[0]
                    vx2k = unpack("<f", f.read(4))[0]
                    vy2k = unpack("<f", f.read(4))[0]
                    vz2k = unpack("<f", f.read(4))[0]
                    type2k = unpack("B", f.read(1))[0]
                    value2k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2k = unpack("<f", f.read(4))[0]
                    vx3k = unpack("<f", f.read(4))[0]
                    vy3k = unpack("<f", f.read(4))[0]
                    vz3k = unpack("<f", f.read(4))[0]
                    type3k = unpack("B", f.read(1))[0]
                    value3k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3k = unpack("<f", f.read(4))[0]
                    vx4k = unpack("<f", f.read(4))[0]
                    vy4k = unpack("<f", f.read(4))[0]
                    vz4k = unpack("<f", f.read(4))[0]
                    type4k = unpack("B", f.read(1))[0]
                    value4k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4k = unpack("<f", f.read(4))[0]
                    vx5k = unpack("<f", f.read(4))[0]
                    vy5k = unpack("<f", f.read(4))[0]
                    vz5k = unpack("<f", f.read(4))[0]
                    type5k = unpack("B", f.read(1))[0]
                    value5k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5k = unpack("<f", f.read(4))[0]
                    vx6k = unpack("<f", f.read(4))[0]
                    vy6k = unpack("<f", f.read(4))[0]
                    vz6k = unpack("<f", f.read(4))[0]
                    type6k = unpack("B", f.read(1))[0]
                    value6k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6k = unpack("<f", f.read(4))[0]
                    vx7k = unpack("<f", f.read(4))[0]
                    vy7k = unpack("<f", f.read(4))[0]
                    vz7k = unpack("<f", f.read(4))[0]
                    type7k = unpack("B", f.read(1))[0]
                    value7k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7k = unpack("<f", f.read(4))[0]
                    vx8k = unpack("<f", f.read(4))[0]
                    vy8k = unpack("<f", f.read(4))[0]
                    vz8k = unpack("<f", f.read(4))[0]
                    type8k = unpack("B", f.read(1))[0]
                    value8k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8k = unpack("<f", f.read(4))[0]
                    vx9k = unpack("<f", f.read(4))[0]
                    vy9k = unpack("<f", f.read(4))[0]
                    vz9k = unpack("<f", f.read(4))[0]
                    type9k = unpack("B", f.read(1))[0]
                    value9k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9k = unpack("<f", f.read(4))[0]
                    vx10k = unpack("<f", f.read(4))[0]
                    vy10k = unpack("<f", f.read(4))[0]
                    vz10k = unpack("<f", f.read(4))[0]
                    type10k = unpack("B", f.read(1))[0]
                    value10k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10k = unpack("<f", f.read(4))[0]
                    vx11k = unpack("<f", f.read(4))[0]
                    vy11k = unpack("<f", f.read(4))[0]
                    vz11k = unpack("<f", f.read(4))[0]
                    type11k = unpack("B", f.read(1))[0]
                    value11k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11k = unpack("<f", f.read(4))[0]
                    vx12k = unpack("<f", f.read(4))[0]
                    vy12k = unpack("<f", f.read(4))[0]
                    vz12k = unpack("<f", f.read(4))[0]
                    type12k = unpack("B", f.read(1))[0]
                    value12k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12k = unpack("<f", f.read(4))[0]
                    vx13k = unpack("<f", f.read(4))[0]
                    vy13k = unpack("<f", f.read(4))[0]
                    vz13k = unpack("<f", f.read(4))[0]
                    type13k = unpack("B", f.read(1))[0]
                    value13k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13k = unpack("<f", f.read(4))[0]
                    vx14k = unpack("<f", f.read(4))[0]
                    vy14k = unpack("<f", f.read(4))[0]
                    vz14k = unpack("<f", f.read(4))[0]
                    type14k = unpack("B", f.read(1))[0]
                    value14k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14k = unpack("<f", f.read(4))[0]
                    vx15k = unpack("<f", f.read(4))[0]
                    vy15k = unpack("<f", f.read(4))[0]
                    vz15k = unpack("<f", f.read(4))[0]
                    type15k = unpack("B", f.read(1))[0]
                    value15k = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15k = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1l = unpack("<f", f.read(4))[0]
                    vy1l = unpack("<f", f.read(4))[0]
                    vz1l = unpack("<f", f.read(4))[0]
                    type1l = unpack("B", f.read(1))[0]
                    value1l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1l = unpack("<f", f.read(4))[0]
                    vx2l = unpack("<f", f.read(4))[0]
                    vy2l = unpack("<f", f.read(4))[0]
                    vz2l = unpack("<f", f.read(4))[0]
                    type2l = unpack("B", f.read(1))[0]
                    value2l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2l = unpack("<f", f.read(4))[0]
                    vx3l = unpack("<f", f.read(4))[0]
                    vy3l = unpack("<f", f.read(4))[0]
                    vz3l = unpack("<f", f.read(4))[0]
                    type3l = unpack("B", f.read(1))[0]
                    value3l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3l = unpack("<f", f.read(4))[0]
                    vx4l = unpack("<f", f.read(4))[0]
                    vy4l = unpack("<f", f.read(4))[0]
                    vz4l = unpack("<f", f.read(4))[0]
                    type4l = unpack("B", f.read(1))[0]
                    value4l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4l = unpack("<f", f.read(4))[0]
                    vx5l = unpack("<f", f.read(4))[0]
                    vy5l = unpack("<f", f.read(4))[0]
                    vz5l = unpack("<f", f.read(4))[0]
                    type5l = unpack("B", f.read(1))[0]
                    value5l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5l = unpack("<f", f.read(4))[0]
                    vx6l = unpack("<f", f.read(4))[0]
                    vy6l = unpack("<f", f.read(4))[0]
                    vz6l = unpack("<f", f.read(4))[0]
                    type6l = unpack("B", f.read(1))[0]
                    value6l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6l = unpack("<f", f.read(4))[0]
                    vx7l = unpack("<f", f.read(4))[0]
                    vy7l = unpack("<f", f.read(4))[0]
                    vz7l = unpack("<f", f.read(4))[0]
                    type7l = unpack("B", f.read(1))[0]
                    value7l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7l = unpack("<f", f.read(4))[0]
                    vx8l = unpack("<f", f.read(4))[0]
                    vy8l = unpack("<f", f.read(4))[0]
                    vz8l = unpack("<f", f.read(4))[0]
                    type8l = unpack("B", f.read(1))[0]
                    value8l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8l = unpack("<f", f.read(4))[0]
                    vx9l = unpack("<f", f.read(4))[0]
                    vy9l = unpack("<f", f.read(4))[0]
                    vz9l = unpack("<f", f.read(4))[0]
                    type9l = unpack("B", f.read(1))[0]
                    value9l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9l = unpack("<f", f.read(4))[0]
                    vx10l = unpack("<f", f.read(4))[0]
                    vy10l = unpack("<f", f.read(4))[0]
                    vz10l = unpack("<f", f.read(4))[0]
                    type10l = unpack("B", f.read(1))[0]
                    value10l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10l = unpack("<f", f.read(4))[0]
                    vx11l = unpack("<f", f.read(4))[0]
                    vy11l = unpack("<f", f.read(4))[0]
                    vz11l = unpack("<f", f.read(4))[0]
                    type11l = unpack("B", f.read(1))[0]
                    value11l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11l = unpack("<f", f.read(4))[0]
                    vx12l = unpack("<f", f.read(4))[0]
                    vy12l = unpack("<f", f.read(4))[0]
                    vz12l = unpack("<f", f.read(4))[0]
                    type12l = unpack("B", f.read(1))[0]
                    value12l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12l = unpack("<f", f.read(4))[0]
                    vx13l = unpack("<f", f.read(4))[0]
                    vy13l = unpack("<f", f.read(4))[0]
                    vz13l = unpack("<f", f.read(4))[0]
                    type13l = unpack("B", f.read(1))[0]
                    value13l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13l = unpack("<f", f.read(4))[0]
                    vx14l = unpack("<f", f.read(4))[0]
                    vy14l = unpack("<f", f.read(4))[0]
                    vz14l = unpack("<f", f.read(4))[0]
                    type14l = unpack("B", f.read(1))[0]
                    value14l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14l = unpack("<f", f.read(4))[0]
                    vx15l = unpack("<f", f.read(4))[0]
                    vy15l = unpack("<f", f.read(4))[0]
                    vz15l = unpack("<f", f.read(4))[0]
                    type15l = unpack("B", f.read(1))[0]
                    value15l = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15l = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1m = unpack("<f", f.read(4))[0]
                    vy1m = unpack("<f", f.read(4))[0]
                    vz1m = unpack("<f", f.read(4))[0]
                    type1m = unpack("B", f.read(1))[0]
                    value1m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1m = unpack("<f", f.read(4))[0]
                    vx2m = unpack("<f", f.read(4))[0]
                    vy2m = unpack("<f", f.read(4))[0]
                    vz2m = unpack("<f", f.read(4))[0]
                    type2m = unpack("B", f.read(1))[0]
                    value2m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2m = unpack("<f", f.read(4))[0]
                    vx3m = unpack("<f", f.read(4))[0]
                    vy3m = unpack("<f", f.read(4))[0]
                    vz3m = unpack("<f", f.read(4))[0]
                    type3m = unpack("B", f.read(1))[0]
                    value3m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3m = unpack("<f", f.read(4))[0]
                    vx4m = unpack("<f", f.read(4))[0]
                    vy4m = unpack("<f", f.read(4))[0]
                    vz4m = unpack("<f", f.read(4))[0]
                    type4m = unpack("B", f.read(1))[0]
                    value4m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4m = unpack("<f", f.read(4))[0]
                    vx5m = unpack("<f", f.read(4))[0]
                    vy5m = unpack("<f", f.read(4))[0]
                    vz5m = unpack("<f", f.read(4))[0]
                    type5m = unpack("B", f.read(1))[0]
                    value5m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5m = unpack("<f", f.read(4))[0]
                    vx6m = unpack("<f", f.read(4))[0]
                    vy6m = unpack("<f", f.read(4))[0]
                    vz6m = unpack("<f", f.read(4))[0]
                    type6m = unpack("B", f.read(1))[0]
                    value6m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6m = unpack("<f", f.read(4))[0]
                    vx7m = unpack("<f", f.read(4))[0]
                    vy7m = unpack("<f", f.read(4))[0]
                    vz7m = unpack("<f", f.read(4))[0]
                    type7m = unpack("B", f.read(1))[0]
                    value7m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7m = unpack("<f", f.read(4))[0]
                    vx8m = unpack("<f", f.read(4))[0]
                    vy8m = unpack("<f", f.read(4))[0]
                    vz8m = unpack("<f", f.read(4))[0]
                    type8m = unpack("B", f.read(1))[0]
                    value8m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8m = unpack("<f", f.read(4))[0]
                    vx9m = unpack("<f", f.read(4))[0]
                    vy9m = unpack("<f", f.read(4))[0]
                    vz9m = unpack("<f", f.read(4))[0]
                    type9m = unpack("B", f.read(1))[0]
                    value9m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9m = unpack("<f", f.read(4))[0]
                    vx10m = unpack("<f", f.read(4))[0]
                    vy10m = unpack("<f", f.read(4))[0]
                    vz10m = unpack("<f", f.read(4))[0]
                    type10m = unpack("B", f.read(1))[0]
                    value10m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10m = unpack("<f", f.read(4))[0]
                    vx11m = unpack("<f", f.read(4))[0]
                    vy11m = unpack("<f", f.read(4))[0]
                    vz11m = unpack("<f", f.read(4))[0]
                    type11m = unpack("B", f.read(1))[0]
                    value11m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11m = unpack("<f", f.read(4))[0]
                    vx12m = unpack("<f", f.read(4))[0]
                    vy12m = unpack("<f", f.read(4))[0]
                    vz12m = unpack("<f", f.read(4))[0]
                    type12m = unpack("B", f.read(1))[0]
                    value12m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12m = unpack("<f", f.read(4))[0]
                    vx13m = unpack("<f", f.read(4))[0]
                    vy13m = unpack("<f", f.read(4))[0]
                    vz13m = unpack("<f", f.read(4))[0]
                    type13m = unpack("B", f.read(1))[0]
                    value13m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13m = unpack("<f", f.read(4))[0]
                    vx14m = unpack("<f", f.read(4))[0]
                    vy14m = unpack("<f", f.read(4))[0]
                    vz14m = unpack("<f", f.read(4))[0]
                    type14m = unpack("B", f.read(1))[0]
                    value14m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14m = unpack("<f", f.read(4))[0]
                    vx15m = unpack("<f", f.read(4))[0]
                    vy15m = unpack("<f", f.read(4))[0]
                    vz15m = unpack("<f", f.read(4))[0]
                    type15m = unpack("B", f.read(1))[0]
                    value15m = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15m = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1n = unpack("<f", f.read(4))[0]
                    vy1n = unpack("<f", f.read(4))[0]
                    vz1n = unpack("<f", f.read(4))[0]
                    type1n = unpack("B", f.read(1))[0]
                    value1n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1n = unpack("<f", f.read(4))[0]
                    vx2n = unpack("<f", f.read(4))[0]
                    vy2n = unpack("<f", f.read(4))[0]
                    vz2n = unpack("<f", f.read(4))[0]
                    type2n = unpack("B", f.read(1))[0]
                    value2n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2n = unpack("<f", f.read(4))[0]
                    vx3n = unpack("<f", f.read(4))[0]
                    vy3n = unpack("<f", f.read(4))[0]
                    vz3n = unpack("<f", f.read(4))[0]
                    type3n = unpack("B", f.read(1))[0]
                    value3n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3n = unpack("<f", f.read(4))[0]
                    vx4n = unpack("<f", f.read(4))[0]
                    vy4n = unpack("<f", f.read(4))[0]
                    vz4n = unpack("<f", f.read(4))[0]
                    type4n = unpack("B", f.read(1))[0]
                    value4n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4n = unpack("<f", f.read(4))[0]
                    vx5n = unpack("<f", f.read(4))[0]
                    vy5n = unpack("<f", f.read(4))[0]
                    vz5n = unpack("<f", f.read(4))[0]
                    type5n = unpack("B", f.read(1))[0]
                    value5n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5n = unpack("<f", f.read(4))[0]
                    vx6n = unpack("<f", f.read(4))[0]
                    vy6n = unpack("<f", f.read(4))[0]
                    vz6n = unpack("<f", f.read(4))[0]
                    type6n = unpack("B", f.read(1))[0]
                    value6n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6n = unpack("<f", f.read(4))[0]
                    vx7n = unpack("<f", f.read(4))[0]
                    vy7n = unpack("<f", f.read(4))[0]
                    vz7n = unpack("<f", f.read(4))[0]
                    type7n = unpack("B", f.read(1))[0]
                    value7n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7n = unpack("<f", f.read(4))[0]
                    vx8n = unpack("<f", f.read(4))[0]
                    vy8n = unpack("<f", f.read(4))[0]
                    vz8n = unpack("<f", f.read(4))[0]
                    type8n = unpack("B", f.read(1))[0]
                    value8n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8n = unpack("<f", f.read(4))[0]
                    vx9n = unpack("<f", f.read(4))[0]
                    vy9n = unpack("<f", f.read(4))[0]
                    vz9n = unpack("<f", f.read(4))[0]
                    type9n = unpack("B", f.read(1))[0]
                    value9n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9n = unpack("<f", f.read(4))[0]
                    vx10n = unpack("<f", f.read(4))[0]
                    vy10n = unpack("<f", f.read(4))[0]
                    vz10n = unpack("<f", f.read(4))[0]
                    type10n = unpack("B", f.read(1))[0]
                    value10n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10n = unpack("<f", f.read(4))[0]
                    vx11n = unpack("<f", f.read(4))[0]
                    vy11n = unpack("<f", f.read(4))[0]
                    vz11n = unpack("<f", f.read(4))[0]
                    type11n = unpack("B", f.read(1))[0]
                    value11n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11n = unpack("<f", f.read(4))[0]
                    vx12n = unpack("<f", f.read(4))[0]
                    vy12n = unpack("<f", f.read(4))[0]
                    vz12n = unpack("<f", f.read(4))[0]
                    type12n = unpack("B", f.read(1))[0]
                    value12n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12n = unpack("<f", f.read(4))[0]
                    vx13n = unpack("<f", f.read(4))[0]
                    vy13n = unpack("<f", f.read(4))[0]
                    vz13n = unpack("<f", f.read(4))[0]
                    type13n = unpack("B", f.read(1))[0]
                    value13n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13n = unpack("<f", f.read(4))[0]
                    vx14n = unpack("<f", f.read(4))[0]
                    vy14n = unpack("<f", f.read(4))[0]
                    vz14n = unpack("<f", f.read(4))[0]
                    type14n = unpack("B", f.read(1))[0]
                    value14n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14n = unpack("<f", f.read(4))[0]
                    vx15n = unpack("<f", f.read(4))[0]
                    vy15n = unpack("<f", f.read(4))[0]
                    vz15n = unpack("<f", f.read(4))[0]
                    type15n = unpack("B", f.read(1))[0]
                    value15n = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15n = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1o = unpack("<f", f.read(4))[0]
                    vy1o = unpack("<f", f.read(4))[0]
                    vz1o = unpack("<f", f.read(4))[0]
                    type1o = unpack("B", f.read(1))[0]
                    value1o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1o = unpack("<f", f.read(4))[0]
                    vx2o = unpack("<f", f.read(4))[0]
                    vy2o = unpack("<f", f.read(4))[0]
                    vz2o = unpack("<f", f.read(4))[0]
                    type2o = unpack("B", f.read(1))[0]
                    value2o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2o = unpack("<f", f.read(4))[0]
                    vx3o = unpack("<f", f.read(4))[0]
                    vy3o = unpack("<f", f.read(4))[0]
                    vz3o = unpack("<f", f.read(4))[0]
                    type3o = unpack("B", f.read(1))[0]
                    value3o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3o = unpack("<f", f.read(4))[0]
                    vx4o = unpack("<f", f.read(4))[0]
                    vy4o = unpack("<f", f.read(4))[0]
                    vz4o = unpack("<f", f.read(4))[0]
                    type4o = unpack("B", f.read(1))[0]
                    value4o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4o = unpack("<f", f.read(4))[0]
                    vx5o = unpack("<f", f.read(4))[0]
                    vy5o = unpack("<f", f.read(4))[0]
                    vz5o = unpack("<f", f.read(4))[0]
                    type5o = unpack("B", f.read(1))[0]
                    value5o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5o = unpack("<f", f.read(4))[0]
                    vx6o = unpack("<f", f.read(4))[0]
                    vy6o = unpack("<f", f.read(4))[0]
                    vz6o = unpack("<f", f.read(4))[0]
                    type6o = unpack("B", f.read(1))[0]
                    value6o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6o = unpack("<f", f.read(4))[0]
                    vx7o = unpack("<f", f.read(4))[0]
                    vy7o = unpack("<f", f.read(4))[0]
                    vz7o = unpack("<f", f.read(4))[0]
                    type7o = unpack("B", f.read(1))[0]
                    value7o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7o = unpack("<f", f.read(4))[0]
                    vx8o = unpack("<f", f.read(4))[0]
                    vy8o = unpack("<f", f.read(4))[0]
                    vz8o = unpack("<f", f.read(4))[0]
                    type8o = unpack("B", f.read(1))[0]
                    value8o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8o = unpack("<f", f.read(4))[0]
                    vx9o = unpack("<f", f.read(4))[0]
                    vy9o = unpack("<f", f.read(4))[0]
                    vz9o = unpack("<f", f.read(4))[0]
                    type9o = unpack("B", f.read(1))[0]
                    value9o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9o = unpack("<f", f.read(4))[0]
                    vx10o = unpack("<f", f.read(4))[0]
                    vy10o = unpack("<f", f.read(4))[0]
                    vz10o = unpack("<f", f.read(4))[0]
                    type10o = unpack("B", f.read(1))[0]
                    value10o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10o = unpack("<f", f.read(4))[0]
                    vx11o = unpack("<f", f.read(4))[0]
                    vy11o = unpack("<f", f.read(4))[0]
                    vz11o = unpack("<f", f.read(4))[0]
                    type11o = unpack("B", f.read(1))[0]
                    value11o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11o = unpack("<f", f.read(4))[0]
                    vx12o = unpack("<f", f.read(4))[0]
                    vy12o = unpack("<f", f.read(4))[0]
                    vz12o = unpack("<f", f.read(4))[0]
                    type12o = unpack("B", f.read(1))[0]
                    value12o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12o = unpack("<f", f.read(4))[0]
                    vx13o = unpack("<f", f.read(4))[0]
                    vy13o = unpack("<f", f.read(4))[0]
                    vz13o = unpack("<f", f.read(4))[0]
                    type13o = unpack("B", f.read(1))[0]
                    value13o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13o = unpack("<f", f.read(4))[0]
                    vx14o = unpack("<f", f.read(4))[0]
                    vy14o = unpack("<f", f.read(4))[0]
                    vz14o = unpack("<f", f.read(4))[0]
                    type14o = unpack("B", f.read(1))[0]
                    value14o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14o = unpack("<f", f.read(4))[0]
                    vx15o = unpack("<f", f.read(4))[0]
                    vy15o = unpack("<f", f.read(4))[0]
                    vz15o = unpack("<f", f.read(4))[0]
                    type15o = unpack("B", f.read(1))[0]
                    value15o = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15o = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1p = unpack("<f", f.read(4))[0]
                    vy1p = unpack("<f", f.read(4))[0]
                    vz1p = unpack("<f", f.read(4))[0]
                    type1p = unpack("B", f.read(1))[0]
                    value1p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1p = unpack("<f", f.read(4))[0]
                    vx2p = unpack("<f", f.read(4))[0]
                    vy2p = unpack("<f", f.read(4))[0]
                    vz2p = unpack("<f", f.read(4))[0]
                    type2p = unpack("B", f.read(1))[0]
                    value2p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2p = unpack("<f", f.read(4))[0]
                    vx3p = unpack("<f", f.read(4))[0]
                    vy3p = unpack("<f", f.read(4))[0]
                    vz3p = unpack("<f", f.read(4))[0]
                    type3p = unpack("B", f.read(1))[0]
                    value3p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3p = unpack("<f", f.read(4))[0]
                    vx4p = unpack("<f", f.read(4))[0]
                    vy4p = unpack("<f", f.read(4))[0]
                    vz4p = unpack("<f", f.read(4))[0]
                    type4p = unpack("B", f.read(1))[0]
                    value4p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4p = unpack("<f", f.read(4))[0]
                    vx5p = unpack("<f", f.read(4))[0]
                    vy5p = unpack("<f", f.read(4))[0]
                    vz5p = unpack("<f", f.read(4))[0]
                    type5p = unpack("B", f.read(1))[0]
                    value5p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5p = unpack("<f", f.read(4))[0]
                    vx6p = unpack("<f", f.read(4))[0]
                    vy6p = unpack("<f", f.read(4))[0]
                    vz6p = unpack("<f", f.read(4))[0]
                    type6p = unpack("B", f.read(1))[0]
                    value6p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6p = unpack("<f", f.read(4))[0]
                    vx7p = unpack("<f", f.read(4))[0]
                    vy7p = unpack("<f", f.read(4))[0]
                    vz7p = unpack("<f", f.read(4))[0]
                    type7p = unpack("B", f.read(1))[0]
                    value7p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7p = unpack("<f", f.read(4))[0]
                    vx8p = unpack("<f", f.read(4))[0]
                    vy8p = unpack("<f", f.read(4))[0]
                    vz8p = unpack("<f", f.read(4))[0]
                    type8p = unpack("B", f.read(1))[0]
                    value8p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8p = unpack("<f", f.read(4))[0]
                    vx9p = unpack("<f", f.read(4))[0]
                    vy9p = unpack("<f", f.read(4))[0]
                    vz9p = unpack("<f", f.read(4))[0]
                    type9p = unpack("B", f.read(1))[0]
                    value9p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9p = unpack("<f", f.read(4))[0]
                    vx10p = unpack("<f", f.read(4))[0]
                    vy10p = unpack("<f", f.read(4))[0]
                    vz10p = unpack("<f", f.read(4))[0]
                    type10p = unpack("B", f.read(1))[0]
                    value10p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10p = unpack("<f", f.read(4))[0]
                    vx11p = unpack("<f", f.read(4))[0]
                    vy11p = unpack("<f", f.read(4))[0]
                    vz11p = unpack("<f", f.read(4))[0]
                    type11p = unpack("B", f.read(1))[0]
                    value11p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11p = unpack("<f", f.read(4))[0]
                    vx12p = unpack("<f", f.read(4))[0]
                    vy12p = unpack("<f", f.read(4))[0]
                    vz12p = unpack("<f", f.read(4))[0]
                    type12p = unpack("B", f.read(1))[0]
                    value12p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12p = unpack("<f", f.read(4))[0]
                    vx13p = unpack("<f", f.read(4))[0]
                    vy13p = unpack("<f", f.read(4))[0]
                    vz13p = unpack("<f", f.read(4))[0]
                    type13p = unpack("B", f.read(1))[0]
                    value13p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13p = unpack("<f", f.read(4))[0]
                    vx14p = unpack("<f", f.read(4))[0]
                    vy14p = unpack("<f", f.read(4))[0]
                    vz14p = unpack("<f", f.read(4))[0]
                    type14p = unpack("B", f.read(1))[0]
                    value14p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14p = unpack("<f", f.read(4))[0]
                    vx15p = unpack("<f", f.read(4))[0]
                    vy15p = unpack("<f", f.read(4))[0]
                    vz15p = unpack("<f", f.read(4))[0]
                    type15p = unpack("B", f.read(1))[0]
                    value15p = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15p = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1q = unpack("<f", f.read(4))[0]
                    vy1q = unpack("<f", f.read(4))[0]
                    vz1q = unpack("<f", f.read(4))[0]
                    type1q = unpack("B", f.read(1))[0]
                    value1q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1q = unpack("<f", f.read(4))[0]
                    vx2q = unpack("<f", f.read(4))[0]
                    vy2q = unpack("<f", f.read(4))[0]
                    vz2q = unpack("<f", f.read(4))[0]
                    type2q = unpack("B", f.read(1))[0]
                    value2q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2q = unpack("<f", f.read(4))[0]
                    vx3q = unpack("<f", f.read(4))[0]
                    vy3q = unpack("<f", f.read(4))[0]
                    vz3q = unpack("<f", f.read(4))[0]
                    type3q = unpack("B", f.read(1))[0]
                    value3q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3q = unpack("<f", f.read(4))[0]
                    vx4q = unpack("<f", f.read(4))[0]
                    vy4q = unpack("<f", f.read(4))[0]
                    vz4q = unpack("<f", f.read(4))[0]
                    type4q = unpack("B", f.read(1))[0]
                    value4q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4q = unpack("<f", f.read(4))[0]
                    vx5q = unpack("<f", f.read(4))[0]
                    vy5q = unpack("<f", f.read(4))[0]
                    vz5q = unpack("<f", f.read(4))[0]
                    type5q = unpack("B", f.read(1))[0]
                    value5q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5q = unpack("<f", f.read(4))[0]
                    vx6q = unpack("<f", f.read(4))[0]
                    vy6q = unpack("<f", f.read(4))[0]
                    vz6q = unpack("<f", f.read(4))[0]
                    type6q = unpack("B", f.read(1))[0]
                    value6q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6q = unpack("<f", f.read(4))[0]
                    vx7q = unpack("<f", f.read(4))[0]
                    vy7q = unpack("<f", f.read(4))[0]
                    vz7q = unpack("<f", f.read(4))[0]
                    type7q = unpack("B", f.read(1))[0]
                    value7q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7q = unpack("<f", f.read(4))[0]
                    vx8q = unpack("<f", f.read(4))[0]
                    vy8q = unpack("<f", f.read(4))[0]
                    vz8q = unpack("<f", f.read(4))[0]
                    type8q = unpack("B", f.read(1))[0]
                    value8q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8q = unpack("<f", f.read(4))[0]
                    vx9q = unpack("<f", f.read(4))[0]
                    vy9q = unpack("<f", f.read(4))[0]
                    vz9q = unpack("<f", f.read(4))[0]
                    type9q = unpack("B", f.read(1))[0]
                    value9q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9q = unpack("<f", f.read(4))[0]
                    vx10q = unpack("<f", f.read(4))[0]
                    vy10q = unpack("<f", f.read(4))[0]
                    vz10q = unpack("<f", f.read(4))[0]
                    type10q = unpack("B", f.read(1))[0]
                    value10q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10q = unpack("<f", f.read(4))[0]
                    vx11q = unpack("<f", f.read(4))[0]
                    vy11q = unpack("<f", f.read(4))[0]
                    vz11q = unpack("<f", f.read(4))[0]
                    type11q = unpack("B", f.read(1))[0]
                    value11q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11q = unpack("<f", f.read(4))[0]
                    vx12q = unpack("<f", f.read(4))[0]
                    vy12q = unpack("<f", f.read(4))[0]
                    vz12q = unpack("<f", f.read(4))[0]
                    type12q = unpack("B", f.read(1))[0]
                    value12q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12q = unpack("<f", f.read(4))[0]
                    vx13q = unpack("<f", f.read(4))[0]
                    vy13q = unpack("<f", f.read(4))[0]
                    vz13q = unpack("<f", f.read(4))[0]
                    type13q = unpack("B", f.read(1))[0]
                    value13q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13q = unpack("<f", f.read(4))[0]
                    vx14q = unpack("<f", f.read(4))[0]
                    vy14q = unpack("<f", f.read(4))[0]
                    vz14q = unpack("<f", f.read(4))[0]
                    type14q = unpack("B", f.read(1))[0]
                    value14q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14q = unpack("<f", f.read(4))[0]
                    vx15q = unpack("<f", f.read(4))[0]
                    vy15q = unpack("<f", f.read(4))[0]
                    vz15q = unpack("<f", f.read(4))[0]
                    type15q = unpack("B", f.read(1))[0]
                    value15q = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15q = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1r = unpack("<f", f.read(4))[0]
                    vy1r = unpack("<f", f.read(4))[0]
                    vz1r = unpack("<f", f.read(4))[0]
                    type1r = unpack("B", f.read(1))[0]
                    value1r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1r = unpack("<f", f.read(4))[0]
                    vx2r = unpack("<f", f.read(4))[0]
                    vy2r = unpack("<f", f.read(4))[0]
                    vz2r = unpack("<f", f.read(4))[0]
                    type2r = unpack("B", f.read(1))[0]
                    value2r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2r = unpack("<f", f.read(4))[0]
                    vx3r = unpack("<f", f.read(4))[0]
                    vy3r = unpack("<f", f.read(4))[0]
                    vz3r = unpack("<f", f.read(4))[0]
                    type3r = unpack("B", f.read(1))[0]
                    value3r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3r = unpack("<f", f.read(4))[0]
                    vx4r = unpack("<f", f.read(4))[0]
                    vy4r = unpack("<f", f.read(4))[0]
                    vz4r = unpack("<f", f.read(4))[0]
                    type4r = unpack("B", f.read(1))[0]
                    value4r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4r = unpack("<f", f.read(4))[0]
                    vx5r = unpack("<f", f.read(4))[0]
                    vy5r = unpack("<f", f.read(4))[0]
                    vz5r = unpack("<f", f.read(4))[0]
                    type5r = unpack("B", f.read(1))[0]
                    value5r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5r = unpack("<f", f.read(4))[0]
                    vx6r = unpack("<f", f.read(4))[0]
                    vy6r = unpack("<f", f.read(4))[0]
                    vz6r = unpack("<f", f.read(4))[0]
                    type6r = unpack("B", f.read(1))[0]
                    value6r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6r = unpack("<f", f.read(4))[0]
                    vx7r = unpack("<f", f.read(4))[0]
                    vy7r = unpack("<f", f.read(4))[0]
                    vz7r = unpack("<f", f.read(4))[0]
                    type7r = unpack("B", f.read(1))[0]
                    value7r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7r = unpack("<f", f.read(4))[0]
                    vx8r = unpack("<f", f.read(4))[0]
                    vy8r = unpack("<f", f.read(4))[0]
                    vz8r = unpack("<f", f.read(4))[0]
                    type8r = unpack("B", f.read(1))[0]
                    value8r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8r = unpack("<f", f.read(4))[0]
                    vx9r = unpack("<f", f.read(4))[0]
                    vy9r = unpack("<f", f.read(4))[0]
                    vz9r = unpack("<f", f.read(4))[0]
                    type9r = unpack("B", f.read(1))[0]
                    value9r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9r = unpack("<f", f.read(4))[0]
                    vx10r = unpack("<f", f.read(4))[0]
                    vy10r = unpack("<f", f.read(4))[0]
                    vz10r = unpack("<f", f.read(4))[0]
                    type10r = unpack("B", f.read(1))[0]
                    value10r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10r = unpack("<f", f.read(4))[0]
                    vx11r = unpack("<f", f.read(4))[0]
                    vy11r = unpack("<f", f.read(4))[0]
                    vz11r = unpack("<f", f.read(4))[0]
                    type11r = unpack("B", f.read(1))[0]
                    value11r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11r = unpack("<f", f.read(4))[0]
                    vx12r = unpack("<f", f.read(4))[0]
                    vy12r = unpack("<f", f.read(4))[0]
                    vz12r = unpack("<f", f.read(4))[0]
                    type12r = unpack("B", f.read(1))[0]
                    value12r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12r = unpack("<f", f.read(4))[0]
                    vx13r = unpack("<f", f.read(4))[0]
                    vy13r = unpack("<f", f.read(4))[0]
                    vz13r = unpack("<f", f.read(4))[0]
                    type13r = unpack("B", f.read(1))[0]
                    value13r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13r = unpack("<f", f.read(4))[0]
                    vx14r = unpack("<f", f.read(4))[0]
                    vy14r = unpack("<f", f.read(4))[0]
                    vz14r = unpack("<f", f.read(4))[0]
                    type14r = unpack("B", f.read(1))[0]
                    value14r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14r = unpack("<f", f.read(4))[0]
                    vx15r = unpack("<f", f.read(4))[0]
                    vy15r = unpack("<f", f.read(4))[0]
                    vz15r = unpack("<f", f.read(4))[0]
                    type15r = unpack("B", f.read(1))[0]
                    value15r = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15r = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1s = unpack("<f", f.read(4))[0]
                    vy1s = unpack("<f", f.read(4))[0]
                    vz1s = unpack("<f", f.read(4))[0]
                    type1s = unpack("B", f.read(1))[0]
                    value1s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1s = unpack("<f", f.read(4))[0]
                    vx2s = unpack("<f", f.read(4))[0]
                    vy2s = unpack("<f", f.read(4))[0]
                    vz2s = unpack("<f", f.read(4))[0]
                    type2s = unpack("B", f.read(1))[0]
                    value2s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2s = unpack("<f", f.read(4))[0]
                    vx3s = unpack("<f", f.read(4))[0]
                    vy3s = unpack("<f", f.read(4))[0]
                    vz3s = unpack("<f", f.read(4))[0]
                    type3s = unpack("B", f.read(1))[0]
                    value3s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3s = unpack("<f", f.read(4))[0]
                    vx4s = unpack("<f", f.read(4))[0]
                    vy4s = unpack("<f", f.read(4))[0]
                    vz4s = unpack("<f", f.read(4))[0]
                    type4s = unpack("B", f.read(1))[0]
                    value4s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4s = unpack("<f", f.read(4))[0]
                    vx5s = unpack("<f", f.read(4))[0]
                    vy5s = unpack("<f", f.read(4))[0]
                    vz5s = unpack("<f", f.read(4))[0]
                    type5s = unpack("B", f.read(1))[0]
                    value5s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5s = unpack("<f", f.read(4))[0]
                    vx6s = unpack("<f", f.read(4))[0]
                    vy6s = unpack("<f", f.read(4))[0]
                    vz6s = unpack("<f", f.read(4))[0]
                    type6s = unpack("B", f.read(1))[0]
                    value6s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6s = unpack("<f", f.read(4))[0]
                    vx7s = unpack("<f", f.read(4))[0]
                    vy7s = unpack("<f", f.read(4))[0]
                    vz7s = unpack("<f", f.read(4))[0]
                    type7s = unpack("B", f.read(1))[0]
                    value7s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7s = unpack("<f", f.read(4))[0]
                    vx8s = unpack("<f", f.read(4))[0]
                    vy8s = unpack("<f", f.read(4))[0]
                    vz8s = unpack("<f", f.read(4))[0]
                    type8s = unpack("B", f.read(1))[0]
                    value8s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8s = unpack("<f", f.read(4))[0]
                    vx9s = unpack("<f", f.read(4))[0]
                    vy9s = unpack("<f", f.read(4))[0]
                    vz9s = unpack("<f", f.read(4))[0]
                    type9s = unpack("B", f.read(1))[0]
                    value9s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9s = unpack("<f", f.read(4))[0]
                    vx10s = unpack("<f", f.read(4))[0]
                    vy10s = unpack("<f", f.read(4))[0]
                    vz10s = unpack("<f", f.read(4))[0]
                    type10s = unpack("B", f.read(1))[0]
                    value10s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10s = unpack("<f", f.read(4))[0]
                    vx11s = unpack("<f", f.read(4))[0]
                    vy11s = unpack("<f", f.read(4))[0]
                    vz11s = unpack("<f", f.read(4))[0]
                    type11s = unpack("B", f.read(1))[0]
                    value11s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11s = unpack("<f", f.read(4))[0]
                    vx12s = unpack("<f", f.read(4))[0]
                    vy12s = unpack("<f", f.read(4))[0]
                    vz12s = unpack("<f", f.read(4))[0]
                    type12s = unpack("B", f.read(1))[0]
                    value12s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12s = unpack("<f", f.read(4))[0]
                    vx13s = unpack("<f", f.read(4))[0]
                    vy13s = unpack("<f", f.read(4))[0]
                    vz13s = unpack("<f", f.read(4))[0]
                    type13s = unpack("B", f.read(1))[0]
                    value13s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13s = unpack("<f", f.read(4))[0]
                    vx14s = unpack("<f", f.read(4))[0]
                    vy14s = unpack("<f", f.read(4))[0]
                    vz14s = unpack("<f", f.read(4))[0]
                    type14s = unpack("B", f.read(1))[0]
                    value14s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14s = unpack("<f", f.read(4))[0]
                    vx15s = unpack("<f", f.read(4))[0]
                    vy15s = unpack("<f", f.read(4))[0]
                    vz15s = unpack("<f", f.read(4))[0]
                    type15s = unpack("B", f.read(1))[0]
                    value15s = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15s = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1t = unpack("<f", f.read(4))[0]
                    vy1t = unpack("<f", f.read(4))[0]
                    vz1t = unpack("<f", f.read(4))[0]
                    type1t = unpack("B", f.read(1))[0]
                    value1t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1t = unpack("<f", f.read(4))[0]
                    vx2t = unpack("<f", f.read(4))[0]
                    vy2t = unpack("<f", f.read(4))[0]
                    vz2t = unpack("<f", f.read(4))[0]
                    type2t = unpack("B", f.read(1))[0]
                    value2t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2t = unpack("<f", f.read(4))[0]
                    vx3t = unpack("<f", f.read(4))[0]
                    vy3t = unpack("<f", f.read(4))[0]
                    vz3t = unpack("<f", f.read(4))[0]
                    type3t = unpack("B", f.read(1))[0]
                    value3t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3t = unpack("<f", f.read(4))[0]
                    vx4t = unpack("<f", f.read(4))[0]
                    vy4t = unpack("<f", f.read(4))[0]
                    vz4t = unpack("<f", f.read(4))[0]
                    type4t = unpack("B", f.read(1))[0]
                    value4t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4t = unpack("<f", f.read(4))[0]
                    vx5t = unpack("<f", f.read(4))[0]
                    vy5t = unpack("<f", f.read(4))[0]
                    vz5t = unpack("<f", f.read(4))[0]
                    type5t = unpack("B", f.read(1))[0]
                    value5t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5t = unpack("<f", f.read(4))[0]
                    vx6t = unpack("<f", f.read(4))[0]
                    vy6t = unpack("<f", f.read(4))[0]
                    vz6t = unpack("<f", f.read(4))[0]
                    type6t = unpack("B", f.read(1))[0]
                    value6t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6t = unpack("<f", f.read(4))[0]
                    vx7t = unpack("<f", f.read(4))[0]
                    vy7t = unpack("<f", f.read(4))[0]
                    vz7t = unpack("<f", f.read(4))[0]
                    type7t = unpack("B", f.read(1))[0]
                    value7t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7t = unpack("<f", f.read(4))[0]
                    vx8t = unpack("<f", f.read(4))[0]
                    vy8t = unpack("<f", f.read(4))[0]
                    vz8t = unpack("<f", f.read(4))[0]
                    type8t = unpack("B", f.read(1))[0]
                    value8t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8t = unpack("<f", f.read(4))[0]
                    vx9t = unpack("<f", f.read(4))[0]
                    vy9t = unpack("<f", f.read(4))[0]
                    vz9t = unpack("<f", f.read(4))[0]
                    type9t = unpack("B", f.read(1))[0]
                    value9t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9t = unpack("<f", f.read(4))[0]
                    vx10t = unpack("<f", f.read(4))[0]
                    vy10t = unpack("<f", f.read(4))[0]
                    vz10t = unpack("<f", f.read(4))[0]
                    type10t = unpack("B", f.read(1))[0]
                    value10t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10t = unpack("<f", f.read(4))[0]
                    vx11t = unpack("<f", f.read(4))[0]
                    vy11t = unpack("<f", f.read(4))[0]
                    vz11t = unpack("<f", f.read(4))[0]
                    type11t = unpack("B", f.read(1))[0]
                    value11t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11t = unpack("<f", f.read(4))[0]
                    vx12t = unpack("<f", f.read(4))[0]
                    vy12t = unpack("<f", f.read(4))[0]
                    vz12t = unpack("<f", f.read(4))[0]
                    type12t = unpack("B", f.read(1))[0]
                    value12t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12t = unpack("<f", f.read(4))[0]
                    vx13t = unpack("<f", f.read(4))[0]
                    vy13t = unpack("<f", f.read(4))[0]
                    vz13t = unpack("<f", f.read(4))[0]
                    type13t = unpack("B", f.read(1))[0]
                    value13t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13t = unpack("<f", f.read(4))[0]
                    vx14t = unpack("<f", f.read(4))[0]
                    vy14t = unpack("<f", f.read(4))[0]
                    vz14t = unpack("<f", f.read(4))[0]
                    type14t = unpack("B", f.read(1))[0]
                    value14t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14t = unpack("<f", f.read(4))[0]
                    vx15t = unpack("<f", f.read(4))[0]
                    vy15t = unpack("<f", f.read(4))[0]
                    vz15t = unpack("<f", f.read(4))[0]
                    type15t = unpack("B", f.read(1))[0]
                    value15t = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15t = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1u = unpack("<f", f.read(4))[0]
                    vy1u = unpack("<f", f.read(4))[0]
                    vz1u = unpack("<f", f.read(4))[0]
                    type1u = unpack("B", f.read(1))[0]
                    value1u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1u = unpack("<f", f.read(4))[0]
                    vx2u = unpack("<f", f.read(4))[0]
                    vy2u = unpack("<f", f.read(4))[0]
                    vz2u = unpack("<f", f.read(4))[0]
                    type2u = unpack("B", f.read(1))[0]
                    value2u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2u = unpack("<f", f.read(4))[0]
                    vx3u = unpack("<f", f.read(4))[0]
                    vy3u = unpack("<f", f.read(4))[0]
                    vz3u = unpack("<f", f.read(4))[0]
                    type3u = unpack("B", f.read(1))[0]
                    value3u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3u = unpack("<f", f.read(4))[0]
                    vx4u = unpack("<f", f.read(4))[0]
                    vy4u = unpack("<f", f.read(4))[0]
                    vz4u = unpack("<f", f.read(4))[0]
                    type4u = unpack("B", f.read(1))[0]
                    value4u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4u = unpack("<f", f.read(4))[0]
                    vx5u = unpack("<f", f.read(4))[0]
                    vy5u = unpack("<f", f.read(4))[0]
                    vz5u = unpack("<f", f.read(4))[0]
                    type5u = unpack("B", f.read(1))[0]
                    value5u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5u = unpack("<f", f.read(4))[0]
                    vx6u = unpack("<f", f.read(4))[0]
                    vy6u = unpack("<f", f.read(4))[0]
                    vz6u = unpack("<f", f.read(4))[0]
                    type6u = unpack("B", f.read(1))[0]
                    value6u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6u = unpack("<f", f.read(4))[0]
                    vx7u = unpack("<f", f.read(4))[0]
                    vy7u = unpack("<f", f.read(4))[0]
                    vz7u = unpack("<f", f.read(4))[0]
                    type7u = unpack("B", f.read(1))[0]
                    value7u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7u = unpack("<f", f.read(4))[0]
                    vx8u = unpack("<f", f.read(4))[0]
                    vy8u = unpack("<f", f.read(4))[0]
                    vz8u = unpack("<f", f.read(4))[0]
                    type8u = unpack("B", f.read(1))[0]
                    value8u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8u = unpack("<f", f.read(4))[0]
                    vx9u = unpack("<f", f.read(4))[0]
                    vy9u = unpack("<f", f.read(4))[0]
                    vz9u = unpack("<f", f.read(4))[0]
                    type9u = unpack("B", f.read(1))[0]
                    value9u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9u = unpack("<f", f.read(4))[0]
                    vx10u = unpack("<f", f.read(4))[0]
                    vy10u = unpack("<f", f.read(4))[0]
                    vz10u = unpack("<f", f.read(4))[0]
                    type10u = unpack("B", f.read(1))[0]
                    value10u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10u = unpack("<f", f.read(4))[0]
                    vx11u = unpack("<f", f.read(4))[0]
                    vy11u = unpack("<f", f.read(4))[0]
                    vz11u = unpack("<f", f.read(4))[0]
                    type11u = unpack("B", f.read(1))[0]
                    value11u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11u = unpack("<f", f.read(4))[0]
                    vx12u = unpack("<f", f.read(4))[0]
                    vy12u = unpack("<f", f.read(4))[0]
                    vz12u = unpack("<f", f.read(4))[0]
                    type12u = unpack("B", f.read(1))[0]
                    value12u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12u = unpack("<f", f.read(4))[0]
                    vx13u = unpack("<f", f.read(4))[0]
                    vy13u = unpack("<f", f.read(4))[0]
                    vz13u = unpack("<f", f.read(4))[0]
                    type13u = unpack("B", f.read(1))[0]
                    value13u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13u = unpack("<f", f.read(4))[0]
                    vx14u = unpack("<f", f.read(4))[0]
                    vy14u = unpack("<f", f.read(4))[0]
                    vz14u = unpack("<f", f.read(4))[0]
                    type14u = unpack("B", f.read(1))[0]
                    value14u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14u = unpack("<f", f.read(4))[0]
                    vx15u = unpack("<f", f.read(4))[0]
                    vy15u = unpack("<f", f.read(4))[0]
                    vz15u = unpack("<f", f.read(4))[0]
                    type15u = unpack("B", f.read(1))[0]
                    value15u = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15u = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1v = unpack("<f", f.read(4))[0]
                    vy1v = unpack("<f", f.read(4))[0]
                    vz1v = unpack("<f", f.read(4))[0]
                    type1v = unpack("B", f.read(1))[0]
                    value1v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1v = unpack("<f", f.read(4))[0]
                    vx2v = unpack("<f", f.read(4))[0]
                    vy2v = unpack("<f", f.read(4))[0]
                    vz2v = unpack("<f", f.read(4))[0]
                    type2v = unpack("B", f.read(1))[0]
                    value2v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2v = unpack("<f", f.read(4))[0]
                    vx3v = unpack("<f", f.read(4))[0]
                    vy3v = unpack("<f", f.read(4))[0]
                    vz3v = unpack("<f", f.read(4))[0]
                    type3v = unpack("B", f.read(1))[0]
                    value3v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3v = unpack("<f", f.read(4))[0]
                    vx4v = unpack("<f", f.read(4))[0]
                    vy4v = unpack("<f", f.read(4))[0]
                    vz4v = unpack("<f", f.read(4))[0]
                    type4v = unpack("B", f.read(1))[0]
                    value4v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4v = unpack("<f", f.read(4))[0]
                    vx5v = unpack("<f", f.read(4))[0]
                    vy5v = unpack("<f", f.read(4))[0]
                    vz5v = unpack("<f", f.read(4))[0]
                    type5v = unpack("B", f.read(1))[0]
                    value5v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5v = unpack("<f", f.read(4))[0]
                    vx6v = unpack("<f", f.read(4))[0]
                    vy6v = unpack("<f", f.read(4))[0]
                    vz6v = unpack("<f", f.read(4))[0]
                    type6v = unpack("B", f.read(1))[0]
                    value6v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6v = unpack("<f", f.read(4))[0]
                    vx7v = unpack("<f", f.read(4))[0]
                    vy7v = unpack("<f", f.read(4))[0]
                    vz7v = unpack("<f", f.read(4))[0]
                    type7v = unpack("B", f.read(1))[0]
                    value7v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7v = unpack("<f", f.read(4))[0]
                    vx8v = unpack("<f", f.read(4))[0]
                    vy8v = unpack("<f", f.read(4))[0]
                    vz8v = unpack("<f", f.read(4))[0]
                    type8v = unpack("B", f.read(1))[0]
                    value8v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8v = unpack("<f", f.read(4))[0]
                    vx9v = unpack("<f", f.read(4))[0]
                    vy9v = unpack("<f", f.read(4))[0]
                    vz9v = unpack("<f", f.read(4))[0]
                    type9v = unpack("B", f.read(1))[0]
                    value9v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9v = unpack("<f", f.read(4))[0]
                    vx10v = unpack("<f", f.read(4))[0]
                    vy10v = unpack("<f", f.read(4))[0]
                    vz10v = unpack("<f", f.read(4))[0]
                    type10v = unpack("B", f.read(1))[0]
                    value10v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10v = unpack("<f", f.read(4))[0]
                    vx11v = unpack("<f", f.read(4))[0]
                    vy11v = unpack("<f", f.read(4))[0]
                    vz11v = unpack("<f", f.read(4))[0]
                    type11v = unpack("B", f.read(1))[0]
                    value11v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11v = unpack("<f", f.read(4))[0]
                    vx12v = unpack("<f", f.read(4))[0]
                    vy12v = unpack("<f", f.read(4))[0]
                    vz12v = unpack("<f", f.read(4))[0]
                    type12v = unpack("B", f.read(1))[0]
                    value12v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12v = unpack("<f", f.read(4))[0]
                    vx13v = unpack("<f", f.read(4))[0]
                    vy13v = unpack("<f", f.read(4))[0]
                    vz13v = unpack("<f", f.read(4))[0]
                    type13v = unpack("B", f.read(1))[0]
                    value13v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13v = unpack("<f", f.read(4))[0]
                    vx14v = unpack("<f", f.read(4))[0]
                    vy14v = unpack("<f", f.read(4))[0]
                    vz14v = unpack("<f", f.read(4))[0]
                    type14v = unpack("B", f.read(1))[0]
                    value14v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14v = unpack("<f", f.read(4))[0]
                    vx15v = unpack("<f", f.read(4))[0]
                    vy15v = unpack("<f", f.read(4))[0]
                    vz15v = unpack("<f", f.read(4))[0]
                    type15v = unpack("B", f.read(1))[0]
                    value15v = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15v = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1w = unpack("<f", f.read(4))[0]
                    vy1w = unpack("<f", f.read(4))[0]
                    vz1w = unpack("<f", f.read(4))[0]
                    type1w = unpack("B", f.read(1))[0]
                    value1w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1w = unpack("<f", f.read(4))[0]
                    vx2w = unpack("<f", f.read(4))[0]
                    vy2w = unpack("<f", f.read(4))[0]
                    vz2w = unpack("<f", f.read(4))[0]
                    type2w = unpack("B", f.read(1))[0]
                    value2w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2w = unpack("<f", f.read(4))[0]
                    vx3w = unpack("<f", f.read(4))[0]
                    vy3w = unpack("<f", f.read(4))[0]
                    vz3w = unpack("<f", f.read(4))[0]
                    type3w = unpack("B", f.read(1))[0]
                    value3w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3w = unpack("<f", f.read(4))[0]
                    vx4w = unpack("<f", f.read(4))[0]
                    vy4w = unpack("<f", f.read(4))[0]
                    vz4w = unpack("<f", f.read(4))[0]
                    type4w = unpack("B", f.read(1))[0]
                    value4w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4w = unpack("<f", f.read(4))[0]
                    vx5w = unpack("<f", f.read(4))[0]
                    vy5w = unpack("<f", f.read(4))[0]
                    vz5w = unpack("<f", f.read(4))[0]
                    type5w = unpack("B", f.read(1))[0]
                    value5w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5w = unpack("<f", f.read(4))[0]
                    vx6w = unpack("<f", f.read(4))[0]
                    vy6w = unpack("<f", f.read(4))[0]
                    vz6w = unpack("<f", f.read(4))[0]
                    type6w = unpack("B", f.read(1))[0]
                    value6w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6w = unpack("<f", f.read(4))[0]
                    vx7w = unpack("<f", f.read(4))[0]
                    vy7w = unpack("<f", f.read(4))[0]
                    vz7w = unpack("<f", f.read(4))[0]
                    type7w = unpack("B", f.read(1))[0]
                    value7w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7w = unpack("<f", f.read(4))[0]
                    vx8w = unpack("<f", f.read(4))[0]
                    vy8w = unpack("<f", f.read(4))[0]
                    vz8w = unpack("<f", f.read(4))[0]
                    type8w = unpack("B", f.read(1))[0]
                    value8w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8w = unpack("<f", f.read(4))[0]
                    vx9w = unpack("<f", f.read(4))[0]
                    vy9w = unpack("<f", f.read(4))[0]
                    vz9w = unpack("<f", f.read(4))[0]
                    type9w = unpack("B", f.read(1))[0]
                    value9w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9w = unpack("<f", f.read(4))[0]
                    vx10w = unpack("<f", f.read(4))[0]
                    vy10w = unpack("<f", f.read(4))[0]
                    vz10w = unpack("<f", f.read(4))[0]
                    type10w = unpack("B", f.read(1))[0]
                    value10w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10w = unpack("<f", f.read(4))[0]
                    vx11w = unpack("<f", f.read(4))[0]
                    vy11w = unpack("<f", f.read(4))[0]
                    vz11w = unpack("<f", f.read(4))[0]
                    type11w = unpack("B", f.read(1))[0]
                    value11w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11w = unpack("<f", f.read(4))[0]
                    vx12w = unpack("<f", f.read(4))[0]
                    vy12w = unpack("<f", f.read(4))[0]
                    vz12w = unpack("<f", f.read(4))[0]
                    type12w = unpack("B", f.read(1))[0]
                    value12w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12w = unpack("<f", f.read(4))[0]
                    vx13w = unpack("<f", f.read(4))[0]
                    vy13w = unpack("<f", f.read(4))[0]
                    vz13w = unpack("<f", f.read(4))[0]
                    type13w = unpack("B", f.read(1))[0]
                    value13w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13w = unpack("<f", f.read(4))[0]
                    vx14w = unpack("<f", f.read(4))[0]
                    vy14w = unpack("<f", f.read(4))[0]
                    vz14w = unpack("<f", f.read(4))[0]
                    type14w = unpack("B", f.read(1))[0]
                    value14w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14w = unpack("<f", f.read(4))[0]
                    vx15w = unpack("<f", f.read(4))[0]
                    vy15w = unpack("<f", f.read(4))[0]
                    vz15w = unpack("<f", f.read(4))[0]
                    type15w = unpack("B", f.read(1))[0]
                    value15w = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15w = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1x = unpack("<f", f.read(4))[0]
                    vy1x = unpack("<f", f.read(4))[0]
                    vz1x = unpack("<f", f.read(4))[0]
                    type1x = unpack("B", f.read(1))[0]
                    value1x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1x = unpack("<f", f.read(4))[0]
                    vx2x = unpack("<f", f.read(4))[0]
                    vy2x = unpack("<f", f.read(4))[0]
                    vz2x = unpack("<f", f.read(4))[0]
                    type2x = unpack("B", f.read(1))[0]
                    value2x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2x = unpack("<f", f.read(4))[0]
                    vx3x = unpack("<f", f.read(4))[0]
                    vy3x = unpack("<f", f.read(4))[0]
                    vz3x = unpack("<f", f.read(4))[0]
                    type3x = unpack("B", f.read(1))[0]
                    value3x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3x = unpack("<f", f.read(4))[0]
                    vx4x = unpack("<f", f.read(4))[0]
                    vy4x = unpack("<f", f.read(4))[0]
                    vz4x = unpack("<f", f.read(4))[0]
                    type4x = unpack("B", f.read(1))[0]
                    value4x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4x = unpack("<f", f.read(4))[0]
                    vx5x = unpack("<f", f.read(4))[0]
                    vy5x = unpack("<f", f.read(4))[0]
                    vz5x = unpack("<f", f.read(4))[0]
                    type5x = unpack("B", f.read(1))[0]
                    value5x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5x = unpack("<f", f.read(4))[0]
                    vx6x = unpack("<f", f.read(4))[0]
                    vy6x = unpack("<f", f.read(4))[0]
                    vz6x = unpack("<f", f.read(4))[0]
                    type6x = unpack("B", f.read(1))[0]
                    value6x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6x = unpack("<f", f.read(4))[0]
                    vx7x = unpack("<f", f.read(4))[0]
                    vy7x = unpack("<f", f.read(4))[0]
                    vz7x = unpack("<f", f.read(4))[0]
                    type7x = unpack("B", f.read(1))[0]
                    value7x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7x = unpack("<f", f.read(4))[0]
                    vx8x = unpack("<f", f.read(4))[0]
                    vy8x = unpack("<f", f.read(4))[0]
                    vz8x = unpack("<f", f.read(4))[0]
                    type8x = unpack("B", f.read(1))[0]
                    value8x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8x = unpack("<f", f.read(4))[0]
                    vx9x = unpack("<f", f.read(4))[0]
                    vy9x = unpack("<f", f.read(4))[0]
                    vz9x = unpack("<f", f.read(4))[0]
                    type9x = unpack("B", f.read(1))[0]
                    value9x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9x = unpack("<f", f.read(4))[0]
                    vx10x = unpack("<f", f.read(4))[0]
                    vy10x = unpack("<f", f.read(4))[0]
                    vz10x = unpack("<f", f.read(4))[0]
                    type10x = unpack("B", f.read(1))[0]
                    value10x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10x = unpack("<f", f.read(4))[0]
                    vx11x = unpack("<f", f.read(4))[0]
                    vy11x = unpack("<f", f.read(4))[0]
                    vz11x = unpack("<f", f.read(4))[0]
                    type11x = unpack("B", f.read(1))[0]
                    value11x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11x = unpack("<f", f.read(4))[0]
                    vx12x = unpack("<f", f.read(4))[0]
                    vy12x = unpack("<f", f.read(4))[0]
                    vz12x = unpack("<f", f.read(4))[0]
                    type12x = unpack("B", f.read(1))[0]
                    value12x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12x = unpack("<f", f.read(4))[0]
                    vx13x = unpack("<f", f.read(4))[0]
                    vy13x = unpack("<f", f.read(4))[0]
                    vz13x = unpack("<f", f.read(4))[0]
                    type13x = unpack("B", f.read(1))[0]
                    value13x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13x = unpack("<f", f.read(4))[0]
                    vx14x = unpack("<f", f.read(4))[0]
                    vy14x = unpack("<f", f.read(4))[0]
                    vz14x = unpack("<f", f.read(4))[0]
                    type14x = unpack("B", f.read(1))[0]
                    value14x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14x = unpack("<f", f.read(4))[0]
                    vx15x = unpack("<f", f.read(4))[0]
                    vy15x = unpack("<f", f.read(4))[0]
                    vz15x = unpack("<f", f.read(4))[0]
                    type15x = unpack("B", f.read(1))[0]
                    value15x = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15x = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1y = unpack("<f", f.read(4))[0]
                    vy1y = unpack("<f", f.read(4))[0]
                    vz1y = unpack("<f", f.read(4))[0]
                    type1y = unpack("B", f.read(1))[0]
                    value1y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1y = unpack("<f", f.read(4))[0]
                    vx2y = unpack("<f", f.read(4))[0]
                    vy2y = unpack("<f", f.read(4))[0]
                    vz2y = unpack("<f", f.read(4))[0]
                    type2y = unpack("B", f.read(1))[0]
                    value2y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2y = unpack("<f", f.read(4))[0]
                    vx3y = unpack("<f", f.read(4))[0]
                    vy3y = unpack("<f", f.read(4))[0]
                    vz3y = unpack("<f", f.read(4))[0]
                    type3y = unpack("B", f.read(1))[0]
                    value3y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3y = unpack("<f", f.read(4))[0]
                    vx4y = unpack("<f", f.read(4))[0]
                    vy4y = unpack("<f", f.read(4))[0]
                    vz4y = unpack("<f", f.read(4))[0]
                    type4y = unpack("B", f.read(1))[0]
                    value4y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4y = unpack("<f", f.read(4))[0]
                    vx5y = unpack("<f", f.read(4))[0]
                    vy5y = unpack("<f", f.read(4))[0]
                    vz5y = unpack("<f", f.read(4))[0]
                    type5y = unpack("B", f.read(1))[0]
                    value5y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5y = unpack("<f", f.read(4))[0]
                    vx6y = unpack("<f", f.read(4))[0]
                    vy6y = unpack("<f", f.read(4))[0]
                    vz6y = unpack("<f", f.read(4))[0]
                    type6y = unpack("B", f.read(1))[0]
                    value6y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6y = unpack("<f", f.read(4))[0]
                    vx7y = unpack("<f", f.read(4))[0]
                    vy7y = unpack("<f", f.read(4))[0]
                    vz7y = unpack("<f", f.read(4))[0]
                    type7y = unpack("B", f.read(1))[0]
                    value7y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7y = unpack("<f", f.read(4))[0]
                    vx8y = unpack("<f", f.read(4))[0]
                    vy8y = unpack("<f", f.read(4))[0]
                    vz8y = unpack("<f", f.read(4))[0]
                    type8y = unpack("B", f.read(1))[0]
                    value8y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8y = unpack("<f", f.read(4))[0]
                    vx9y = unpack("<f", f.read(4))[0]
                    vy9y = unpack("<f", f.read(4))[0]
                    vz9y = unpack("<f", f.read(4))[0]
                    type9y = unpack("B", f.read(1))[0]
                    value9y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9y = unpack("<f", f.read(4))[0]
                    vx10y = unpack("<f", f.read(4))[0]
                    vy10y = unpack("<f", f.read(4))[0]
                    vz10y = unpack("<f", f.read(4))[0]
                    type10y = unpack("B", f.read(1))[0]
                    value10y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10y = unpack("<f", f.read(4))[0]
                    vx11y = unpack("<f", f.read(4))[0]
                    vy11y = unpack("<f", f.read(4))[0]
                    vz11y = unpack("<f", f.read(4))[0]
                    type11y = unpack("B", f.read(1))[0]
                    value11y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11y = unpack("<f", f.read(4))[0]
                    vx12y = unpack("<f", f.read(4))[0]
                    vy12y = unpack("<f", f.read(4))[0]
                    vz12y = unpack("<f", f.read(4))[0]
                    type12y = unpack("B", f.read(1))[0]
                    value12y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12y = unpack("<f", f.read(4))[0]
                    vx13y = unpack("<f", f.read(4))[0]
                    vy13y = unpack("<f", f.read(4))[0]
                    vz13y = unpack("<f", f.read(4))[0]
                    type13y = unpack("B", f.read(1))[0]
                    value13y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13y = unpack("<f", f.read(4))[0]
                    vx14y = unpack("<f", f.read(4))[0]
                    vy14y = unpack("<f", f.read(4))[0]
                    vz14y = unpack("<f", f.read(4))[0]
                    type14y = unpack("B", f.read(1))[0]
                    value14y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14y = unpack("<f", f.read(4))[0]
                    vx15y = unpack("<f", f.read(4))[0]
                    vy15y = unpack("<f", f.read(4))[0]
                    vz15y = unpack("<f", f.read(4))[0]
                    type15y = unpack("B", f.read(1))[0]
                    value15y = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15y = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1z = unpack("<f", f.read(4))[0]
                    vy1z = unpack("<f", f.read(4))[0]
                    vz1z = unpack("<f", f.read(4))[0]
                    type1z = unpack("B", f.read(1))[0]
                    value1z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1z = unpack("<f", f.read(4))[0]
                    vx2z = unpack("<f", f.read(4))[0]
                    vy2z = unpack("<f", f.read(4))[0]
                    vz2z = unpack("<f", f.read(4))[0]
                    type2z = unpack("B", f.read(1))[0]
                    value2z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2z = unpack("<f", f.read(4))[0]
                    vx3z = unpack("<f", f.read(4))[0]
                    vy3z = unpack("<f", f.read(4))[0]
                    vz3z = unpack("<f", f.read(4))[0]
                    type3z = unpack("B", f.read(1))[0]
                    value3z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3z = unpack("<f", f.read(4))[0]
                    vx4z = unpack("<f", f.read(4))[0]
                    vy4z = unpack("<f", f.read(4))[0]
                    vz4z = unpack("<f", f.read(4))[0]
                    type4z = unpack("B", f.read(1))[0]
                    value4z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4z = unpack("<f", f.read(4))[0]
                    vx5z = unpack("<f", f.read(4))[0]
                    vy5z = unpack("<f", f.read(4))[0]
                    vz5z = unpack("<f", f.read(4))[0]
                    type5z = unpack("B", f.read(1))[0]
                    value5z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5z = unpack("<f", f.read(4))[0]
                    vx6z = unpack("<f", f.read(4))[0]
                    vy6z = unpack("<f", f.read(4))[0]
                    vz6z = unpack("<f", f.read(4))[0]
                    type6z = unpack("B", f.read(1))[0]
                    value6z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6z = unpack("<f", f.read(4))[0]
                    vx7z = unpack("<f", f.read(4))[0]
                    vy7z = unpack("<f", f.read(4))[0]
                    vz7z = unpack("<f", f.read(4))[0]
                    type7z = unpack("B", f.read(1))[0]
                    value7z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7z = unpack("<f", f.read(4))[0]
                    vx8z = unpack("<f", f.read(4))[0]
                    vy8z = unpack("<f", f.read(4))[0]
                    vz8z = unpack("<f", f.read(4))[0]
                    type8z = unpack("B", f.read(1))[0]
                    value8z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8z = unpack("<f", f.read(4))[0]
                    vx9z = unpack("<f", f.read(4))[0]
                    vy9z = unpack("<f", f.read(4))[0]
                    vz9z = unpack("<f", f.read(4))[0]
                    type9z = unpack("B", f.read(1))[0]
                    value9z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9z = unpack("<f", f.read(4))[0]
                    vx10z = unpack("<f", f.read(4))[0]
                    vy10z = unpack("<f", f.read(4))[0]
                    vz10z = unpack("<f", f.read(4))[0]
                    type10z = unpack("B", f.read(1))[0]
                    value10z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10z = unpack("<f", f.read(4))[0]
                    vx11z = unpack("<f", f.read(4))[0]
                    vy11z = unpack("<f", f.read(4))[0]
                    vz11z = unpack("<f", f.read(4))[0]
                    type11z = unpack("B", f.read(1))[0]
                    value11z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11z = unpack("<f", f.read(4))[0]
                    vx12z = unpack("<f", f.read(4))[0]
                    vy12z = unpack("<f", f.read(4))[0]
                    vz12z = unpack("<f", f.read(4))[0]
                    type12z = unpack("B", f.read(1))[0]
                    value12z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12z = unpack("<f", f.read(4))[0]
                    vx13z = unpack("<f", f.read(4))[0]
                    vy13z = unpack("<f", f.read(4))[0]
                    vz13z = unpack("<f", f.read(4))[0]
                    type13z = unpack("B", f.read(1))[0]
                    value13z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13z = unpack("<f", f.read(4))[0]
                    vx14z = unpack("<f", f.read(4))[0]
                    vy14z = unpack("<f", f.read(4))[0]
                    vz14z = unpack("<f", f.read(4))[0]
                    type14z = unpack("B", f.read(1))[0]
                    value14z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14z = unpack("<f", f.read(4))[0]
                    vx15z = unpack("<f", f.read(4))[0]
                    vy15z = unpack("<f", f.read(4))[0]
                    vz15z = unpack("<f", f.read(4))[0]
                    type15z = unpack("B", f.read(1))[0]
                    value15z = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15z = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1aa = unpack("<f", f.read(4))[0]
                    vy1aa = unpack("<f", f.read(4))[0]
                    vz1aa = unpack("<f", f.read(4))[0]
                    type1aa = unpack("B", f.read(1))[0]
                    value1aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1aa = unpack("<f", f.read(4))[0]
                    vx2aa = unpack("<f", f.read(4))[0]
                    vy2aa = unpack("<f", f.read(4))[0]
                    vz2aa = unpack("<f", f.read(4))[0]
                    type2aa = unpack("B", f.read(1))[0]
                    value2aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2aa = unpack("<f", f.read(4))[0]
                    vx3aa = unpack("<f", f.read(4))[0]
                    vy3aa = unpack("<f", f.read(4))[0]
                    vz3aa = unpack("<f", f.read(4))[0]
                    type3aa = unpack("B", f.read(1))[0]
                    value3aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3aa = unpack("<f", f.read(4))[0]
                    vx4aa = unpack("<f", f.read(4))[0]
                    vy4aa = unpack("<f", f.read(4))[0]
                    vz4aa = unpack("<f", f.read(4))[0]
                    type4aa = unpack("B", f.read(1))[0]
                    value4aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4aa = unpack("<f", f.read(4))[0]
                    vx5aa = unpack("<f", f.read(4))[0]
                    vy5aa = unpack("<f", f.read(4))[0]
                    vz5aa = unpack("<f", f.read(4))[0]
                    type5aa = unpack("B", f.read(1))[0]
                    value5aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5aa = unpack("<f", f.read(4))[0]
                    vx6aa = unpack("<f", f.read(4))[0]
                    vy6aa = unpack("<f", f.read(4))[0]
                    vz6aa = unpack("<f", f.read(4))[0]
                    type6aa = unpack("B", f.read(1))[0]
                    value6aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6aa = unpack("<f", f.read(4))[0]
                    vx7aa = unpack("<f", f.read(4))[0]
                    vy7aa = unpack("<f", f.read(4))[0]
                    vz7aa = unpack("<f", f.read(4))[0]
                    type7aa = unpack("B", f.read(1))[0]
                    value7aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7aa = unpack("<f", f.read(4))[0]
                    vx8aa = unpack("<f", f.read(4))[0]
                    vy8aa = unpack("<f", f.read(4))[0]
                    vz8aa = unpack("<f", f.read(4))[0]
                    type8aa = unpack("B", f.read(1))[0]
                    value8aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8aa = unpack("<f", f.read(4))[0]
                    vx9aa = unpack("<f", f.read(4))[0]
                    vy9aa = unpack("<f", f.read(4))[0]
                    vz9aa = unpack("<f", f.read(4))[0]
                    type9aa = unpack("B", f.read(1))[0]
                    value9aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9aa = unpack("<f", f.read(4))[0]
                    vx10aa = unpack("<f", f.read(4))[0]
                    vy10aa = unpack("<f", f.read(4))[0]
                    vz10aa = unpack("<f", f.read(4))[0]
                    type10aa = unpack("B", f.read(1))[0]
                    value10aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10aa = unpack("<f", f.read(4))[0]
                    vx11aa = unpack("<f", f.read(4))[0]
                    vy11aa = unpack("<f", f.read(4))[0]
                    vz11aa = unpack("<f", f.read(4))[0]
                    type11aa = unpack("B", f.read(1))[0]
                    value11aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aa = unpack("<f", f.read(4))[0]
                    vx12aa = unpack("<f", f.read(4))[0]
                    vy12aa = unpack("<f", f.read(4))[0]
                    vz12aa = unpack("<f", f.read(4))[0]
                    type12aa = unpack("B", f.read(1))[0]
                    value12aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12aa = unpack("<f", f.read(4))[0]
                    vx13aa = unpack("<f", f.read(4))[0]
                    vy13aa = unpack("<f", f.read(4))[0]
                    vz13aa = unpack("<f", f.read(4))[0]
                    type13aa = unpack("B", f.read(1))[0]
                    value13aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13aa = unpack("<f", f.read(4))[0]
                    vx14aa = unpack("<f", f.read(4))[0]
                    vy14aa = unpack("<f", f.read(4))[0]
                    vz14aa = unpack("<f", f.read(4))[0]
                    type14aa = unpack("B", f.read(1))[0]
                    value14aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14aa = unpack("<f", f.read(4))[0]
                    vx15aa = unpack("<f", f.read(4))[0]
                    vy15aa = unpack("<f", f.read(4))[0]
                    vz15aa = unpack("<f", f.read(4))[0]
                    type15aa = unpack("B", f.read(1))[0]
                    value15aa = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15aa = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ab = unpack("<f", f.read(4))[0]
                    vy1ab = unpack("<f", f.read(4))[0]
                    vz1ab = unpack("<f", f.read(4))[0]
                    type1ab = unpack("B", f.read(1))[0]
                    value1ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ab = unpack("<f", f.read(4))[0]
                    vx2ab = unpack("<f", f.read(4))[0]
                    vy2ab = unpack("<f", f.read(4))[0]
                    vz2ab = unpack("<f", f.read(4))[0]
                    type2ab = unpack("B", f.read(1))[0]
                    value2ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ab = unpack("<f", f.read(4))[0]
                    vx3ab = unpack("<f", f.read(4))[0]
                    vy3ab = unpack("<f", f.read(4))[0]
                    vz3ab = unpack("<f", f.read(4))[0]
                    type3ab = unpack("B", f.read(1))[0]
                    value3ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ab = unpack("<f", f.read(4))[0]
                    vx4ab = unpack("<f", f.read(4))[0]
                    vy4ab = unpack("<f", f.read(4))[0]
                    vz4ab = unpack("<f", f.read(4))[0]
                    type4ab = unpack("B", f.read(1))[0]
                    value4ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ab = unpack("<f", f.read(4))[0]
                    vx5ab = unpack("<f", f.read(4))[0]
                    vy5ab = unpack("<f", f.read(4))[0]
                    vz5ab = unpack("<f", f.read(4))[0]
                    type5ab = unpack("B", f.read(1))[0]
                    value5ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ab = unpack("<f", f.read(4))[0]
                    vx6ab = unpack("<f", f.read(4))[0]
                    vy6ab = unpack("<f", f.read(4))[0]
                    vz6ab = unpack("<f", f.read(4))[0]
                    type6ab = unpack("B", f.read(1))[0]
                    value6ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ab = unpack("<f", f.read(4))[0]
                    vx7ab = unpack("<f", f.read(4))[0]
                    vy7ab = unpack("<f", f.read(4))[0]
                    vz7ab = unpack("<f", f.read(4))[0]
                    type7ab = unpack("B", f.read(1))[0]
                    value7ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ab = unpack("<f", f.read(4))[0]
                    vx8ab = unpack("<f", f.read(4))[0]
                    vy8ab = unpack("<f", f.read(4))[0]
                    vz8ab = unpack("<f", f.read(4))[0]
                    type8ab = unpack("B", f.read(1))[0]
                    value8ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ab = unpack("<f", f.read(4))[0]
                    vx9ab = unpack("<f", f.read(4))[0]
                    vy9ab = unpack("<f", f.read(4))[0]
                    vz9ab = unpack("<f", f.read(4))[0]
                    type9ab = unpack("B", f.read(1))[0]
                    value9ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ab = unpack("<f", f.read(4))[0]
                    vx10ab = unpack("<f", f.read(4))[0]
                    vy10ab = unpack("<f", f.read(4))[0]
                    vz10ab = unpack("<f", f.read(4))[0]
                    type10ab = unpack("B", f.read(1))[0]
                    value10ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ab = unpack("<f", f.read(4))[0]
                    vx11ab = unpack("<f", f.read(4))[0]
                    vy11ab = unpack("<f", f.read(4))[0]
                    vz11ab = unpack("<f", f.read(4))[0]
                    type11ab = unpack("B", f.read(1))[0]
                    value11ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ab = unpack("<f", f.read(4))[0]
                    vx12ab = unpack("<f", f.read(4))[0]
                    vy12ab = unpack("<f", f.read(4))[0]
                    vz12ab = unpack("<f", f.read(4))[0]
                    type12ab = unpack("B", f.read(1))[0]
                    value12ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ab = unpack("<f", f.read(4))[0]
                    vx13ab = unpack("<f", f.read(4))[0]
                    vy13ab = unpack("<f", f.read(4))[0]
                    vz13ab = unpack("<f", f.read(4))[0]
                    type13ab = unpack("B", f.read(1))[0]
                    value13ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ab = unpack("<f", f.read(4))[0]
                    vx14ab = unpack("<f", f.read(4))[0]
                    vy14ab = unpack("<f", f.read(4))[0]
                    vz14ab = unpack("<f", f.read(4))[0]
                    type14ab = unpack("B", f.read(1))[0]
                    value14ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ab = unpack("<f", f.read(4))[0]
                    vx15ab = unpack("<f", f.read(4))[0]
                    vy15ab = unpack("<f", f.read(4))[0]
                    vz15ab = unpack("<f", f.read(4))[0]
                    type15ab = unpack("B", f.read(1))[0]
                    value15ab = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ab = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ac = unpack("<f", f.read(4))[0]
                    vy1ac = unpack("<f", f.read(4))[0]
                    vz1ac = unpack("<f", f.read(4))[0]
                    type1ac = unpack("B", f.read(1))[0]
                    value1ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ac = unpack("<f", f.read(4))[0]
                    vx2ac = unpack("<f", f.read(4))[0]
                    vy2ac = unpack("<f", f.read(4))[0]
                    vz2ac = unpack("<f", f.read(4))[0]
                    type2ac = unpack("B", f.read(1))[0]
                    value2ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ac = unpack("<f", f.read(4))[0]
                    vx3ac = unpack("<f", f.read(4))[0]
                    vy3ac = unpack("<f", f.read(4))[0]
                    vz3ac = unpack("<f", f.read(4))[0]
                    type3ac = unpack("B", f.read(1))[0]
                    value3ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ac = unpack("<f", f.read(4))[0]
                    vx4ac = unpack("<f", f.read(4))[0]
                    vy4ac = unpack("<f", f.read(4))[0]
                    vz4ac = unpack("<f", f.read(4))[0]
                    type4ac = unpack("B", f.read(1))[0]
                    value4ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ac = unpack("<f", f.read(4))[0]
                    vx5ac = unpack("<f", f.read(4))[0]
                    vy5ac = unpack("<f", f.read(4))[0]
                    vz5ac = unpack("<f", f.read(4))[0]
                    type5ac = unpack("B", f.read(1))[0]
                    value5ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ac = unpack("<f", f.read(4))[0]
                    vx6ac = unpack("<f", f.read(4))[0]
                    vy6ac = unpack("<f", f.read(4))[0]
                    vz6ac = unpack("<f", f.read(4))[0]
                    type6ac = unpack("B", f.read(1))[0]
                    value6ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ac = unpack("<f", f.read(4))[0]
                    vx7ac = unpack("<f", f.read(4))[0]
                    vy7ac = unpack("<f", f.read(4))[0]
                    vz7ac = unpack("<f", f.read(4))[0]
                    type7ac = unpack("B", f.read(1))[0]
                    value7ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ac = unpack("<f", f.read(4))[0]
                    vx8ac = unpack("<f", f.read(4))[0]
                    vy8ac = unpack("<f", f.read(4))[0]
                    vz8ac = unpack("<f", f.read(4))[0]
                    type8ac = unpack("B", f.read(1))[0]
                    value8ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ac = unpack("<f", f.read(4))[0]
                    vx9ac = unpack("<f", f.read(4))[0]
                    vy9ac = unpack("<f", f.read(4))[0]
                    vz9ac = unpack("<f", f.read(4))[0]
                    type9ac = unpack("B", f.read(1))[0]
                    value9ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ac = unpack("<f", f.read(4))[0]
                    vx10ac = unpack("<f", f.read(4))[0]
                    vy10ac = unpack("<f", f.read(4))[0]
                    vz10ac = unpack("<f", f.read(4))[0]
                    type10ac = unpack("B", f.read(1))[0]
                    value10ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ac = unpack("<f", f.read(4))[0]
                    vx11ac = unpack("<f", f.read(4))[0]
                    vy11ac = unpack("<f", f.read(4))[0]
                    vz11ac = unpack("<f", f.read(4))[0]
                    type11ac = unpack("B", f.read(1))[0]
                    value11ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ac = unpack("<f", f.read(4))[0]
                    vx12ac = unpack("<f", f.read(4))[0]
                    vy12ac = unpack("<f", f.read(4))[0]
                    vz12ac = unpack("<f", f.read(4))[0]
                    type12ac = unpack("B", f.read(1))[0]
                    value12ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ac = unpack("<f", f.read(4))[0]
                    vx13ac = unpack("<f", f.read(4))[0]
                    vy13ac = unpack("<f", f.read(4))[0]
                    vz13ac = unpack("<f", f.read(4))[0]
                    type13ac = unpack("B", f.read(1))[0]
                    value13ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ac = unpack("<f", f.read(4))[0]
                    vx14ac = unpack("<f", f.read(4))[0]
                    vy14ac = unpack("<f", f.read(4))[0]
                    vz14ac = unpack("<f", f.read(4))[0]
                    type14ac = unpack("B", f.read(1))[0]
                    value14ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ac = unpack("<f", f.read(4))[0]
                    vx15ac = unpack("<f", f.read(4))[0]
                    vy15ac = unpack("<f", f.read(4))[0]
                    vz15ac = unpack("<f", f.read(4))[0]
                    type15ac = unpack("B", f.read(1))[0]
                    value15ac = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ac = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ad = unpack("<f", f.read(4))[0]
                    vy1ad = unpack("<f", f.read(4))[0]
                    vz1ad = unpack("<f", f.read(4))[0]
                    type1ad = unpack("B", f.read(1))[0]
                    value1ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ad = unpack("<f", f.read(4))[0]
                    vx2ad = unpack("<f", f.read(4))[0]
                    vy2ad = unpack("<f", f.read(4))[0]
                    vz2ad = unpack("<f", f.read(4))[0]
                    type2ad = unpack("B", f.read(1))[0]
                    value2ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ad = unpack("<f", f.read(4))[0]
                    vx3ad = unpack("<f", f.read(4))[0]
                    vy3ad = unpack("<f", f.read(4))[0]
                    vz3ad = unpack("<f", f.read(4))[0]
                    type3ad = unpack("B", f.read(1))[0]
                    value3ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ad = unpack("<f", f.read(4))[0]
                    vx4ad = unpack("<f", f.read(4))[0]
                    vy4ad = unpack("<f", f.read(4))[0]
                    vz4ad = unpack("<f", f.read(4))[0]
                    type4ad = unpack("B", f.read(1))[0]
                    value4ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ad = unpack("<f", f.read(4))[0]
                    vx5ad = unpack("<f", f.read(4))[0]
                    vy5ad = unpack("<f", f.read(4))[0]
                    vz5ad = unpack("<f", f.read(4))[0]
                    type5ad = unpack("B", f.read(1))[0]
                    value5ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ad = unpack("<f", f.read(4))[0]
                    vx6ad = unpack("<f", f.read(4))[0]
                    vy6ad = unpack("<f", f.read(4))[0]
                    vz6ad = unpack("<f", f.read(4))[0]
                    type6ad = unpack("B", f.read(1))[0]
                    value6ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ad = unpack("<f", f.read(4))[0]
                    vx7ad = unpack("<f", f.read(4))[0]
                    vy7ad = unpack("<f", f.read(4))[0]
                    vz7ad = unpack("<f", f.read(4))[0]
                    type7ad = unpack("B", f.read(1))[0]
                    value7ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ad = unpack("<f", f.read(4))[0]
                    vx8ad = unpack("<f", f.read(4))[0]
                    vy8ad = unpack("<f", f.read(4))[0]
                    vz8ad = unpack("<f", f.read(4))[0]
                    type8ad = unpack("B", f.read(1))[0]
                    value8ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ad = unpack("<f", f.read(4))[0]
                    vx9ad = unpack("<f", f.read(4))[0]
                    vy9ad = unpack("<f", f.read(4))[0]
                    vz9ad = unpack("<f", f.read(4))[0]
                    type9ad = unpack("B", f.read(1))[0]
                    value9ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ad = unpack("<f", f.read(4))[0]
                    vx10ad = unpack("<f", f.read(4))[0]
                    vy10ad = unpack("<f", f.read(4))[0]
                    vz10ad = unpack("<f", f.read(4))[0]
                    type10ad = unpack("B", f.read(1))[0]
                    value10ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ad = unpack("<f", f.read(4))[0]
                    vx11ad = unpack("<f", f.read(4))[0]
                    vy11ad = unpack("<f", f.read(4))[0]
                    vz11ad = unpack("<f", f.read(4))[0]
                    type11ad = unpack("B", f.read(1))[0]
                    value11ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ad = unpack("<f", f.read(4))[0]
                    vx12ad = unpack("<f", f.read(4))[0]
                    vy12ad = unpack("<f", f.read(4))[0]
                    vz12ad = unpack("<f", f.read(4))[0]
                    type12ad = unpack("B", f.read(1))[0]
                    value12ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ad = unpack("<f", f.read(4))[0]
                    vx13ad = unpack("<f", f.read(4))[0]
                    vy13ad = unpack("<f", f.read(4))[0]
                    vz13ad = unpack("<f", f.read(4))[0]
                    type13ad = unpack("B", f.read(1))[0]
                    value13ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ad = unpack("<f", f.read(4))[0]
                    vx14ad = unpack("<f", f.read(4))[0]
                    vy14ad = unpack("<f", f.read(4))[0]
                    vz14ad = unpack("<f", f.read(4))[0]
                    type14ad = unpack("B", f.read(1))[0]
                    value14ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ad = unpack("<f", f.read(4))[0]
                    vx15ad = unpack("<f", f.read(4))[0]
                    vy15ad = unpack("<f", f.read(4))[0]
                    vz15ad = unpack("<f", f.read(4))[0]
                    type15ad = unpack("B", f.read(1))[0]
                    value15ad = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ad = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ae = unpack("<f", f.read(4))[0]
                    vy1ae = unpack("<f", f.read(4))[0]
                    vz1ae = unpack("<f", f.read(4))[0]
                    type1ae = unpack("B", f.read(1))[0]
                    value1ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ae = unpack("<f", f.read(4))[0]
                    vx2ae = unpack("<f", f.read(4))[0]
                    vy2ae = unpack("<f", f.read(4))[0]
                    vz2ae = unpack("<f", f.read(4))[0]
                    type2ae = unpack("B", f.read(1))[0]
                    value2ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ae = unpack("<f", f.read(4))[0]
                    vx3ae = unpack("<f", f.read(4))[0]
                    vy3ae = unpack("<f", f.read(4))[0]
                    vz3ae = unpack("<f", f.read(4))[0]
                    type3ae = unpack("B", f.read(1))[0]
                    value3ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ae = unpack("<f", f.read(4))[0]
                    vx4ae = unpack("<f", f.read(4))[0]
                    vy4ae = unpack("<f", f.read(4))[0]
                    vz4ae = unpack("<f", f.read(4))[0]
                    type4ae = unpack("B", f.read(1))[0]
                    value4ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ae = unpack("<f", f.read(4))[0]
                    vx5ae = unpack("<f", f.read(4))[0]
                    vy5ae = unpack("<f", f.read(4))[0]
                    vz5ae = unpack("<f", f.read(4))[0]
                    type5ae = unpack("B", f.read(1))[0]
                    value5ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ae = unpack("<f", f.read(4))[0]
                    vx6ae = unpack("<f", f.read(4))[0]
                    vy6ae = unpack("<f", f.read(4))[0]
                    vz6ae = unpack("<f", f.read(4))[0]
                    type6ae = unpack("B", f.read(1))[0]
                    value6ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ae = unpack("<f", f.read(4))[0]
                    vx7ae = unpack("<f", f.read(4))[0]
                    vy7ae = unpack("<f", f.read(4))[0]
                    vz7ae = unpack("<f", f.read(4))[0]
                    type7ae = unpack("B", f.read(1))[0]
                    value7ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ae = unpack("<f", f.read(4))[0]
                    vx8ae = unpack("<f", f.read(4))[0]
                    vy8ae = unpack("<f", f.read(4))[0]
                    vz8ae = unpack("<f", f.read(4))[0]
                    type8ae = unpack("B", f.read(1))[0]
                    value8ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ae = unpack("<f", f.read(4))[0]
                    vx9ae = unpack("<f", f.read(4))[0]
                    vy9ae = unpack("<f", f.read(4))[0]
                    vz9ae = unpack("<f", f.read(4))[0]
                    type9ae = unpack("B", f.read(1))[0]
                    value9ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ae = unpack("<f", f.read(4))[0]
                    vx10ae = unpack("<f", f.read(4))[0]
                    vy10ae = unpack("<f", f.read(4))[0]
                    vz10ae = unpack("<f", f.read(4))[0]
                    type10ae = unpack("B", f.read(1))[0]
                    value10ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ae = unpack("<f", f.read(4))[0]
                    vx11ae = unpack("<f", f.read(4))[0]
                    vy11ae = unpack("<f", f.read(4))[0]
                    vz11ae = unpack("<f", f.read(4))[0]
                    type11ae = unpack("B", f.read(1))[0]
                    value11ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ae = unpack("<f", f.read(4))[0]
                    vx12ae = unpack("<f", f.read(4))[0]
                    vy12ae = unpack("<f", f.read(4))[0]
                    vz12ae = unpack("<f", f.read(4))[0]
                    type12ae = unpack("B", f.read(1))[0]
                    value12ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ae = unpack("<f", f.read(4))[0]
                    vx13ae = unpack("<f", f.read(4))[0]
                    vy13ae = unpack("<f", f.read(4))[0]
                    vz13ae = unpack("<f", f.read(4))[0]
                    type13ae = unpack("B", f.read(1))[0]
                    value13ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ae = unpack("<f", f.read(4))[0]
                    vx14ae = unpack("<f", f.read(4))[0]
                    vy14ae = unpack("<f", f.read(4))[0]
                    vz14ae = unpack("<f", f.read(4))[0]
                    type14ae = unpack("B", f.read(1))[0]
                    value14ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ae = unpack("<f", f.read(4))[0]
                    vx15ae = unpack("<f", f.read(4))[0]
                    vy15ae = unpack("<f", f.read(4))[0]
                    vz15ae = unpack("<f", f.read(4))[0]
                    type15ae = unpack("B", f.read(1))[0]
                    value15ae = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ae = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1af = unpack("<f", f.read(4))[0]
                    vy1af = unpack("<f", f.read(4))[0]
                    vz1af = unpack("<f", f.read(4))[0]
                    type1af = unpack("B", f.read(1))[0]
                    value1af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1af = unpack("<f", f.read(4))[0]
                    vx2af = unpack("<f", f.read(4))[0]
                    vy2af = unpack("<f", f.read(4))[0]
                    vz2af = unpack("<f", f.read(4))[0]
                    type2af = unpack("B", f.read(1))[0]
                    value2af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2af = unpack("<f", f.read(4))[0]
                    vx3af = unpack("<f", f.read(4))[0]
                    vy3af = unpack("<f", f.read(4))[0]
                    vz3af = unpack("<f", f.read(4))[0]
                    type3af = unpack("B", f.read(1))[0]
                    value3af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3af = unpack("<f", f.read(4))[0]
                    vx4af = unpack("<f", f.read(4))[0]
                    vy4af = unpack("<f", f.read(4))[0]
                    vz4af = unpack("<f", f.read(4))[0]
                    type4af = unpack("B", f.read(1))[0]
                    value4af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4af = unpack("<f", f.read(4))[0]
                    vx5af = unpack("<f", f.read(4))[0]
                    vy5af = unpack("<f", f.read(4))[0]
                    vz5af = unpack("<f", f.read(4))[0]
                    type5af = unpack("B", f.read(1))[0]
                    value5af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5af = unpack("<f", f.read(4))[0]
                    vx6af = unpack("<f", f.read(4))[0]
                    vy6af = unpack("<f", f.read(4))[0]
                    vz6af = unpack("<f", f.read(4))[0]
                    type6af = unpack("B", f.read(1))[0]
                    value6af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6af = unpack("<f", f.read(4))[0]
                    vx7af = unpack("<f", f.read(4))[0]
                    vy7af = unpack("<f", f.read(4))[0]
                    vz7af = unpack("<f", f.read(4))[0]
                    type7af = unpack("B", f.read(1))[0]
                    value7af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7af = unpack("<f", f.read(4))[0]
                    vx8af = unpack("<f", f.read(4))[0]
                    vy8af = unpack("<f", f.read(4))[0]
                    vz8af = unpack("<f", f.read(4))[0]
                    type8af = unpack("B", f.read(1))[0]
                    value8af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8af = unpack("<f", f.read(4))[0]
                    vx9af = unpack("<f", f.read(4))[0]
                    vy9af = unpack("<f", f.read(4))[0]
                    vz9af = unpack("<f", f.read(4))[0]
                    type9af = unpack("B", f.read(1))[0]
                    value9af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9af = unpack("<f", f.read(4))[0]
                    vx10af = unpack("<f", f.read(4))[0]
                    vy10af = unpack("<f", f.read(4))[0]
                    vz10af = unpack("<f", f.read(4))[0]
                    type10af = unpack("B", f.read(1))[0]
                    value10af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10af = unpack("<f", f.read(4))[0]
                    vx11af = unpack("<f", f.read(4))[0]
                    vy11af = unpack("<f", f.read(4))[0]
                    vz11af = unpack("<f", f.read(4))[0]
                    type11af = unpack("B", f.read(1))[0]
                    value11af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11af = unpack("<f", f.read(4))[0]
                    vx12af = unpack("<f", f.read(4))[0]
                    vy12af = unpack("<f", f.read(4))[0]
                    vz12af = unpack("<f", f.read(4))[0]
                    type12af = unpack("B", f.read(1))[0]
                    value12af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12af = unpack("<f", f.read(4))[0]
                    vx13af = unpack("<f", f.read(4))[0]
                    vy13af = unpack("<f", f.read(4))[0]
                    vz13af = unpack("<f", f.read(4))[0]
                    type13af = unpack("B", f.read(1))[0]
                    value13af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13af = unpack("<f", f.read(4))[0]
                    vx14af = unpack("<f", f.read(4))[0]
                    vy14af = unpack("<f", f.read(4))[0]
                    vz14af = unpack("<f", f.read(4))[0]
                    type14af = unpack("B", f.read(1))[0]
                    value14af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14af = unpack("<f", f.read(4))[0]
                    vx15af = unpack("<f", f.read(4))[0]
                    vy15af = unpack("<f", f.read(4))[0]
                    vz15af = unpack("<f", f.read(4))[0]
                    type15af = unpack("B", f.read(1))[0]
                    value15af = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15af = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ag = unpack("<f", f.read(4))[0]
                    vy1ag = unpack("<f", f.read(4))[0]
                    vz1ag = unpack("<f", f.read(4))[0]
                    type1ag = unpack("B", f.read(1))[0]
                    value1ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ag = unpack("<f", f.read(4))[0]
                    vx2ag = unpack("<f", f.read(4))[0]
                    vy2ag = unpack("<f", f.read(4))[0]
                    vz2ag = unpack("<f", f.read(4))[0]
                    type2ag = unpack("B", f.read(1))[0]
                    value2ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ag = unpack("<f", f.read(4))[0]
                    vx3ag = unpack("<f", f.read(4))[0]
                    vy3ag = unpack("<f", f.read(4))[0]
                    vz3ag = unpack("<f", f.read(4))[0]
                    type3ag = unpack("B", f.read(1))[0]
                    value3ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ag = unpack("<f", f.read(4))[0]
                    vx4ag = unpack("<f", f.read(4))[0]
                    vy4ag = unpack("<f", f.read(4))[0]
                    vz4ag = unpack("<f", f.read(4))[0]
                    type4ag = unpack("B", f.read(1))[0]
                    value4ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ag = unpack("<f", f.read(4))[0]
                    vx5ag = unpack("<f", f.read(4))[0]
                    vy5ag = unpack("<f", f.read(4))[0]
                    vz5ag = unpack("<f", f.read(4))[0]
                    type5ag = unpack("B", f.read(1))[0]
                    value5ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ag = unpack("<f", f.read(4))[0]
                    vx6ag = unpack("<f", f.read(4))[0]
                    vy6ag = unpack("<f", f.read(4))[0]
                    vz6ag = unpack("<f", f.read(4))[0]
                    type6ag = unpack("B", f.read(1))[0]
                    value6ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ag = unpack("<f", f.read(4))[0]
                    vx7ag = unpack("<f", f.read(4))[0]
                    vy7ag = unpack("<f", f.read(4))[0]
                    vz7ag = unpack("<f", f.read(4))[0]
                    type7ag = unpack("B", f.read(1))[0]
                    value7ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ag = unpack("<f", f.read(4))[0]
                    vx8ag = unpack("<f", f.read(4))[0]
                    vy8ag = unpack("<f", f.read(4))[0]
                    vz8ag = unpack("<f", f.read(4))[0]
                    type8ag = unpack("B", f.read(1))[0]
                    value8ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ag = unpack("<f", f.read(4))[0]
                    vx9ag = unpack("<f", f.read(4))[0]
                    vy9ag = unpack("<f", f.read(4))[0]
                    vz9ag = unpack("<f", f.read(4))[0]
                    type9ag = unpack("B", f.read(1))[0]
                    value9ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ag = unpack("<f", f.read(4))[0]
                    vx10ag = unpack("<f", f.read(4))[0]
                    vy10ag = unpack("<f", f.read(4))[0]
                    vz10ag = unpack("<f", f.read(4))[0]
                    type10ag = unpack("B", f.read(1))[0]
                    value10ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ag = unpack("<f", f.read(4))[0]
                    vx11ag = unpack("<f", f.read(4))[0]
                    vy11ag = unpack("<f", f.read(4))[0]
                    vz11ag = unpack("<f", f.read(4))[0]
                    type11ag = unpack("B", f.read(1))[0]
                    value11ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ag = unpack("<f", f.read(4))[0]
                    vx12ag = unpack("<f", f.read(4))[0]
                    vy12ag = unpack("<f", f.read(4))[0]
                    vz12ag = unpack("<f", f.read(4))[0]
                    type12ag = unpack("B", f.read(1))[0]
                    value12ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ag = unpack("<f", f.read(4))[0]
                    vx13ag = unpack("<f", f.read(4))[0]
                    vy13ag = unpack("<f", f.read(4))[0]
                    vz13ag = unpack("<f", f.read(4))[0]
                    type13ag = unpack("B", f.read(1))[0]
                    value13ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ag = unpack("<f", f.read(4))[0]
                    vx14ag = unpack("<f", f.read(4))[0]
                    vy14ag = unpack("<f", f.read(4))[0]
                    vz14ag = unpack("<f", f.read(4))[0]
                    type14ag = unpack("B", f.read(1))[0]
                    value14ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ag = unpack("<f", f.read(4))[0]
                    vx15ag = unpack("<f", f.read(4))[0]
                    vy15ag = unpack("<f", f.read(4))[0]
                    vz15ag = unpack("<f", f.read(4))[0]
                    type15ag = unpack("B", f.read(1))[0]
                    value15ag = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ag = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ah = unpack("<f", f.read(4))[0]
                    vy1ah = unpack("<f", f.read(4))[0]
                    vz1ah = unpack("<f", f.read(4))[0]
                    type1ah = unpack("B", f.read(1))[0]
                    value1ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ah = unpack("<f", f.read(4))[0]
                    vx2ah = unpack("<f", f.read(4))[0]
                    vy2ah = unpack("<f", f.read(4))[0]
                    vz2ah = unpack("<f", f.read(4))[0]
                    type2ah = unpack("B", f.read(1))[0]
                    value2ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ah = unpack("<f", f.read(4))[0]
                    vx3ah = unpack("<f", f.read(4))[0]
                    vy3ah = unpack("<f", f.read(4))[0]
                    vz3ah = unpack("<f", f.read(4))[0]
                    type3ah = unpack("B", f.read(1))[0]
                    value3ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ah = unpack("<f", f.read(4))[0]
                    vx4ah = unpack("<f", f.read(4))[0]
                    vy4ah = unpack("<f", f.read(4))[0]
                    vz4ah = unpack("<f", f.read(4))[0]
                    type4ah = unpack("B", f.read(1))[0]
                    value4ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ah = unpack("<f", f.read(4))[0]
                    vx5ah = unpack("<f", f.read(4))[0]
                    vy5ah = unpack("<f", f.read(4))[0]
                    vz5ah = unpack("<f", f.read(4))[0]
                    type5ah = unpack("B", f.read(1))[0]
                    value5ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ah = unpack("<f", f.read(4))[0]
                    vx6ah = unpack("<f", f.read(4))[0]
                    vy6ah = unpack("<f", f.read(4))[0]
                    vz6ah = unpack("<f", f.read(4))[0]
                    type6ah = unpack("B", f.read(1))[0]
                    value6ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ah = unpack("<f", f.read(4))[0]
                    vx7ah = unpack("<f", f.read(4))[0]
                    vy7ah = unpack("<f", f.read(4))[0]
                    vz7ah = unpack("<f", f.read(4))[0]
                    type7ah = unpack("B", f.read(1))[0]
                    value7ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ah = unpack("<f", f.read(4))[0]
                    vx8ah = unpack("<f", f.read(4))[0]
                    vy8ah = unpack("<f", f.read(4))[0]
                    vz8ah = unpack("<f", f.read(4))[0]
                    type8ah = unpack("B", f.read(1))[0]
                    value8ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ah = unpack("<f", f.read(4))[0]
                    vx9ah = unpack("<f", f.read(4))[0]
                    vy9ah = unpack("<f", f.read(4))[0]
                    vz9ah = unpack("<f", f.read(4))[0]
                    type9ah = unpack("B", f.read(1))[0]
                    value9ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ah = unpack("<f", f.read(4))[0]
                    vx10ah = unpack("<f", f.read(4))[0]
                    vy10ah = unpack("<f", f.read(4))[0]
                    vz10ah = unpack("<f", f.read(4))[0]
                    type10ah = unpack("B", f.read(1))[0]
                    value10ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ah = unpack("<f", f.read(4))[0]
                    vx11ah = unpack("<f", f.read(4))[0]
                    vy11ah = unpack("<f", f.read(4))[0]
                    vz11ah = unpack("<f", f.read(4))[0]
                    type11ah = unpack("B", f.read(1))[0]
                    value11ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ah = unpack("<f", f.read(4))[0]
                    vx12ah = unpack("<f", f.read(4))[0]
                    vy12ah = unpack("<f", f.read(4))[0]
                    vz12ah = unpack("<f", f.read(4))[0]
                    type12ah = unpack("B", f.read(1))[0]
                    value12ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ah = unpack("<f", f.read(4))[0]
                    vx13ah = unpack("<f", f.read(4))[0]
                    vy13ah = unpack("<f", f.read(4))[0]
                    vz13ah = unpack("<f", f.read(4))[0]
                    type13ah = unpack("B", f.read(1))[0]
                    value13ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ah = unpack("<f", f.read(4))[0]
                    vx14ah = unpack("<f", f.read(4))[0]
                    vy14ah = unpack("<f", f.read(4))[0]
                    vz14ah = unpack("<f", f.read(4))[0]
                    type14ah = unpack("B", f.read(1))[0]
                    value14ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ah = unpack("<f", f.read(4))[0]
                    vx15ah = unpack("<f", f.read(4))[0]
                    vy15ah = unpack("<f", f.read(4))[0]
                    vz15ah = unpack("<f", f.read(4))[0]
                    type15ah = unpack("B", f.read(1))[0]
                    value15ah = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ah = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ai = unpack("<f", f.read(4))[0]
                    vy1ai = unpack("<f", f.read(4))[0]
                    vz1ai = unpack("<f", f.read(4))[0]
                    type1ai = unpack("B", f.read(1))[0]
                    value1ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ai = unpack("<f", f.read(4))[0]
                    vx2ai = unpack("<f", f.read(4))[0]
                    vy2ai = unpack("<f", f.read(4))[0]
                    vz2ai = unpack("<f", f.read(4))[0]
                    type2ai = unpack("B", f.read(1))[0]
                    value2ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ai = unpack("<f", f.read(4))[0]
                    vx3ai = unpack("<f", f.read(4))[0]
                    vy3ai = unpack("<f", f.read(4))[0]
                    vz3ai = unpack("<f", f.read(4))[0]
                    type3ai = unpack("B", f.read(1))[0]
                    value3ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ai = unpack("<f", f.read(4))[0]
                    vx4ai = unpack("<f", f.read(4))[0]
                    vy4ai = unpack("<f", f.read(4))[0]
                    vz4ai = unpack("<f", f.read(4))[0]
                    type4ai = unpack("B", f.read(1))[0]
                    value4ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ai = unpack("<f", f.read(4))[0]
                    vx5ai = unpack("<f", f.read(4))[0]
                    vy5ai = unpack("<f", f.read(4))[0]
                    vz5ai = unpack("<f", f.read(4))[0]
                    type5ai = unpack("B", f.read(1))[0]
                    value5ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ai = unpack("<f", f.read(4))[0]
                    vx6ai = unpack("<f", f.read(4))[0]
                    vy6ai = unpack("<f", f.read(4))[0]
                    vz6ai = unpack("<f", f.read(4))[0]
                    type6ai = unpack("B", f.read(1))[0]
                    value6ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ai = unpack("<f", f.read(4))[0]
                    vx7ai = unpack("<f", f.read(4))[0]
                    vy7ai = unpack("<f", f.read(4))[0]
                    vz7ai = unpack("<f", f.read(4))[0]
                    type7ai = unpack("B", f.read(1))[0]
                    value7ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ai = unpack("<f", f.read(4))[0]
                    vx8ai = unpack("<f", f.read(4))[0]
                    vy8ai = unpack("<f", f.read(4))[0]
                    vz8ai = unpack("<f", f.read(4))[0]
                    type8ai = unpack("B", f.read(1))[0]
                    value8ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ai = unpack("<f", f.read(4))[0]
                    vx9ai = unpack("<f", f.read(4))[0]
                    vy9ai = unpack("<f", f.read(4))[0]
                    vz9ai = unpack("<f", f.read(4))[0]
                    type9ai = unpack("B", f.read(1))[0]
                    value9ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ai = unpack("<f", f.read(4))[0]
                    vx10ai = unpack("<f", f.read(4))[0]
                    vy10ai = unpack("<f", f.read(4))[0]
                    vz10ai = unpack("<f", f.read(4))[0]
                    type10ai = unpack("B", f.read(1))[0]
                    value10ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ai = unpack("<f", f.read(4))[0]
                    vx11ai = unpack("<f", f.read(4))[0]
                    vy11ai = unpack("<f", f.read(4))[0]
                    vz11ai = unpack("<f", f.read(4))[0]
                    type11ai = unpack("B", f.read(1))[0]
                    value11ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ai = unpack("<f", f.read(4))[0]
                    vx12ai = unpack("<f", f.read(4))[0]
                    vy12ai = unpack("<f", f.read(4))[0]
                    vz12ai = unpack("<f", f.read(4))[0]
                    type12ai = unpack("B", f.read(1))[0]
                    value12ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ai = unpack("<f", f.read(4))[0]
                    vx13ai = unpack("<f", f.read(4))[0]
                    vy13ai = unpack("<f", f.read(4))[0]
                    vz13ai = unpack("<f", f.read(4))[0]
                    type13ai = unpack("B", f.read(1))[0]
                    value13ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ai = unpack("<f", f.read(4))[0]
                    vx14ai = unpack("<f", f.read(4))[0]
                    vy14ai = unpack("<f", f.read(4))[0]
                    vz14ai = unpack("<f", f.read(4))[0]
                    type14ai = unpack("B", f.read(1))[0]
                    value14ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ai = unpack("<f", f.read(4))[0]
                    vx15ai = unpack("<f", f.read(4))[0]
                    vy15ai = unpack("<f", f.read(4))[0]
                    vz15ai = unpack("<f", f.read(4))[0]
                    type15ai = unpack("B", f.read(1))[0]
                    value15ai = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ai = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1aj = unpack("<f", f.read(4))[0]
                    vy1aj = unpack("<f", f.read(4))[0]
                    vz1aj = unpack("<f", f.read(4))[0]
                    type1aj = unpack("B", f.read(1))[0]
                    value1aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1aj = unpack("<f", f.read(4))[0]
                    vx2aj = unpack("<f", f.read(4))[0]
                    vy2aj = unpack("<f", f.read(4))[0]
                    vz2aj = unpack("<f", f.read(4))[0]
                    type2aj = unpack("B", f.read(1))[0]
                    value2aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2aj = unpack("<f", f.read(4))[0]
                    vx3aj = unpack("<f", f.read(4))[0]
                    vy3aj = unpack("<f", f.read(4))[0]
                    vz3aj = unpack("<f", f.read(4))[0]
                    type3aj = unpack("B", f.read(1))[0]
                    value3aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3aj = unpack("<f", f.read(4))[0]
                    vx4aj = unpack("<f", f.read(4))[0]
                    vy4aj = unpack("<f", f.read(4))[0]
                    vz4aj = unpack("<f", f.read(4))[0]
                    type4aj = unpack("B", f.read(1))[0]
                    value4aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4aj = unpack("<f", f.read(4))[0]
                    vx5aj = unpack("<f", f.read(4))[0]
                    vy5aj = unpack("<f", f.read(4))[0]
                    vz5aj = unpack("<f", f.read(4))[0]
                    type5aj = unpack("B", f.read(1))[0]
                    value5aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5aj = unpack("<f", f.read(4))[0]
                    vx6aj = unpack("<f", f.read(4))[0]
                    vy6aj = unpack("<f", f.read(4))[0]
                    vz6aj = unpack("<f", f.read(4))[0]
                    type6aj = unpack("B", f.read(1))[0]
                    value6aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6aj = unpack("<f", f.read(4))[0]
                    vx7aj = unpack("<f", f.read(4))[0]
                    vy7aj = unpack("<f", f.read(4))[0]
                    vz7aj = unpack("<f", f.read(4))[0]
                    type7aj = unpack("B", f.read(1))[0]
                    value7aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7aj = unpack("<f", f.read(4))[0]
                    vx8aj = unpack("<f", f.read(4))[0]
                    vy8aj = unpack("<f", f.read(4))[0]
                    vz8aj = unpack("<f", f.read(4))[0]
                    type8aj = unpack("B", f.read(1))[0]
                    value8aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8aj = unpack("<f", f.read(4))[0]
                    vx9aj = unpack("<f", f.read(4))[0]
                    vy9aj = unpack("<f", f.read(4))[0]
                    vz9aj = unpack("<f", f.read(4))[0]
                    type9aj = unpack("B", f.read(1))[0]
                    value9aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9aj = unpack("<f", f.read(4))[0]
                    vx10aj = unpack("<f", f.read(4))[0]
                    vy10aj = unpack("<f", f.read(4))[0]
                    vz10aj = unpack("<f", f.read(4))[0]
                    type10aj = unpack("B", f.read(1))[0]
                    value10aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10aj = unpack("<f", f.read(4))[0]
                    vx11aj = unpack("<f", f.read(4))[0]
                    vy11aj = unpack("<f", f.read(4))[0]
                    vz11aj = unpack("<f", f.read(4))[0]
                    type11aj = unpack("B", f.read(1))[0]
                    value11aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aj = unpack("<f", f.read(4))[0]
                    vx12aj = unpack("<f", f.read(4))[0]
                    vy12aj = unpack("<f", f.read(4))[0]
                    vz12aj = unpack("<f", f.read(4))[0]
                    type12aj = unpack("B", f.read(1))[0]
                    value12aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12aj = unpack("<f", f.read(4))[0]
                    vx13aj = unpack("<f", f.read(4))[0]
                    vy13aj = unpack("<f", f.read(4))[0]
                    vz13aj = unpack("<f", f.read(4))[0]
                    type13aj = unpack("B", f.read(1))[0]
                    value13aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13aj = unpack("<f", f.read(4))[0]
                    vx14aj = unpack("<f", f.read(4))[0]
                    vy14aj = unpack("<f", f.read(4))[0]
                    vz14aj = unpack("<f", f.read(4))[0]
                    type14aj = unpack("B", f.read(1))[0]
                    value14aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14aj = unpack("<f", f.read(4))[0]
                    vx15aj = unpack("<f", f.read(4))[0]
                    vy15aj = unpack("<f", f.read(4))[0]
                    vz15aj = unpack("<f", f.read(4))[0]
                    type15aj = unpack("B", f.read(1))[0]
                    value15aj = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15aj = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ak = unpack("<f", f.read(4))[0]
                    vy1ak = unpack("<f", f.read(4))[0]
                    vz1ak = unpack("<f", f.read(4))[0]
                    type1ak = unpack("B", f.read(1))[0]
                    value1ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ak = unpack("<f", f.read(4))[0]
                    vx2ak = unpack("<f", f.read(4))[0]
                    vy2ak = unpack("<f", f.read(4))[0]
                    vz2ak = unpack("<f", f.read(4))[0]
                    type2ak = unpack("B", f.read(1))[0]
                    value2ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ak = unpack("<f", f.read(4))[0]
                    vx3ak = unpack("<f", f.read(4))[0]
                    vy3ak = unpack("<f", f.read(4))[0]
                    vz3ak = unpack("<f", f.read(4))[0]
                    type3ak = unpack("B", f.read(1))[0]
                    value3ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ak = unpack("<f", f.read(4))[0]
                    vx4ak = unpack("<f", f.read(4))[0]
                    vy4ak = unpack("<f", f.read(4))[0]
                    vz4ak = unpack("<f", f.read(4))[0]
                    type4ak = unpack("B", f.read(1))[0]
                    value4ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ak = unpack("<f", f.read(4))[0]
                    vx5ak = unpack("<f", f.read(4))[0]
                    vy5ak = unpack("<f", f.read(4))[0]
                    vz5ak = unpack("<f", f.read(4))[0]
                    type5ak = unpack("B", f.read(1))[0]
                    value5ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ak = unpack("<f", f.read(4))[0]
                    vx6ak = unpack("<f", f.read(4))[0]
                    vy6ak = unpack("<f", f.read(4))[0]
                    vz6ak = unpack("<f", f.read(4))[0]
                    type6ak = unpack("B", f.read(1))[0]
                    value6ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ak = unpack("<f", f.read(4))[0]
                    vx7ak = unpack("<f", f.read(4))[0]
                    vy7ak = unpack("<f", f.read(4))[0]
                    vz7ak = unpack("<f", f.read(4))[0]
                    type7ak = unpack("B", f.read(1))[0]
                    value7ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ak = unpack("<f", f.read(4))[0]
                    vx8ak = unpack("<f", f.read(4))[0]
                    vy8ak = unpack("<f", f.read(4))[0]
                    vz8ak = unpack("<f", f.read(4))[0]
                    type8ak = unpack("B", f.read(1))[0]
                    value8ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ak = unpack("<f", f.read(4))[0]
                    vx9ak = unpack("<f", f.read(4))[0]
                    vy9ak = unpack("<f", f.read(4))[0]
                    vz9ak = unpack("<f", f.read(4))[0]
                    type9ak = unpack("B", f.read(1))[0]
                    value9ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ak = unpack("<f", f.read(4))[0]
                    vx10ak = unpack("<f", f.read(4))[0]
                    vy10ak = unpack("<f", f.read(4))[0]
                    vz10ak = unpack("<f", f.read(4))[0]
                    type10ak = unpack("B", f.read(1))[0]
                    value10ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ak = unpack("<f", f.read(4))[0]
                    vx11ak = unpack("<f", f.read(4))[0]
                    vy11ak = unpack("<f", f.read(4))[0]
                    vz11ak = unpack("<f", f.read(4))[0]
                    type11ak = unpack("B", f.read(1))[0]
                    value11ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ak = unpack("<f", f.read(4))[0]
                    vx12ak = unpack("<f", f.read(4))[0]
                    vy12ak = unpack("<f", f.read(4))[0]
                    vz12ak = unpack("<f", f.read(4))[0]
                    type12ak = unpack("B", f.read(1))[0]
                    value12ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ak = unpack("<f", f.read(4))[0]
                    vx13ak = unpack("<f", f.read(4))[0]
                    vy13ak = unpack("<f", f.read(4))[0]
                    vz13ak = unpack("<f", f.read(4))[0]
                    type13ak = unpack("B", f.read(1))[0]
                    value13ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ak = unpack("<f", f.read(4))[0]
                    vx14ak = unpack("<f", f.read(4))[0]
                    vy14ak = unpack("<f", f.read(4))[0]
                    vz14ak = unpack("<f", f.read(4))[0]
                    type14ak = unpack("B", f.read(1))[0]
                    value14ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ak = unpack("<f", f.read(4))[0]
                    vx15ak = unpack("<f", f.read(4))[0]
                    vy15ak = unpack("<f", f.read(4))[0]
                    vz15ak = unpack("<f", f.read(4))[0]
                    type15ak = unpack("B", f.read(1))[0]
                    value15ak = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ak = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1al = unpack("<f", f.read(4))[0]
                    vy1al = unpack("<f", f.read(4))[0]
                    vz1al = unpack("<f", f.read(4))[0]
                    type1al = unpack("B", f.read(1))[0]
                    value1al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1al = unpack("<f", f.read(4))[0]
                    vx2al = unpack("<f", f.read(4))[0]
                    vy2al = unpack("<f", f.read(4))[0]
                    vz2al = unpack("<f", f.read(4))[0]
                    type2al = unpack("B", f.read(1))[0]
                    value2al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2al = unpack("<f", f.read(4))[0]
                    vx3al = unpack("<f", f.read(4))[0]
                    vy3al = unpack("<f", f.read(4))[0]
                    vz3al = unpack("<f", f.read(4))[0]
                    type3al = unpack("B", f.read(1))[0]
                    value3al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3al = unpack("<f", f.read(4))[0]
                    vx4al = unpack("<f", f.read(4))[0]
                    vy4al = unpack("<f", f.read(4))[0]
                    vz4al = unpack("<f", f.read(4))[0]
                    type4al = unpack("B", f.read(1))[0]
                    value4al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4al = unpack("<f", f.read(4))[0]
                    vx5al = unpack("<f", f.read(4))[0]
                    vy5al = unpack("<f", f.read(4))[0]
                    vz5al = unpack("<f", f.read(4))[0]
                    type5al = unpack("B", f.read(1))[0]
                    value5al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5al = unpack("<f", f.read(4))[0]
                    vx6al = unpack("<f", f.read(4))[0]
                    vy6al = unpack("<f", f.read(4))[0]
                    vz6al = unpack("<f", f.read(4))[0]
                    type6al = unpack("B", f.read(1))[0]
                    value6al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6al = unpack("<f", f.read(4))[0]
                    vx7al = unpack("<f", f.read(4))[0]
                    vy7al = unpack("<f", f.read(4))[0]
                    vz7al = unpack("<f", f.read(4))[0]
                    type7al = unpack("B", f.read(1))[0]
                    value7al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7al = unpack("<f", f.read(4))[0]
                    vx8al = unpack("<f", f.read(4))[0]
                    vy8al = unpack("<f", f.read(4))[0]
                    vz8al = unpack("<f", f.read(4))[0]
                    type8al = unpack("B", f.read(1))[0]
                    value8al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8al = unpack("<f", f.read(4))[0]
                    vx9al = unpack("<f", f.read(4))[0]
                    vy9al = unpack("<f", f.read(4))[0]
                    vz9al = unpack("<f", f.read(4))[0]
                    type9al = unpack("B", f.read(1))[0]
                    value9al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9al = unpack("<f", f.read(4))[0]
                    vx10al = unpack("<f", f.read(4))[0]
                    vy10al = unpack("<f", f.read(4))[0]
                    vz10al = unpack("<f", f.read(4))[0]
                    type10al = unpack("B", f.read(1))[0]
                    value10al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10al = unpack("<f", f.read(4))[0]
                    vx11al = unpack("<f", f.read(4))[0]
                    vy11al = unpack("<f", f.read(4))[0]
                    vz11al = unpack("<f", f.read(4))[0]
                    type11al = unpack("B", f.read(1))[0]
                    value11al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11al = unpack("<f", f.read(4))[0]
                    vx12al = unpack("<f", f.read(4))[0]
                    vy12al = unpack("<f", f.read(4))[0]
                    vz12al = unpack("<f", f.read(4))[0]
                    type12al = unpack("B", f.read(1))[0]
                    value12al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12al = unpack("<f", f.read(4))[0]
                    vx13al = unpack("<f", f.read(4))[0]
                    vy13al = unpack("<f", f.read(4))[0]
                    vz13al = unpack("<f", f.read(4))[0]
                    type13al = unpack("B", f.read(1))[0]
                    value13al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13al = unpack("<f", f.read(4))[0]
                    vx14al = unpack("<f", f.read(4))[0]
                    vy14al = unpack("<f", f.read(4))[0]
                    vz14al = unpack("<f", f.read(4))[0]
                    type14al = unpack("B", f.read(1))[0]
                    value14al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14al = unpack("<f", f.read(4))[0]
                    vx15al = unpack("<f", f.read(4))[0]
                    vy15al = unpack("<f", f.read(4))[0]
                    vz15al = unpack("<f", f.read(4))[0]
                    type15al = unpack("B", f.read(1))[0]
                    value15al = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15al = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1am = unpack("<f", f.read(4))[0]
                    vy1am = unpack("<f", f.read(4))[0]
                    vz1am = unpack("<f", f.read(4))[0]
                    type1am = unpack("B", f.read(1))[0]
                    value1am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1am = unpack("<f", f.read(4))[0]
                    vx2am = unpack("<f", f.read(4))[0]
                    vy2am = unpack("<f", f.read(4))[0]
                    vz2am = unpack("<f", f.read(4))[0]
                    type2am = unpack("B", f.read(1))[0]
                    value2am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2am = unpack("<f", f.read(4))[0]
                    vx3am = unpack("<f", f.read(4))[0]
                    vy3am = unpack("<f", f.read(4))[0]
                    vz3am = unpack("<f", f.read(4))[0]
                    type3am = unpack("B", f.read(1))[0]
                    value3am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3am = unpack("<f", f.read(4))[0]
                    vx4am = unpack("<f", f.read(4))[0]
                    vy4am = unpack("<f", f.read(4))[0]
                    vz4am = unpack("<f", f.read(4))[0]
                    type4am = unpack("B", f.read(1))[0]
                    value4am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4am = unpack("<f", f.read(4))[0]
                    vx5am = unpack("<f", f.read(4))[0]
                    vy5am = unpack("<f", f.read(4))[0]
                    vz5am = unpack("<f", f.read(4))[0]
                    type5am = unpack("B", f.read(1))[0]
                    value5am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5am = unpack("<f", f.read(4))[0]
                    vx6am = unpack("<f", f.read(4))[0]
                    vy6am = unpack("<f", f.read(4))[0]
                    vz6am = unpack("<f", f.read(4))[0]
                    type6am = unpack("B", f.read(1))[0]
                    value6am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6am = unpack("<f", f.read(4))[0]
                    vx7am = unpack("<f", f.read(4))[0]
                    vy7am = unpack("<f", f.read(4))[0]
                    vz7am = unpack("<f", f.read(4))[0]
                    type7am = unpack("B", f.read(1))[0]
                    value7am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7am = unpack("<f", f.read(4))[0]
                    vx8am = unpack("<f", f.read(4))[0]
                    vy8am = unpack("<f", f.read(4))[0]
                    vz8am = unpack("<f", f.read(4))[0]
                    type8am = unpack("B", f.read(1))[0]
                    value8am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8am = unpack("<f", f.read(4))[0]
                    vx9am = unpack("<f", f.read(4))[0]
                    vy9am = unpack("<f", f.read(4))[0]
                    vz9am = unpack("<f", f.read(4))[0]
                    type9am = unpack("B", f.read(1))[0]
                    value9am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9am = unpack("<f", f.read(4))[0]
                    vx10am = unpack("<f", f.read(4))[0]
                    vy10am = unpack("<f", f.read(4))[0]
                    vz10am = unpack("<f", f.read(4))[0]
                    type10am = unpack("B", f.read(1))[0]
                    value10am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10am = unpack("<f", f.read(4))[0]
                    vx11am = unpack("<f", f.read(4))[0]
                    vy11am = unpack("<f", f.read(4))[0]
                    vz11am = unpack("<f", f.read(4))[0]
                    type11am = unpack("B", f.read(1))[0]
                    value11am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11am = unpack("<f", f.read(4))[0]
                    vx12am = unpack("<f", f.read(4))[0]
                    vy12am = unpack("<f", f.read(4))[0]
                    vz12am = unpack("<f", f.read(4))[0]
                    type12am = unpack("B", f.read(1))[0]
                    value12am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12am = unpack("<f", f.read(4))[0]
                    vx13am = unpack("<f", f.read(4))[0]
                    vy13am = unpack("<f", f.read(4))[0]
                    vz13am = unpack("<f", f.read(4))[0]
                    type13am = unpack("B", f.read(1))[0]
                    value13am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13am = unpack("<f", f.read(4))[0]
                    vx14am = unpack("<f", f.read(4))[0]
                    vy14am = unpack("<f", f.read(4))[0]
                    vz14am = unpack("<f", f.read(4))[0]
                    type14am = unpack("B", f.read(1))[0]
                    value14am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14am = unpack("<f", f.read(4))[0]
                    vx15am = unpack("<f", f.read(4))[0]
                    vy15am = unpack("<f", f.read(4))[0]
                    vz15am = unpack("<f", f.read(4))[0]
                    type15am = unpack("B", f.read(1))[0]
                    value15am = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15am = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1an = unpack("<f", f.read(4))[0]
                    vy1an = unpack("<f", f.read(4))[0]
                    vz1an = unpack("<f", f.read(4))[0]
                    type1an = unpack("B", f.read(1))[0]
                    value1an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1an = unpack("<f", f.read(4))[0]
                    vx2an = unpack("<f", f.read(4))[0]
                    vy2an = unpack("<f", f.read(4))[0]
                    vz2an = unpack("<f", f.read(4))[0]
                    type2an = unpack("B", f.read(1))[0]
                    value2an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2an = unpack("<f", f.read(4))[0]
                    vx3an = unpack("<f", f.read(4))[0]
                    vy3an = unpack("<f", f.read(4))[0]
                    vz3an = unpack("<f", f.read(4))[0]
                    type3an = unpack("B", f.read(1))[0]
                    value3an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3an = unpack("<f", f.read(4))[0]
                    vx4an = unpack("<f", f.read(4))[0]
                    vy4an = unpack("<f", f.read(4))[0]
                    vz4an = unpack("<f", f.read(4))[0]
                    type4an = unpack("B", f.read(1))[0]
                    value4an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4an = unpack("<f", f.read(4))[0]
                    vx5an = unpack("<f", f.read(4))[0]
                    vy5an = unpack("<f", f.read(4))[0]
                    vz5an = unpack("<f", f.read(4))[0]
                    type5an = unpack("B", f.read(1))[0]
                    value5an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5an = unpack("<f", f.read(4))[0]
                    vx6an = unpack("<f", f.read(4))[0]
                    vy6an = unpack("<f", f.read(4))[0]
                    vz6an = unpack("<f", f.read(4))[0]
                    type6an = unpack("B", f.read(1))[0]
                    value6an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6an = unpack("<f", f.read(4))[0]
                    vx7an = unpack("<f", f.read(4))[0]
                    vy7an = unpack("<f", f.read(4))[0]
                    vz7an = unpack("<f", f.read(4))[0]
                    type7an = unpack("B", f.read(1))[0]
                    value7an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7an = unpack("<f", f.read(4))[0]
                    vx8an = unpack("<f", f.read(4))[0]
                    vy8an = unpack("<f", f.read(4))[0]
                    vz8an = unpack("<f", f.read(4))[0]
                    type8an = unpack("B", f.read(1))[0]
                    value8an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8an = unpack("<f", f.read(4))[0]
                    vx9an = unpack("<f", f.read(4))[0]
                    vy9an = unpack("<f", f.read(4))[0]
                    vz9an = unpack("<f", f.read(4))[0]
                    type9an = unpack("B", f.read(1))[0]
                    value9an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9an = unpack("<f", f.read(4))[0]
                    vx10an = unpack("<f", f.read(4))[0]
                    vy10an = unpack("<f", f.read(4))[0]
                    vz10an = unpack("<f", f.read(4))[0]
                    type10an = unpack("B", f.read(1))[0]
                    value10an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10an = unpack("<f", f.read(4))[0]
                    vx11an = unpack("<f", f.read(4))[0]
                    vy11an = unpack("<f", f.read(4))[0]
                    vz11an = unpack("<f", f.read(4))[0]
                    type11an = unpack("B", f.read(1))[0]
                    value11an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11an = unpack("<f", f.read(4))[0]
                    vx12an = unpack("<f", f.read(4))[0]
                    vy12an = unpack("<f", f.read(4))[0]
                    vz12an = unpack("<f", f.read(4))[0]
                    type12an = unpack("B", f.read(1))[0]
                    value12an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12an = unpack("<f", f.read(4))[0]
                    vx13an = unpack("<f", f.read(4))[0]
                    vy13an = unpack("<f", f.read(4))[0]
                    vz13an = unpack("<f", f.read(4))[0]
                    type13an = unpack("B", f.read(1))[0]
                    value13an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13an = unpack("<f", f.read(4))[0]
                    vx14an = unpack("<f", f.read(4))[0]
                    vy14an = unpack("<f", f.read(4))[0]
                    vz14an = unpack("<f", f.read(4))[0]
                    type14an = unpack("B", f.read(1))[0]
                    value14an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14an = unpack("<f", f.read(4))[0]
                    vx15an = unpack("<f", f.read(4))[0]
                    vy15an = unpack("<f", f.read(4))[0]
                    vz15an = unpack("<f", f.read(4))[0]
                    type15an = unpack("B", f.read(1))[0]
                    value15an = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15an = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ao = unpack("<f", f.read(4))[0]
                    vy1ao = unpack("<f", f.read(4))[0]
                    vz1ao = unpack("<f", f.read(4))[0]
                    type1ao = unpack("B", f.read(1))[0]
                    value1ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ao = unpack("<f", f.read(4))[0]
                    vx2ao = unpack("<f", f.read(4))[0]
                    vy2ao = unpack("<f", f.read(4))[0]
                    vz2ao = unpack("<f", f.read(4))[0]
                    type2ao = unpack("B", f.read(1))[0]
                    value2ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ao = unpack("<f", f.read(4))[0]
                    vx3ao = unpack("<f", f.read(4))[0]
                    vy3ao = unpack("<f", f.read(4))[0]
                    vz3ao = unpack("<f", f.read(4))[0]
                    type3ao = unpack("B", f.read(1))[0]
                    value3ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ao = unpack("<f", f.read(4))[0]
                    vx4ao = unpack("<f", f.read(4))[0]
                    vy4ao = unpack("<f", f.read(4))[0]
                    vz4ao = unpack("<f", f.read(4))[0]
                    type4ao = unpack("B", f.read(1))[0]
                    value4ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ao = unpack("<f", f.read(4))[0]
                    vx5ao = unpack("<f", f.read(4))[0]
                    vy5ao = unpack("<f", f.read(4))[0]
                    vz5ao = unpack("<f", f.read(4))[0]
                    type5ao = unpack("B", f.read(1))[0]
                    value5ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ao = unpack("<f", f.read(4))[0]
                    vx6ao = unpack("<f", f.read(4))[0]
                    vy6ao = unpack("<f", f.read(4))[0]
                    vz6ao = unpack("<f", f.read(4))[0]
                    type6ao = unpack("B", f.read(1))[0]
                    value6ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ao = unpack("<f", f.read(4))[0]
                    vx7ao = unpack("<f", f.read(4))[0]
                    vy7ao = unpack("<f", f.read(4))[0]
                    vz7ao = unpack("<f", f.read(4))[0]
                    type7ao = unpack("B", f.read(1))[0]
                    value7ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ao = unpack("<f", f.read(4))[0]
                    vx8ao = unpack("<f", f.read(4))[0]
                    vy8ao = unpack("<f", f.read(4))[0]
                    vz8ao = unpack("<f", f.read(4))[0]
                    type8ao = unpack("B", f.read(1))[0]
                    value8ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ao = unpack("<f", f.read(4))[0]
                    vx9ao = unpack("<f", f.read(4))[0]
                    vy9ao = unpack("<f", f.read(4))[0]
                    vz9ao = unpack("<f", f.read(4))[0]
                    type9ao = unpack("B", f.read(1))[0]
                    value9ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ao = unpack("<f", f.read(4))[0]
                    vx10ao = unpack("<f", f.read(4))[0]
                    vy10ao = unpack("<f", f.read(4))[0]
                    vz10ao = unpack("<f", f.read(4))[0]
                    type10ao = unpack("B", f.read(1))[0]
                    value10ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ao = unpack("<f", f.read(4))[0]
                    vx11ao = unpack("<f", f.read(4))[0]
                    vy11ao = unpack("<f", f.read(4))[0]
                    vz11ao = unpack("<f", f.read(4))[0]
                    type11ao = unpack("B", f.read(1))[0]
                    value11ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ao = unpack("<f", f.read(4))[0]
                    vx12ao = unpack("<f", f.read(4))[0]
                    vy12ao = unpack("<f", f.read(4))[0]
                    vz12ao = unpack("<f", f.read(4))[0]
                    type12ao = unpack("B", f.read(1))[0]
                    value12ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ao = unpack("<f", f.read(4))[0]
                    vx13ao = unpack("<f", f.read(4))[0]
                    vy13ao = unpack("<f", f.read(4))[0]
                    vz13ao = unpack("<f", f.read(4))[0]
                    type13ao = unpack("B", f.read(1))[0]
                    value13ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ao = unpack("<f", f.read(4))[0]
                    vx14ao = unpack("<f", f.read(4))[0]
                    vy14ao = unpack("<f", f.read(4))[0]
                    vz14ao = unpack("<f", f.read(4))[0]
                    type14ao = unpack("B", f.read(1))[0]
                    value14ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ao = unpack("<f", f.read(4))[0]
                    vx15ao = unpack("<f", f.read(4))[0]
                    vy15ao = unpack("<f", f.read(4))[0]
                    vz15ao = unpack("<f", f.read(4))[0]
                    type15ao = unpack("B", f.read(1))[0]
                    value15ao = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ao = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ap = unpack("<f", f.read(4))[0]
                    vy1ap = unpack("<f", f.read(4))[0]
                    vz1ap = unpack("<f", f.read(4))[0]
                    type1ap = unpack("B", f.read(1))[0]
                    value1ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ap = unpack("<f", f.read(4))[0]
                    vx2ap = unpack("<f", f.read(4))[0]
                    vy2ap = unpack("<f", f.read(4))[0]
                    vz2ap = unpack("<f", f.read(4))[0]
                    type2ap = unpack("B", f.read(1))[0]
                    value2ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ap = unpack("<f", f.read(4))[0]
                    vx3ap = unpack("<f", f.read(4))[0]
                    vy3ap = unpack("<f", f.read(4))[0]
                    vz3ap = unpack("<f", f.read(4))[0]
                    type3ap = unpack("B", f.read(1))[0]
                    value3ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ap = unpack("<f", f.read(4))[0]
                    vx4ap = unpack("<f", f.read(4))[0]
                    vy4ap = unpack("<f", f.read(4))[0]
                    vz4ap = unpack("<f", f.read(4))[0]
                    type4ap = unpack("B", f.read(1))[0]
                    value4ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ap = unpack("<f", f.read(4))[0]
                    vx5ap = unpack("<f", f.read(4))[0]
                    vy5ap = unpack("<f", f.read(4))[0]
                    vz5ap = unpack("<f", f.read(4))[0]
                    type5ap = unpack("B", f.read(1))[0]
                    value5ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ap = unpack("<f", f.read(4))[0]
                    vx6ap = unpack("<f", f.read(4))[0]
                    vy6ap = unpack("<f", f.read(4))[0]
                    vz6ap = unpack("<f", f.read(4))[0]
                    type6ap = unpack("B", f.read(1))[0]
                    value6ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ap = unpack("<f", f.read(4))[0]
                    vx7ap = unpack("<f", f.read(4))[0]
                    vy7ap = unpack("<f", f.read(4))[0]
                    vz7ap = unpack("<f", f.read(4))[0]
                    type7ap = unpack("B", f.read(1))[0]
                    value7ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ap = unpack("<f", f.read(4))[0]
                    vx8ap = unpack("<f", f.read(4))[0]
                    vy8ap = unpack("<f", f.read(4))[0]
                    vz8ap = unpack("<f", f.read(4))[0]
                    type8ap = unpack("B", f.read(1))[0]
                    value8ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ap = unpack("<f", f.read(4))[0]
                    vx9ap = unpack("<f", f.read(4))[0]
                    vy9ap = unpack("<f", f.read(4))[0]
                    vz9ap = unpack("<f", f.read(4))[0]
                    type9ap = unpack("B", f.read(1))[0]
                    value9ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ap = unpack("<f", f.read(4))[0]
                    vx10ap = unpack("<f", f.read(4))[0]
                    vy10ap = unpack("<f", f.read(4))[0]
                    vz10ap = unpack("<f", f.read(4))[0]
                    type10ap = unpack("B", f.read(1))[0]
                    value10ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ap = unpack("<f", f.read(4))[0]
                    vx11ap = unpack("<f", f.read(4))[0]
                    vy11ap = unpack("<f", f.read(4))[0]
                    vz11ap = unpack("<f", f.read(4))[0]
                    type11ap = unpack("B", f.read(1))[0]
                    value11ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ap = unpack("<f", f.read(4))[0]
                    vx12ap = unpack("<f", f.read(4))[0]
                    vy12ap = unpack("<f", f.read(4))[0]
                    vz12ap = unpack("<f", f.read(4))[0]
                    type12ap = unpack("B", f.read(1))[0]
                    value12ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ap = unpack("<f", f.read(4))[0]
                    vx13ap = unpack("<f", f.read(4))[0]
                    vy13ap = unpack("<f", f.read(4))[0]
                    vz13ap = unpack("<f", f.read(4))[0]
                    type13ap = unpack("B", f.read(1))[0]
                    value13ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ap = unpack("<f", f.read(4))[0]
                    vx14ap = unpack("<f", f.read(4))[0]
                    vy14ap = unpack("<f", f.read(4))[0]
                    vz14ap = unpack("<f", f.read(4))[0]
                    type14ap = unpack("B", f.read(1))[0]
                    value14ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ap = unpack("<f", f.read(4))[0]
                    vx15ap = unpack("<f", f.read(4))[0]
                    vy15ap = unpack("<f", f.read(4))[0]
                    vz15ap = unpack("<f", f.read(4))[0]
                    type15ap = unpack("B", f.read(1))[0]
                    value15ap = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ap = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1aq = unpack("<f", f.read(4))[0]
                    vy1aq = unpack("<f", f.read(4))[0]
                    vz1aq = unpack("<f", f.read(4))[0]
                    type1aq = unpack("B", f.read(1))[0]
                    value1aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1aq = unpack("<f", f.read(4))[0]
                    vx2aq = unpack("<f", f.read(4))[0]
                    vy2aq = unpack("<f", f.read(4))[0]
                    vz2aq = unpack("<f", f.read(4))[0]
                    type2aq = unpack("B", f.read(1))[0]
                    value2aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2aq = unpack("<f", f.read(4))[0]
                    vx3aq = unpack("<f", f.read(4))[0]
                    vy3aq = unpack("<f", f.read(4))[0]
                    vz3aq = unpack("<f", f.read(4))[0]
                    type3aq = unpack("B", f.read(1))[0]
                    value3aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3aq = unpack("<f", f.read(4))[0]
                    vx4aq = unpack("<f", f.read(4))[0]
                    vy4aq = unpack("<f", f.read(4))[0]
                    vz4aq = unpack("<f", f.read(4))[0]
                    type4aq = unpack("B", f.read(1))[0]
                    value4aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4aq = unpack("<f", f.read(4))[0]
                    vx5aq = unpack("<f", f.read(4))[0]
                    vy5aq = unpack("<f", f.read(4))[0]
                    vz5aq = unpack("<f", f.read(4))[0]
                    type5aq = unpack("B", f.read(1))[0]
                    value5aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5aq = unpack("<f", f.read(4))[0]
                    vx6aq = unpack("<f", f.read(4))[0]
                    vy6aq = unpack("<f", f.read(4))[0]
                    vz6aq = unpack("<f", f.read(4))[0]
                    type6aq = unpack("B", f.read(1))[0]
                    value6aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6aq = unpack("<f", f.read(4))[0]
                    vx7aq = unpack("<f", f.read(4))[0]
                    vy7aq = unpack("<f", f.read(4))[0]
                    vz7aq = unpack("<f", f.read(4))[0]
                    type7aq = unpack("B", f.read(1))[0]
                    value7aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7aq = unpack("<f", f.read(4))[0]
                    vx8aq = unpack("<f", f.read(4))[0]
                    vy8aq = unpack("<f", f.read(4))[0]
                    vz8aq = unpack("<f", f.read(4))[0]
                    type8aq = unpack("B", f.read(1))[0]
                    value8aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8aq = unpack("<f", f.read(4))[0]
                    vx9aq = unpack("<f", f.read(4))[0]
                    vy9aq = unpack("<f", f.read(4))[0]
                    vz9aq = unpack("<f", f.read(4))[0]
                    type9aq = unpack("B", f.read(1))[0]
                    value9aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9aq = unpack("<f", f.read(4))[0]
                    vx10aq = unpack("<f", f.read(4))[0]
                    vy10aq = unpack("<f", f.read(4))[0]
                    vz10aq = unpack("<f", f.read(4))[0]
                    type10aq = unpack("B", f.read(1))[0]
                    value10aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10aq = unpack("<f", f.read(4))[0]
                    vx11aq = unpack("<f", f.read(4))[0]
                    vy11aq = unpack("<f", f.read(4))[0]
                    vz11aq = unpack("<f", f.read(4))[0]
                    type11aq = unpack("B", f.read(1))[0]
                    value11aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aq = unpack("<f", f.read(4))[0]
                    vx12aq = unpack("<f", f.read(4))[0]
                    vy12aq = unpack("<f", f.read(4))[0]
                    vz12aq = unpack("<f", f.read(4))[0]
                    type12aq = unpack("B", f.read(1))[0]
                    value12aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12aq = unpack("<f", f.read(4))[0]
                    vx13aq = unpack("<f", f.read(4))[0]
                    vy13aq = unpack("<f", f.read(4))[0]
                    vz13aq = unpack("<f", f.read(4))[0]
                    type13aq = unpack("B", f.read(1))[0]
                    value13aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13aq = unpack("<f", f.read(4))[0]
                    vx14aq = unpack("<f", f.read(4))[0]
                    vy14aq = unpack("<f", f.read(4))[0]
                    vz14aq = unpack("<f", f.read(4))[0]
                    type14aq = unpack("B", f.read(1))[0]
                    value14aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14aq = unpack("<f", f.read(4))[0]
                    vx15aq = unpack("<f", f.read(4))[0]
                    vy15aq = unpack("<f", f.read(4))[0]
                    vz15aq = unpack("<f", f.read(4))[0]
                    type15aq = unpack("B", f.read(1))[0]
                    value15aq = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15aq = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ar = unpack("<f", f.read(4))[0]
                    vy1ar = unpack("<f", f.read(4))[0]
                    vz1ar = unpack("<f", f.read(4))[0]
                    type1ar = unpack("B", f.read(1))[0]
                    value1ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ar = unpack("<f", f.read(4))[0]
                    vx2ar = unpack("<f", f.read(4))[0]
                    vy2ar = unpack("<f", f.read(4))[0]
                    vz2ar = unpack("<f", f.read(4))[0]
                    type2ar = unpack("B", f.read(1))[0]
                    value2ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ar = unpack("<f", f.read(4))[0]
                    vx3ar = unpack("<f", f.read(4))[0]
                    vy3ar = unpack("<f", f.read(4))[0]
                    vz3ar = unpack("<f", f.read(4))[0]
                    type3ar = unpack("B", f.read(1))[0]
                    value3ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ar = unpack("<f", f.read(4))[0]
                    vx4ar = unpack("<f", f.read(4))[0]
                    vy4ar = unpack("<f", f.read(4))[0]
                    vz4ar = unpack("<f", f.read(4))[0]
                    type4ar = unpack("B", f.read(1))[0]
                    value4ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ar = unpack("<f", f.read(4))[0]
                    vx5ar = unpack("<f", f.read(4))[0]
                    vy5ar = unpack("<f", f.read(4))[0]
                    vz5ar = unpack("<f", f.read(4))[0]
                    type5ar = unpack("B", f.read(1))[0]
                    value5ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ar = unpack("<f", f.read(4))[0]
                    vx6ar = unpack("<f", f.read(4))[0]
                    vy6ar = unpack("<f", f.read(4))[0]
                    vz6ar = unpack("<f", f.read(4))[0]
                    type6ar = unpack("B", f.read(1))[0]
                    value6ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ar = unpack("<f", f.read(4))[0]
                    vx7ar = unpack("<f", f.read(4))[0]
                    vy7ar = unpack("<f", f.read(4))[0]
                    vz7ar = unpack("<f", f.read(4))[0]
                    type7ar = unpack("B", f.read(1))[0]
                    value7ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ar = unpack("<f", f.read(4))[0]
                    vx8ar = unpack("<f", f.read(4))[0]
                    vy8ar = unpack("<f", f.read(4))[0]
                    vz8ar = unpack("<f", f.read(4))[0]
                    type8ar = unpack("B", f.read(1))[0]
                    value8ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ar = unpack("<f", f.read(4))[0]
                    vx9ar = unpack("<f", f.read(4))[0]
                    vy9ar = unpack("<f", f.read(4))[0]
                    vz9ar = unpack("<f", f.read(4))[0]
                    type9ar = unpack("B", f.read(1))[0]
                    value9ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ar = unpack("<f", f.read(4))[0]
                    vx10ar = unpack("<f", f.read(4))[0]
                    vy10ar = unpack("<f", f.read(4))[0]
                    vz10ar = unpack("<f", f.read(4))[0]
                    type10ar = unpack("B", f.read(1))[0]
                    value10ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ar = unpack("<f", f.read(4))[0]
                    vx11ar = unpack("<f", f.read(4))[0]
                    vy11ar = unpack("<f", f.read(4))[0]
                    vz11ar = unpack("<f", f.read(4))[0]
                    type11ar = unpack("B", f.read(1))[0]
                    value11ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ar = unpack("<f", f.read(4))[0]
                    vx12ar = unpack("<f", f.read(4))[0]
                    vy12ar = unpack("<f", f.read(4))[0]
                    vz12ar = unpack("<f", f.read(4))[0]
                    type12ar = unpack("B", f.read(1))[0]
                    value12ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ar = unpack("<f", f.read(4))[0]
                    vx13ar = unpack("<f", f.read(4))[0]
                    vy13ar = unpack("<f", f.read(4))[0]
                    vz13ar = unpack("<f", f.read(4))[0]
                    type13ar = unpack("B", f.read(1))[0]
                    value13ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ar = unpack("<f", f.read(4))[0]
                    vx14ar = unpack("<f", f.read(4))[0]
                    vy14ar = unpack("<f", f.read(4))[0]
                    vz14ar = unpack("<f", f.read(4))[0]
                    type14ar = unpack("B", f.read(1))[0]
                    value14ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ar = unpack("<f", f.read(4))[0]
                    vx15ar = unpack("<f", f.read(4))[0]
                    vy15ar = unpack("<f", f.read(4))[0]
                    vz15ar = unpack("<f", f.read(4))[0]
                    type15ar = unpack("B", f.read(1))[0]
                    value15ar = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ar = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1as = unpack("<f", f.read(4))[0]
                    vy1as = unpack("<f", f.read(4))[0]
                    vz1as = unpack("<f", f.read(4))[0]
                    type1as = unpack("B", f.read(1))[0]
                    value1as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1as = unpack("<f", f.read(4))[0]
                    vx2as = unpack("<f", f.read(4))[0]
                    vy2as = unpack("<f", f.read(4))[0]
                    vz2as = unpack("<f", f.read(4))[0]
                    type2as = unpack("B", f.read(1))[0]
                    value2as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2as = unpack("<f", f.read(4))[0]
                    vx3as = unpack("<f", f.read(4))[0]
                    vy3as = unpack("<f", f.read(4))[0]
                    vz3as = unpack("<f", f.read(4))[0]
                    type3as = unpack("B", f.read(1))[0]
                    value3as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3as = unpack("<f", f.read(4))[0]
                    vx4as = unpack("<f", f.read(4))[0]
                    vy4as = unpack("<f", f.read(4))[0]
                    vz4as = unpack("<f", f.read(4))[0]
                    type4as = unpack("B", f.read(1))[0]
                    value4as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4as = unpack("<f", f.read(4))[0]
                    vx5as = unpack("<f", f.read(4))[0]
                    vy5as = unpack("<f", f.read(4))[0]
                    vz5as = unpack("<f", f.read(4))[0]
                    type5as = unpack("B", f.read(1))[0]
                    value5as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5as = unpack("<f", f.read(4))[0]
                    vx6as = unpack("<f", f.read(4))[0]
                    vy6as = unpack("<f", f.read(4))[0]
                    vz6as = unpack("<f", f.read(4))[0]
                    type6as = unpack("B", f.read(1))[0]
                    value6as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6as = unpack("<f", f.read(4))[0]
                    vx7as = unpack("<f", f.read(4))[0]
                    vy7as = unpack("<f", f.read(4))[0]
                    vz7as = unpack("<f", f.read(4))[0]
                    type7as = unpack("B", f.read(1))[0]
                    value7as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7as = unpack("<f", f.read(4))[0]
                    vx8as = unpack("<f", f.read(4))[0]
                    vy8as = unpack("<f", f.read(4))[0]
                    vz8as = unpack("<f", f.read(4))[0]
                    type8as = unpack("B", f.read(1))[0]
                    value8as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8as = unpack("<f", f.read(4))[0]
                    vx9as = unpack("<f", f.read(4))[0]
                    vy9as = unpack("<f", f.read(4))[0]
                    vz9as = unpack("<f", f.read(4))[0]
                    type9as = unpack("B", f.read(1))[0]
                    value9as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9as = unpack("<f", f.read(4))[0]
                    vx10as = unpack("<f", f.read(4))[0]
                    vy10as = unpack("<f", f.read(4))[0]
                    vz10as = unpack("<f", f.read(4))[0]
                    type10as = unpack("B", f.read(1))[0]
                    value10as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10as = unpack("<f", f.read(4))[0]
                    vx11as = unpack("<f", f.read(4))[0]
                    vy11as = unpack("<f", f.read(4))[0]
                    vz11as = unpack("<f", f.read(4))[0]
                    type11as = unpack("B", f.read(1))[0]
                    value11as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11as = unpack("<f", f.read(4))[0]
                    vx12as = unpack("<f", f.read(4))[0]
                    vy12as = unpack("<f", f.read(4))[0]
                    vz12as = unpack("<f", f.read(4))[0]
                    type12as = unpack("B", f.read(1))[0]
                    value12as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12as = unpack("<f", f.read(4))[0]
                    vx13as = unpack("<f", f.read(4))[0]
                    vy13as = unpack("<f", f.read(4))[0]
                    vz13as = unpack("<f", f.read(4))[0]
                    type13as = unpack("B", f.read(1))[0]
                    value13as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13as = unpack("<f", f.read(4))[0]
                    vx14as = unpack("<f", f.read(4))[0]
                    vy14as = unpack("<f", f.read(4))[0]
                    vz14as = unpack("<f", f.read(4))[0]
                    type14as = unpack("B", f.read(1))[0]
                    value14as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14as = unpack("<f", f.read(4))[0]
                    vx15as = unpack("<f", f.read(4))[0]
                    vy15as = unpack("<f", f.read(4))[0]
                    vz15as = unpack("<f", f.read(4))[0]
                    type15as = unpack("B", f.read(1))[0]
                    value15as = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15as = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1at = unpack("<f", f.read(4))[0]
                    vy1at = unpack("<f", f.read(4))[0]
                    vz1at = unpack("<f", f.read(4))[0]
                    type1at = unpack("B", f.read(1))[0]
                    value1at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1at = unpack("<f", f.read(4))[0]
                    vx2at = unpack("<f", f.read(4))[0]
                    vy2at = unpack("<f", f.read(4))[0]
                    vz2at = unpack("<f", f.read(4))[0]
                    type2at = unpack("B", f.read(1))[0]
                    value2at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2at = unpack("<f", f.read(4))[0]
                    vx3at = unpack("<f", f.read(4))[0]
                    vy3at = unpack("<f", f.read(4))[0]
                    vz3at = unpack("<f", f.read(4))[0]
                    type3at = unpack("B", f.read(1))[0]
                    value3at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3at = unpack("<f", f.read(4))[0]
                    vx4at = unpack("<f", f.read(4))[0]
                    vy4at = unpack("<f", f.read(4))[0]
                    vz4at = unpack("<f", f.read(4))[0]
                    type4at = unpack("B", f.read(1))[0]
                    value4at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4at = unpack("<f", f.read(4))[0]
                    vx5at = unpack("<f", f.read(4))[0]
                    vy5at = unpack("<f", f.read(4))[0]
                    vz5at = unpack("<f", f.read(4))[0]
                    type5at = unpack("B", f.read(1))[0]
                    value5at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5at = unpack("<f", f.read(4))[0]
                    vx6at = unpack("<f", f.read(4))[0]
                    vy6at = unpack("<f", f.read(4))[0]
                    vz6at = unpack("<f", f.read(4))[0]
                    type6at = unpack("B", f.read(1))[0]
                    value6at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6at = unpack("<f", f.read(4))[0]
                    vx7at = unpack("<f", f.read(4))[0]
                    vy7at = unpack("<f", f.read(4))[0]
                    vz7at = unpack("<f", f.read(4))[0]
                    type7at = unpack("B", f.read(1))[0]
                    value7at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7at = unpack("<f", f.read(4))[0]
                    vx8at = unpack("<f", f.read(4))[0]
                    vy8at = unpack("<f", f.read(4))[0]
                    vz8at = unpack("<f", f.read(4))[0]
                    type8at = unpack("B", f.read(1))[0]
                    value8at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8at = unpack("<f", f.read(4))[0]
                    vx9at = unpack("<f", f.read(4))[0]
                    vy9at = unpack("<f", f.read(4))[0]
                    vz9at = unpack("<f", f.read(4))[0]
                    type9at = unpack("B", f.read(1))[0]
                    value9at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9at = unpack("<f", f.read(4))[0]
                    vx10at = unpack("<f", f.read(4))[0]
                    vy10at = unpack("<f", f.read(4))[0]
                    vz10at = unpack("<f", f.read(4))[0]
                    type10at = unpack("B", f.read(1))[0]
                    value10at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10at = unpack("<f", f.read(4))[0]
                    vx11at = unpack("<f", f.read(4))[0]
                    vy11at = unpack("<f", f.read(4))[0]
                    vz11at = unpack("<f", f.read(4))[0]
                    type11at = unpack("B", f.read(1))[0]
                    value11at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11at = unpack("<f", f.read(4))[0]
                    vx12at = unpack("<f", f.read(4))[0]
                    vy12at = unpack("<f", f.read(4))[0]
                    vz12at = unpack("<f", f.read(4))[0]
                    type12at = unpack("B", f.read(1))[0]
                    value12at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12at = unpack("<f", f.read(4))[0]
                    vx13at = unpack("<f", f.read(4))[0]
                    vy13at = unpack("<f", f.read(4))[0]
                    vz13at = unpack("<f", f.read(4))[0]
                    type13at = unpack("B", f.read(1))[0]
                    value13at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13at = unpack("<f", f.read(4))[0]
                    vx14at = unpack("<f", f.read(4))[0]
                    vy14at = unpack("<f", f.read(4))[0]
                    vz14at = unpack("<f", f.read(4))[0]
                    type14at = unpack("B", f.read(1))[0]
                    value14at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14at = unpack("<f", f.read(4))[0]
                    vx15at = unpack("<f", f.read(4))[0]
                    vy15at = unpack("<f", f.read(4))[0]
                    vz15at = unpack("<f", f.read(4))[0]
                    type15at = unpack("B", f.read(1))[0]
                    value15at = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15at = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1au = unpack("<f", f.read(4))[0]
                    vy1au = unpack("<f", f.read(4))[0]
                    vz1au = unpack("<f", f.read(4))[0]
                    type1au = unpack("B", f.read(1))[0]
                    value1au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1au = unpack("<f", f.read(4))[0]
                    vx2au = unpack("<f", f.read(4))[0]
                    vy2au = unpack("<f", f.read(4))[0]
                    vz2au = unpack("<f", f.read(4))[0]
                    type2au = unpack("B", f.read(1))[0]
                    value2au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2au = unpack("<f", f.read(4))[0]
                    vx3au = unpack("<f", f.read(4))[0]
                    vy3au = unpack("<f", f.read(4))[0]
                    vz3au = unpack("<f", f.read(4))[0]
                    type3au = unpack("B", f.read(1))[0]
                    value3au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3au = unpack("<f", f.read(4))[0]
                    vx4au = unpack("<f", f.read(4))[0]
                    vy4au = unpack("<f", f.read(4))[0]
                    vz4au = unpack("<f", f.read(4))[0]
                    type4au = unpack("B", f.read(1))[0]
                    value4au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4au = unpack("<f", f.read(4))[0]
                    vx5au = unpack("<f", f.read(4))[0]
                    vy5au = unpack("<f", f.read(4))[0]
                    vz5au = unpack("<f", f.read(4))[0]
                    type5au = unpack("B", f.read(1))[0]
                    value5au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5au = unpack("<f", f.read(4))[0]
                    vx6au = unpack("<f", f.read(4))[0]
                    vy6au = unpack("<f", f.read(4))[0]
                    vz6au = unpack("<f", f.read(4))[0]
                    type6au = unpack("B", f.read(1))[0]
                    value6au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6au = unpack("<f", f.read(4))[0]
                    vx7au = unpack("<f", f.read(4))[0]
                    vy7au = unpack("<f", f.read(4))[0]
                    vz7au = unpack("<f", f.read(4))[0]
                    type7au = unpack("B", f.read(1))[0]
                    value7au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7au = unpack("<f", f.read(4))[0]
                    vx8au = unpack("<f", f.read(4))[0]
                    vy8au = unpack("<f", f.read(4))[0]
                    vz8au = unpack("<f", f.read(4))[0]
                    type8au = unpack("B", f.read(1))[0]
                    value8au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8au = unpack("<f", f.read(4))[0]
                    vx9au = unpack("<f", f.read(4))[0]
                    vy9au = unpack("<f", f.read(4))[0]
                    vz9au = unpack("<f", f.read(4))[0]
                    type9au = unpack("B", f.read(1))[0]
                    value9au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9au = unpack("<f", f.read(4))[0]
                    vx10au = unpack("<f", f.read(4))[0]
                    vy10au = unpack("<f", f.read(4))[0]
                    vz10au = unpack("<f", f.read(4))[0]
                    type10au = unpack("B", f.read(1))[0]
                    value10au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10au = unpack("<f", f.read(4))[0]
                    vx11au = unpack("<f", f.read(4))[0]
                    vy11au = unpack("<f", f.read(4))[0]
                    vz11au = unpack("<f", f.read(4))[0]
                    type11au = unpack("B", f.read(1))[0]
                    value11au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11au = unpack("<f", f.read(4))[0]
                    vx12au = unpack("<f", f.read(4))[0]
                    vy12au = unpack("<f", f.read(4))[0]
                    vz12au = unpack("<f", f.read(4))[0]
                    type12au = unpack("B", f.read(1))[0]
                    value12au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12au = unpack("<f", f.read(4))[0]
                    vx13au = unpack("<f", f.read(4))[0]
                    vy13au = unpack("<f", f.read(4))[0]
                    vz13au = unpack("<f", f.read(4))[0]
                    type13au = unpack("B", f.read(1))[0]
                    value13au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13au = unpack("<f", f.read(4))[0]
                    vx14au = unpack("<f", f.read(4))[0]
                    vy14au = unpack("<f", f.read(4))[0]
                    vz14au = unpack("<f", f.read(4))[0]
                    type14au = unpack("B", f.read(1))[0]
                    value14au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14au = unpack("<f", f.read(4))[0]
                    vx15au = unpack("<f", f.read(4))[0]
                    vy15au = unpack("<f", f.read(4))[0]
                    vz15au = unpack("<f", f.read(4))[0]
                    type15au = unpack("B", f.read(1))[0]
                    value15au = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15au = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1av = unpack("<f", f.read(4))[0]
                    vy1av = unpack("<f", f.read(4))[0]
                    vz1av = unpack("<f", f.read(4))[0]
                    type1av = unpack("B", f.read(1))[0]
                    value1av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1av = unpack("<f", f.read(4))[0]
                    vx2av = unpack("<f", f.read(4))[0]
                    vy2av = unpack("<f", f.read(4))[0]
                    vz2av = unpack("<f", f.read(4))[0]
                    type2av = unpack("B", f.read(1))[0]
                    value2av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2av = unpack("<f", f.read(4))[0]
                    vx3av = unpack("<f", f.read(4))[0]
                    vy3av = unpack("<f", f.read(4))[0]
                    vz3av = unpack("<f", f.read(4))[0]
                    type3av = unpack("B", f.read(1))[0]
                    value3av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3av = unpack("<f", f.read(4))[0]
                    vx4av = unpack("<f", f.read(4))[0]
                    vy4av = unpack("<f", f.read(4))[0]
                    vz4av = unpack("<f", f.read(4))[0]
                    type4av = unpack("B", f.read(1))[0]
                    value4av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4av = unpack("<f", f.read(4))[0]
                    vx5av = unpack("<f", f.read(4))[0]
                    vy5av = unpack("<f", f.read(4))[0]
                    vz5av = unpack("<f", f.read(4))[0]
                    type5av = unpack("B", f.read(1))[0]
                    value5av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5av = unpack("<f", f.read(4))[0]
                    vx6av = unpack("<f", f.read(4))[0]
                    vy6av = unpack("<f", f.read(4))[0]
                    vz6av = unpack("<f", f.read(4))[0]
                    type6av = unpack("B", f.read(1))[0]
                    value6av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6av = unpack("<f", f.read(4))[0]
                    vx7av = unpack("<f", f.read(4))[0]
                    vy7av = unpack("<f", f.read(4))[0]
                    vz7av = unpack("<f", f.read(4))[0]
                    type7av = unpack("B", f.read(1))[0]
                    value7av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7av = unpack("<f", f.read(4))[0]
                    vx8av = unpack("<f", f.read(4))[0]
                    vy8av = unpack("<f", f.read(4))[0]
                    vz8av = unpack("<f", f.read(4))[0]
                    type8av = unpack("B", f.read(1))[0]
                    value8av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8av = unpack("<f", f.read(4))[0]
                    vx9av = unpack("<f", f.read(4))[0]
                    vy9av = unpack("<f", f.read(4))[0]
                    vz9av = unpack("<f", f.read(4))[0]
                    type9av = unpack("B", f.read(1))[0]
                    value9av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9av = unpack("<f", f.read(4))[0]
                    vx10av = unpack("<f", f.read(4))[0]
                    vy10av = unpack("<f", f.read(4))[0]
                    vz10av = unpack("<f", f.read(4))[0]
                    type10av = unpack("B", f.read(1))[0]
                    value10av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10av = unpack("<f", f.read(4))[0]
                    vx11av = unpack("<f", f.read(4))[0]
                    vy11av = unpack("<f", f.read(4))[0]
                    vz11av = unpack("<f", f.read(4))[0]
                    type11av = unpack("B", f.read(1))[0]
                    value11av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11av = unpack("<f", f.read(4))[0]
                    vx12av = unpack("<f", f.read(4))[0]
                    vy12av = unpack("<f", f.read(4))[0]
                    vz12av = unpack("<f", f.read(4))[0]
                    type12av = unpack("B", f.read(1))[0]
                    value12av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12av = unpack("<f", f.read(4))[0]
                    vx13av = unpack("<f", f.read(4))[0]
                    vy13av = unpack("<f", f.read(4))[0]
                    vz13av = unpack("<f", f.read(4))[0]
                    type13av = unpack("B", f.read(1))[0]
                    value13av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13av = unpack("<f", f.read(4))[0]
                    vx14av = unpack("<f", f.read(4))[0]
                    vy14av = unpack("<f", f.read(4))[0]
                    vz14av = unpack("<f", f.read(4))[0]
                    type14av = unpack("B", f.read(1))[0]
                    value14av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14av = unpack("<f", f.read(4))[0]
                    vx15av = unpack("<f", f.read(4))[0]
                    vy15av = unpack("<f", f.read(4))[0]
                    vz15av = unpack("<f", f.read(4))[0]
                    type15av = unpack("B", f.read(1))[0]
                    value15av = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15av = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1aw = unpack("<f", f.read(4))[0]
                    vy1aw = unpack("<f", f.read(4))[0]
                    vz1aw = unpack("<f", f.read(4))[0]
                    type1aw = unpack("B", f.read(1))[0]
                    value1aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1aw = unpack("<f", f.read(4))[0]
                    vx2aw = unpack("<f", f.read(4))[0]
                    vy2aw = unpack("<f", f.read(4))[0]
                    vz2aw = unpack("<f", f.read(4))[0]
                    type2aw = unpack("B", f.read(1))[0]
                    value2aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2aw = unpack("<f", f.read(4))[0]
                    vx3aw = unpack("<f", f.read(4))[0]
                    vy3aw = unpack("<f", f.read(4))[0]
                    vz3aw = unpack("<f", f.read(4))[0]
                    type3aw = unpack("B", f.read(1))[0]
                    value3aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3aw = unpack("<f", f.read(4))[0]
                    vx4aw = unpack("<f", f.read(4))[0]
                    vy4aw = unpack("<f", f.read(4))[0]
                    vz4aw = unpack("<f", f.read(4))[0]
                    type4aw = unpack("B", f.read(1))[0]
                    value4aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4aw = unpack("<f", f.read(4))[0]
                    vx5aw = unpack("<f", f.read(4))[0]
                    vy5aw = unpack("<f", f.read(4))[0]
                    vz5aw = unpack("<f", f.read(4))[0]
                    type5aw = unpack("B", f.read(1))[0]
                    value5aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5aw = unpack("<f", f.read(4))[0]
                    vx6aw = unpack("<f", f.read(4))[0]
                    vy6aw = unpack("<f", f.read(4))[0]
                    vz6aw = unpack("<f", f.read(4))[0]
                    type6aw = unpack("B", f.read(1))[0]
                    value6aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6aw = unpack("<f", f.read(4))[0]
                    vx7aw = unpack("<f", f.read(4))[0]
                    vy7aw = unpack("<f", f.read(4))[0]
                    vz7aw = unpack("<f", f.read(4))[0]
                    type7aw = unpack("B", f.read(1))[0]
                    value7aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7aw = unpack("<f", f.read(4))[0]
                    vx8aw = unpack("<f", f.read(4))[0]
                    vy8aw = unpack("<f", f.read(4))[0]
                    vz8aw = unpack("<f", f.read(4))[0]
                    type8aw = unpack("B", f.read(1))[0]
                    value8aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8aw = unpack("<f", f.read(4))[0]
                    vx9aw = unpack("<f", f.read(4))[0]
                    vy9aw = unpack("<f", f.read(4))[0]
                    vz9aw = unpack("<f", f.read(4))[0]
                    type9aw = unpack("B", f.read(1))[0]
                    value9aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9aw = unpack("<f", f.read(4))[0]
                    vx10aw = unpack("<f", f.read(4))[0]
                    vy10aw = unpack("<f", f.read(4))[0]
                    vz10aw = unpack("<f", f.read(4))[0]
                    type10aw = unpack("B", f.read(1))[0]
                    value10aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10aw = unpack("<f", f.read(4))[0]
                    vx11aw = unpack("<f", f.read(4))[0]
                    vy11aw = unpack("<f", f.read(4))[0]
                    vz11aw = unpack("<f", f.read(4))[0]
                    type11aw = unpack("B", f.read(1))[0]
                    value11aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11aw = unpack("<f", f.read(4))[0]
                    vx12aw = unpack("<f", f.read(4))[0]
                    vy12aw = unpack("<f", f.read(4))[0]
                    vz12aw = unpack("<f", f.read(4))[0]
                    type12aw = unpack("B", f.read(1))[0]
                    value12aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12aw = unpack("<f", f.read(4))[0]
                    vx13aw = unpack("<f", f.read(4))[0]
                    vy13aw = unpack("<f", f.read(4))[0]
                    vz13aw = unpack("<f", f.read(4))[0]
                    type13aw = unpack("B", f.read(1))[0]
                    value13aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13aw = unpack("<f", f.read(4))[0]
                    vx14aw = unpack("<f", f.read(4))[0]
                    vy14aw = unpack("<f", f.read(4))[0]
                    vz14aw = unpack("<f", f.read(4))[0]
                    type14aw = unpack("B", f.read(1))[0]
                    value14aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14aw = unpack("<f", f.read(4))[0]
                    vx15aw = unpack("<f", f.read(4))[0]
                    vy15aw = unpack("<f", f.read(4))[0]
                    vz15aw = unpack("<f", f.read(4))[0]
                    type15aw = unpack("B", f.read(1))[0]
                    value15aw = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15aw = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ax = unpack("<f", f.read(4))[0]
                    vy1ax = unpack("<f", f.read(4))[0]
                    vz1ax = unpack("<f", f.read(4))[0]
                    type1ax = unpack("B", f.read(1))[0]
                    value1ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ax = unpack("<f", f.read(4))[0]
                    vx2ax = unpack("<f", f.read(4))[0]
                    vy2ax = unpack("<f", f.read(4))[0]
                    vz2ax = unpack("<f", f.read(4))[0]
                    type2ax = unpack("B", f.read(1))[0]
                    value2ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ax = unpack("<f", f.read(4))[0]
                    vx3ax = unpack("<f", f.read(4))[0]
                    vy3ax = unpack("<f", f.read(4))[0]
                    vz3ax = unpack("<f", f.read(4))[0]
                    type3ax = unpack("B", f.read(1))[0]
                    value3ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ax = unpack("<f", f.read(4))[0]
                    vx4ax = unpack("<f", f.read(4))[0]
                    vy4ax = unpack("<f", f.read(4))[0]
                    vz4ax = unpack("<f", f.read(4))[0]
                    type4ax = unpack("B", f.read(1))[0]
                    value4ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ax = unpack("<f", f.read(4))[0]
                    vx5ax = unpack("<f", f.read(4))[0]
                    vy5ax = unpack("<f", f.read(4))[0]
                    vz5ax = unpack("<f", f.read(4))[0]
                    type5ax = unpack("B", f.read(1))[0]
                    value5ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ax = unpack("<f", f.read(4))[0]
                    vx6ax = unpack("<f", f.read(4))[0]
                    vy6ax = unpack("<f", f.read(4))[0]
                    vz6ax = unpack("<f", f.read(4))[0]
                    type6ax = unpack("B", f.read(1))[0]
                    value6ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ax = unpack("<f", f.read(4))[0]
                    vx7ax = unpack("<f", f.read(4))[0]
                    vy7ax = unpack("<f", f.read(4))[0]
                    vz7ax = unpack("<f", f.read(4))[0]
                    type7ax = unpack("B", f.read(1))[0]
                    value7ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ax = unpack("<f", f.read(4))[0]
                    vx8ax = unpack("<f", f.read(4))[0]
                    vy8ax = unpack("<f", f.read(4))[0]
                    vz8ax = unpack("<f", f.read(4))[0]
                    type8ax = unpack("B", f.read(1))[0]
                    value8ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ax = unpack("<f", f.read(4))[0]
                    vx9ax = unpack("<f", f.read(4))[0]
                    vy9ax = unpack("<f", f.read(4))[0]
                    vz9ax = unpack("<f", f.read(4))[0]
                    type9ax = unpack("B", f.read(1))[0]
                    value9ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ax = unpack("<f", f.read(4))[0]
                    vx10ax = unpack("<f", f.read(4))[0]
                    vy10ax = unpack("<f", f.read(4))[0]
                    vz10ax = unpack("<f", f.read(4))[0]
                    type10ax = unpack("B", f.read(1))[0]
                    value10ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ax = unpack("<f", f.read(4))[0]
                    vx11ax = unpack("<f", f.read(4))[0]
                    vy11ax = unpack("<f", f.read(4))[0]
                    vz11ax = unpack("<f", f.read(4))[0]
                    type11ax = unpack("B", f.read(1))[0]
                    value11ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ax = unpack("<f", f.read(4))[0]
                    vx12ax = unpack("<f", f.read(4))[0]
                    vy12ax = unpack("<f", f.read(4))[0]
                    vz12ax = unpack("<f", f.read(4))[0]
                    type12ax = unpack("B", f.read(1))[0]
                    value12ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ax = unpack("<f", f.read(4))[0]
                    vx13ax = unpack("<f", f.read(4))[0]
                    vy13ax = unpack("<f", f.read(4))[0]
                    vz13ax = unpack("<f", f.read(4))[0]
                    type13ax = unpack("B", f.read(1))[0]
                    value13ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ax = unpack("<f", f.read(4))[0]
                    vx14ax = unpack("<f", f.read(4))[0]
                    vy14ax = unpack("<f", f.read(4))[0]
                    vz14ax = unpack("<f", f.read(4))[0]
                    type14ax = unpack("B", f.read(1))[0]
                    value14ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ax = unpack("<f", f.read(4))[0]
                    vx15ax = unpack("<f", f.read(4))[0]
                    vy15ax = unpack("<f", f.read(4))[0]
                    vz15ax = unpack("<f", f.read(4))[0]
                    type15ax = unpack("B", f.read(1))[0]
                    value15ax = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ax = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ay = unpack("<f", f.read(4))[0]
                    vy1ay = unpack("<f", f.read(4))[0]
                    vz1ay = unpack("<f", f.read(4))[0]
                    type1ay = unpack("B", f.read(1))[0]
                    value1ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ay = unpack("<f", f.read(4))[0]
                    vx2ay = unpack("<f", f.read(4))[0]
                    vy2ay = unpack("<f", f.read(4))[0]
                    vz2ay = unpack("<f", f.read(4))[0]
                    type2ay = unpack("B", f.read(1))[0]
                    value2ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ay = unpack("<f", f.read(4))[0]
                    vx3ay = unpack("<f", f.read(4))[0]
                    vy3ay = unpack("<f", f.read(4))[0]
                    vz3ay = unpack("<f", f.read(4))[0]
                    type3ay = unpack("B", f.read(1))[0]
                    value3ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ay = unpack("<f", f.read(4))[0]
                    vx4ay = unpack("<f", f.read(4))[0]
                    vy4ay = unpack("<f", f.read(4))[0]
                    vz4ay = unpack("<f", f.read(4))[0]
                    type4ay = unpack("B", f.read(1))[0]
                    value4ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ay = unpack("<f", f.read(4))[0]
                    vx5ay = unpack("<f", f.read(4))[0]
                    vy5ay = unpack("<f", f.read(4))[0]
                    vz5ay = unpack("<f", f.read(4))[0]
                    type5ay = unpack("B", f.read(1))[0]
                    value5ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ay = unpack("<f", f.read(4))[0]
                    vx6ay = unpack("<f", f.read(4))[0]
                    vy6ay = unpack("<f", f.read(4))[0]
                    vz6ay = unpack("<f", f.read(4))[0]
                    type6ay = unpack("B", f.read(1))[0]
                    value6ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ay = unpack("<f", f.read(4))[0]
                    vx7ay = unpack("<f", f.read(4))[0]
                    vy7ay = unpack("<f", f.read(4))[0]
                    vz7ay = unpack("<f", f.read(4))[0]
                    type7ay = unpack("B", f.read(1))[0]
                    value7ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ay = unpack("<f", f.read(4))[0]
                    vx8ay = unpack("<f", f.read(4))[0]
                    vy8ay = unpack("<f", f.read(4))[0]
                    vz8ay = unpack("<f", f.read(4))[0]
                    type8ay = unpack("B", f.read(1))[0]
                    value8ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ay = unpack("<f", f.read(4))[0]
                    vx9ay = unpack("<f", f.read(4))[0]
                    vy9ay = unpack("<f", f.read(4))[0]
                    vz9ay = unpack("<f", f.read(4))[0]
                    type9ay = unpack("B", f.read(1))[0]
                    value9ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ay = unpack("<f", f.read(4))[0]
                    vx10ay = unpack("<f", f.read(4))[0]
                    vy10ay = unpack("<f", f.read(4))[0]
                    vz10ay = unpack("<f", f.read(4))[0]
                    type10ay = unpack("B", f.read(1))[0]
                    value10ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ay = unpack("<f", f.read(4))[0]
                    vx11ay = unpack("<f", f.read(4))[0]
                    vy11ay = unpack("<f", f.read(4))[0]
                    vz11ay = unpack("<f", f.read(4))[0]
                    type11ay = unpack("B", f.read(1))[0]
                    value11ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ay = unpack("<f", f.read(4))[0]
                    vx12ay = unpack("<f", f.read(4))[0]
                    vy12ay = unpack("<f", f.read(4))[0]
                    vz12ay = unpack("<f", f.read(4))[0]
                    type12ay = unpack("B", f.read(1))[0]
                    value12ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ay = unpack("<f", f.read(4))[0]
                    vx13ay = unpack("<f", f.read(4))[0]
                    vy13ay = unpack("<f", f.read(4))[0]
                    vz13ay = unpack("<f", f.read(4))[0]
                    type13ay = unpack("B", f.read(1))[0]
                    value13ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ay = unpack("<f", f.read(4))[0]
                    vx14ay = unpack("<f", f.read(4))[0]
                    vy14ay = unpack("<f", f.read(4))[0]
                    vz14ay = unpack("<f", f.read(4))[0]
                    type14ay = unpack("B", f.read(1))[0]
                    value14ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ay = unpack("<f", f.read(4))[0]
                    vx15ay = unpack("<f", f.read(4))[0]
                    vy15ay = unpack("<f", f.read(4))[0]
                    vz15ay = unpack("<f", f.read(4))[0]
                    type15ay = unpack("B", f.read(1))[0]
                    value15ay = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ay = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1az = unpack("<f", f.read(4))[0]
                    vy1az = unpack("<f", f.read(4))[0]
                    vz1az = unpack("<f", f.read(4))[0]
                    type1az = unpack("B", f.read(1))[0]
                    value1az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1az = unpack("<f", f.read(4))[0]
                    vx2az = unpack("<f", f.read(4))[0]
                    vy2az = unpack("<f", f.read(4))[0]
                    vz2az = unpack("<f", f.read(4))[0]
                    type2az = unpack("B", f.read(1))[0]
                    value2az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2az = unpack("<f", f.read(4))[0]
                    vx3az = unpack("<f", f.read(4))[0]
                    vy3az = unpack("<f", f.read(4))[0]
                    vz3az = unpack("<f", f.read(4))[0]
                    type3az = unpack("B", f.read(1))[0]
                    value3az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3az = unpack("<f", f.read(4))[0]
                    vx4az = unpack("<f", f.read(4))[0]
                    vy4az = unpack("<f", f.read(4))[0]
                    vz4az = unpack("<f", f.read(4))[0]
                    type4az = unpack("B", f.read(1))[0]
                    value4az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4az = unpack("<f", f.read(4))[0]
                    vx5az = unpack("<f", f.read(4))[0]
                    vy5az = unpack("<f", f.read(4))[0]
                    vz5az = unpack("<f", f.read(4))[0]
                    type5az = unpack("B", f.read(1))[0]
                    value5az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5az = unpack("<f", f.read(4))[0]
                    vx6az = unpack("<f", f.read(4))[0]
                    vy6az = unpack("<f", f.read(4))[0]
                    vz6az = unpack("<f", f.read(4))[0]
                    type6az = unpack("B", f.read(1))[0]
                    value6az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6az = unpack("<f", f.read(4))[0]
                    vx7az = unpack("<f", f.read(4))[0]
                    vy7az = unpack("<f", f.read(4))[0]
                    vz7az = unpack("<f", f.read(4))[0]
                    type7az = unpack("B", f.read(1))[0]
                    value7az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7az = unpack("<f", f.read(4))[0]
                    vx8az = unpack("<f", f.read(4))[0]
                    vy8az = unpack("<f", f.read(4))[0]
                    vz8az = unpack("<f", f.read(4))[0]
                    type8az = unpack("B", f.read(1))[0]
                    value8az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8az = unpack("<f", f.read(4))[0]
                    vx9az = unpack("<f", f.read(4))[0]
                    vy9az = unpack("<f", f.read(4))[0]
                    vz9az = unpack("<f", f.read(4))[0]
                    type9az = unpack("B", f.read(1))[0]
                    value9az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9az = unpack("<f", f.read(4))[0]
                    vx10az = unpack("<f", f.read(4))[0]
                    vy10az = unpack("<f", f.read(4))[0]
                    vz10az = unpack("<f", f.read(4))[0]
                    type10az = unpack("B", f.read(1))[0]
                    value10az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10az = unpack("<f", f.read(4))[0]
                    vx11az = unpack("<f", f.read(4))[0]
                    vy11az = unpack("<f", f.read(4))[0]
                    vz11az = unpack("<f", f.read(4))[0]
                    type11az = unpack("B", f.read(1))[0]
                    value11az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11az = unpack("<f", f.read(4))[0]
                    vx12az = unpack("<f", f.read(4))[0]
                    vy12az = unpack("<f", f.read(4))[0]
                    vz12az = unpack("<f", f.read(4))[0]
                    type12az = unpack("B", f.read(1))[0]
                    value12az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12az = unpack("<f", f.read(4))[0]
                    vx13az = unpack("<f", f.read(4))[0]
                    vy13az = unpack("<f", f.read(4))[0]
                    vz13az = unpack("<f", f.read(4))[0]
                    type13az = unpack("B", f.read(1))[0]
                    value13az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13az = unpack("<f", f.read(4))[0]
                    vx14az = unpack("<f", f.read(4))[0]
                    vy14az = unpack("<f", f.read(4))[0]
                    vz14az = unpack("<f", f.read(4))[0]
                    type14az = unpack("B", f.read(1))[0]
                    value14az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14az = unpack("<f", f.read(4))[0]
                    vx15az = unpack("<f", f.read(4))[0]
                    vy15az = unpack("<f", f.read(4))[0]
                    vz15az = unpack("<f", f.read(4))[0]
                    type15az = unpack("B", f.read(1))[0]
                    value15az = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15az = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1ba = unpack("<f", f.read(4))[0]
                    vy1ba = unpack("<f", f.read(4))[0]
                    vz1ba = unpack("<f", f.read(4))[0]
                    type1ba = unpack("B", f.read(1))[0]
                    value1ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1ba = unpack("<f", f.read(4))[0]
                    vx2ba = unpack("<f", f.read(4))[0]
                    vy2ba = unpack("<f", f.read(4))[0]
                    vz2ba = unpack("<f", f.read(4))[0]
                    type2ba = unpack("B", f.read(1))[0]
                    value2ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2ba = unpack("<f", f.read(4))[0]
                    vx3ba = unpack("<f", f.read(4))[0]
                    vy3ba = unpack("<f", f.read(4))[0]
                    vz3ba = unpack("<f", f.read(4))[0]
                    type3ba = unpack("B", f.read(1))[0]
                    value3ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3ba = unpack("<f", f.read(4))[0]
                    vx4ba = unpack("<f", f.read(4))[0]
                    vy4ba = unpack("<f", f.read(4))[0]
                    vz4ba = unpack("<f", f.read(4))[0]
                    type4ba = unpack("B", f.read(1))[0]
                    value4ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4ba = unpack("<f", f.read(4))[0]
                    vx5ba = unpack("<f", f.read(4))[0]
                    vy5ba = unpack("<f", f.read(4))[0]
                    vz5ba = unpack("<f", f.read(4))[0]
                    type5ba = unpack("B", f.read(1))[0]
                    value5ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5ba = unpack("<f", f.read(4))[0]
                    vx6ba = unpack("<f", f.read(4))[0]
                    vy6ba = unpack("<f", f.read(4))[0]
                    vz6ba = unpack("<f", f.read(4))[0]
                    type6ba = unpack("B", f.read(1))[0]
                    value6ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6ba = unpack("<f", f.read(4))[0]
                    vx7ba = unpack("<f", f.read(4))[0]
                    vy7ba = unpack("<f", f.read(4))[0]
                    vz7ba = unpack("<f", f.read(4))[0]
                    type7ba = unpack("B", f.read(1))[0]
                    value7ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7ba = unpack("<f", f.read(4))[0]
                    vx8ba = unpack("<f", f.read(4))[0]
                    vy8ba = unpack("<f", f.read(4))[0]
                    vz8ba = unpack("<f", f.read(4))[0]
                    type8ba = unpack("B", f.read(1))[0]
                    value8ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8ba = unpack("<f", f.read(4))[0]
                    vx9ba = unpack("<f", f.read(4))[0]
                    vy9ba = unpack("<f", f.read(4))[0]
                    vz9ba = unpack("<f", f.read(4))[0]
                    type9ba = unpack("B", f.read(1))[0]
                    value9ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9ba = unpack("<f", f.read(4))[0]
                    vx10ba = unpack("<f", f.read(4))[0]
                    vy10ba = unpack("<f", f.read(4))[0]
                    vz10ba = unpack("<f", f.read(4))[0]
                    type10ba = unpack("B", f.read(1))[0]
                    value10ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10ba = unpack("<f", f.read(4))[0]
                    vx11ba = unpack("<f", f.read(4))[0]
                    vy11ba = unpack("<f", f.read(4))[0]
                    vz11ba = unpack("<f", f.read(4))[0]
                    type11ba = unpack("B", f.read(1))[0]
                    value11ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11ba = unpack("<f", f.read(4))[0]
                    vx12ba = unpack("<f", f.read(4))[0]
                    vy12ba = unpack("<f", f.read(4))[0]
                    vz12ba = unpack("<f", f.read(4))[0]
                    type12ba = unpack("B", f.read(1))[0]
                    value12ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12ba = unpack("<f", f.read(4))[0]
                    vx13ba = unpack("<f", f.read(4))[0]
                    vy13ba = unpack("<f", f.read(4))[0]
                    vz13ba = unpack("<f", f.read(4))[0]
                    type13ba = unpack("B", f.read(1))[0]
                    value13ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13ba = unpack("<f", f.read(4))[0]
                    vx14ba = unpack("<f", f.read(4))[0]
                    vy14ba = unpack("<f", f.read(4))[0]
                    vz14ba = unpack("<f", f.read(4))[0]
                    type14ba = unpack("B", f.read(1))[0]
                    value14ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14ba = unpack("<f", f.read(4))[0]
                    vx15ba = unpack("<f", f.read(4))[0]
                    vy15ba = unpack("<f", f.read(4))[0]
                    vz15ba = unpack("<f", f.read(4))[0]
                    type15ba = unpack("B", f.read(1))[0]
                    value15ba = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15ba = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1bb = unpack("<f", f.read(4))[0]
                    vy1bb = unpack("<f", f.read(4))[0]
                    vz1bb = unpack("<f", f.read(4))[0]
                    type1bb = unpack("B", f.read(1))[0]
                    value1bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1bb = unpack("<f", f.read(4))[0]
                    vx2bb = unpack("<f", f.read(4))[0]
                    vy2bb = unpack("<f", f.read(4))[0]
                    vz2bb = unpack("<f", f.read(4))[0]
                    type2bb = unpack("B", f.read(1))[0]
                    value2bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2bb = unpack("<f", f.read(4))[0]
                    vx3bb = unpack("<f", f.read(4))[0]
                    vy3bb = unpack("<f", f.read(4))[0]
                    vz3bb = unpack("<f", f.read(4))[0]
                    type3bb = unpack("B", f.read(1))[0]
                    value3bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3bb = unpack("<f", f.read(4))[0]
                    vx4bb = unpack("<f", f.read(4))[0]
                    vy4bb = unpack("<f", f.read(4))[0]
                    vz4bb = unpack("<f", f.read(4))[0]
                    type4bb = unpack("B", f.read(1))[0]
                    value4bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4bb = unpack("<f", f.read(4))[0]
                    vx5bb = unpack("<f", f.read(4))[0]
                    vy5bb = unpack("<f", f.read(4))[0]
                    vz5bb = unpack("<f", f.read(4))[0]
                    type5bb = unpack("B", f.read(1))[0]
                    value5bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5bb = unpack("<f", f.read(4))[0]
                    vx6bb = unpack("<f", f.read(4))[0]
                    vy6bb = unpack("<f", f.read(4))[0]
                    vz6bb = unpack("<f", f.read(4))[0]
                    type6bb = unpack("B", f.read(1))[0]
                    value6bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6bb = unpack("<f", f.read(4))[0]
                    vx7bb = unpack("<f", f.read(4))[0]
                    vy7bb = unpack("<f", f.read(4))[0]
                    vz7bb = unpack("<f", f.read(4))[0]
                    type7bb = unpack("B", f.read(1))[0]
                    value7bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7bb = unpack("<f", f.read(4))[0]
                    vx8bb = unpack("<f", f.read(4))[0]
                    vy8bb = unpack("<f", f.read(4))[0]
                    vz8bb = unpack("<f", f.read(4))[0]
                    type8bb = unpack("B", f.read(1))[0]
                    value8bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8bb = unpack("<f", f.read(4))[0]
                    vx9bb = unpack("<f", f.read(4))[0]
                    vy9bb = unpack("<f", f.read(4))[0]
                    vz9bb = unpack("<f", f.read(4))[0]
                    type9bb = unpack("B", f.read(1))[0]
                    value9bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9bb = unpack("<f", f.read(4))[0]
                    vx10bb = unpack("<f", f.read(4))[0]
                    vy10bb = unpack("<f", f.read(4))[0]
                    vz10bb = unpack("<f", f.read(4))[0]
                    type10bb = unpack("B", f.read(1))[0]
                    value10bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10bb = unpack("<f", f.read(4))[0]
                    vx11bb = unpack("<f", f.read(4))[0]
                    vy11bb = unpack("<f", f.read(4))[0]
                    vz11bb = unpack("<f", f.read(4))[0]
                    type11bb = unpack("B", f.read(1))[0]
                    value11bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11bb = unpack("<f", f.read(4))[0]
                    vx12bb = unpack("<f", f.read(4))[0]
                    vy12bb = unpack("<f", f.read(4))[0]
                    vz12bb = unpack("<f", f.read(4))[0]
                    type12bb = unpack("B", f.read(1))[0]
                    value12bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12bb = unpack("<f", f.read(4))[0]
                    vx13bb = unpack("<f", f.read(4))[0]
                    vy13bb = unpack("<f", f.read(4))[0]
                    vz13bb = unpack("<f", f.read(4))[0]
                    type13bb = unpack("B", f.read(1))[0]
                    value13bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13bb = unpack("<f", f.read(4))[0]
                    vx14bb = unpack("<f", f.read(4))[0]
                    vy14bb = unpack("<f", f.read(4))[0]
                    vz14bb = unpack("<f", f.read(4))[0]
                    type14bb = unpack("B", f.read(1))[0]
                    value14bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14bb = unpack("<f", f.read(4))[0]
                    vx15bb = unpack("<f", f.read(4))[0]
                    vy15bb = unpack("<f", f.read(4))[0]
                    vz15bb = unpack("<f", f.read(4))[0]
                    type15bb = unpack("B", f.read(1))[0]
                    value15bb = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15bb = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1bc = unpack("<f", f.read(4))[0]
                    vy1bc = unpack("<f", f.read(4))[0]
                    vz1bc = unpack("<f", f.read(4))[0]
                    type1bc = unpack("B", f.read(1))[0]
                    value1bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1bc = unpack("<f", f.read(4))[0]
                    vx2bc = unpack("<f", f.read(4))[0]
                    vy2bc = unpack("<f", f.read(4))[0]
                    vz2bc = unpack("<f", f.read(4))[0]
                    type2bc = unpack("B", f.read(1))[0]
                    value2bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2bc = unpack("<f", f.read(4))[0]
                    vx3bc = unpack("<f", f.read(4))[0]
                    vy3bc = unpack("<f", f.read(4))[0]
                    vz3bc = unpack("<f", f.read(4))[0]
                    type3bc = unpack("B", f.read(1))[0]
                    value3bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3bc = unpack("<f", f.read(4))[0]
                    vx4bc = unpack("<f", f.read(4))[0]
                    vy4bc = unpack("<f", f.read(4))[0]
                    vz4bc = unpack("<f", f.read(4))[0]
                    type4bc = unpack("B", f.read(1))[0]
                    value4bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4bc = unpack("<f", f.read(4))[0]
                    vx5bc = unpack("<f", f.read(4))[0]
                    vy5bc = unpack("<f", f.read(4))[0]
                    vz5bc = unpack("<f", f.read(4))[0]
                    type5bc = unpack("B", f.read(1))[0]
                    value5bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5bc = unpack("<f", f.read(4))[0]
                    vx6bc = unpack("<f", f.read(4))[0]
                    vy6bc = unpack("<f", f.read(4))[0]
                    vz6bc = unpack("<f", f.read(4))[0]
                    type6bc = unpack("B", f.read(1))[0]
                    value6bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6bc = unpack("<f", f.read(4))[0]
                    vx7bc = unpack("<f", f.read(4))[0]
                    vy7bc = unpack("<f", f.read(4))[0]
                    vz7bc = unpack("<f", f.read(4))[0]
                    type7bc = unpack("B", f.read(1))[0]
                    value7bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7bc = unpack("<f", f.read(4))[0]
                    vx8bc = unpack("<f", f.read(4))[0]
                    vy8bc = unpack("<f", f.read(4))[0]
                    vz8bc = unpack("<f", f.read(4))[0]
                    type8bc = unpack("B", f.read(1))[0]
                    value8bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8bc = unpack("<f", f.read(4))[0]
                    vx9bc = unpack("<f", f.read(4))[0]
                    vy9bc = unpack("<f", f.read(4))[0]
                    vz9bc = unpack("<f", f.read(4))[0]
                    type9bc = unpack("B", f.read(1))[0]
                    value9bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9bc = unpack("<f", f.read(4))[0]
                    vx10bc = unpack("<f", f.read(4))[0]
                    vy10bc = unpack("<f", f.read(4))[0]
                    vz10bc = unpack("<f", f.read(4))[0]
                    type10bc = unpack("B", f.read(1))[0]
                    value10bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10bc = unpack("<f", f.read(4))[0]
                    vx11bc = unpack("<f", f.read(4))[0]
                    vy11bc = unpack("<f", f.read(4))[0]
                    vz11bc = unpack("<f", f.read(4))[0]
                    type11bc = unpack("B", f.read(1))[0]
                    value11bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11bc = unpack("<f", f.read(4))[0]
                    vx12bc = unpack("<f", f.read(4))[0]
                    vy12bc = unpack("<f", f.read(4))[0]
                    vz12bc = unpack("<f", f.read(4))[0]
                    type12bc = unpack("B", f.read(1))[0]
                    value12bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12bc = unpack("<f", f.read(4))[0]
                    vx13bc = unpack("<f", f.read(4))[0]
                    vy13bc = unpack("<f", f.read(4))[0]
                    vz13bc = unpack("<f", f.read(4))[0]
                    type13bc = unpack("B", f.read(1))[0]
                    value13bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13bc = unpack("<f", f.read(4))[0]
                    vx14bc = unpack("<f", f.read(4))[0]
                    vy14bc = unpack("<f", f.read(4))[0]
                    vz14bc = unpack("<f", f.read(4))[0]
                    type14bc = unpack("B", f.read(1))[0]
                    value14bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14bc = unpack("<f", f.read(4))[0]
                    vx15bc = unpack("<f", f.read(4))[0]
                    vy15bc = unpack("<f", f.read(4))[0]
                    vz15bc = unpack("<f", f.read(4))[0]
                    type15bc = unpack("B", f.read(1))[0]
                    value15bc = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15bc = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1bd = unpack("<f", f.read(4))[0]
                    vy1bd = unpack("<f", f.read(4))[0]
                    vz1bd = unpack("<f", f.read(4))[0]
                    type1bd = unpack("B", f.read(1))[0]
                    value1bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1bd = unpack("<f", f.read(4))[0]
                    vx2bd = unpack("<f", f.read(4))[0]
                    vy2bd = unpack("<f", f.read(4))[0]
                    vz2bd = unpack("<f", f.read(4))[0]
                    type2bd = unpack("B", f.read(1))[0]
                    value2bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2bd = unpack("<f", f.read(4))[0]
                    vx3bd = unpack("<f", f.read(4))[0]
                    vy3bd = unpack("<f", f.read(4))[0]
                    vz3bd = unpack("<f", f.read(4))[0]
                    type3bd = unpack("B", f.read(1))[0]
                    value3bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3bd = unpack("<f", f.read(4))[0]
                    vx4bd = unpack("<f", f.read(4))[0]
                    vy4bd = unpack("<f", f.read(4))[0]
                    vz4bd = unpack("<f", f.read(4))[0]
                    type4bd = unpack("B", f.read(1))[0]
                    value4bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4bd = unpack("<f", f.read(4))[0]
                    vx5bd = unpack("<f", f.read(4))[0]
                    vy5bd = unpack("<f", f.read(4))[0]
                    vz5bd = unpack("<f", f.read(4))[0]
                    type5bd = unpack("B", f.read(1))[0]
                    value5bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5bd = unpack("<f", f.read(4))[0]
                    vx6bd = unpack("<f", f.read(4))[0]
                    vy6bd = unpack("<f", f.read(4))[0]
                    vz6bd = unpack("<f", f.read(4))[0]
                    type6bd = unpack("B", f.read(1))[0]
                    value6bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6bd = unpack("<f", f.read(4))[0]
                    vx7bd = unpack("<f", f.read(4))[0]
                    vy7bd = unpack("<f", f.read(4))[0]
                    vz7bd = unpack("<f", f.read(4))[0]
                    type7bd = unpack("B", f.read(1))[0]
                    value7bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7bd = unpack("<f", f.read(4))[0]
                    vx8bd = unpack("<f", f.read(4))[0]
                    vy8bd = unpack("<f", f.read(4))[0]
                    vz8bd = unpack("<f", f.read(4))[0]
                    type8bd = unpack("B", f.read(1))[0]
                    value8bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8bd = unpack("<f", f.read(4))[0]
                    vx9bd = unpack("<f", f.read(4))[0]
                    vy9bd = unpack("<f", f.read(4))[0]
                    vz9bd = unpack("<f", f.read(4))[0]
                    type9bd = unpack("B", f.read(1))[0]
                    value9bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9bd = unpack("<f", f.read(4))[0]
                    vx10bd = unpack("<f", f.read(4))[0]
                    vy10bd = unpack("<f", f.read(4))[0]
                    vz10bd = unpack("<f", f.read(4))[0]
                    type10bd = unpack("B", f.read(1))[0]
                    value10bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10bd = unpack("<f", f.read(4))[0]
                    vx11bd = unpack("<f", f.read(4))[0]
                    vy11bd = unpack("<f", f.read(4))[0]
                    vz11bd = unpack("<f", f.read(4))[0]
                    type11bd = unpack("B", f.read(1))[0]
                    value11bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11bd = unpack("<f", f.read(4))[0]
                    vx12bd = unpack("<f", f.read(4))[0]
                    vy12bd = unpack("<f", f.read(4))[0]
                    vz12bd = unpack("<f", f.read(4))[0]
                    type12bd = unpack("B", f.read(1))[0]
                    value12bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12bd = unpack("<f", f.read(4))[0]
                    vx13bd = unpack("<f", f.read(4))[0]
                    vy13bd = unpack("<f", f.read(4))[0]
                    vz13bd = unpack("<f", f.read(4))[0]
                    type13bd = unpack("B", f.read(1))[0]
                    value13bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13bd = unpack("<f", f.read(4))[0]
                    vx14bd = unpack("<f", f.read(4))[0]
                    vy14bd = unpack("<f", f.read(4))[0]
                    vz14bd = unpack("<f", f.read(4))[0]
                    type14bd = unpack("B", f.read(1))[0]
                    value14bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14bd = unpack("<f", f.read(4))[0]
                    vx15bd = unpack("<f", f.read(4))[0]
                    vy15bd = unpack("<f", f.read(4))[0]
                    vz15bd = unpack("<f", f.read(4))[0]
                    type15bd = unpack("B", f.read(1))[0]
                    value15bd = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15bd = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1be = unpack("<f", f.read(4))[0]
                    vy1be = unpack("<f", f.read(4))[0]
                    vz1be = unpack("<f", f.read(4))[0]
                    type1be = unpack("B", f.read(1))[0]
                    value1be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1be = unpack("<f", f.read(4))[0]
                    vx2be = unpack("<f", f.read(4))[0]
                    vy2be = unpack("<f", f.read(4))[0]
                    vz2be = unpack("<f", f.read(4))[0]
                    type2be = unpack("B", f.read(1))[0]
                    value2be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2be = unpack("<f", f.read(4))[0]
                    vx3be = unpack("<f", f.read(4))[0]
                    vy3be = unpack("<f", f.read(4))[0]
                    vz3be = unpack("<f", f.read(4))[0]
                    type3be = unpack("B", f.read(1))[0]
                    value3be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3be = unpack("<f", f.read(4))[0]
                    vx4be = unpack("<f", f.read(4))[0]
                    vy4be = unpack("<f", f.read(4))[0]
                    vz4be = unpack("<f", f.read(4))[0]
                    type4be = unpack("B", f.read(1))[0]
                    value4be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4be = unpack("<f", f.read(4))[0]
                    vx5be = unpack("<f", f.read(4))[0]
                    vy5be = unpack("<f", f.read(4))[0]
                    vz5be = unpack("<f", f.read(4))[0]
                    type5be = unpack("B", f.read(1))[0]
                    value5be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5be = unpack("<f", f.read(4))[0]
                    vx6be = unpack("<f", f.read(4))[0]
                    vy6be = unpack("<f", f.read(4))[0]
                    vz6be = unpack("<f", f.read(4))[0]
                    type6be = unpack("B", f.read(1))[0]
                    value6be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6be = unpack("<f", f.read(4))[0]
                    vx7be = unpack("<f", f.read(4))[0]
                    vy7be = unpack("<f", f.read(4))[0]
                    vz7be = unpack("<f", f.read(4))[0]
                    type7be = unpack("B", f.read(1))[0]
                    value7be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7be = unpack("<f", f.read(4))[0]
                    vx8be = unpack("<f", f.read(4))[0]
                    vy8be = unpack("<f", f.read(4))[0]
                    vz8be = unpack("<f", f.read(4))[0]
                    type8be = unpack("B", f.read(1))[0]
                    value8be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8be = unpack("<f", f.read(4))[0]
                    vx9be = unpack("<f", f.read(4))[0]
                    vy9be = unpack("<f", f.read(4))[0]
                    vz9be = unpack("<f", f.read(4))[0]
                    type9be = unpack("B", f.read(1))[0]
                    value9be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9be = unpack("<f", f.read(4))[0]
                    vx10be = unpack("<f", f.read(4))[0]
                    vy10be = unpack("<f", f.read(4))[0]
                    vz10be = unpack("<f", f.read(4))[0]
                    type10be = unpack("B", f.read(1))[0]
                    value10be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10be = unpack("<f", f.read(4))[0]
                    vx11be = unpack("<f", f.read(4))[0]
                    vy11be = unpack("<f", f.read(4))[0]
                    vz11be = unpack("<f", f.read(4))[0]
                    type11be = unpack("B", f.read(1))[0]
                    value11be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11be = unpack("<f", f.read(4))[0]
                    vx12be = unpack("<f", f.read(4))[0]
                    vy12be = unpack("<f", f.read(4))[0]
                    vz12be = unpack("<f", f.read(4))[0]
                    type12be = unpack("B", f.read(1))[0]
                    value12be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12be = unpack("<f", f.read(4))[0]
                    vx13be = unpack("<f", f.read(4))[0]
                    vy13be = unpack("<f", f.read(4))[0]
                    vz13be = unpack("<f", f.read(4))[0]
                    type13be = unpack("B", f.read(1))[0]
                    value13be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13be = unpack("<f", f.read(4))[0]
                    vx14be = unpack("<f", f.read(4))[0]
                    vy14be = unpack("<f", f.read(4))[0]
                    vz14be = unpack("<f", f.read(4))[0]
                    type14be = unpack("B", f.read(1))[0]
                    value14be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14be = unpack("<f", f.read(4))[0]
                    vx15be = unpack("<f", f.read(4))[0]
                    vy15be = unpack("<f", f.read(4))[0]
                    vz15be = unpack("<f", f.read(4))[0]
                    type15be = unpack("B", f.read(1))[0]
                    value15be = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15be = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1bf = unpack("<f", f.read(4))[0]
                    vy1bf = unpack("<f", f.read(4))[0]
                    vz1bf = unpack("<f", f.read(4))[0]
                    type1bf = unpack("B", f.read(1))[0]
                    value1bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1bf = unpack("<f", f.read(4))[0]
                    vx2bf = unpack("<f", f.read(4))[0]
                    vy2bf = unpack("<f", f.read(4))[0]
                    vz2bf = unpack("<f", f.read(4))[0]
                    type2bf = unpack("B", f.read(1))[0]
                    value2bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2bf = unpack("<f", f.read(4))[0]
                    vx3bf = unpack("<f", f.read(4))[0]
                    vy3bf = unpack("<f", f.read(4))[0]
                    vz3bf = unpack("<f", f.read(4))[0]
                    type3bf = unpack("B", f.read(1))[0]
                    value3bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3bf = unpack("<f", f.read(4))[0]
                    vx4bf = unpack("<f", f.read(4))[0]
                    vy4bf = unpack("<f", f.read(4))[0]
                    vz4bf = unpack("<f", f.read(4))[0]
                    type4bf = unpack("B", f.read(1))[0]
                    value4bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4bf = unpack("<f", f.read(4))[0]
                    vx5bf = unpack("<f", f.read(4))[0]
                    vy5bf = unpack("<f", f.read(4))[0]
                    vz5bf = unpack("<f", f.read(4))[0]
                    type5bf = unpack("B", f.read(1))[0]
                    value5bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5bf = unpack("<f", f.read(4))[0]
                    vx6bf = unpack("<f", f.read(4))[0]
                    vy6bf = unpack("<f", f.read(4))[0]
                    vz6bf = unpack("<f", f.read(4))[0]
                    type6bf = unpack("B", f.read(1))[0]
                    value6bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6bf = unpack("<f", f.read(4))[0]
                    vx7bf = unpack("<f", f.read(4))[0]
                    vy7bf = unpack("<f", f.read(4))[0]
                    vz7bf = unpack("<f", f.read(4))[0]
                    type7bf = unpack("B", f.read(1))[0]
                    value7bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7bf = unpack("<f", f.read(4))[0]
                    vx8bf = unpack("<f", f.read(4))[0]
                    vy8bf = unpack("<f", f.read(4))[0]
                    vz8bf = unpack("<f", f.read(4))[0]
                    type8bf = unpack("B", f.read(1))[0]
                    value8bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8bf = unpack("<f", f.read(4))[0]
                    vx9bf = unpack("<f", f.read(4))[0]
                    vy9bf = unpack("<f", f.read(4))[0]
                    vz9bf = unpack("<f", f.read(4))[0]
                    type9bf = unpack("B", f.read(1))[0]
                    value9bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9bf = unpack("<f", f.read(4))[0]
                    vx10bf = unpack("<f", f.read(4))[0]
                    vy10bf = unpack("<f", f.read(4))[0]
                    vz10bf = unpack("<f", f.read(4))[0]
                    type10bf = unpack("B", f.read(1))[0]
                    value10bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10bf = unpack("<f", f.read(4))[0]
                    vx11bf = unpack("<f", f.read(4))[0]
                    vy11bf = unpack("<f", f.read(4))[0]
                    vz11bf = unpack("<f", f.read(4))[0]
                    type11bf = unpack("B", f.read(1))[0]
                    value11bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11bf = unpack("<f", f.read(4))[0]
                    vx12bf = unpack("<f", f.read(4))[0]
                    vy12bf = unpack("<f", f.read(4))[0]
                    vz12bf = unpack("<f", f.read(4))[0]
                    type12bf = unpack("B", f.read(1))[0]
                    value12bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12bf = unpack("<f", f.read(4))[0]
                    vx13bf = unpack("<f", f.read(4))[0]
                    vy13bf = unpack("<f", f.read(4))[0]
                    vz13bf = unpack("<f", f.read(4))[0]
                    type13bf = unpack("B", f.read(1))[0]
                    value13bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13bf = unpack("<f", f.read(4))[0]
                    vx14bf = unpack("<f", f.read(4))[0]
                    vy14bf = unpack("<f", f.read(4))[0]
                    vz14bf = unpack("<f", f.read(4))[0]
                    type14bf = unpack("B", f.read(1))[0]
                    value14bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14bf = unpack("<f", f.read(4))[0]
                    vx15bf = unpack("<f", f.read(4))[0]
                    vy15bf = unpack("<f", f.read(4))[0]
                    vz15bf = unpack("<f", f.read(4))[0]
                    type15bf = unpack("B", f.read(1))[0]
                    value15bf = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15bf = unpack("<f", f.read(4))[0]

                    f.seek(-240,1)

                    vx1bg = unpack("<f", f.read(4))[0]
                    vy1bg = unpack("<f", f.read(4))[0]
                    vz1bg = unpack("<f", f.read(4))[0]
                    type1bg = unpack("B", f.read(1))[0]
                    value1bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw1bg = unpack("<f", f.read(4))[0]
                    vx2bg = unpack("<f", f.read(4))[0]
                    vy2bg = unpack("<f", f.read(4))[0]
                    vz2bg = unpack("<f", f.read(4))[0]
                    type2bg = unpack("B", f.read(1))[0]
                    value2bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw2bg = unpack("<f", f.read(4))[0]
                    vx3bg = unpack("<f", f.read(4))[0]
                    vy3bg = unpack("<f", f.read(4))[0]
                    vz3bg = unpack("<f", f.read(4))[0]
                    type3bg = unpack("B", f.read(1))[0]
                    value3bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw3bg = unpack("<f", f.read(4))[0]
                    vx4bg = unpack("<f", f.read(4))[0]
                    vy4bg = unpack("<f", f.read(4))[0]
                    vz4bg = unpack("<f", f.read(4))[0]
                    type4bg = unpack("B", f.read(1))[0]
                    value4bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw4bg = unpack("<f", f.read(4))[0]
                    vx5bg = unpack("<f", f.read(4))[0]
                    vy5bg = unpack("<f", f.read(4))[0]
                    vz5bg = unpack("<f", f.read(4))[0]
                    type5bg = unpack("B", f.read(1))[0]
                    value5bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw5bg = unpack("<f", f.read(4))[0]
                    vx6bg = unpack("<f", f.read(4))[0]
                    vy6bg = unpack("<f", f.read(4))[0]
                    vz6bg = unpack("<f", f.read(4))[0]
                    type6bg = unpack("B", f.read(1))[0]
                    value6bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw6bg = unpack("<f", f.read(4))[0]
                    vx7bg = unpack("<f", f.read(4))[0]
                    vy7bg = unpack("<f", f.read(4))[0]
                    vz7bg = unpack("<f", f.read(4))[0]
                    type7bg = unpack("B", f.read(1))[0]
                    value7bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw7bg = unpack("<f", f.read(4))[0]
                    vx8bg = unpack("<f", f.read(4))[0]
                    vy8bg = unpack("<f", f.read(4))[0]
                    vz8bg = unpack("<f", f.read(4))[0]
                    type8bg = unpack("B", f.read(1))[0]
                    value8bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw8bg = unpack("<f", f.read(4))[0]
                    vx9bg = unpack("<f", f.read(4))[0]
                    vy9bg = unpack("<f", f.read(4))[0]
                    vz9bg = unpack("<f", f.read(4))[0]
                    type9bg = unpack("B", f.read(1))[0]
                    value9bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw9bg = unpack("<f", f.read(4))[0]
                    vx10bg = unpack("<f", f.read(4))[0]
                    vy10bg = unpack("<f", f.read(4))[0]
                    vz10bg = unpack("<f", f.read(4))[0]
                    type10bg = unpack("B", f.read(1))[0]
                    value10bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw10bg = unpack("<f", f.read(4))[0]
                    vx11bg = unpack("<f", f.read(4))[0]
                    vy11bg = unpack("<f", f.read(4))[0]
                    vz11bg = unpack("<f", f.read(4))[0]
                    type11bg = unpack("B", f.read(1))[0]
                    value11bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw11bg = unpack("<f", f.read(4))[0]
                    vx12bg = unpack("<f", f.read(4))[0]
                    vy12bg = unpack("<f", f.read(4))[0]
                    vz12bg = unpack("<f", f.read(4))[0]
                    type12bg = unpack("B", f.read(1))[0]
                    value12bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw12bg = unpack("<f", f.read(4))[0]
                    vx13bg = unpack("<f", f.read(4))[0]
                    vy13bg = unpack("<f", f.read(4))[0]
                    vz13bg = unpack("<f", f.read(4))[0]
                    type13bg = unpack("B", f.read(1))[0]
                    value13bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw13bg = unpack("<f", f.read(4))[0]
                    vx14bg = unpack("<f", f.read(4))[0]
                    vy14bg = unpack("<f", f.read(4))[0]
                    vz14bg = unpack("<f", f.read(4))[0]
                    type14bg = unpack("B", f.read(1))[0]
                    value14bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw14bg = unpack("<f", f.read(4))[0]
                    vx15bg = unpack("<f", f.read(4))[0]
                    vy15bg = unpack("<f", f.read(4))[0]
                    vz15bg = unpack("<f", f.read(4))[0]
                    type15bg = unpack("B", f.read(1))[0]
                    value15bg = unpack("B", f.read(1))[0]
                    f.seek(-2,1)
                    vw15bg = unpack("<f", f.read(4))[0]

                    

                    

                    

                    fa1 = bm_1k.verts.new([-vx1,-vy1,-vz1]) # 0
                    fb1 = bm_1k.verts.new([-vx2,-vy2,-vz2]) # 1
                    fc1 = bm_1k.verts.new([-vx3,-vy3,-vz3]) # 2
                    fd1 = bm_1k.verts.new([-vx4,-vy4,-vz4]) # 3
                    fe1 = bm_1k.verts.new([-vx5,-vy5,-vz5]) # 4
                    ff1 = bm_1k.verts.new([-vx6,-vy6,-vz6]) # 5
                    fg1 = bm_1k.verts.new([-vx7,-vy7,-vz7]) # 6
                    fh1 = bm_1k.verts.new([-vx8,-vy8,-vz8]) # 7
                    fi1 = bm_1k.verts.new([-vx9,-vy9,-vz9]) # 8
                    fj1 = bm_1k.verts.new([-vx10,-vy10,-vz10]) # 9
                    fk1 = bm_1k.verts.new([-vx11,-vy11,-vz11]) # 10
                    fl1 = bm_1k.verts.new([-vx12,-vy12,-vz12]) # 11
                    fm1 = bm_1k.verts.new([-vx13,-vy13,-vz13]) # 12
                    fn1 = bm_1k.verts.new([-vx14,-vy14,-vz14]) # 13
                    fo1 = bm_1k.verts.new([-vx15,-vy15,-vz15]) # 14

                    fa1a = bm_1kk.verts.new([-vx1a,-vy1a,-vz1a]) # 0
                    fb1a = bm_1kk.verts.new([-vx2a,-vy2a,-vz2a]) # 1
                    fc1a = bm_1kk.verts.new([-vx3a,-vy3a,-vz3a]) # 2
                    fd1a = bm_1kk.verts.new([-vx4a,-vy4a,-vz4a]) # 3
                    fe1a = bm_1kk.verts.new([-vx5a,-vy5a,-vz5a]) # 4
                    ff1a = bm_1kk.verts.new([-vx6a,-vy6a,-vz6a]) # 5
                    fg1a = bm_1kk.verts.new([-vx7a,-vy7a,-vz7a]) # 6
                    fh1a = bm_1kk.verts.new([-vx8a,-vy8a,-vz8a]) # 7
                    fi1a = bm_1kk.verts.new([-vx9a,-vy9a,-vz9a]) # 8
                    fj1a = bm_1kk.verts.new([-vx10a,-vy10a,-vz10a]) # 9
                    fk1a = bm_1kk.verts.new([-vx11a,-vy11a,-vz11a]) # 10
                    fl1a = bm_1kk.verts.new([-vx12a,-vy12a,-vz12a]) # 11
                    fm1a = bm_1kk.verts.new([-vx13a,-vy13a,-vz13a]) # 12
                    fn1a = bm_1kk.verts.new([-vx14a,-vy14a,-vz14a]) # 13
                    fo1a = bm_1kk.verts.new([-vx15a,-vy15a,-vz15a]) # 14

                    fa1b = bm_1kkk.verts.new([-vx1b,-vy1b,-vz1b]) # 0
                    fb1b = bm_1kkk.verts.new([-vx2b,-vy2b,-vz2b]) # 1
                    fc1b = bm_1kkk.verts.new([-vx3b,-vy3b,-vz3b]) # 2
                    fd1b = bm_1kkk.verts.new([-vx4b,-vy4b,-vz4b]) # 3
                    fe1b = bm_1kkk.verts.new([-vx5b,-vy5b,-vz5b]) # 4
                    ff1b = bm_1kkk.verts.new([-vx6b,-vy6b,-vz6b]) # 5
                    fg1b = bm_1kkk.verts.new([-vx7b,-vy7b,-vz7b]) # 6
                    fh1b = bm_1kkk.verts.new([-vx8b,-vy8b,-vz8b]) # 7
                    fi1b = bm_1kkk.verts.new([-vx9b,-vy9b,-vz9b]) # 8
                    fj1b = bm_1kkk.verts.new([-vx10b,-vy10b,-vz10b]) # 9
                    fk1b = bm_1kkk.verts.new([-vx11b,-vy11b,-vz11b]) # 10
                    fl1b = bm_1kkk.verts.new([-vx12b,-vy12b,-vz12b]) # 11
                    fm1b = bm_1kkk.verts.new([-vx13b,-vy13b,-vz13b]) # 12
                    fn1b = bm_1kkk.verts.new([-vx14b,-vy14b,-vz14b]) # 13
                    fo1b = bm_1kkk.verts.new([-vx15b,-vy15b,-vz15b]) # 14

                    fa1c = bm_1kkkk.verts.new([-vx1c,-vy1c,-vz1c]) # 0
                    fb1c = bm_1kkkk.verts.new([-vx2c,-vy2c,-vz2c]) # 1
                    fc1c = bm_1kkkk.verts.new([-vx3c,-vy3c,-vz3c]) # 2
                    fd1c = bm_1kkkk.verts.new([-vx4c,-vy4c,-vz4c]) # 3
                    fe1c = bm_1kkkk.verts.new([-vx5c,-vy5c,-vz5c]) # 4
                    ff1c = bm_1kkkk.verts.new([-vx6c,-vy6c,-vz6c]) # 5
                    fg1c = bm_1kkkk.verts.new([-vx7c,-vy7c,-vz7c]) # 6
                    fh1c = bm_1kkkk.verts.new([-vx8c,-vy8c,-vz8c]) # 7
                    fi1c = bm_1kkkk.verts.new([-vx9c,-vy9c,-vz9c]) # 8
                    fj1c = bm_1kkkk.verts.new([-vx10c,-vy10c,-vz10c]) # 9
                    fk1c = bm_1kkkk.verts.new([-vx11c,-vy11c,-vz11c]) # 10
                    fl1c = bm_1kkkk.verts.new([-vx12c,-vy12c,-vz12c]) # 11
                    fm1c = bm_1kkkk.verts.new([-vx13c,-vy13c,-vz13c]) # 12
                    fn1c = bm_1kkkk.verts.new([-vx14c,-vy14c,-vz14c]) # 13
                    fo1c = bm_1kkkk.verts.new([-vx15c,-vy15c,-vz15c]) # 14

                    fa1d = bm_1kkkkk.verts.new([-vx1d,-vy1d,-vz1d]) # 0
                    fb1d = bm_1kkkkk.verts.new([-vx2d,-vy2d,-vz2d]) # 1
                    fc1d = bm_1kkkkk.verts.new([-vx3d,-vy3d,-vz3d]) # 2
                    fd1d = bm_1kkkkk.verts.new([-vx4d,-vy4d,-vz4d]) # 3
                    fe1d = bm_1kkkkk.verts.new([-vx5d,-vy5d,-vz5d]) # 4
                    ff1d = bm_1kkkkk.verts.new([-vx6d,-vy6d,-vz6d]) # 5
                    fg1d = bm_1kkkkk.verts.new([-vx7d,-vy7d,-vz7d]) # 6
                    fh1d = bm_1kkkkk.verts.new([-vx8d,-vy8d,-vz8d]) # 7
                    fi1d = bm_1kkkkk.verts.new([-vx9d,-vy9d,-vz9d]) # 8
                    fj1d = bm_1kkkkk.verts.new([-vx10d,-vy10d,-vz10d]) # 9
                    fk1d = bm_1kkkkk.verts.new([-vx11d,-vy11d,-vz11d]) # 10
                    fl1d = bm_1kkkkk.verts.new([-vx12d,-vy12d,-vz12d]) # 11
                    fm1d = bm_1kkkkk.verts.new([-vx13d,-vy13d,-vz13d]) # 12
                    fn1d = bm_1kkkkk.verts.new([-vx14d,-vy14d,-vz14d]) # 13
                    fo1d = bm_1kkkkk.verts.new([-vx15d,-vy15d,-vz15d]) # 14

                    fa1e = bm_1kkkkkk.verts.new([-vx1e,-vy1e,-vz1e]) # 0
                    fb1e = bm_1kkkkkk.verts.new([-vx2e,-vy2e,-vz2e]) # 1
                    fc1e = bm_1kkkkkk.verts.new([-vx3e,-vy3e,-vz3e]) # 2
                    fd1e = bm_1kkkkkk.verts.new([-vx4e,-vy4e,-vz4e]) # 3
                    fe1e = bm_1kkkkkk.verts.new([-vx5e,-vy5e,-vz5e]) # 4
                    ff1e = bm_1kkkkkk.verts.new([-vx6e,-vy6e,-vz6e]) # 5
                    fg1e = bm_1kkkkkk.verts.new([-vx7e,-vy7e,-vz7e]) # 6
                    fh1e = bm_1kkkkkk.verts.new([-vx8e,-vy8e,-vz8e]) # 7
                    fi1e = bm_1kkkkkk.verts.new([-vx9e,-vy9e,-vz9e]) # 8
                    fj1e = bm_1kkkkkk.verts.new([-vx10e,-vy10e,-vz10e]) # 9
                    fk1e = bm_1kkkkkk.verts.new([-vx11e,-vy11e,-vz11e]) # 10
                    fl1e = bm_1kkkkkk.verts.new([-vx12e,-vy12e,-vz12e]) # 11
                    fm1e = bm_1kkkkkk.verts.new([-vx13e,-vy13e,-vz13e]) # 12
                    fn1e = bm_1kkkkkk.verts.new([-vx14e,-vy14e,-vz14e]) # 13
                    fo1e = bm_1kkkkkk.verts.new([-vx15e,-vy15e,-vz15e]) # 14

                    fa1f = bm_1kkkkkkk.verts.new([-vx1f,-vy1f,-vz1f]) # 0
                    fb1f = bm_1kkkkkkk.verts.new([-vx2f,-vy2f,-vz2f]) # 1
                    fc1f = bm_1kkkkkkk.verts.new([-vx3f,-vy3f,-vz3f]) # 2
                    fd1f = bm_1kkkkkkk.verts.new([-vx4f,-vy4f,-vz4f]) # 3
                    fe1f = bm_1kkkkkkk.verts.new([-vx5f,-vy5f,-vz5f]) # 4
                    ff1f = bm_1kkkkkkk.verts.new([-vx6f,-vy6f,-vz6f]) # 5
                    fg1f = bm_1kkkkkkk.verts.new([-vx7f,-vy7f,-vz7f]) # 6
                    fh1f = bm_1kkkkkkk.verts.new([-vx8f,-vy8f,-vz8f]) # 7
                    fi1f = bm_1kkkkkkk.verts.new([-vx9f,-vy9f,-vz9f]) # 8
                    fj1f = bm_1kkkkkkk.verts.new([-vx10f,-vy10f,-vz10f]) # 9
                    fk1f = bm_1kkkkkkk.verts.new([-vx11f,-vy11f,-vz11f]) # 10
                    fl1f = bm_1kkkkkkk.verts.new([-vx12f,-vy12f,-vz12f]) # 11
                    fm1f = bm_1kkkkkkk.verts.new([-vx13f,-vy13f,-vz13f]) # 12
                    fn1f = bm_1kkkkkkk.verts.new([-vx14f,-vy14f,-vz14f]) # 13
                    fo1f = bm_1kkkkkkk.verts.new([-vx15f,-vy15f,-vz15f]) # 14

                    fa1g = bm_1kkkkkkkk.verts.new([-vx1g,-vy1g,-vz1g]) # 0
                    fb1g = bm_1kkkkkkkk.verts.new([-vx2g,-vy2g,-vz2g]) # 1
                    fc1g = bm_1kkkkkkkk.verts.new([-vx3g,-vy3g,-vz3g]) # 2
                    fd1g = bm_1kkkkkkkk.verts.new([-vx4g,-vy4g,-vz4g]) # 3
                    fe1g = bm_1kkkkkkkk.verts.new([-vx5g,-vy5g,-vz5g]) # 4
                    ff1g = bm_1kkkkkkkk.verts.new([-vx6g,-vy6g,-vz6g]) # 5
                    fg1g = bm_1kkkkkkkk.verts.new([-vx7g,-vy7g,-vz7g]) # 6
                    fh1g = bm_1kkkkkkkk.verts.new([-vx8g,-vy8g,-vz8g]) # 7
                    fi1g = bm_1kkkkkkkk.verts.new([-vx9g,-vy9g,-vz9g]) # 8
                    fj1g = bm_1kkkkkkkk.verts.new([-vx10g,-vy10g,-vz10g]) # 9
                    fk1g = bm_1kkkkkkkk.verts.new([-vx11g,-vy11g,-vz11g]) # 10
                    fl1g = bm_1kkkkkkkk.verts.new([-vx12g,-vy12g,-vz12g]) # 11
                    fm1g = bm_1kkkkkkkk.verts.new([-vx13g,-vy13g,-vz13g]) # 12
                    fn1g = bm_1kkkkkkkk.verts.new([-vx14g,-vy14g,-vz14g]) # 13
                    fo1g = bm_1kkkkkkkk.verts.new([-vx15g,-vy15g,-vz15g]) # 14

                    fa1h = bm_1kkkkkkkkk.verts.new([-vx1h,-vy1h,-vz1h]) # 0
                    fb1h = bm_1kkkkkkkkk.verts.new([-vx2h,-vy2h,-vz2h]) # 1
                    fc1h = bm_1kkkkkkkkk.verts.new([-vx3h,-vy3h,-vz3h]) # 2
                    fd1h = bm_1kkkkkkkkk.verts.new([-vx4h,-vy4h,-vz4h]) # 3
                    fe1h = bm_1kkkkkkkkk.verts.new([-vx5h,-vy5h,-vz5h]) # 4
                    ff1h = bm_1kkkkkkkkk.verts.new([-vx6h,-vy6h,-vz6h]) # 5
                    fg1h = bm_1kkkkkkkkk.verts.new([-vx7h,-vy7h,-vz7h]) # 6
                    fh1h = bm_1kkkkkkkkk.verts.new([-vx8h,-vy8h,-vz8h]) # 7
                    fi1h = bm_1kkkkkkkkk.verts.new([-vx9h,-vy9h,-vz9h]) # 8
                    fj1h = bm_1kkkkkkkkk.verts.new([-vx10h,-vy10h,-vz10h]) # 9
                    fk1h = bm_1kkkkkkkkk.verts.new([-vx11h,-vy11h,-vz11h]) # 10
                    fl1h = bm_1kkkkkkkkk.verts.new([-vx12h,-vy12h,-vz12h]) # 11
                    fm1h = bm_1kkkkkkkkk.verts.new([-vx13h,-vy13h,-vz13h]) # 12
                    fn1h = bm_1kkkkkkkkk.verts.new([-vx14h,-vy14h,-vz14h]) # 13
                    fo1h = bm_1kkkkkkkkk.verts.new([-vx15h,-vy15h,-vz15h]) # 14

                    fa1i = bm_1kkkkkkkkkk.verts.new([-vx1i,-vy1i,-vz1i]) # 0
                    fb1i = bm_1kkkkkkkkkk.verts.new([-vx2i,-vy2i,-vz2i]) # 1
                    fc1i = bm_1kkkkkkkkkk.verts.new([-vx3i,-vy3i,-vz3i]) # 2
                    fd1i = bm_1kkkkkkkkkk.verts.new([-vx4i,-vy4i,-vz4i]) # 3
                    fe1i = bm_1kkkkkkkkkk.verts.new([-vx5i,-vy5i,-vz5i]) # 4
                    ff1i = bm_1kkkkkkkkkk.verts.new([-vx6i,-vy6i,-vz6i]) # 5
                    fg1i = bm_1kkkkkkkkkk.verts.new([-vx7i,-vy7i,-vz7i]) # 6
                    fh1i = bm_1kkkkkkkkkk.verts.new([-vx8i,-vy8i,-vz8i]) # 7
                    fi1i = bm_1kkkkkkkkkk.verts.new([-vx9i,-vy9i,-vz9i]) # 8
                    fj1i = bm_1kkkkkkkkkk.verts.new([-vx10i,-vy10i,-vz10i]) # 9
                    fk1i = bm_1kkkkkkkkkk.verts.new([-vx11i,-vy11i,-vz11i]) # 10
                    fl1i = bm_1kkkkkkkkkk.verts.new([-vx12i,-vy12i,-vz12i]) # 11
                    fm1i = bm_1kkkkkkkkkk.verts.new([-vx13i,-vy13i,-vz13i]) # 12
                    fn1i = bm_1kkkkkkkkkk.verts.new([-vx14i,-vy14i,-vz14i]) # 13
                    fo1i = bm_1kkkkkkkkkk.verts.new([-vx15i,-vy15i,-vz15i]) # 14

                    fa1j = bm_1kkkkkkkkkkk.verts.new([-vx1j,-vy1j,-vz1j]) # 0
                    fb1j = bm_1kkkkkkkkkkk.verts.new([-vx2j,-vy2j,-vz2j]) # 1
                    fc1j = bm_1kkkkkkkkkkk.verts.new([-vx3j,-vy3j,-vz3j]) # 2
                    fd1j = bm_1kkkkkkkkkkk.verts.new([-vx4j,-vy4j,-vz4j]) # 3
                    fe1j = bm_1kkkkkkkkkkk.verts.new([-vx5j,-vy5j,-vz5j]) # 4
                    ff1j = bm_1kkkkkkkkkkk.verts.new([-vx6j,-vy6j,-vz6j]) # 5
                    fg1j = bm_1kkkkkkkkkkk.verts.new([-vx7j,-vy7j,-vz7j]) # 6
                    fh1j = bm_1kkkkkkkkkkk.verts.new([-vx8j,-vy8j,-vz8j]) # 7
                    fi1j = bm_1kkkkkkkkkkk.verts.new([-vx9j,-vy9j,-vz9j]) # 8
                    fj1j = bm_1kkkkkkkkkkk.verts.new([-vx10j,-vy10j,-vz10j]) # 9
                    fk1j = bm_1kkkkkkkkkkk.verts.new([-vx11j,-vy11j,-vz11j]) # 10
                    fl1j = bm_1kkkkkkkkkkk.verts.new([-vx12j,-vy12j,-vz12j]) # 11
                    fm1j = bm_1kkkkkkkkkkk.verts.new([-vx13j,-vy13j,-vz13j]) # 12
                    fn1j = bm_1kkkkkkkkkkk.verts.new([-vx14j,-vy14j,-vz14j]) # 13
                    fo1j = bm_1kkkkkkkkkkk.verts.new([-vx15j,-vy15j,-vz15j]) # 14

                    fa1k = bm_1kkkkkkkkkkkk.verts.new([-vx1k,-vy1k,-vz1k]) # 0
                    fb1k = bm_1kkkkkkkkkkkk.verts.new([-vx2k,-vy2k,-vz2k]) # 1
                    fc1k = bm_1kkkkkkkkkkkk.verts.new([-vx3k,-vy3k,-vz3k]) # 2
                    fd1k = bm_1kkkkkkkkkkkk.verts.new([-vx4k,-vy4k,-vz4k]) # 3
                    fe1k = bm_1kkkkkkkkkkkk.verts.new([-vx5k,-vy5k,-vz5k]) # 4
                    ff1k = bm_1kkkkkkkkkkkk.verts.new([-vx6k,-vy6k,-vz6k]) # 5
                    fg1k = bm_1kkkkkkkkkkkk.verts.new([-vx7k,-vy7k,-vz7k]) # 6
                    fh1k = bm_1kkkkkkkkkkkk.verts.new([-vx8k,-vy8k,-vz8k]) # 7
                    fi1k = bm_1kkkkkkkkkkkk.verts.new([-vx9k,-vy9k,-vz9k]) # 8
                    fj1k = bm_1kkkkkkkkkkkk.verts.new([-vx10k,-vy10k,-vz10k]) # 9
                    fk1k = bm_1kkkkkkkkkkkk.verts.new([-vx11k,-vy11k,-vz11k]) # 10
                    fl1k = bm_1kkkkkkkkkkkk.verts.new([-vx12k,-vy12k,-vz12k]) # 11
                    fm1k = bm_1kkkkkkkkkkkk.verts.new([-vx13k,-vy13k,-vz13k]) # 12
                    fn1k = bm_1kkkkkkkkkkkk.verts.new([-vx14k,-vy14k,-vz14k]) # 13
                    fo1k = bm_1kkkkkkkkkkkk.verts.new([-vx15k,-vy15k,-vz15k]) # 14

                    fa1l = bm_1kkkkkkkkkkkkk.verts.new([-vx1l,-vy1l,-vz1l]) # 0
                    fb1l = bm_1kkkkkkkkkkkkk.verts.new([-vx2l,-vy2l,-vz2l]) # 1
                    fc1l = bm_1kkkkkkkkkkkkk.verts.new([-vx3l,-vy3l,-vz3l]) # 2
                    fd1l = bm_1kkkkkkkkkkkkk.verts.new([-vx4l,-vy4l,-vz4l]) # 3
                    fe1l = bm_1kkkkkkkkkkkkk.verts.new([-vx5l,-vy5l,-vz5l]) # 4
                    ff1l = bm_1kkkkkkkkkkkkk.verts.new([-vx6l,-vy6l,-vz6l]) # 5
                    fg1l = bm_1kkkkkkkkkkkkk.verts.new([-vx7l,-vy7l,-vz7l]) # 6
                    fh1l = bm_1kkkkkkkkkkkkk.verts.new([-vx8l,-vy8l,-vz8l]) # 7
                    fi1l = bm_1kkkkkkkkkkkkk.verts.new([-vx9l,-vy9l,-vz9l]) # 8
                    fj1l = bm_1kkkkkkkkkkkkk.verts.new([-vx10l,-vy10l,-vz10l]) # 9
                    fk1l = bm_1kkkkkkkkkkkkk.verts.new([-vx11l,-vy11l,-vz11l]) # 10
                    fl1l = bm_1kkkkkkkkkkkkk.verts.new([-vx12l,-vy12l,-vz12l]) # 11
                    fm1l = bm_1kkkkkkkkkkkkk.verts.new([-vx13l,-vy13l,-vz13l]) # 12
                    fn1l = bm_1kkkkkkkkkkkkk.verts.new([-vx14l,-vy14l,-vz14l]) # 13
                    fo1l = bm_1kkkkkkkkkkkkk.verts.new([-vx15l,-vy15l,-vz15l]) # 14

                    fa1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx1m,-vy1m,-vz1m]) # 0
                    fb1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx2m,-vy2m,-vz2m]) # 1
                    fc1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx3m,-vy3m,-vz3m]) # 2
                    fd1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx4m,-vy4m,-vz4m]) # 3
                    fe1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx5m,-vy5m,-vz5m]) # 4
                    ff1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx6m,-vy6m,-vz6m]) # 5
                    fg1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx7m,-vy7m,-vz7m]) # 6
                    fh1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx8m,-vy8m,-vz8m]) # 7
                    fi1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx9m,-vy9m,-vz9m]) # 8
                    fj1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx10m,-vy10m,-vz10m]) # 9
                    fk1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx11m,-vy11m,-vz11m]) # 10
                    fl1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx12m,-vy12m,-vz12m]) # 11
                    fm1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx13m,-vy13m,-vz13m]) # 12
                    fn1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx14m,-vy14m,-vz14m]) # 13
                    fo1m = bm_1kkkkkkkkkkkkkk.verts.new([-vx15m,-vy15m,-vz15m]) # 14

                    fa1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx1n,-vy1n,-vz1n]) # 0
                    fb1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx2n,-vy2n,-vz2n]) # 1
                    fc1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx3n,-vy3n,-vz3n]) # 2
                    fd1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx4n,-vy4n,-vz4n]) # 3
                    fe1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx5n,-vy5n,-vz5n]) # 4
                    ff1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx6n,-vy6n,-vz6n]) # 5
                    fg1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx7n,-vy7n,-vz7n]) # 6
                    fh1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx8n,-vy8n,-vz8n]) # 7
                    fi1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx9n,-vy9n,-vz9n]) # 8
                    fj1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx10n,-vy10n,-vz10n]) # 9
                    fk1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx11n,-vy11n,-vz11n]) # 10
                    fl1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx12n,-vy12n,-vz12n]) # 11
                    fm1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx13n,-vy13n,-vz13n]) # 12
                    fn1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx14n,-vy14n,-vz14n]) # 13
                    fo1n = bm_1kkkkkkkkkkkkkkk.verts.new([-vx15n,-vy15n,-vz15n]) # 14

                    fa1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx1o,-vy1o,-vz1o]) # 0
                    fb1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx2o,-vy2o,-vz2o]) # 1
                    fc1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx3o,-vy3o,-vz3o]) # 2
                    fd1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx4o,-vy4o,-vz4o]) # 3
                    fe1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx5o,-vy5o,-vz5o]) # 4
                    ff1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx6o,-vy6o,-vz6o]) # 5
                    fg1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx7o,-vy7o,-vz7o]) # 6
                    fh1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx8o,-vy8o,-vz8o]) # 7
                    fi1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx9o,-vy9o,-vz9o]) # 8
                    fj1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx10o,-vy10o,-vz10o]) # 9
                    fk1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx11o,-vy11o,-vz11o]) # 10
                    fl1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx12o,-vy12o,-vz12o]) # 11
                    fm1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx13o,-vy13o,-vz13o]) # 12
                    fn1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx14o,-vy14o,-vz14o]) # 13
                    fo1o = bm_1kkkkkkkkkkkkkkkk.verts.new([-vx15o,-vy15o,-vz15o]) # 14

                    fa1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx1p,-vy1p,-vz1p]) # 0
                    fb1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx2p,-vy2p,-vz2p]) # 1
                    fc1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx3p,-vy3p,-vz3p]) # 2
                    fd1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx4p,-vy4p,-vz4p]) # 3
                    fe1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx5p,-vy5p,-vz5p]) # 4
                    ff1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx6p,-vy6p,-vz6p]) # 5
                    fg1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx7p,-vy7p,-vz7p]) # 6
                    fh1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx8p,-vy8p,-vz8p]) # 7
                    fi1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx9p,-vy9p,-vz9p]) # 8
                    fj1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx10p,-vy10p,-vz10p]) # 9
                    fk1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx11p,-vy11p,-vz11p]) # 10
                    fl1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx12p,-vy12p,-vz12p]) # 11
                    fm1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx13p,-vy13p,-vz13p]) # 12
                    fn1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx14p,-vy14p,-vz14p]) # 13
                    fo1p = bm_1kkkkkkkkkkkkkkkkk.verts.new([-vx15p,-vy15p,-vz15p]) # 14

                    fa1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx1q,-vy1q,-vz1q]) # 0
                    fb1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx2q,-vy2q,-vz2q]) # 1
                    fc1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx3q,-vy3q,-vz3q]) # 2
                    fd1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx4q,-vy4q,-vz4q]) # 3
                    fe1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx5q,-vy5q,-vz5q]) # 4
                    ff1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx6q,-vy6q,-vz6q]) # 5
                    fg1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx7q,-vy7q,-vz7q]) # 6
                    fh1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx8q,-vy8q,-vz8q]) # 7
                    fi1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx9q,-vy9q,-vz9q]) # 8
                    fj1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx10q,-vy10q,-vz10q]) # 9
                    fk1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx11q,-vy11q,-vz11q]) # 10
                    fl1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx12q,-vy12q,-vz12q]) # 11
                    fm1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx13q,-vy13q,-vz13q]) # 12
                    fn1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx14q,-vy14q,-vz14q]) # 13
                    fo1q = bm_1kkkkkkkkkkkkkkkkkk.verts.new([-vx15q,-vy15q,-vz15q]) # 14

                    fa1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx1r,-vy1r,-vz1r]) # 0
                    fb1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx2r,-vy2r,-vz2r]) # 1
                    fc1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx3r,-vy3r,-vz3r]) # 2
                    fd1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx4r,-vy4r,-vz4r]) # 3
                    fe1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx5r,-vy5r,-vz5r]) # 4
                    ff1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx6r,-vy6r,-vz6r]) # 5
                    fg1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx7r,-vy7r,-vz7r]) # 6
                    fh1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx8r,-vy8r,-vz8r]) # 7
                    fi1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx9r,-vy9r,-vz9r]) # 8
                    fj1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx10r,-vy10r,-vz10r]) # 9
                    fk1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx11r,-vy11r,-vz11r]) # 10
                    fl1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx12r,-vy12r,-vz12r]) # 11
                    fm1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx13r,-vy13r,-vz13r]) # 12
                    fn1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx14r,-vy14r,-vz14r]) # 13
                    fo1r = bm_1kkkkkkkkkkkkkkkkkkk.verts.new([-vx15r,-vy15r,-vz15r]) # 14

                    fa1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx1s,-vy1s,-vz1s]) # 0
                    fb1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx2s,-vy2s,-vz2s]) # 1
                    fc1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx3s,-vy3s,-vz3s]) # 2
                    fd1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx4s,-vy4s,-vz4s]) # 3
                    fe1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx5s,-vy5s,-vz5s]) # 4
                    ff1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx6s,-vy6s,-vz6s]) # 5
                    fg1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx7s,-vy7s,-vz7s]) # 6
                    fh1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx8s,-vy8s,-vz8s]) # 7
                    fi1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx9s,-vy9s,-vz9s]) # 8
                    fj1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx10s,-vy10s,-vz10s]) # 9
                    fk1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx11s,-vy11s,-vz11s]) # 10
                    fl1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx12s,-vy12s,-vz12s]) # 11
                    fm1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx13s,-vy13s,-vz13s]) # 12
                    fn1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx14s,-vy14s,-vz14s]) # 13
                    fo1s = bm_1kkkkkkkkkkkkkkkkkkkk.verts.new([-vx15s,-vy15s,-vz15s]) # 14

                    fa1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1t,-vy1t,-vz1t]) # 0
                    fb1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2t,-vy2t,-vz2t]) # 1
                    fc1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3t,-vy3t,-vz3t]) # 2
                    fd1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4t,-vy4t,-vz4t]) # 3
                    fe1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5t,-vy5t,-vz5t]) # 4
                    ff1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6t,-vy6t,-vz6t]) # 5
                    fg1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7t,-vy7t,-vz7t]) # 6
                    fh1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8t,-vy8t,-vz8t]) # 7
                    fi1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9t,-vy9t,-vz9t]) # 8
                    fj1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10t,-vy10t,-vz10t]) # 9
                    fk1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11t,-vy11t,-vz11t]) # 10
                    fl1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12t,-vy12t,-vz12t]) # 11
                    fm1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13t,-vy13t,-vz13t]) # 12
                    fn1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14t,-vy14t,-vz14t]) # 13
                    fo1t = bm_1kkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15t,-vy15t,-vz15t]) # 14

                    fa1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1u,-vy1u,-vz1u]) # 0
                    fb1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2u,-vy2u,-vz2u]) # 1
                    fc1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3u,-vy3u,-vz3u]) # 2
                    fd1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4u,-vy4u,-vz4u]) # 3
                    fe1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5u,-vy5u,-vz5u]) # 4
                    ff1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6u,-vy6u,-vz6u]) # 5
                    fg1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7u,-vy7u,-vz7u]) # 6
                    fh1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8u,-vy8u,-vz8u]) # 7
                    fi1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9u,-vy9u,-vz9u]) # 8
                    fj1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10u,-vy10u,-vz10u]) # 9
                    fk1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11u,-vy11u,-vz11u]) # 10
                    fl1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12u,-vy12u,-vz12u]) # 11
                    fm1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13u,-vy13u,-vz13u]) # 12
                    fn1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14u,-vy14u,-vz14u]) # 13
                    fo1u = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15u,-vy15u,-vz15u]) # 14

                    fa1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1v,-vy1v,-vz1v]) # 0
                    fb1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2v,-vy2v,-vz2v]) # 1
                    fc1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3v,-vy3v,-vz3v]) # 2
                    fd1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4v,-vy4v,-vz4v]) # 3
                    fe1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5v,-vy5v,-vz5v]) # 4
                    ff1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6v,-vy6v,-vz6v]) # 5
                    fg1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7v,-vy7v,-vz7v]) # 6
                    fh1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8v,-vy8v,-vz8v]) # 7
                    fi1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9v,-vy9v,-vz9v]) # 8
                    fj1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10v,-vy10v,-vz10v]) # 9
                    fk1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11v,-vy11v,-vz11v]) # 10
                    fl1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12v,-vy12v,-vz12v]) # 11
                    fm1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13v,-vy13v,-vz13v]) # 12
                    fn1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14v,-vy14v,-vz14v]) # 13
                    fo1v = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15v,-vy15v,-vz15v]) # 14

                    fa1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1w,-vy1w,-vz1w]) # 0
                    fb1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2w,-vy2w,-vz2w]) # 1
                    fc1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3w,-vy3w,-vz3w]) # 2
                    fd1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4w,-vy4w,-vz4w]) # 3
                    fe1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5w,-vy5w,-vz5w]) # 4
                    ff1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6w,-vy6w,-vz6w]) # 5
                    fg1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7w,-vy7w,-vz7w]) # 6
                    fh1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8w,-vy8w,-vz8w]) # 7
                    fi1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9w,-vy9w,-vz9w]) # 8
                    fj1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10w,-vy10w,-vz10w]) # 9
                    fk1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11w,-vy11w,-vz11w]) # 10
                    fl1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12w,-vy12w,-vz12w]) # 11
                    fm1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13w,-vy13w,-vz13w]) # 12
                    fn1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14w,-vy14w,-vz14w]) # 13
                    fo1w = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15w,-vy15w,-vz15w]) # 14

                    fa1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1x,-vy1x,-vz1x]) # 0
                    fb1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2x,-vy2x,-vz2x]) # 1
                    fc1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3x,-vy3x,-vz3x]) # 2
                    fd1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4x,-vy4x,-vz4x]) # 3
                    fe1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5x,-vy5x,-vz5x]) # 4
                    ff1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6x,-vy6x,-vz6x]) # 5
                    fg1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7x,-vy7x,-vz7x]) # 6
                    fh1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8x,-vy8x,-vz8x]) # 7
                    fi1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9x,-vy9x,-vz9x]) # 8
                    fj1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10x,-vy10x,-vz10x]) # 9
                    fk1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11x,-vy11x,-vz11x]) # 10
                    fl1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12x,-vy12x,-vz12x]) # 11
                    fm1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13x,-vy13x,-vz13x]) # 12
                    fn1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14x,-vy14x,-vz14x]) # 13
                    fo1x = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15x,-vy15x,-vz15x]) # 14

                    fa1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1y,-vy1y,-vz1y]) # 0
                    fb1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2y,-vy2y,-vz2y]) # 1
                    fc1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3y,-vy3y,-vz3y]) # 2
                    fd1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4y,-vy4y,-vz4y]) # 3
                    fe1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5y,-vy5y,-vz5y]) # 4
                    ff1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6y,-vy6y,-vz6y]) # 5
                    fg1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7y,-vy7y,-vz7y]) # 6
                    fh1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8y,-vy8y,-vz8y]) # 7
                    fi1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9y,-vy9y,-vz9y]) # 8
                    fj1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10y,-vy10y,-vz10y]) # 9
                    fk1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11y,-vy11y,-vz11y]) # 10
                    fl1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12y,-vy12y,-vz12y]) # 11
                    fm1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13y,-vy13y,-vz13y]) # 12
                    fn1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14y,-vy14y,-vz14y]) # 13
                    fo1y = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15y,-vy15y,-vz15y]) # 14

                    fa1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1z,-vy1z,-vz1z]) # 0
                    fb1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2z,-vy2z,-vz2z]) # 1
                    fc1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3z,-vy3z,-vz3z]) # 2
                    fd1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4z,-vy4z,-vz4z]) # 3
                    fe1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5z,-vy5z,-vz5z]) # 4
                    ff1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6z,-vy6z,-vz6z]) # 5
                    fg1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7z,-vy7z,-vz7z]) # 6
                    fh1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8z,-vy8z,-vz8z]) # 7
                    fi1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9z,-vy9z,-vz9z]) # 8
                    fj1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10z,-vy10z,-vz10z]) # 9
                    fk1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11z,-vy11z,-vz11z]) # 10
                    fl1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12z,-vy12z,-vz12z]) # 11
                    fm1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13z,-vy13z,-vz13z]) # 12
                    fn1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14z,-vy14z,-vz14z]) # 13
                    fo1z = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15z,-vy15z,-vz15z]) # 14

                    fa1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1aa,-vy1aa,-vz1aa]) # 0
                    fb1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2aa,-vy2aa,-vz2aa]) # 1
                    fc1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3aa,-vy3aa,-vz3aa]) # 2
                    fd1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4aa,-vy4aa,-vz4aa]) # 3
                    fe1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5aa,-vy5aa,-vz5aa]) # 4
                    ff1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6aa,-vy6aa,-vz6aa]) # 5
                    fg1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7aa,-vy7aa,-vz7aa]) # 6
                    fh1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8aa,-vy8aa,-vz8aa]) # 7
                    fi1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9aa,-vy9aa,-vz9aa]) # 8
                    fj1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10aa,-vy10aa,-vz10aa]) # 9
                    fk1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11aa,-vy11aa,-vz11aa]) # 10
                    fl1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12aa,-vy12aa,-vz12aa]) # 11
                    fm1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13aa,-vy13aa,-vz13aa]) # 12
                    fn1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14aa,-vy14aa,-vz14aa]) # 13
                    fo1aa = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15aa,-vy15aa,-vz15aa]) # 14

                    fa1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ab,-vy1ab,-vz1ab]) # 0
                    fb1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ab,-vy2ab,-vz2ab]) # 1
                    fc1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ab,-vy3ab,-vz3ab]) # 2
                    fd1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ab,-vy4ab,-vz4ab]) # 3
                    fe1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ab,-vy5ab,-vz5ab]) # 4
                    ff1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ab,-vy6ab,-vz6ab]) # 5
                    fg1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ab,-vy7ab,-vz7ab]) # 6
                    fh1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ab,-vy8ab,-vz8ab]) # 7
                    fi1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ab,-vy9ab,-vz9ab]) # 8
                    fj1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ab,-vy10ab,-vz10ab]) # 9
                    fk1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ab,-vy11ab,-vz11ab]) # 10
                    fl1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ab,-vy12ab,-vz12ab]) # 11
                    fm1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ab,-vy13ab,-vz13ab]) # 12
                    fn1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ab,-vy14ab,-vz14ab]) # 13
                    fo1ab = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ab,-vy15ab,-vz15ab]) # 14

                    fa1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ac,-vy1ac,-vz1ac]) # 0
                    fb1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ac,-vy2ac,-vz2ac]) # 1
                    fc1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ac,-vy3ac,-vz3ac]) # 2
                    fd1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ac,-vy4ac,-vz4ac]) # 3
                    fe1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ac,-vy5ac,-vz5ac]) # 4
                    ff1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ac,-vy6ac,-vz6ac]) # 5
                    fg1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ac,-vy7ac,-vz7ac]) # 6
                    fh1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ac,-vy8ac,-vz8ac]) # 7
                    fi1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ac,-vy9ac,-vz9ac]) # 8
                    fj1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ac,-vy10ac,-vz10ac]) # 9
                    fk1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ac,-vy11ac,-vz11ac]) # 10
                    fl1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ac,-vy12ac,-vz12ac]) # 11
                    fm1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ac,-vy13ac,-vz13ac]) # 12
                    fn1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ac,-vy14ac,-vz14ac]) # 13
                    fo1ac = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ac,-vy15ac,-vz15ac]) # 14

                    fa1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ad,-vy1ad,-vz1ad]) # 0
                    fb1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ad,-vy2ad,-vz2ad]) # 1
                    fc1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ad,-vy3ad,-vz3ad]) # 2
                    fd1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ad,-vy4ad,-vz4ad]) # 3
                    fe1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ad,-vy5ad,-vz5ad]) # 4
                    ff1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ad,-vy6ad,-vz6ad]) # 5
                    fg1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ad,-vy7ad,-vz7ad]) # 6
                    fh1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ad,-vy8ad,-vz8ad]) # 7
                    fi1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ad,-vy9ad,-vz9ad]) # 8
                    fj1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ad,-vy10ad,-vz10ad]) # 9
                    fk1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ad,-vy11ad,-vz11ad]) # 10
                    fl1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ad,-vy12ad,-vz12ad]) # 11
                    fm1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ad,-vy13ad,-vz13ad]) # 12
                    fn1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ad,-vy14ad,-vz14ad]) # 13
                    fo1ad = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ad,-vy15ad,-vz15ad]) # 14

                    fa1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ae,-vy1ae,-vz1ae]) # 0
                    fb1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ae,-vy2ae,-vz2ae]) # 1
                    fc1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ae,-vy3ae,-vz3ae]) # 2
                    fd1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ae,-vy4ae,-vz4ae]) # 3
                    fe1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ae,-vy5ae,-vz5ae]) # 4
                    ff1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ae,-vy6ae,-vz6ae]) # 5
                    fg1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ae,-vy7ae,-vz7ae]) # 6
                    fh1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ae,-vy8ae,-vz8ae]) # 7
                    fi1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ae,-vy9ae,-vz9ae]) # 8
                    fj1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ae,-vy10ae,-vz10ae]) # 9
                    fk1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ae,-vy11ae,-vz11ae]) # 10
                    fl1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ae,-vy12ae,-vz12ae]) # 11
                    fm1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ae,-vy13ae,-vz13ae]) # 12
                    fn1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ae,-vy14ae,-vz14ae]) # 13
                    fo1ae = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ae,-vy15ae,-vz15ae]) # 14

                    fa1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1af,-vy1af,-vz1af]) # 0
                    fb1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2af,-vy2af,-vz2af]) # 1
                    fc1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3af,-vy3af,-vz3af]) # 2
                    fd1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4af,-vy4af,-vz4af]) # 3
                    fe1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5af,-vy5af,-vz5af]) # 4
                    ff1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6af,-vy6af,-vz6af]) # 5
                    fg1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7af,-vy7af,-vz7af]) # 6
                    fh1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8af,-vy8af,-vz8af]) # 7
                    fi1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9af,-vy9af,-vz9af]) # 8
                    fj1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10af,-vy10af,-vz10af]) # 9
                    fk1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11af,-vy11af,-vz11af]) # 10
                    fl1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12af,-vy12af,-vz12af]) # 11
                    fm1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13af,-vy13af,-vz13af]) # 12
                    fn1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14af,-vy14af,-vz14af]) # 13
                    fo1af = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15af,-vy15af,-vz15af]) # 14

                    fa1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ag,-vy1ag,-vz1ag]) # 0
                    fb1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ag,-vy2ag,-vz2ag]) # 1
                    fc1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ag,-vy3ag,-vz3ag]) # 2
                    fd1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ag,-vy4ag,-vz4ag]) # 3
                    fe1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ag,-vy5ag,-vz5ag]) # 4
                    ff1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ag,-vy6ag,-vz6ag]) # 5
                    fg1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ag,-vy7ag,-vz7ag]) # 6
                    fh1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ag,-vy8ag,-vz8ag]) # 7
                    fi1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ag,-vy9ag,-vz9ag]) # 8
                    fj1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ag,-vy10ag,-vz10ag]) # 9
                    fk1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ag,-vy11ag,-vz11ag]) # 10
                    fl1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ag,-vy12ag,-vz12ag]) # 11
                    fm1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ag,-vy13ag,-vz13ag]) # 12
                    fn1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ag,-vy14ag,-vz14ag]) # 13
                    fo1ag = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ag,-vy15ag,-vz15ag]) # 14

                    fa1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ah,-vy1ah,-vz1ah]) # 0
                    fb1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ah,-vy2ah,-vz2ah]) # 1
                    fc1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ah,-vy3ah,-vz3ah]) # 2
                    fd1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ah,-vy4ah,-vz4ah]) # 3
                    fe1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ah,-vy5ah,-vz5ah]) # 4
                    ff1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ah,-vy6ah,-vz6ah]) # 5
                    fg1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ah,-vy7ah,-vz7ah]) # 6
                    fh1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ah,-vy8ah,-vz8ah]) # 7
                    fi1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ah,-vy9ah,-vz9ah]) # 8
                    fj1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ah,-vy10ah,-vz10ah]) # 9
                    fk1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ah,-vy11ah,-vz11ah]) # 10
                    fl1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ah,-vy12ah,-vz12ah]) # 11
                    fm1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ah,-vy13ah,-vz13ah]) # 12
                    fn1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ah,-vy14ah,-vz14ah]) # 13
                    fo1ah = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ah,-vy15ah,-vz15ah]) # 14

                    fa1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ai,-vy1ai,-vz1ai]) # 0
                    fb1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ai,-vy2ai,-vz2ai]) # 1
                    fc1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ai,-vy3ai,-vz3ai]) # 2
                    fd1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ai,-vy4ai,-vz4ai]) # 3
                    fe1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ai,-vy5ai,-vz5ai]) # 4
                    ff1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ai,-vy6ai,-vz6ai]) # 5
                    fg1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ai,-vy7ai,-vz7ai]) # 6
                    fh1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ai,-vy8ai,-vz8ai]) # 7
                    fi1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ai,-vy9ai,-vz9ai]) # 8
                    fj1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ai,-vy10ai,-vz10ai]) # 9
                    fk1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ai,-vy11ai,-vz11ai]) # 10
                    fl1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ai,-vy12ai,-vz12ai]) # 11
                    fm1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ai,-vy13ai,-vz13ai]) # 12
                    fn1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ai,-vy14ai,-vz14ai]) # 13
                    fo1ai = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ai,-vy15ai,-vz15ai]) # 14

                    fa1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1aj,-vy1aj,-vz1aj]) # 0
                    fb1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2aj,-vy2aj,-vz2aj]) # 1
                    fc1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3aj,-vy3aj,-vz3aj]) # 2
                    fd1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4aj,-vy4aj,-vz4aj]) # 3
                    fe1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5aj,-vy5aj,-vz5aj]) # 4
                    ff1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6aj,-vy6aj,-vz6aj]) # 5
                    fg1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7aj,-vy7aj,-vz7aj]) # 6
                    fh1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8aj,-vy8aj,-vz8aj]) # 7
                    fi1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9aj,-vy9aj,-vz9aj]) # 8
                    fj1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10aj,-vy10aj,-vz10aj]) # 9
                    fk1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11aj,-vy11aj,-vz11aj]) # 10
                    fl1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12aj,-vy12aj,-vz12aj]) # 11
                    fm1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13aj,-vy13aj,-vz13aj]) # 12
                    fn1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14aj,-vy14aj,-vz14aj]) # 13
                    fo1aj = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15aj,-vy15aj,-vz15aj]) # 14

                    fa1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ak,-vy1ak,-vz1ak]) # 0
                    fb1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ak,-vy2ak,-vz2ak]) # 1
                    fc1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ak,-vy3ak,-vz3ak]) # 2
                    fd1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ak,-vy4ak,-vz4ak]) # 3
                    fe1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ak,-vy5ak,-vz5ak]) # 4
                    ff1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ak,-vy6ak,-vz6ak]) # 5
                    fg1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ak,-vy7ak,-vz7ak]) # 6
                    fh1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ak,-vy8ak,-vz8ak]) # 7
                    fi1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ak,-vy9ak,-vz9ak]) # 8
                    fj1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ak,-vy10ak,-vz10ak]) # 9
                    fk1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ak,-vy11ak,-vz11ak]) # 10
                    fl1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ak,-vy12ak,-vz12ak]) # 11
                    fm1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ak,-vy13ak,-vz13ak]) # 12
                    fn1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ak,-vy14ak,-vz14ak]) # 13
                    fo1ak = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ak,-vy15ak,-vz15ak]) # 14

                    fa1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1al,-vy1al,-vz1al]) # 0
                    fb1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2al,-vy2al,-vz2al]) # 1
                    fc1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3al,-vy3al,-vz3al]) # 2
                    fd1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4al,-vy4al,-vz4al]) # 3
                    fe1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5al,-vy5al,-vz5al]) # 4
                    ff1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6al,-vy6al,-vz6al]) # 5
                    fg1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7al,-vy7al,-vz7al]) # 6
                    fh1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8al,-vy8al,-vz8al]) # 7
                    fi1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9al,-vy9al,-vz9al]) # 8
                    fj1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10al,-vy10al,-vz10al]) # 9
                    fk1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11al,-vy11al,-vz11al]) # 10
                    fl1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12al,-vy12al,-vz12al]) # 11
                    fm1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13al,-vy13al,-vz13al]) # 12
                    fn1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14al,-vy14al,-vz14al]) # 13
                    fo1al = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15al,-vy15al,-vz15al]) # 14

                    fa1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1am,-vy1am,-vz1am]) # 0
                    fb1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2am,-vy2am,-vz2am]) # 1
                    fc1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3am,-vy3am,-vz3am]) # 2
                    fd1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4am,-vy4am,-vz4am]) # 3
                    fe1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5am,-vy5am,-vz5am]) # 4
                    ff1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6am,-vy6am,-vz6am]) # 5
                    fg1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7am,-vy7am,-vz7am]) # 6
                    fh1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8am,-vy8am,-vz8am]) # 7
                    fi1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9am,-vy9am,-vz9am]) # 8
                    fj1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10am,-vy10am,-vz10am]) # 9
                    fk1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11am,-vy11am,-vz11am]) # 10
                    fl1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12am,-vy12am,-vz12am]) # 11
                    fm1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13am,-vy13am,-vz13am]) # 12
                    fn1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14am,-vy14am,-vz14am]) # 13
                    fo1am = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15am,-vy15am,-vz15am]) # 14

                    fa1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1an,-vy1an,-vz1an]) # 0
                    fb1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2an,-vy2an,-vz2an]) # 1
                    fc1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3an,-vy3an,-vz3an]) # 2
                    fd1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4an,-vy4an,-vz4an]) # 3
                    fe1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5an,-vy5an,-vz5an]) # 4
                    ff1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6an,-vy6an,-vz6an]) # 5
                    fg1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7an,-vy7an,-vz7an]) # 6
                    fh1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8an,-vy8an,-vz8an]) # 7
                    fi1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9an,-vy9an,-vz9an]) # 8
                    fj1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10an,-vy10an,-vz10an]) # 9
                    fk1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11an,-vy11an,-vz11an]) # 10
                    fl1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12an,-vy12an,-vz12an]) # 11
                    fm1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13an,-vy13an,-vz13an]) # 12
                    fn1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14an,-vy14an,-vz14an]) # 13
                    fo1an = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15an,-vy15an,-vz15an]) # 14

                    fa1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ao,-vy1ao,-vz1ao]) # 0
                    fb1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ao,-vy2ao,-vz2ao]) # 1
                    fc1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ao,-vy3ao,-vz3ao]) # 2
                    fd1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ao,-vy4ao,-vz4ao]) # 3
                    fe1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ao,-vy5ao,-vz5ao]) # 4
                    ff1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ao,-vy6ao,-vz6ao]) # 5
                    fg1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ao,-vy7ao,-vz7ao]) # 6
                    fh1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ao,-vy8ao,-vz8ao]) # 7
                    fi1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ao,-vy9ao,-vz9ao]) # 8
                    fj1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ao,-vy10ao,-vz10ao]) # 9
                    fk1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ao,-vy11ao,-vz11ao]) # 10
                    fl1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ao,-vy12ao,-vz12ao]) # 11
                    fm1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ao,-vy13ao,-vz13ao]) # 12
                    fn1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ao,-vy14ao,-vz14ao]) # 13
                    fo1ao = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ao,-vy15ao,-vz15ao]) # 14

                    fa1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ap,-vy1ap,-vz1ap]) # 0
                    fb1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ap,-vy2ap,-vz2ap]) # 1
                    fc1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ap,-vy3ap,-vz3ap]) # 2
                    fd1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ap,-vy4ap,-vz4ap]) # 3
                    fe1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ap,-vy5ap,-vz5ap]) # 4
                    ff1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ap,-vy6ap,-vz6ap]) # 5
                    fg1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ap,-vy7ap,-vz7ap]) # 6
                    fh1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ap,-vy8ap,-vz8ap]) # 7
                    fi1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ap,-vy9ap,-vz9ap]) # 8
                    fj1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ap,-vy10ap,-vz10ap]) # 9
                    fk1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ap,-vy11ap,-vz11ap]) # 10
                    fl1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ap,-vy12ap,-vz12ap]) # 11
                    fm1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ap,-vy13ap,-vz13ap]) # 12
                    fn1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ap,-vy14ap,-vz14ap]) # 13
                    fo1ap = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ap,-vy15ap,-vz15ap]) # 14

                    fa1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1aq,-vy1aq,-vz1aq]) # 0
                    fb1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2aq,-vy2aq,-vz2aq]) # 1
                    fc1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3aq,-vy3aq,-vz3aq]) # 2
                    fd1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4aq,-vy4aq,-vz4aq]) # 3
                    fe1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5aq,-vy5aq,-vz5aq]) # 4
                    ff1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6aq,-vy6aq,-vz6aq]) # 5
                    fg1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7aq,-vy7aq,-vz7aq]) # 6
                    fh1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8aq,-vy8aq,-vz8aq]) # 7
                    fi1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9aq,-vy9aq,-vz9aq]) # 8
                    fj1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10aq,-vy10aq,-vz10aq]) # 9
                    fk1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11aq,-vy11aq,-vz11aq]) # 10
                    fl1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12aq,-vy12aq,-vz12aq]) # 11
                    fm1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13aq,-vy13aq,-vz13aq]) # 12
                    fn1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14aq,-vy14aq,-vz14aq]) # 13
                    fo1aq = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15aq,-vy15aq,-vz15aq]) # 14

                    fa1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ar,-vy1ar,-vz1ar]) # 0
                    fb1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ar,-vy2ar,-vz2ar]) # 1
                    fc1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ar,-vy3ar,-vz3ar]) # 2
                    fd1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ar,-vy4ar,-vz4ar]) # 3
                    fe1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ar,-vy5ar,-vz5ar]) # 4
                    ff1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ar,-vy6ar,-vz6ar]) # 5
                    fg1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ar,-vy7ar,-vz7ar]) # 6
                    fh1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ar,-vy8ar,-vz8ar]) # 7
                    fi1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ar,-vy9ar,-vz9ar]) # 8
                    fj1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ar,-vy10ar,-vz10ar]) # 9
                    fk1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ar,-vy11ar,-vz11ar]) # 10
                    fl1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ar,-vy12ar,-vz12ar]) # 11
                    fm1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ar,-vy13ar,-vz13ar]) # 12
                    fn1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ar,-vy14ar,-vz14ar]) # 13
                    fo1ar = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ar,-vy15ar,-vz15ar]) # 14

                    fa1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1as,-vy1as,-vz1as]) # 0
                    fb1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2as,-vy2as,-vz2as]) # 1
                    fc1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3as,-vy3as,-vz3as]) # 2
                    fd1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4as,-vy4as,-vz4as]) # 3
                    fe1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5as,-vy5as,-vz5as]) # 4
                    ff1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6as,-vy6as,-vz6as]) # 5
                    fg1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7as,-vy7as,-vz7as]) # 6
                    fh1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8as,-vy8as,-vz8as]) # 7
                    fi1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9as,-vy9as,-vz9as]) # 8
                    fj1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10as,-vy10as,-vz10as]) # 9
                    fk1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11as,-vy11as,-vz11as]) # 10
                    fl1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12as,-vy12as,-vz12as]) # 11
                    fm1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13as,-vy13as,-vz13as]) # 12
                    fn1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14as,-vy14as,-vz14as]) # 13
                    fo1as = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15as,-vy15as,-vz15as]) # 14

                    fa1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1at,-vy1at,-vz1at]) # 0
                    fb1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2at,-vy2at,-vz2at]) # 1
                    fc1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3at,-vy3at,-vz3at]) # 2
                    fd1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4at,-vy4at,-vz4at]) # 3
                    fe1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5at,-vy5at,-vz5at]) # 4
                    ff1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6at,-vy6at,-vz6at]) # 5
                    fg1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7at,-vy7at,-vz7at]) # 6
                    fh1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8at,-vy8at,-vz8at]) # 7
                    fi1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9at,-vy9at,-vz9at]) # 8
                    fj1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10at,-vy10at,-vz10at]) # 9
                    fk1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11at,-vy11at,-vz11at]) # 10
                    fl1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12at,-vy12at,-vz12at]) # 11
                    fm1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13at,-vy13at,-vz13at]) # 12
                    fn1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14at,-vy14at,-vz14at]) # 13
                    fo1at = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15at,-vy15at,-vz15at]) # 14

                    fa1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1au,-vy1au,-vz1au]) # 0
                    fb1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2au,-vy2au,-vz2au]) # 1
                    fc1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3au,-vy3au,-vz3au]) # 2
                    fd1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4au,-vy4au,-vz4au]) # 3
                    fe1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5au,-vy5au,-vz5au]) # 4
                    ff1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6au,-vy6au,-vz6au]) # 5
                    fg1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7au,-vy7au,-vz7au]) # 6
                    fh1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8au,-vy8au,-vz8au]) # 7
                    fi1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9au,-vy9au,-vz9au]) # 8
                    fj1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10au,-vy10au,-vz10au]) # 9
                    fk1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11au,-vy11au,-vz11au]) # 10
                    fl1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12au,-vy12au,-vz12au]) # 11
                    fm1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13au,-vy13au,-vz13au]) # 12
                    fn1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14au,-vy14au,-vz14au]) # 13
                    fo1au = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15au,-vy15au,-vz15au]) # 14

                    fa1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1av,-vy1av,-vz1av]) # 0
                    fb1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2av,-vy2av,-vz2av]) # 1
                    fc1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3av,-vy3av,-vz3av]) # 2
                    fd1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4av,-vy4av,-vz4av]) # 3
                    fe1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5av,-vy5av,-vz5av]) # 4
                    ff1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6av,-vy6av,-vz6av]) # 5
                    fg1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7av,-vy7av,-vz7av]) # 6
                    fh1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8av,-vy8av,-vz8av]) # 7
                    fi1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9av,-vy9av,-vz9av]) # 8
                    fj1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10av,-vy10av,-vz10av]) # 9
                    fk1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11av,-vy11av,-vz11av]) # 10
                    fl1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12av,-vy12av,-vz12av]) # 11
                    fm1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13av,-vy13av,-vz13av]) # 12
                    fn1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14av,-vy14av,-vz14av]) # 13
                    fo1av = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15av,-vy15av,-vz15av]) # 14

                    fa1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1aw,-vy1aw,-vz1aw]) # 0
                    fb1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2aw,-vy2aw,-vz2aw]) # 1
                    fc1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3aw,-vy3aw,-vz3aw]) # 2
                    fd1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4aw,-vy4aw,-vz4aw]) # 3
                    fe1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5aw,-vy5aw,-vz5aw]) # 4
                    ff1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6aw,-vy6aw,-vz6aw]) # 5
                    fg1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7aw,-vy7aw,-vz7aw]) # 6
                    fh1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8aw,-vy8aw,-vz8aw]) # 7
                    fi1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9aw,-vy9aw,-vz9aw]) # 8
                    fj1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10aw,-vy10aw,-vz10aw]) # 9
                    fk1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11aw,-vy11aw,-vz11aw]) # 10
                    fl1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12aw,-vy12aw,-vz12aw]) # 11
                    fm1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13aw,-vy13aw,-vz13aw]) # 12
                    fn1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14aw,-vy14aw,-vz14aw]) # 13
                    fo1aw = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15aw,-vy15aw,-vz15aw]) # 14

                    fa1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ax,-vy1ax,-vz1ax]) # 0
                    fb1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ax,-vy2ax,-vz2ax]) # 1
                    fc1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ax,-vy3ax,-vz3ax]) # 2
                    fd1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ax,-vy4ax,-vz4ax]) # 3
                    fe1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ax,-vy5ax,-vz5ax]) # 4
                    ff1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ax,-vy6ax,-vz6ax]) # 5
                    fg1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ax,-vy7ax,-vz7ax]) # 6
                    fh1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ax,-vy8ax,-vz8ax]) # 7
                    fi1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ax,-vy9ax,-vz9ax]) # 8
                    fj1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ax,-vy10ax,-vz10ax]) # 9
                    fk1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ax,-vy11ax,-vz11ax]) # 10
                    fl1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ax,-vy12ax,-vz12ax]) # 11
                    fm1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ax,-vy13ax,-vz13ax]) # 12
                    fn1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ax,-vy14ax,-vz14ax]) # 13
                    fo1ax = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ax,-vy15ax,-vz15ax]) # 14

                    fa1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ay,-vy1ay,-vz1ay]) # 0
                    fb1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ay,-vy2ay,-vz2ay]) # 1
                    fc1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ay,-vy3ay,-vz3ay]) # 2
                    fd1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ay,-vy4ay,-vz4ay]) # 3
                    fe1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ay,-vy5ay,-vz5ay]) # 4
                    ff1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ay,-vy6ay,-vz6ay]) # 5
                    fg1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ay,-vy7ay,-vz7ay]) # 6
                    fh1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ay,-vy8ay,-vz8ay]) # 7
                    fi1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ay,-vy9ay,-vz9ay]) # 8
                    fj1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ay,-vy10ay,-vz10ay]) # 9
                    fk1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ay,-vy11ay,-vz11ay]) # 10
                    fl1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ay,-vy12ay,-vz12ay]) # 11
                    fm1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ay,-vy13ay,-vz13ay]) # 12
                    fn1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ay,-vy14ay,-vz14ay]) # 13
                    fo1ay = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ay,-vy15ay,-vz15ay]) # 14

                    fa1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1az,-vy1az,-vz1az]) # 0
                    fb1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2az,-vy2az,-vz2az]) # 1
                    fc1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3az,-vy3az,-vz3az]) # 2
                    fd1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4az,-vy4az,-vz4az]) # 3
                    fe1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5az,-vy5az,-vz5az]) # 4
                    ff1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6az,-vy6az,-vz6az]) # 5
                    fg1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7az,-vy7az,-vz7az]) # 6
                    fh1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8az,-vy8az,-vz8az]) # 7
                    fi1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9az,-vy9az,-vz9az]) # 8
                    fj1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10az,-vy10az,-vz10az]) # 9
                    fk1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11az,-vy11az,-vz11az]) # 10
                    fl1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12az,-vy12az,-vz12az]) # 11
                    fm1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13az,-vy13az,-vz13az]) # 12
                    fn1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14az,-vy14az,-vz14az]) # 13
                    fo1az = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15az,-vy15az,-vz15az]) # 14

                    fa1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1ba,-vy1ba,-vz1ba]) # 0
                    fb1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2ba,-vy2ba,-vz2ba]) # 1
                    fc1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3ba,-vy3ba,-vz3ba]) # 2
                    fd1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4ba,-vy4ba,-vz4ba]) # 3
                    fe1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5ba,-vy5ba,-vz5ba]) # 4
                    ff1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6ba,-vy6ba,-vz6ba]) # 5
                    fg1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7ba,-vy7ba,-vz7ba]) # 6
                    fh1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8ba,-vy8ba,-vz8ba]) # 7
                    fi1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9ba,-vy9ba,-vz9ba]) # 8
                    fj1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10ba,-vy10ba,-vz10ba]) # 9
                    fk1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11ba,-vy11ba,-vz11ba]) # 10
                    fl1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12ba,-vy12ba,-vz12ba]) # 11
                    fm1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13ba,-vy13ba,-vz13ba]) # 12
                    fn1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14ba,-vy14ba,-vz14ba]) # 13
                    fo1ba = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15ba,-vy15ba,-vz15ba]) # 14

                    fa1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1bb,-vy1bb,-vz1bb]) # 0
                    fb1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2bb,-vy2bb,-vz2bb]) # 1
                    fc1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3bb,-vy3bb,-vz3bb]) # 2
                    fd1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4bb,-vy4bb,-vz4bb]) # 3
                    fe1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5bb,-vy5bb,-vz5bb]) # 4
                    ff1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6bb,-vy6bb,-vz6bb]) # 5
                    fg1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7bb,-vy7bb,-vz7bb]) # 6
                    fh1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8bb,-vy8bb,-vz8bb]) # 7
                    fi1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9bb,-vy9bb,-vz9bb]) # 8
                    fj1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10bb,-vy10bb,-vz10bb]) # 9
                    fk1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11bb,-vy11bb,-vz11bb]) # 10
                    fl1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12bb,-vy12bb,-vz12bb]) # 11
                    fm1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13bb,-vy13bb,-vz13bb]) # 12
                    fn1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14bb,-vy14bb,-vz14bb]) # 13
                    fo1bb = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15bb,-vy15bb,-vz15bb]) # 14

                    fa1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1bc,-vy1bc,-vz1bc]) # 0
                    fb1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2bc,-vy2bc,-vz2bc]) # 1
                    fc1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3bc,-vy3bc,-vz3bc]) # 2
                    fd1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4bc,-vy4bc,-vz4bc]) # 3
                    fe1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5bc,-vy5bc,-vz5bc]) # 4
                    ff1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6bc,-vy6bc,-vz6bc]) # 5
                    fg1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7bc,-vy7bc,-vz7bc]) # 6
                    fh1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8bc,-vy8bc,-vz8bc]) # 7
                    fi1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9bc,-vy9bc,-vz9bc]) # 8
                    fj1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10bc,-vy10bc,-vz10bc]) # 9
                    fk1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11bc,-vy11bc,-vz11bc]) # 10
                    fl1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12bc,-vy12bc,-vz12bc]) # 11
                    fm1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13bc,-vy13bc,-vz13bc]) # 12
                    fn1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14bc,-vy14bc,-vz14bc]) # 13
                    fo1bc = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15bc,-vy15bc,-vz15bc]) # 14

                    fa1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1bd,-vy1bd,-vz1bd]) # 0
                    fb1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2bd,-vy2bd,-vz2bd]) # 1
                    fc1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3bd,-vy3bd,-vz3bd]) # 2
                    fd1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4bd,-vy4bd,-vz4bd]) # 3
                    fe1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5bd,-vy5bd,-vz5bd]) # 4
                    ff1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6bd,-vy6bd,-vz6bd]) # 5
                    fg1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7bd,-vy7bd,-vz7bd]) # 6
                    fh1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8bd,-vy8bd,-vz8bd]) # 7
                    fi1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9bd,-vy9bd,-vz9bd]) # 8
                    fj1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10bd,-vy10bd,-vz10bd]) # 9
                    fk1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11bd,-vy11bd,-vz11bd]) # 10
                    fl1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12bd,-vy12bd,-vz12bd]) # 11
                    fm1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13bd,-vy13bd,-vz13bd]) # 12
                    fn1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14bd,-vy14bd,-vz14bd]) # 13
                    fo1bd = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15bd,-vy15bd,-vz15bd]) # 14

                    fa1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1be,-vy1be,-vz1be]) # 0
                    fb1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2be,-vy2be,-vz2be]) # 1
                    fc1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3be,-vy3be,-vz3be]) # 2
                    fd1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4be,-vy4be,-vz4be]) # 3
                    fe1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5be,-vy5be,-vz5be]) # 4
                    ff1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6be,-vy6be,-vz6be]) # 5
                    fg1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7be,-vy7be,-vz7be]) # 6
                    fh1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8be,-vy8be,-vz8be]) # 7
                    fi1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9be,-vy9be,-vz9be]) # 8
                    fj1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10be,-vy10be,-vz10be]) # 9
                    fk1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11be,-vy11be,-vz11be]) # 10
                    fl1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12be,-vy12be,-vz12be]) # 11
                    fm1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13be,-vy13be,-vz13be]) # 12
                    fn1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14be,-vy14be,-vz14be]) # 13
                    fo1be = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15be,-vy15be,-vz15be]) # 14

                    fa1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1bf,-vy1bf,-vz1bf]) # 0
                    fb1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2bf,-vy2bf,-vz2bf]) # 1
                    fc1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3bf,-vy3bf,-vz3bf]) # 2
                    fd1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4bf,-vy4bf,-vz4bf]) # 3
                    fe1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5bf,-vy5bf,-vz5bf]) # 4
                    ff1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6bf,-vy6bf,-vz6bf]) # 5
                    fg1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7bf,-vy7bf,-vz7bf]) # 6
                    fh1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8bf,-vy8bf,-vz8bf]) # 7
                    fi1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9bf,-vy9bf,-vz9bf]) # 8
                    fj1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10bf,-vy10bf,-vz10bf]) # 9
                    fk1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11bf,-vy11bf,-vz11bf]) # 10
                    fl1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12bf,-vy12bf,-vz12bf]) # 11
                    fm1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13bf,-vy13bf,-vz13bf]) # 12
                    fn1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14bf,-vy14bf,-vz14bf]) # 13
                    fo1bf = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15bf,-vy15bf,-vz15bf]) # 14

                    fa1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx1bg,-vy1bg,-vz1bg]) # 0
                    fb1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx2bg,-vy2bg,-vz2bg]) # 1
                    fc1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx3bg,-vy3bg,-vz3bg]) # 2
                    fd1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx4bg,-vy4bg,-vz4bg]) # 3
                    fe1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx5bg,-vy5bg,-vz5bg]) # 4
                    ff1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx6bg,-vy6bg,-vz6bg]) # 5
                    fg1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx7bg,-vy7bg,-vz7bg]) # 6
                    fh1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx8bg,-vy8bg,-vz8bg]) # 7
                    fi1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx9bg,-vy9bg,-vz9bg]) # 8
                    fj1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx10bg,-vy10bg,-vz10bg]) # 9
                    fk1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx11bg,-vy11bg,-vz11bg]) # 10
                    fl1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx12bg,-vy12bg,-vz12bg]) # 11
                    fm1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx13bg,-vy13bg,-vz13bg]) # 12
                    fn1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx14bg,-vy14bg,-vz14bg]) # 13
                    fo1bg = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts.new([-vx15bg,-vy15bg,-vz15bg]) # 14

                    if type1bg == 1:
                        if type2bg == 1:
                            if type3bg == 0:
                                if type4bg == 1:
                                    if type5bg == 1:
                                        if type6bg == 0:
                                            if type7bg == 1:
                                                if type8bg == 1:
                                                    if type9bg == 0:
                                                        if type10bg == 1:
                                                            if type11bg == 1:
                                                                if type12bg == 0:
                                                                    if type13bg == 1:
                                                                        if type14bg == 1:
                                                                            if type15bg == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1bg,fb1bg,fc1bg])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1bg,fe1bg,ff1bg])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1bg,fh1bg,fi1bg])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1bg,fk1bg,fl1bg])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1bg,fn1bg,fo1bg])

                    if type1bf == 1:
                        if type2bf == 1:
                            if type3bf == 0:
                                if type4bf == 0:
                                    if type5bf == 0:
                                        if type6bf == 0:
                                            if type7bf == 1:
                                                if type8bf == 1:
                                                    if type9bf == 0:
                                                        if type10bf == 1:
                                                            if type11bf == 1:
                                                                if type12bf == 0:
                                                                    if type13bf == 1:
                                                                        if type14bf == 1:
                                                                            if type15bf == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1bf,fb1bf,fc1bf])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1bf,fc1bf,fd1bf])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1bf,fd1bf,fe1bf])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1bf,fe1bf,ff1bf])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1bf,fh1bf,fi1bf])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1bf,fk1bf,fl1bf])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1bf,fn1bf,fo1bf])

                    if type1be == 1:
                        if type2be == 1:
                            if type3be == 0:
                                if type4be == 0:
                                    if type5be == 0:
                                        if type6be == 1:
                                            if type7be == 1:
                                                if type8be == 0:
                                                    if type9be == 0:
                                                        if type10be == 1:
                                                            if type11be == 1:
                                                                if type12be == 0:
                                                                    if type13be == 1:
                                                                        if type14be == 1:
                                                                            if type15be == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1be,fb1be,fc1be])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1be,fc1be,fd1be])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1be,fd1be,fe1be])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1be,fg1be,fh1be])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1be,fh1be,fi1be])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1be,fk1be,fl1be])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1be,fn1be,fo1be])

                    if type1bd == 1:
                        if type2bd == 1:
                            if type3bd == 0:
                                if type4bd == 0:
                                    if type5bd == 0:
                                        if type6bd == 1:
                                            if type7bd == 1:
                                                if type8bd == 0:
                                                    if type9bd == 1:
                                                        if type10bd == 1:
                                                            if type11bd == 0:
                                                                if type12bd == 0:
                                                                    if type13bd == 1:
                                                                        if type14bd == 1:
                                                                            if type15bd == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1bd,fb1bd,fc1bd])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1bd,fc1bd,fd1bd])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1bd,fd1bd,fe1bd])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1bd,fg1bd,fh1bd])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1bd,fj1bd,fk1bd])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1bd,fk1bd,fl1bd])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1bd,fn1bd,fo1bd])

                    if type1bc == 1:
                        if type2bc == 1:
                            if type3bc == 0:
                                if type4bc == 0:
                                    if type5bc == 0:
                                        if type6bc == 1:
                                            if type7bc == 1:
                                                if type8bc == 0:
                                                    if type9bc == 1:
                                                        if type10bc == 1:
                                                            if type11bc == 0:
                                                                if type12bc == 1:
                                                                    if type13bc == 1:
                                                                        if type14bc == 0:
                                                                            if type15bc == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1bc,fb1bc,fc1bc])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1bc,fc1bc,fd1bc])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1bc,fd1bc,fe1bc])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1bc,fg1bc,fh1bc])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1bc,fj1bc,fk1bc])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1bc,fm1bc,fn1bc])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1bc,fn1bc,fo1bc])

                    if type1bb == 1:
                        if type2bb == 1:
                            if type3bb == 0:
                                if type4bb == 0:
                                    if type5bb == 1:
                                        if type6bb == 1:
                                            if type7bb == 0:
                                                if type8bb == 0:
                                                    if type9bb == 0:
                                                        if type10bb == 1:
                                                            if type11bb == 1:
                                                                if type12bb == 0:
                                                                    if type13bb == 1:
                                                                        if type14bb == 1:
                                                                            if type15bb == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1bb,fb1bb,fc1bb])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1bb,fc1bb,fd1bb])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1bb,ff1bb,fg1bb])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1bb,fg1bb,fh1bb])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1bb,fh1bb,fi1bb])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1bb,fk1bb,fl1bb])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1bb,fn1bb,fo1bb])

                    if type1ba == 1:
                        if type2ba == 1:
                            if type3ba == 0:
                                if type4ba == 0:
                                    if type5ba == 1:
                                        if type6ba == 1:
                                            if type7ba == 0:
                                                if type8ba == 0:
                                                    if type9ba == 1:
                                                        if type10ba == 1:
                                                            if type11ba == 0:
                                                                if type12ba == 0:
                                                                    if type13ba == 1:
                                                                        if type14ba == 1:
                                                                            if type15ba == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ba,fb1ba,fc1ba])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ba,fc1ba,fd1ba])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ba,ff1ba,fg1ba])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1ba,fg1ba,fh1ba])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ba,fj1ba,fk1ba])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ba,fk1ba,fl1ba])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ba,fn1ba,fo1ba])

                    if type1az == 1:
                        if type2az == 1:
                            if type3az == 0:
                                if type4az == 0:
                                    if type5az == 1:
                                        if type6az == 1:
                                            if type7az == 0:
                                                if type8az == 0:
                                                    if type9az == 1:
                                                        if type10az == 1:
                                                            if type11az == 0:
                                                                if type12az == 1:
                                                                    if type13az == 1:
                                                                        if type14az == 0:
                                                                            if type15az == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1az,fb1az,fc1az])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1az,fc1az,fd1az])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1az,ff1az,fg1az])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1az,fg1az,fh1az])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1az,fj1az,fk1az])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1az,fm1az,fn1az])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1az,fn1az,fo1az])

                    if type1ay == 1:
                        if type2ay == 1:
                            if type3ay == 0:
                                if type4ay == 0:
                                    if type5ay == 1:
                                        if type6ay == 1:
                                            if type7ay == 0:
                                                if type8ay == 1:
                                                    if type9ay == 1:
                                                        if type10ay == 0:
                                                            if type11ay == 0:
                                                                if type12ay == 0:
                                                                    if type13ay == 1:
                                                                        if type14ay == 1:
                                                                            if type15ay == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ay,fb1ay,fc1ay])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ay,fc1ay,fd1ay])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ay,ff1ay,fg1ay])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ay,fi1ay,fj1ay])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ay,fj1ay,fk1ay])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ay,fk1ay,fl1ay])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ay,fn1ay,fo1ay])

                    if type1ax == 1:
                        if type2ax == 1:
                            if type3ax == 0:
                                if type4ax == 0:
                                    if type5ax == 1:
                                        if type6ax == 1:
                                            if type7ax == 0:
                                                if type8ax == 1:
                                                    if type9ax == 1:
                                                        if type10ax == 0:
                                                            if type11ax == 0:
                                                                if type12ax == 1:
                                                                    if type13ax == 1:
                                                                        if type14ax == 0:
                                                                            if type15ax == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ax,fb1ax,fc1ax])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ax,fc1ax,fd1ax])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ax,ff1ax,fg1ax])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ax,fi1ax,fj1ax])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ax,fj1ax,fk1ax])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ax,fm1ax,fn1ax])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ax,fn1ax,fo1ax])

                    if type1aw == 1:
                        if type2aw == 1:
                            if type3aw == 0:
                                if type4aw == 0:
                                    if type5aw == 1:
                                        if type6aw == 1:
                                            if type7aw == 0:
                                                if type8aw == 1:
                                                    if type9aw == 1:
                                                        if type10aw == 0:
                                                            if type11aw == 1:
                                                                if type12aw == 1:
                                                                    if type13aw == 0:
                                                                        if type14aw == 0:
                                                                            if type15aw == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1aw,fb1aw,fc1aw])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1aw,fc1aw,fd1aw])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1aw,ff1aw,fg1aw])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1aw,fi1aw,fj1aw])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1aw,fl1aw,fm1aw])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1aw,fm1aw,fn1aw])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1aw,fn1aw,fo1aw])

                    if type1av == 1:
                        if type2av == 1:
                            if type3av == 0:
                                if type4av == 1:
                                    if type5av == 1:
                                        if type6av == 0:
                                            if type7av == 0:
                                                if type8av == 0:
                                                    if type9av == 0:
                                                        if type10av == 1:
                                                            if type11av == 1:
                                                                if type12av == 0:
                                                                    if type13av == 1:
                                                                        if type14av == 1:
                                                                            if type15av == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1av,fb1av,fc1av])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1av,fe1av,ff1av])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1av,ff1av,fg1av])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1av,fg1av,fh1av])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1av,fh1av,fi1av])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1av,fk1av,fl1av])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1av,fn1av,fo1av])

                    if type1au == 1:
                        if type2au == 1:
                            if type3au == 0:
                                if type4au == 1:
                                    if type5au == 1:
                                        if type6au == 0:
                                            if type7au == 0:
                                                if type8au == 0:
                                                    if type9au == 1:
                                                        if type10au == 1:
                                                            if type11au == 0:
                                                                if type12au == 0:
                                                                    if type13au == 1:
                                                                        if type14au == 1:
                                                                            if type15au == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1au,fb1au,fc1au])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1au,fe1au,ff1au])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1au,ff1au,fg1au])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1au,fg1au,fh1au])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1au,fj1au,fk1au])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1au,fk1au,fl1au])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1au,fn1au,fo1au])

                    if type1at == 1:
                        if type2at == 1:
                            if type3at == 0:
                                if type4at == 1:
                                    if type5at == 1:
                                        if type6at == 0:
                                            if type7at == 0:
                                                if type8at == 0:
                                                    if type9at == 1:
                                                        if type10at == 1:
                                                            if type11at == 0:
                                                                if type12at == 1:
                                                                    if type13at == 1:
                                                                        if type14at == 0:
                                                                            if type15at == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1at,fb1at,fc1at])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1at,fe1at,ff1at])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1at,ff1at,fg1at])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1at,fg1at,fh1at])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1at,fj1at,fk1at])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1at,fm1at,fn1at])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1at,fn1at,fo1at])

                    if type1as == 1:
                        if type2as == 1:
                            if type3as == 0:
                                if type4as == 1:
                                    if type5as == 1:
                                        if type6as == 0:
                                            if type7as == 0:
                                                if type8as == 1:
                                                    if type9as == 1:
                                                        if type10as == 0:
                                                            if type11as == 0:
                                                                if type12as == 0:
                                                                    if type13as == 1:
                                                                        if type14as == 1:
                                                                            if type15as == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1as,fb1as,fc1as])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1as,fe1as,ff1as])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1as,ff1as,fg1as])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1as,fi1as,fj1as])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1as,fj1as,fk1as])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1as,fk1as,fl1as])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1as,fn1as,fo1as])

                    if type1ar == 1:
                        if type2ar == 1:
                            if type3ar == 0:
                                if type4ar == 1:
                                    if type5ar == 1:
                                        if type6ar == 0:
                                            if type7ar == 0:
                                                if type8ar == 1:
                                                    if type9ar == 1:
                                                        if type10ar == 0:
                                                            if type11ar == 0:
                                                                if type12ar == 1:
                                                                    if type13ar == 1:
                                                                        if type14ar == 0:
                                                                            if type15ar == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ar,fb1ar,fc1ar])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ar,fe1ar,ff1ar])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ar,ff1ar,fg1ar])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ar,fi1ar,fj1ar])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ar,fj1ar,fk1ar])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ar,fm1ar,fn1ar])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ar,fn1ar,fo1ar])

                    if type1aq == 1:
                        if type2aq == 1:
                            if type3aq == 0:
                                if type4aq == 1:
                                    if type5aq == 1:
                                        if type6aq == 0:
                                            if type7aq == 0:
                                                if type8aq == 1:
                                                    if type9aq == 1:
                                                        if type10aq == 0:
                                                            if type11aq == 1:
                                                                if type12aq == 1:
                                                                    if type13aq == 0:
                                                                        if type14aq == 0:
                                                                            if type15aq == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1aq,fb1aq,fc1aq])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1aq,fe1aq,ff1aq])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1aq,ff1aq,fg1aq])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1aq,fi1aq,fj1aq])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1aq,fl1aq,fm1aq])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1aq,fm1aq,fn1aq])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1aq,fn1aq,fo1aq])

                    if type1ap == 1:
                        if type2ap == 1:
                            if type3ap == 0:
                                if type4ap == 1:
                                    if type5ap == 1:
                                        if type6ap == 0:
                                            if type7ap == 1:
                                                if type8ap == 1:
                                                    if type9ap == 0:
                                                        if type10ap == 0:
                                                            if type11ap == 0:
                                                                if type12ap == 0:
                                                                    if type13ap == 1:
                                                                        if type14ap == 1:
                                                                            if type15ap == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ap,fb1ap,fc1ap])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ap,fe1ap,ff1ap])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1ap,fh1ap,fi1ap])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ap,fi1ap,fj1ap])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ap,fj1ap,fk1ap])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ap,fk1ap,fl1ap])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ap,fn1ap,fo1ap])

                    if type1ao == 1:
                        if type2ao == 1:
                            if type3ao == 0:
                                if type4ao == 1:
                                    if type5ao == 1:
                                        if type6ao == 0:
                                            if type7ao == 1:
                                                if type8ao == 1:
                                                    if type9ao == 0:
                                                        if type10ao == 0:
                                                            if type11ao == 0:
                                                                if type12ao == 1:
                                                                    if type13ao == 1:
                                                                        if type14ao == 0:
                                                                            if type15ao == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ao,fb1ao,fc1ao])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ao,fe1ao,ff1ao])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1ao,fh1ao,fi1ao])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ao,fi1ao,fj1ao])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ao,fj1ao,fk1ao])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ao,fm1ao,fn1ao])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ao,fn1ao,fo1ao])

                    if type1an == 1:
                        if type2an == 1:
                            if type3an == 0:
                                if type4an == 1:
                                    if type5an == 1:
                                        if type6an == 0:
                                            if type7an == 1:
                                                if type8an == 1:
                                                    if type9an == 0:
                                                        if type10an == 0:
                                                            if type11an == 1:
                                                                if type12an == 1:
                                                                    if type13an == 0:
                                                                        if type14an == 0:
                                                                            if type15an == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1an,fb1an,fc1an])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1an,fe1an,ff1an])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1an,fh1an,fi1an])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1an,fi1an,fj1an])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1an,fl1an,fm1an])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1an,fm1an,fn1an])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1an,fn1an,fo1an])

                    if type1am == 1:
                        if type2am == 1:
                            if type3am == 0:
                                if type4am == 1:
                                    if type5am == 1:
                                        if type6am == 0:
                                            if type7am == 1:
                                                if type8am == 1:
                                                    if type9am == 0:
                                                        if type10am == 1:
                                                            if type11am == 1:
                                                                if type12am == 0:
                                                                    if type13am == 0:
                                                                        if type14am == 0:
                                                                            if type15am == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1am,fb1am,fc1am])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1am,fe1am,ff1am])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1am,fh1am,fi1am])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1am,fk1am,fl1am])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1am,fl1am,fm1am])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1am,fm1am,fn1am])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1am,fn1am,fo1am])

                    if type1al == 1:
                        if type2al == 1:
                            if type3al == 0:
                                if type4al == 0:
                                    if type5al == 0:
                                        if type6al == 0:
                                            if type7al == 0:
                                                if type8al == 0:
                                                    if type9al == 0:
                                                        if type10al == 1:
                                                            if type11al == 1:
                                                                if type12al == 0:
                                                                    if type13al == 1:
                                                                        if type14al == 1:
                                                                            if type15al == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1al,fb1al,fc1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1al,fc1al,fd1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1al,fd1al,fe1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1al,fe1al,ff1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1al,ff1al,fg1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1al,fg1al,fh1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1al,fh1al,fi1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1al,fk1al,fl1al])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1al,fn1al,fo1al])

                    if type1ak == 1:
                        if type2ak == 1:
                            if type3ak == 0:
                                if type4ak == 0:
                                    if type5ak == 0:
                                        if type6ak == 0:
                                            if type7ak == 0:
                                                if type8ak == 0:
                                                    if type9ak == 1:
                                                        if type10ak == 1:
                                                            if type11ak == 0:
                                                                if type12ak == 0:
                                                                    if type13ak == 1:
                                                                        if type14ak == 1:
                                                                            if type15ak == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ak,fb1ak,fc1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ak,fc1ak,fd1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ak,fd1ak,fe1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ak,fe1ak,ff1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ak,ff1ak,fg1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1ak,fg1ak,fh1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ak,fj1ak,fk1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ak,fk1ak,fl1ak])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ak,fn1ak,fo1ak])

                    if type1aj == 1:
                        if type2aj == 1:
                            if type3aj == 0:
                                if type4aj == 0:
                                    if type5aj == 0:
                                        if type6aj == 0:
                                            if type7aj == 0:
                                                if type8aj == 0:
                                                    if type9aj == 1:
                                                        if type10aj == 1:
                                                            if type11aj == 0:
                                                                if type12aj == 1:
                                                                    if type13aj == 1:
                                                                        if type14aj == 0:
                                                                            if type15aj == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1aj,fb1aj,fc1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1aj,fc1aj,fd1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1aj,fd1aj,fe1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1aj,fe1aj,ff1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1aj,ff1aj,fg1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1aj,fg1aj,fh1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1aj,fj1aj,fk1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1aj,fm1aj,fn1aj])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1aj,fn1aj,fo1aj])

                    if type1ai == 1:
                        if type2ai == 1:
                            if type3ai == 0:
                                if type4ai == 0:
                                    if type5ai == 0:
                                        if type6ai == 0:
                                            if type7ai == 0:
                                                if type8ai == 1:
                                                    if type9ai == 1:
                                                        if type10ai == 0:
                                                            if type11ai == 0:
                                                                if type12ai == 0:
                                                                    if type13ai == 1:
                                                                        if type14ai == 1:
                                                                            if type15ai == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ai,fb1ai,fc1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ai,fc1ai,fd1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ai,fd1ai,fe1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ai,fe1ai,ff1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ai,ff1ai,fg1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ai,fi1ai,fj1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ai,fj1ai,fk1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ai,fk1ai,fl1ai])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ai,fn1ai,fo1ai])

                    if type1ah == 1:
                        if type2ah == 1:
                            if type3ah == 0:
                                if type4ah == 0:
                                    if type5ah == 0:
                                        if type6ah == 0:
                                            if type7ah == 0:
                                                if type8ah == 1:
                                                    if type9ah == 1:
                                                        if type10ah == 0:
                                                            if type11ah == 0:
                                                                if type12ah == 1:
                                                                    if type13ah == 1:
                                                                        if type14ah == 0:
                                                                            if type15ah == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ah,fb1ah,fc1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ah,fc1ah,fd1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ah,fd1ah,fe1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ah,fe1ah,ff1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ah,ff1ah,fg1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ah,fi1ah,fj1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ah,fj1ah,fk1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ah,fm1ah,fn1ah])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ah,fn1ah,fo1ah])

                    if type1ag == 1:
                        if type2ag == 1:
                            if type3ag == 0:
                                if type4ag == 0:
                                    if type5ag == 0:
                                        if type6ag == 0:
                                            if type7ag == 0:
                                                if type8ag == 1:
                                                    if type9ag == 1:
                                                        if type10ag == 0:
                                                            if type11ag == 1:
                                                                if type12ag == 1:
                                                                    if type13ag == 0:
                                                                        if type14ag == 0:
                                                                            if type15ag == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ag,fb1ag,fc1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ag,fc1ag,fd1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ag,fd1ag,fe1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ag,fe1ag,ff1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1ag,ff1ag,fg1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ag,fi1ag,fj1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1ag,fl1ag,fm1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ag,fm1ag,fn1ag])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ag,fn1ag,fo1ag])

                    if type1af == 1:
                        if type2af == 1:
                            if type3af == 0:
                                if type4af == 0:
                                    if type5af == 0:
                                        if type6af == 0:
                                            if type7af == 1:
                                                if type8af == 1:
                                                    if type9af == 0:
                                                        if type10af == 0:
                                                            if type11af == 0:
                                                                if type12af == 0:
                                                                    if type13af == 1:
                                                                        if type14af == 1:
                                                                            if type15af == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1af,fb1af,fc1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1af,fc1af,fd1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1af,fd1af,fe1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1af,fe1af,ff1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1af,fh1af,fi1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1af,fi1af,fj1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1af,fj1af,fk1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1af,fk1af,fl1af])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1af,fn1af,fo1af])

                    if type1ae == 1:
                        if type2ae == 1:
                            if type3ae == 0:
                                if type4ae == 0:
                                    if type5ae == 0:
                                        if type6ae == 0:
                                            if type7ae == 1:
                                                if type8ae == 1:
                                                    if type9ae == 0:
                                                        if type10ae == 0:
                                                            if type11ae == 0:
                                                                if type12ae == 1:
                                                                    if type13ae == 1:
                                                                        if type14ae == 0:
                                                                            if type15ae == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ae,fb1ae,fc1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ae,fc1ae,fd1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ae,fd1ae,fe1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ae,fe1ae,ff1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1ae,fh1ae,fi1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ae,fi1ae,fj1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ae,fj1ae,fk1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ae,fm1ae,fn1ae])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ae,fn1ae,fo1ae])

                    if type1ad == 1:
                        if type2ad == 1:
                            if type3ad == 0:
                                if type4ad == 0:
                                    if type5ad == 0:
                                        if type6ad == 0:
                                            if type7ad == 1:
                                                if type8ad == 1:
                                                    if type9ad == 0:
                                                        if type10ad == 0:
                                                            if type11ad == 1:
                                                                if type12ad == 1:
                                                                    if type13ad == 0:
                                                                        if type14ad == 0:
                                                                            if type15ad == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ad,fb1ad,fc1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ad,fc1ad,fd1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ad,fd1ad,fe1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ad,fe1ad,ff1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1ad,fh1ad,fi1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ad,fi1ad,fj1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1ad,fl1ad,fm1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ad,fm1ad,fn1ad])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ad,fn1ad,fo1ad])

                    if type1ac == 1:
                        if type2ac == 1:
                            if type3ac == 0:
                                if type4ac == 0:
                                    if type5ac == 0:
                                        if type6ac == 0:
                                            if type7ac == 1:
                                                if type8ac == 1:
                                                    if type9ac == 0:
                                                        if type10ac == 1:
                                                            if type11ac == 1:
                                                                if type12ac == 0:
                                                                    if type13ac == 0:
                                                                        if type14ac == 0:
                                                                            if type15ac == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ac,fb1ac,fc1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ac,fc1ac,fd1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ac,fd1ac,fe1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fd1ac,fe1ac,ff1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1ac,fh1ac,fi1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ac,fk1ac,fl1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1ac,fl1ac,fm1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1ac,fm1ac,fn1ac])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ac,fn1ac,fo1ac])

                    if type1ab == 1:
                        if type2ab == 1:
                            if type3ab == 0:
                                if type4ab == 0:
                                    if type5ab == 0:
                                        if type6ab == 1:
                                            if type7ab == 1:
                                                if type8ab == 0:
                                                    if type9ab == 0:
                                                        if type10ab == 0:
                                                            if type11ab == 0:
                                                                if type12ab == 0:
                                                                    if type13ab == 1:
                                                                        if type14ab == 1:
                                                                            if type15ab == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1ab,fb1ab,fc1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1ab,fc1ab,fd1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1ab,fd1ab,fe1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1ab,fg1ab,fh1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1ab,fh1ab,fi1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1ab,fi1ab,fj1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1ab,fj1ab,fk1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1ab,fk1ab,fl1ab])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1ab,fn1ab,fo1ab])

                    if type1aa == 1:
                        if type2aa == 1:
                            if type3aa == 0:
                                if type4aa == 0:
                                    if type5aa == 0:
                                        if type6aa == 1:
                                            if type7aa == 1:
                                                if type8aa == 0:
                                                    if type9aa == 0:
                                                        if type10aa == 0:
                                                            if type11aa == 0:
                                                                if type12aa == 1:
                                                                    if type13aa == 1:
                                                                        if type14aa == 0:
                                                                            if type15aa == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1aa,fb1aa,fc1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1aa,fc1aa,fd1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1aa,fd1aa,fe1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1aa,fg1aa,fh1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1aa,fh1aa,fi1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1aa,fi1aa,fj1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1aa,fj1aa,fk1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1aa,fm1aa,fn1aa])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1aa,fn1aa,fo1aa])


                    if type1z == 1:
                        if type2z == 1:
                            if type3z == 0:
                                if type4z == 0:
                                    if type5z == 0:
                                        if type6z == 1:
                                            if type7z == 1:
                                                if type8z == 0:
                                                    if type9z == 0:
                                                        if type10z == 0:
                                                            if type11z == 1:
                                                                if type12z == 1:
                                                                    if type13z == 0:
                                                                        if type14z == 0:
                                                                            if type15z == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1z,fb1z,fc1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1z,fc1z,fd1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1z,fd1z,fe1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1z,fg1z,fh1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1z,fh1z,fi1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1z,fi1z,fj1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1z,fl1z,fm1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1z,fm1z,fn1z])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1z,fn1z,fo1z])

                    if type1y == 1:
                        if type2y == 1:
                            if type3y == 0:
                                if type4y == 0:
                                    if type5y == 0:
                                        if type6y == 1:
                                            if type7y == 1:
                                                if type8y == 0:
                                                    if type9y == 0:
                                                        if type10y == 1:
                                                            if type11y == 1:
                                                                if type12y == 0:
                                                                    if type13y == 0:
                                                                        if type14y == 0:
                                                                            if type15y == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1y,fb1y,fc1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1y,fc1y,fd1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1y,fd1y,fe1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1y,fg1y,fh1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1y,fh1y,fi1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1y,fk1y,fl1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1y,fl1y,fm1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1y,fm1y,fn1y])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1y,fn1y,fo1y])

                    if type1x == 1:
                        if type2x == 1:
                            if type3x == 0:
                                if type4x == 0:
                                    if type5x == 0:
                                        if type6x == 1:
                                            if type7x == 1:
                                                if type8x == 0:
                                                    if type9x == 1:
                                                        if type10x == 1:
                                                            if type11x == 0:
                                                                if type12x == 0:
                                                                    if type13x == 0:
                                                                        if type14x == 0:
                                                                            if type15x == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1x,fb1x,fc1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1x,fc1x,fd1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fc1x,fd1x,fe1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1x,fg1x,fh1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1x,fj1x,fk1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1x,fk1x,fl1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1x,fl1x,fm1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1x,fm1x,fn1x])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1x,fn1x,fo1x])

                    if type1w == 1:
                        if type2w == 1:
                            if type3w == 0:
                                if type4w == 0:
                                    if type5w == 1:
                                        if type6w == 1:
                                            if type7w == 0:
                                                if type8w == 0:
                                                    if type9w == 0:
                                                        if type10w == 0:
                                                            if type11w == 0:
                                                                if type12w == 0:
                                                                    if type13w == 1:
                                                                        if type14w == 1:
                                                                            if type15w == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1w,fb1w,fc1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1w,fc1w,fd1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1w,ff1w,fg1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1w,fg1w,fh1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1w,fh1w,fi1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1w,fi1w,fj1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1w,fj1w,fk1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fj1w,fk1w,fl1w])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1w,fn1w,fo1w])

                    if type1v == 1:
                        if type2v == 1:
                            if type3v == 0:
                                if type4v == 0:
                                    if type5v == 1:
                                        if type6v == 1:
                                            if type7v == 0:
                                                if type8v == 0:
                                                    if type9v == 0:
                                                        if type10v == 0:
                                                            if type11v == 0:
                                                                if type12v == 1:
                                                                    if type13v == 1:
                                                                        if type14v == 0:
                                                                            if type15v == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1v,fb1v,fc1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1v,fc1v,fd1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1v,ff1v,fg1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1v,fg1v,fh1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1v,fh1v,fi1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1v,fi1v,fj1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fi1v,fj1v,fk1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1v,fm1v,fn1v])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1v,fn1v,fo1v])

                    if type1u == 1:
                        if type2u == 1:
                            if type3u == 0:
                                if type4u == 0:
                                    if type5u == 1:
                                        if type6u == 1:
                                            if type7u == 0:
                                                if type8u == 0:
                                                    if type9u == 0:
                                                        if type10u == 0:
                                                            if type11u == 1:
                                                                if type12u == 1:
                                                                    if type13u == 0:
                                                                        if type14u == 0:
                                                                            if type15u == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fa1u,fb1u,fc1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fb1u,fc1u,fd1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fe1u,ff1u,fg1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([ff1u,fg1u,fh1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fg1u,fh1u,fi1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fh1u,fi1u,fj1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fk1u,fl1u,fm1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fl1u,fm1u,fn1u])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkkk.faces.new([fm1u,fn1u,fo1u])

                    if type1t == 1:
                        if type2t == 1:
                            if type3t == 0:
                                if type4t == 0:
                                    if type5t == 1:
                                        if type6t == 1:
                                            if type7t == 0:
                                                if type8t == 0:
                                                    if type9t == 0:
                                                        if type10t == 1:
                                                            if type11t == 1:
                                                                if type12t == 0:
                                                                    if type13t == 0:
                                                                        if type14t == 0:
                                                                            if type15t == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fa1t,fb1t,fc1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fb1t,fc1t,fd1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fe1t,ff1t,fg1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([ff1t,fg1t,fh1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fg1t,fh1t,fi1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fj1t,fk1t,fl1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fk1t,fl1t,fm1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fl1t,fm1t,fn1t])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkkk.faces.new([fm1t,fn1t,fo1t])

                    if type1s == 1:
                        if type2s == 1:
                            if type3s == 0:
                                if type4s == 0:
                                    if type5s == 1:
                                        if type6s == 1:
                                            if type7s == 0:
                                                if type8s == 0:
                                                    if type9s == 1:
                                                        if type10s == 1:
                                                            if type11s == 0:
                                                                if type12s == 0:
                                                                    if type13s == 0:
                                                                        if type14s == 0:
                                                                            if type15s == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fa1s,fb1s,fc1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fb1s,fc1s,fd1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fe1s,ff1s,fg1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([ff1s,fg1s,fh1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fi1s,fj1s,fk1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fj1s,fk1s,fl1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fk1s,fl1s,fm1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fl1s,fm1s,fn1s])
                                                                                bm_1kkkkkkkkkkkkkkkkkkkk.faces.new([fm1s,fn1s,fo1s])

                    if type1r == 1:
                        if type2r == 1:
                            if type3r == 0:
                                if type4r == 0:
                                    if type5r == 1:
                                        if type6r == 1:
                                            if type7r == 0:
                                                if type8r == 1:
                                                    if type9r == 1:
                                                        if type10r == 0:
                                                            if type11r == 0:
                                                                if type12r == 0:
                                                                    if type13r == 0:
                                                                        if type14r == 0:
                                                                            if type15r == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fa1r,fb1r,fc1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fb1r,fc1r,fd1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fe1r,ff1r,fg1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fh1r,fi1r,fj1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fi1r,fj1r,fk1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fj1r,fk1r,fl1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fk1r,fl1r,fm1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fl1r,fm1r,fn1r])
                                                                                bm_1kkkkkkkkkkkkkkkkkkk.faces.new([fm1r,fn1r,fo1r])

                    if type1q == 1:
                        if type2q == 1:
                            if type3q == 0:
                                if type4q == 1:
                                    if type5q == 1:
                                        if type6q == 0:
                                            if type7q == 0:
                                                if type8q == 0:
                                                    if type9q == 0:
                                                        if type10q == 0:
                                                            if type11q == 0:
                                                                if type12q == 0:
                                                                    if type13q == 1:
                                                                        if type14q == 1:
                                                                            if type15q == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fa1q,fb1q,fc1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fd1q,fe1q,ff1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fe1q,ff1q,fg1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([ff1q,fg1q,fh1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fg1q,fh1q,fi1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fh1q,fi1q,fj1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fi1q,fj1q,fk1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fj1q,fk1q,fl1q])
                                                                                bm_1kkkkkkkkkkkkkkkkkk.faces.new([fm1q,fn1q,fo1q])

                    if type1p == 1:
                        if type2p == 1:
                            if type3p == 0:
                                if type4p == 1:
                                    if type5p == 1:
                                        if type6p == 0:
                                            if type7p == 0:
                                                if type8p == 0:
                                                    if type9p == 0:
                                                        if type10p == 0:
                                                            if type11p == 0:
                                                                if type12p == 1:
                                                                    if type13p == 1:
                                                                        if type14p == 0:
                                                                            if type15p == 0:
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fa1p,fb1p,fc1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fd1p,fe1p,ff1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fe1p,ff1p,fg1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([ff1p,fg1p,fh1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fg1p,fh1p,fi1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fh1p,fi1p,fj1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fi1p,fj1p,fk1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fl1p,fm1p,fn1p])
                                                                                bm_1kkkkkkkkkkkkkkkkk.faces.new([fm1p,fn1p,fo1p])

                    if type1o == 1:
                        if type2o == 1:
                            if type3o == 0:
                                if type4o == 1:
                                    if type5o == 1:
                                        if type6o == 0:
                                            if type7o == 0:
                                                if type8o == 0:
                                                    if type9o == 0:
                                                        if type10o == 0:
                                                            if type11o == 1:
                                                                if type12o == 1:
                                                                    if type13o == 0:
                                                                        if type14o == 0:
                                                                            if type15o == 0:
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fa1o,fb1o,fc1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fd1o,fe1o,ff1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fe1o,ff1o,fg1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([ff1o,fg1o,fh1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fg1o,fh1o,fi1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fh1o,fi1o,fj1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fk1o,fl1o,fm1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fl1o,fm1o,fn1o])
                                                                                bm_1kkkkkkkkkkkkkkkk.faces.new([fm1o,fn1o,fo1o])

                    if type1n == 1:
                        if type2n == 1:
                            if type3n == 0:
                                if type4n == 1:
                                    if type5n == 1:
                                        if type6n == 0:
                                            if type7n == 0:
                                                if type8n == 0:
                                                    if type9n == 0:
                                                        if type10n == 1:
                                                            if type11n == 1:
                                                                if type12n == 0:
                                                                    if type13n == 0:
                                                                        if type14n == 0:
                                                                            if type15n == 0:
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fa1n,fb1n,fc1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fd1n,fe1n,ff1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fe1n,ff1n,fg1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([ff1n,fg1n,fh1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fg1n,fh1n,fi1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fj1n,fk1n,fl1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fk1n,fl1n,fm1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fl1n,fm1n,fn1n])
                                                                                bm_1kkkkkkkkkkkkkkk.faces.new([fm1n,fn1n,fo1n])

                    if type1m == 1:
                        if type2m == 1:
                            if type3m == 0:
                                if type4m == 1:
                                    if type5m == 1:
                                        if type6m == 0:
                                            if type7m == 0:
                                                if type8m == 0:
                                                    if type9m == 1:
                                                        if type10m == 1:
                                                            if type11m == 0:
                                                                if type12m == 0:
                                                                    if type13m == 0:
                                                                        if type14m == 0:
                                                                            if type15m == 0:
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fa1m,fb1m,fc1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fd1m,fe1m,ff1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fe1m,ff1m,fg1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([ff1m,fg1m,fh1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fi1m,fj1m,fk1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fj1m,fk1m,fl1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fk1m,fl1m,fm1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fl1m,fm1m,fn1m])
                                                                                bm_1kkkkkkkkkkkkkk.faces.new([fm1m,fn1m,fo1m])

                    if type1l == 1:
                        if type2l == 1:
                            if type3l == 0:
                                if type4l == 1:
                                    if type5l == 1:
                                        if type6l == 0:
                                            if type7l == 0:
                                                if type8l == 1:
                                                    if type9l == 1:
                                                        if type10l == 0:
                                                            if type11l == 0:
                                                                if type12l == 0:
                                                                    if type13l == 0:
                                                                        if type14l == 0:
                                                                            if type15l == 0:
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fa1l,fb1l,fc1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fd1l,fe1l,ff1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fe1l,ff1l,fg1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fh1l,fi1l,fj1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fi1l,fj1l,fk1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fj1l,fk1l,fl1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fk1l,fl1l,fm1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fl1l,fm1l,fn1l])
                                                                                bm_1kkkkkkkkkkkkk.faces.new([fm1l,fn1l,fo1l])

                    if type1k == 1:
                        if type2k == 1:
                            if type3k == 0:
                                if type4k == 1:
                                    if type5k == 1:
                                        if type6k == 0:
                                            if type7k == 1:
                                                if type8k == 1:
                                                    if type9k == 0:
                                                        if type10k == 0:
                                                            if type11k == 0:
                                                                if type12k == 0:
                                                                    if type13k == 0:
                                                                        if type14k == 0:
                                                                            if type15k == 0:
                                                                                bm_1kkkkkkkkkkkk.faces.new([fa1k,fb1k,fc1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fd1k,fe1k,ff1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fg1k,fh1k,fi1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fh1k,fi1k,fj1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fi1k,fj1k,fk1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fj1k,fk1k,fl1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fk1k,fl1k,fm1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fl1k,fm1k,fn1k])
                                                                                bm_1kkkkkkkkkkkk.faces.new([fm1k,fn1k,fo1k])

                    if type1j == 1:
                        if type2j == 1:
                            if type3j == 0:
                                if type4j == 0:
                                    if type5j == 0:
                                        if type6j == 0:
                                            if type7j == 0:
                                                if type8j == 0:
                                                    if type9j == 0:
                                                        if type10j == 0:
                                                            if type11j == 0:
                                                                if type12j == 0:
                                                                    if type13j == 1:
                                                                        if type14j == 1:
                                                                            if type15j == 0:
                                                                                bm_1kkkkkkkkkkk.faces.new([fa1j,fb1j,fc1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fb1j,fc1j,fd1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fc1j,fd1j,fe1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fd1j,fe1j,ff1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fe1j,ff1j,fg1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([ff1j,fg1j,fh1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fg1j,fh1j,fi1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fh1j,fi1j,fj1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fi1j,fj1j,fk1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fj1j,fk1j,fl1j])
                                                                                bm_1kkkkkkkkkkk.faces.new([fm1j,fn1j,fo1j])

                    if type1i == 1:
                        if type2i == 1:
                            if type3i == 0:
                                if type4i == 0:
                                    if type5i == 0:
                                        if type6i == 0:
                                            if type7i == 0:
                                                if type8i == 0:
                                                    if type9i == 0:
                                                        if type10i == 0:
                                                            if type11i == 0:
                                                                if type12i == 1:
                                                                    if type13i == 1:
                                                                        if type14i == 0:
                                                                            if type15i == 0:
                                                                                bm_1kkkkkkkkkk.faces.new([fa1i,fb1i,fc1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fb1i,fc1i,fd1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fc1i,fd1i,fe1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fd1i,fe1i,ff1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fe1i,ff1i,fg1i])
                                                                                bm_1kkkkkkkkkk.faces.new([ff1i,fg1i,fh1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fg1i,fh1i,fi1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fh1i,fi1i,fj1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fi1i,fj1i,fk1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fl1i,fm1i,fn1i])
                                                                                bm_1kkkkkkkkkk.faces.new([fm1i,fn1i,fo1i])

                    if type1h == 1:
                        if type2h == 1:
                            if type3h == 0:
                                if type4h == 0:
                                    if type5h == 0:
                                        if type6h == 0:
                                            if type7h == 0:
                                                if type8h == 0:
                                                    if type9h == 0:
                                                        if type10h == 0:
                                                            if type11h == 1:
                                                                if type12h == 1:
                                                                    if type13h == 0:
                                                                        if type14h == 0:
                                                                            if type15h == 0:
                                                                                bm_1kkkkkkkkk.faces.new([fa1h,fb1h,fc1h])
                                                                                bm_1kkkkkkkkk.faces.new([fb1h,fc1h,fd1h])
                                                                                bm_1kkkkkkkkk.faces.new([fc1h,fd1h,fe1h])
                                                                                bm_1kkkkkkkkk.faces.new([fd1h,fe1h,ff1h])
                                                                                bm_1kkkkkkkkk.faces.new([fe1h,ff1h,fg1h])
                                                                                bm_1kkkkkkkkk.faces.new([ff1h,fg1h,fh1h])
                                                                                bm_1kkkkkkkkk.faces.new([fg1h,fh1h,fi1h])
                                                                                bm_1kkkkkkkkk.faces.new([fh1h,fi1h,fj1h])
                                                                                bm_1kkkkkkkkk.faces.new([fk1h,fl1h,fm1h])
                                                                                bm_1kkkkkkkkk.faces.new([fl1h,fm1h,fn1h])
                                                                                bm_1kkkkkkkkk.faces.new([fm1h,fn1h,fo1h])

                    if type1g == 1:
                        if type2g == 1:
                            if type3g == 0:
                                if type4g == 0:
                                    if type5g == 0:
                                        if type6g == 0:
                                            if type7g == 0:
                                                if type8g == 0:
                                                    if type9g == 0:
                                                        if type10g == 1:
                                                            if type11g == 1:
                                                                if type12g == 0:
                                                                    if type13g == 0:
                                                                        if type14g == 0:
                                                                            if type15g == 0:
                                                                                bm_1kkkkkkkk.faces.new([fa1g,fb1g,fc1g])
                                                                                bm_1kkkkkkkk.faces.new([fb1g,fc1g,fd1g])
                                                                                bm_1kkkkkkkk.faces.new([fc1g,fd1g,fe1g])
                                                                                bm_1kkkkkkkk.faces.new([fd1g,fe1g,ff1g])
                                                                                bm_1kkkkkkkk.faces.new([fe1g,ff1g,fg1g])
                                                                                bm_1kkkkkkkk.faces.new([ff1g,fg1g,fh1g])
                                                                                bm_1kkkkkkkk.faces.new([fg1g,fh1g,fi1g])
                                                                                bm_1kkkkkkkk.faces.new([fj1g,fk1g,fl1g])
                                                                                bm_1kkkkkkkk.faces.new([fk1g,fl1g,fm1g])
                                                                                bm_1kkkkkkkk.faces.new([fl1g,fm1g,fn1g])
                                                                                bm_1kkkkkkkk.faces.new([fm1g,fn1g,fo1g])

                    if type1f == 1:
                        if type2f == 1:
                            if type3f == 0:
                                if type4f == 0:
                                    if type5f == 0:
                                        if type6f == 0:
                                            if type7f == 0:
                                                if type8f == 0:
                                                    if type9f == 1:
                                                        if type10f == 1:
                                                            if type11f == 0:
                                                                if type12f == 0:
                                                                    if type13f == 0:
                                                                        if type14f == 0:
                                                                            if type15f == 0:
                                                                                bm_1kkkkkkk.faces.new([fa1f,fb1f,fc1f])
                                                                                bm_1kkkkkkk.faces.new([fb1f,fc1f,fd1f])
                                                                                bm_1kkkkkkk.faces.new([fc1f,fd1f,fe1f])
                                                                                bm_1kkkkkkk.faces.new([fd1f,fe1f,ff1f])
                                                                                bm_1kkkkkkk.faces.new([fe1f,ff1f,fg1f])
                                                                                bm_1kkkkkkk.faces.new([ff1f,fg1f,fh1f])
                                                                                bm_1kkkkkkk.faces.new([fi1f,fj1f,fk1f])
                                                                                bm_1kkkkkkk.faces.new([fj1f,fk1f,fl1f])
                                                                                bm_1kkkkkkk.faces.new([fk1f,fl1f,fm1f])
                                                                                bm_1kkkkkkk.faces.new([fl1f,fm1f,fn1f])
                                                                                bm_1kkkkkkk.faces.new([fm1f,fn1f,fo1f])

                    if type1e == 1:
                        if type2e == 1:
                            if type3e == 0:
                                if type4e == 0:
                                    if type5e == 0:
                                        if type6e == 0:
                                            if type7e == 0:
                                                if type8e == 1:
                                                    if type9e == 1:
                                                        if type10e == 0:
                                                            if type11e == 0:
                                                                if type12e == 0:
                                                                    if type13e == 0:
                                                                        if type14e == 0:
                                                                            if type15e == 0:
                                                                                bm_1kkkkkk.faces.new([fa1e,fb1e,fc1e])
                                                                                bm_1kkkkkk.faces.new([fb1e,fc1e,fd1e])
                                                                                bm_1kkkkkk.faces.new([fc1e,fd1e,fe1e])
                                                                                bm_1kkkkkk.faces.new([fd1e,fe1e,ff1e])
                                                                                bm_1kkkkkk.faces.new([fe1e,ff1e,fg1e])
                                                                                bm_1kkkkkk.faces.new([fh1e,fi1e,fj1e])
                                                                                bm_1kkkkkk.faces.new([fi1e,fj1e,fk1e])
                                                                                bm_1kkkkkk.faces.new([fj1e,fk1e,fl1e])
                                                                                bm_1kkkkkk.faces.new([fk1e,fl1e,fm1e])
                                                                                bm_1kkkkkk.faces.new([fl1e,fm1e,fn1e])
                                                                                bm_1kkkkkk.faces.new([fm1e,fn1e,fo1e])

                    if type1d == 1:
                        if type2d == 1:
                            if type3d == 0:
                                if type4d == 0:
                                    if type5d == 0:
                                        if type6d == 0:
                                            if type7d == 1:
                                                if type8d == 1:
                                                    if type9d == 0:
                                                        if type10d == 0:
                                                            if type11d == 0:
                                                                if type12d == 0:
                                                                    if type13d == 0:
                                                                        if type14d == 0:
                                                                            if type15d == 0:
                                                                                bm_1kkkkk.faces.new([fa1d,fb1d,fc1d])
                                                                                bm_1kkkkk.faces.new([fb1d,fc1d,fd1d])
                                                                                bm_1kkkkk.faces.new([fc1d,fd1d,fe1d])
                                                                                bm_1kkkkk.faces.new([fd1d,fe1d,ff1d])
                                                                                bm_1kkkkk.faces.new([fg1d,fh1d,fi1d])
                                                                                bm_1kkkkk.faces.new([fh1d,fi1d,fj1d])
                                                                                bm_1kkkkk.faces.new([fi1d,fj1d,fk1d])
                                                                                bm_1kkkkk.faces.new([fj1d,fk1d,fl1d])
                                                                                bm_1kkkkk.faces.new([fk1d,fl1d,fm1d])
                                                                                bm_1kkkkk.faces.new([fl1d,fm1d,fn1d])
                                                                                bm_1kkkkk.faces.new([fm1d,fn1d,fo1d])

                    if type1c == 1:
                        if type2c == 1:
                            if type3c == 0:
                                if type4c == 0:
                                    if type5c == 0:
                                        if type6c == 1:
                                            if type7c == 1:
                                                if type8c == 0:
                                                    if type9c == 0:
                                                        if type10c == 0:
                                                            if type11c == 0:
                                                                if type12c == 0:
                                                                    if type13c == 0:
                                                                        if type14c == 0:
                                                                            if type15c == 0:
                                                                                bm_1kkkk.faces.new([fa1c,fb1c,fc1c])
                                                                                bm_1kkkk.faces.new([fb1c,fc1c,fd1c])
                                                                                bm_1kkkk.faces.new([fc1c,fd1c,fe1c])
                                                                                bm_1kkkk.faces.new([ff1c,fg1c,fh1c])
                                                                                bm_1kkkk.faces.new([fg1c,fh1c,fi1c])
                                                                                bm_1kkkk.faces.new([fh1c,fi1c,fj1c])
                                                                                bm_1kkkk.faces.new([fi1c,fj1c,fk1c])
                                                                                bm_1kkkk.faces.new([fj1c,fk1c,fl1c])
                                                                                bm_1kkkk.faces.new([fk1c,fl1c,fm1c])
                                                                                bm_1kkkk.faces.new([fl1c,fm1c,fn1c])
                                                                                bm_1kkkk.faces.new([fm1c,fn1c,fo1c])

                    if type1b == 1:
                        if type2b == 1:
                            if type3b == 0:
                                if type4b == 0:
                                    if type5b == 1:
                                        if type6b == 1:
                                            if type7b == 0:
                                                if type8b == 0:
                                                    if type9b == 0:
                                                        if type10b == 0:
                                                            if type11b == 0:
                                                                if type12b == 0:
                                                                    if type13b == 0:
                                                                        if type14b == 0:
                                                                            if type15b == 0:
                                                                                bm_1kkk.faces.new([fa1b,fb1b,fc1b])
                                                                                bm_1kkk.faces.new([fb1b,fc1b,fd1b])
                                                                                bm_1kkk.faces.new([fe1b,ff1b,fg1b])
                                                                                bm_1kkk.faces.new([ff1b,fg1b,fh1b])
                                                                                bm_1kkk.faces.new([fg1b,fh1b,fi1b])
                                                                                bm_1kkk.faces.new([fh1b,fi1b,fj1b])
                                                                                bm_1kkk.faces.new([fi1b,fj1b,fk1b])
                                                                                bm_1kkk.faces.new([fj1b,fk1b,fl1b])
                                                                                bm_1kkk.faces.new([fk1b,fl1b,fm1b])
                                                                                bm_1kkk.faces.new([fl1b,fm1b,fn1b])
                                                                                bm_1kkk.faces.new([fm1b,fn1b,fo1b])

                    if type1a == 1:
                        if type2a == 1:
                            if type3a == 0:
                                if type4a == 1:
                                    if type5a == 1:
                                        if type6a == 0:
                                            if type7a == 0:
                                                if type8a == 0:
                                                    if type9a == 0:
                                                        if type10a == 0:
                                                            if type11a == 0:
                                                                if type12a == 0:
                                                                    if type13a == 0:
                                                                        if type14a == 0:
                                                                            if type15a == 0:
                                                                                bm_1kk.faces.new([fa1a,fb1a,fc1a])
                                                                                bm_1kk.faces.new([fd1a,fe1a,ff1a])
                                                                                bm_1kk.faces.new([fe1a,ff1a,fg1a])
                                                                                bm_1kk.faces.new([ff1a,fg1a,fh1a])
                                                                                bm_1kk.faces.new([fg1a,fh1a,fi1a])
                                                                                bm_1kk.faces.new([fh1a,fi1a,fj1a])
                                                                                bm_1kk.faces.new([fi1a,fj1a,fk1a])
                                                                                bm_1kk.faces.new([fj1a,fk1a,fl1a])
                                                                                bm_1kk.faces.new([fk1a,fl1a,fm1a])
                                                                                bm_1kk.faces.new([fl1a,fm1a,fn1a])
                                                                                bm_1kk.faces.new([fm1a,fn1a,fo1a])

                    

                    if type1 == 1:
                        if type2 == 1:
                            if type3 == 0:
                                if type4 == 0:
                                    if type5 == 0:
                                        if type6 == 0:
                                            if type7 == 0:
                                                if type8 == 0:
                                                    if type9 == 0:
                                                        if type10 == 0:
                                                            if type11 == 0:
                                                                if type12 == 0:
                                                                    if type13 == 0:
                                                                        if type14 == 0:
                                                                            if type15 == 0:
                                                                                bm_1k.faces.new([fa1,fb1,fc1])
                                                                                bm_1k.faces.new([fb1,fc1,fd1])
                                                                                bm_1k.faces.new([fc1,fd1,fe1])
                                                                                bm_1k.faces.new([fd1,fe1,ff1])
                                                                                bm_1k.faces.new([fe1,ff1,fg1])
                                                                                bm_1k.faces.new([ff1,fg1,fh1])
                                                                                bm_1k.faces.new([fg1,fh1,fi1])
                                                                                bm_1k.faces.new([fh1,fi1,fj1])
                                                                                bm_1k.faces.new([fi1,fj1,fk1])
                                                                                bm_1k.faces.new([fj1,fk1,fl1])
                                                                                bm_1k.faces.new([fk1,fl1,fm1])
                                                                                bm_1k.faces.new([fl1,fm1,fn1])
                                                                                bm_1k.faces.new([fm1,fn1,fo1])
                    
                    
                                                                    
                                
                    
                
                                        
                                    
                
        elif Chunks == b"\x03\x02\x00\x01":
            flag1 = unpack("B", f.read(1))[0]
            value1 = unpack("B", f.read(1))[0]
            vertexCount = unpack("B", f.read(1))[0] // 2
            flag2 = unpack("B", f.read(1))[0]
            if vertexCount == 3:
                
                for i in range(vertexCount//3):
                    
                    vx1 = unpack("<h", f.read(2))[0] / 4096
                    vy1 = unpack("<h", f.read(2))[0] / 4096
                    vz1 = unpack("<h", f.read(2))[0] / 4096
                    type1 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx2 = unpack("<h", f.read(2))[0] / 4096
                    vy2 = unpack("<h", f.read(2))[0] / 4096
                    vz2 = unpack("<h", f.read(2))[0] / 4096
                    type2 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx3 = unpack("<h", f.read(2))[0] / 4096
                    vy3 = unpack("<h", f.read(2))[0] / 4096
                    vz3 = unpack("<h", f.read(2))[0] / 4096
                    type3 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    fa1 = bm2.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm2.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm2.verts.new([-vx3,-vy3,-vz3])
                    bm2.faces.new([fa1,fb1,fc1])
            elif vertexCount == 4:
                
                for i in range(vertexCount//4):
                    
                    vx1 = unpack("<h", f.read(2))[0] / 4096
                    vy1 = unpack("<h", f.read(2))[0] / 4096
                    vz1 = unpack("<h", f.read(2))[0] / 4096
                    type1 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx2 = unpack("<h", f.read(2))[0] / 4096
                    vy2 = unpack("<h", f.read(2))[0] / 4096
                    vz2 = unpack("<h", f.read(2))[0] / 4096
                    type2 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx3 = unpack("<h", f.read(2))[0] / 4096
                    vy3 = unpack("<h", f.read(2))[0] / 4096
                    vz3 = unpack("<h", f.read(2))[0] / 4096
                    type3 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx4 = unpack("<h", f.read(2))[0] / 4096
                    vy4 = unpack("<h", f.read(2))[0] / 4096
                    vz4 = unpack("<h", f.read(2))[0] / 4096
                    type4 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    f_1a = bm2a.verts.new([-vx1,-vy1,-vz1])
                    f_2a = bm2a.verts.new([-vx2,-vy2,-vz2])
                    f_3a = bm2a.verts.new([-vx3,-vy3,-vz3])
                    f_4a = bm2a.verts.new([-vx3,-vy3,-vz3])
                    bm2a.faces.new([f_1a,f_2a,f_3a])
                    bm2a.faces.new([f_2a,f_3a,f_4a])

            elif vertexCount == 5:
                
                for i in range(vertexCount//5):
                    
                    vx1 = unpack("<h", f.read(2))[0] / 4096
                    vy1 = unpack("<h", f.read(2))[0] / 4096
                    vz1 = unpack("<h", f.read(2))[0] / 4096
                    type1 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx2 = unpack("<h", f.read(2))[0] / 4096
                    vy2 = unpack("<h", f.read(2))[0] / 4096
                    vz2 = unpack("<h", f.read(2))[0] / 4096
                    type2 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx3 = unpack("<h", f.read(2))[0] / 4096
                    vy3 = unpack("<h", f.read(2))[0] / 4096
                    vz3 = unpack("<h", f.read(2))[0] / 4096
                    type3 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx4 = unpack("<h", f.read(2))[0] / 4096
                    vy4 = unpack("<h", f.read(2))[0] / 4096
                    vz4 = unpack("<h", f.read(2))[0] / 4096
                    type4 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    vx5 = unpack("<h", f.read(2))[0] / 4096
                    vy5 = unpack("<h", f.read(2))[0] / 4096
                    vz5 = unpack("<h", f.read(2))[0] / 4096
                    type5 = unpack("B", f.read(1))[0]
                    f.seek(1,1)
                    f.seek(8,1)
                    f_1b = bm2b.verts.new([-vx1,-vy1,-vz1])
                    f_2b = bm2b.verts.new([-vx2,-vy2,-vz2])
                    f_3b = bm2b.verts.new([-vx3,-vy3,-vz3])
                    f_4b = bm2b.verts.new([-vx4,-vy4,-vz4])
                    f_5b = bm2b.verts.new([-vx5,-vy5,-vz5])
                    bm2b.faces.new([f_1b,f_2b,f_3b])
                    bm2b.faces.new([f_2b,f_3b,f_4b])
                    bm2b.faces.new([f_3b,f_4b,f_5b])
        elif Chunks == b"\x04\x02\x00\x01":
            flag1 = unpack("B", f.read(1))[0]
            value1 = unpack("B", f.read(1))[0]
            vertexCount = unpack("B", f.read(1))[0] // 2
            flag2 = unpack("B", f.read(1))[0]
            if vertexCount == 3:
                for i in range(vertexCount//3):
                    vx1 = unpack("<f", f.read(4))[0]
                    vy1 = unpack("<f", f.read(4))[0]
                    vz1 = unpack("<f", f.read(4))[0]
                    vw1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1a = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2 = unpack("<f", f.read(4))[0]
                    vy2 = unpack("<f", f.read(4))[0]
                    vz2 = unpack("<f", f.read(4))[0]
                    vw2 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2a = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3 = unpack("<f", f.read(4))[0]
                    vy3 = unpack("<f", f.read(4))[0]
                    vz3 = unpack("<f", f.read(4))[0]
                    vw3 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3a = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    fa1 = bm_3a.verts.new([-vx1,-vy1,-vz1])
                    fb1 = bm_3a.verts.new([-vx2,-vy2,-vz2])
                    fc1 = bm_3a.verts.new([-vx3,-vy3,-vz3])
                    if type1a == 1:
                        if type2a == 1:
                            if type3a == 0:
                                bm_3a.faces.new([fa1,fb1,fc1])
            elif vertexCount == 4:
                for i in range(vertexCount//4):
                    vx1b = unpack("<f", f.read(4))[0]
                    vy1b = unpack("<f", f.read(4))[0]
                    vz1b = unpack("<f", f.read(4))[0]
                    vw1b = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1b = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2b = unpack("<f", f.read(4))[0]
                    vy2b = unpack("<f", f.read(4))[0]
                    vz2b = unpack("<f", f.read(4))[0]
                    vw2b = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2b = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3b = unpack("<f", f.read(4))[0]
                    vy3b = unpack("<f", f.read(4))[0]
                    vz3b = unpack("<f", f.read(4))[0]
                    vw3b = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3b = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4b = unpack("<f", f.read(4))[0]
                    vy4b = unpack("<f", f.read(4))[0]
                    vz4b = unpack("<f", f.read(4))[0]
                    vw4b = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4b = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    fa1a = bm_3b.verts.new([-vx1b,-vy1b,-vz1b])
                    fb1a = bm_3b.verts.new([-vx2b,-vy2b,-vz2b])
                    fc1a = bm_3b.verts.new([-vx3b,-vy3b,-vz3b])
                    fd1a = bm_3b.verts.new([-vx4b,-vy4b,-vz4b])
                    if type1b == 1:
                        if type2b == 1:
                            if type3b == 0:
                                if type4b == 0:
                                    bm_3b.faces.new([fa1a,fb1a,fc1a])
                                    bm_3b.faces.new([fb1a,fc1a,fd1a])

            elif vertexCount == 5:
                for i in range(vertexCount//5):
                    vx1c = unpack("<f", f.read(4))[0]
                    vy1c = unpack("<f", f.read(4))[0]
                    vz1c = unpack("<f", f.read(4))[0]
                    vw1c = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1c = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2c = unpack("<f", f.read(4))[0]
                    vy2c = unpack("<f", f.read(4))[0]
                    vz2c = unpack("<f", f.read(4))[0]
                    vw2c = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2c = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3c = unpack("<f", f.read(4))[0]
                    vy3c = unpack("<f", f.read(4))[0]
                    vz3c = unpack("<f", f.read(4))[0]
                    vw3c = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3c = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4c = unpack("<f", f.read(4))[0]
                    vy4c = unpack("<f", f.read(4))[0]
                    vz4c = unpack("<f", f.read(4))[0]
                    vw4c = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4c = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5c = unpack("<f", f.read(4))[0]
                    vy5c = unpack("<f", f.read(4))[0]
                    vz5c = unpack("<f", f.read(4))[0]
                    vw5c = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5c = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    f.seek(-160,1)
                    vx1cc = unpack("<f", f.read(4))[0]
                    vy1cc = unpack("<f", f.read(4))[0]
                    vz1cc = unpack("<f", f.read(4))[0]
                    vw1cc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1cc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2cc = unpack("<f", f.read(4))[0]
                    vy2cc = unpack("<f", f.read(4))[0]
                    vz2cc = unpack("<f", f.read(4))[0]
                    vw2cc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2cc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3cc = unpack("<f", f.read(4))[0]
                    vy3cc = unpack("<f", f.read(4))[0]
                    vz3cc = unpack("<f", f.read(4))[0]
                    vw3cc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3cc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4cc = unpack("<f", f.read(4))[0]
                    vy4cc = unpack("<f", f.read(4))[0]
                    vz4cc = unpack("<f", f.read(4))[0]
                    vw4cc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4cc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5cc = unpack("<f", f.read(4))[0]
                    vy5cc = unpack("<f", f.read(4))[0]
                    vz5cc = unpack("<f", f.read(4))[0]
                    vw5cc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5cc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    f.seek(-160,1)
                    vx1ccc = unpack("<f", f.read(4))[0]
                    vy1ccc = unpack("<f", f.read(4))[0]
                    vz1ccc = unpack("<f", f.read(4))[0]
                    vw1ccc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ccc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ccc = unpack("<f", f.read(4))[0]
                    vy2ccc = unpack("<f", f.read(4))[0]
                    vz2ccc = unpack("<f", f.read(4))[0]
                    vw2ccc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ccc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ccc = unpack("<f", f.read(4))[0]
                    vy3ccc = unpack("<f", f.read(4))[0]
                    vz3ccc = unpack("<f", f.read(4))[0]
                    vw3ccc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ccc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ccc = unpack("<f", f.read(4))[0]
                    vy4ccc = unpack("<f", f.read(4))[0]
                    vz4ccc = unpack("<f", f.read(4))[0]
                    vw4ccc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ccc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ccc = unpack("<f", f.read(4))[0]
                    vy5ccc = unpack("<f", f.read(4))[0]
                    vz5ccc = unpack("<f", f.read(4))[0]
                    vw5ccc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ccc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa2 = bm_3c.verts.new([-vx1c,-vy1c,-vz1c])
                    fb2 = bm_3c.verts.new([-vx2c,-vy2c,-vz2c])
                    fc2 = bm_3c.verts.new([-vx3c,-vy3c,-vz3c])
                    fd2 = bm_3c.verts.new([-vx4c,-vy4c,-vz4c])
                    fe2 = bm_3c.verts.new([-vx5c,-vy5c,-vz5c])

                    fa3 = bm_3ca.verts.new([-vx1cc,-vy1cc,-vz1cc])
                    fb3 = bm_3ca.verts.new([-vx2cc,-vy2cc,-vz2cc])
                    fc3 = bm_3ca.verts.new([-vx3cc,-vy3cc,-vz3cc])
                    fd3 = bm_3ca.verts.new([-vx4cc,-vy4cc,-vz4cc])
                    fe3 = bm_3ca.verts.new([-vx5cc,-vy5cc,-vz5cc])

                    fa3_ = bm_3cb.verts.new([-vx1ccc,-vy1ccc,-vz1ccc])
                    fb3_ = bm_3cb.verts.new([-vx2ccc,-vy2ccc,-vz2ccc])
                    fc3_ = bm_3cb.verts.new([-vx3ccc,-vy3ccc,-vz3ccc])
                    fd3_ = bm_3cb.verts.new([-vx4ccc,-vy4ccc,-vz4ccc])
                    fe3_ = bm_3cb.verts.new([-vx5ccc,-vy5ccc,-vz5ccc])

                    if type1c == 1:
                        if type2c == 1:
                            if type3c == 0:
                                if type4c == 0:
                                    if type5c == 0:
                                        bm_3c.faces.new([fa2,fb2,fc2])
                                        bm_3c.faces.new([fb2,fc2,fd2])
                                        bm_3c.faces.new([fc2,fd2,fe2])
                    if type1cc == 1:
                        if type2cc == 1:
                            if type3cc == 0:
                                if type4cc == 0:
                                    if type5cc == 1:
                                        bm_3ca.faces.new([fa3,fb3,fc3])
                                        bm_3ca.faces.new([fb3,fc3,fd3])
                                        bm_3ca.faces.new([fb3,fd3,fe3])

                    if type1ccc == 1:
                        if type2ccc == 1:
                            if type3ccc == 0:
                                if type4ccc == 1:
                                    if type5ccc == 1:
                                        bm_3cb.faces.new([fa3_,fb3_,fc3_])
                                        bm_3cb.faces.new([fb3_,fd3_,fe3_])

            elif vertexCount == 6:
                for i in range(vertexCount//6):
                    vx1d = unpack("<f", f.read(4))[0]
                    vy1d = unpack("<f", f.read(4))[0]
                    vz1d = unpack("<f", f.read(4))[0]
                    vw1d = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1d = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2d = unpack("<f", f.read(4))[0]
                    vy2d = unpack("<f", f.read(4))[0]
                    vz2d = unpack("<f", f.read(4))[0]
                    vw2d = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2d = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3d = unpack("<f", f.read(4))[0]
                    vy3d = unpack("<f", f.read(4))[0]
                    vz3d = unpack("<f", f.read(4))[0]
                    vw3d = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3d = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4d = unpack("<f", f.read(4))[0]
                    vy4d = unpack("<f", f.read(4))[0]
                    vz4d = unpack("<f", f.read(4))[0]
                    vw4d = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4d = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5d = unpack("<f", f.read(4))[0]
                    vy5d = unpack("<f", f.read(4))[0]
                    vz5d = unpack("<f", f.read(4))[0]
                    vw5d = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5d = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6d = unpack("<f", f.read(4))[0]
                    vy6d = unpack("<f", f.read(4))[0]
                    vz6d = unpack("<f", f.read(4))[0]
                    vw6d = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6d = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    f.seek(-192,1)
                    vx1daa = unpack("<f", f.read(4))[0]
                    vy1daa = unpack("<f", f.read(4))[0]
                    vz1daa = unpack("<f", f.read(4))[0]
                    vw1daa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1daa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2daa = unpack("<f", f.read(4))[0]
                    vy2daa = unpack("<f", f.read(4))[0]
                    vz2daa = unpack("<f", f.read(4))[0]
                    vw2daa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2daa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3daa = unpack("<f", f.read(4))[0]
                    vy3daa = unpack("<f", f.read(4))[0]
                    vz3daa = unpack("<f", f.read(4))[0]
                    vw3daa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3daa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4daa = unpack("<f", f.read(4))[0]
                    vy4daa = unpack("<f", f.read(4))[0]
                    vz4daa = unpack("<f", f.read(4))[0]
                    vw4daa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4daa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5daa = unpack("<f", f.read(4))[0]
                    vy5daa = unpack("<f", f.read(4))[0]
                    vz5daa = unpack("<f", f.read(4))[0]
                    vw5daa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5daa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6daa = unpack("<f", f.read(4))[0]
                    vy6daa = unpack("<f", f.read(4))[0]
                    vz6daa = unpack("<f", f.read(4))[0]
                    vw6daa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6daa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    f.seek(-192,1)
                    vx1db = unpack("<f", f.read(4))[0]
                    vy1db = unpack("<f", f.read(4))[0]
                    vz1db = unpack("<f", f.read(4))[0]
                    vw1db = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1db = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2db = unpack("<f", f.read(4))[0]
                    vy2db = unpack("<f", f.read(4))[0]
                    vz2db = unpack("<f", f.read(4))[0]
                    vw2db = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2db = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3db = unpack("<f", f.read(4))[0]
                    vy3db = unpack("<f", f.read(4))[0]
                    vz3db = unpack("<f", f.read(4))[0]
                    vw3db = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3db = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4db = unpack("<f", f.read(4))[0]
                    vy4db = unpack("<f", f.read(4))[0]
                    vz4db = unpack("<f", f.read(4))[0]
                    vw4db = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4db = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5db = unpack("<f", f.read(4))[0]
                    vy5db = unpack("<f", f.read(4))[0]
                    vz5db = unpack("<f", f.read(4))[0]
                    vw5db = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5db = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6db = unpack("<f", f.read(4))[0]
                    vy6db = unpack("<f", f.read(4))[0]
                    vz6db = unpack("<f", f.read(4))[0]
                    vw6db = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6db = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    f.seek(-192,1)
                    vx1dc = unpack("<f", f.read(4))[0]
                    vy1dc = unpack("<f", f.read(4))[0]
                    vz1dc = unpack("<f", f.read(4))[0]
                    vw1dc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1dc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2dc = unpack("<f", f.read(4))[0]
                    vy2dc = unpack("<f", f.read(4))[0]
                    vz2dc = unpack("<f", f.read(4))[0]
                    vw2dc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2dc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3dc = unpack("<f", f.read(4))[0]
                    vy3dc = unpack("<f", f.read(4))[0]
                    vz3dc = unpack("<f", f.read(4))[0]
                    vw3dc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3dc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4dc = unpack("<f", f.read(4))[0]
                    vy4dc = unpack("<f", f.read(4))[0]
                    vz4dc = unpack("<f", f.read(4))[0]
                    vw4dc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4dc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5dc = unpack("<f", f.read(4))[0]
                    vy5dc = unpack("<f", f.read(4))[0]
                    vz5dc = unpack("<f", f.read(4))[0]
                    vw5dc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5dc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6dc = unpack("<f", f.read(4))[0]
                    vy6dc = unpack("<f", f.read(4))[0]
                    vz6dc = unpack("<f", f.read(4))[0]
                    vw6dc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6dc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa4 = bm_3d.verts.new([-vx1d,-vy1d,-vz1d])
                    fb4 = bm_3d.verts.new([-vx2d,-vy2d,-vz2d])
                    fc4 = bm_3d.verts.new([-vx3d,-vy3d,-vz3d])
                    fd4 = bm_3d.verts.new([-vx4d,-vy4d,-vz4d])
                    fe4 = bm_3d.verts.new([-vx5d,-vy5d,-vz5d])
                    ff4 = bm_3d.verts.new([-vx6d,-vy6d,-vz6d])

                    fa5a = bm_3daa.verts.new([-vx1daa,-vy1daa,-vz1daa])
                    fb5a = bm_3daa.verts.new([-vx2daa,-vy2daa,-vz2daa])
                    fc5a = bm_3daa.verts.new([-vx3daa,-vy3daa,-vz3daa])
                    fd5a = bm_3daa.verts.new([-vx4daa,-vy4daa,-vz4daa])
                    fe5a = bm_3daa.verts.new([-vx5daa,-vy5daa,-vz5daa])
                    ff5a = bm_3daa.verts.new([-vx6daa,-vy6daa,-vz6daa])

                    fa6 = bm_3db.verts.new([-vx1db,-vy1db,-vz1db])
                    fb6 = bm_3db.verts.new([-vx2db,-vy2db,-vz2db])
                    fc6 = bm_3db.verts.new([-vx3db,-vy3db,-vz3db])
                    fd6 = bm_3db.verts.new([-vx4db,-vy4db,-vz4db])
                    fe6 = bm_3db.verts.new([-vx5db,-vy5db,-vz5db])
                    ff6 = bm_3db.verts.new([-vx6db,-vy6db,-vz6db])

                    fa7 = bm_3dc.verts.new([-vx1dc,-vy1dc,-vz1dc])
                    fb7 = bm_3dc.verts.new([-vx2dc,-vy2dc,-vz2dc])
                    fc7 = bm_3dc.verts.new([-vx3dc,-vy3dc,-vz3dc])
                    fd7 = bm_3dc.verts.new([-vx4dc,-vy4dc,-vz4dc])
                    fe7 = bm_3dc.verts.new([-vx5dc,-vy5dc,-vz5dc])
                    ff7 = bm_3dc.verts.new([-vx6dc,-vy6dc,-vz6dc])

                    if type1d == 1:
                        if type2d == 1:
                            if type3d == 0:
                                if type4d == 0:
                                    if type5d == 0:
                                        if type6d == 0:
                                            bm_3d.faces.new([fa4,fb4,fc4])
                                            bm_3d.faces.new([fb4,fc4,fd4])
                                            bm_3d.faces.new([fc4,fd4,fe4])
                                            bm_3d.faces.new([fd4,fe4,ff4])

                    if type1daa == 1:
                        if type2daa == 1:
                            if type3daa == 0:
                                if type4daa == 0:
                                    if type5daa == 1:
                                        if type6daa == 1:
                                            bm_3daa.faces.new([fa5a,fb5a,fc5a])
                                            bm_3daa.faces.new([fb5a,fc5a,fd5a])
                                            bm_3daa.faces.new([fb5a,fd5a,fe5a])
                                            bm_3daa.faces.new([fd5a,fe5a,ff5a])


                    if type1db == 1:
                        if type2db == 1:
                            if type3db == 0:
                                if type4db == 1:
                                    if type5db == 1:
                                        if type6db == 0:
                                            bm_3db.faces.new([fa6,fb6,fc6])
                                            bm_3db.faces.new([fd6,fe6,ff6])


                    if type1dc == 1:
                        if type2dc == 1:
                            if type3dc == 0:
                                if type4dc == 0:
                                    if type5dc == 0:
                                        if type6dc == 1:
                                            bm_3dc.faces.new([fa7,fb7,fc7])
                                            bm_3dc.faces.new([fb7,fc7,fd7])
                                            bm_3dc.faces.new([fc7,fd7,fe7])
                                            bm_3dc.faces.new([fc7,fe7,ff7])
                                            

            elif vertexCount == 7:
                for i in range(vertexCount//7):
                    vx1e = unpack("<f", f.read(4))[0]
                    vy1e = unpack("<f", f.read(4))[0]
                    vz1e = unpack("<f", f.read(4))[0]
                    vw1e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2e = unpack("<f", f.read(4))[0]
                    vy2e = unpack("<f", f.read(4))[0]
                    vz2e = unpack("<f", f.read(4))[0]
                    vw2e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3e = unpack("<f", f.read(4))[0]
                    vy3e = unpack("<f", f.read(4))[0]
                    vz3e = unpack("<f", f.read(4))[0]
                    vw3e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4e = unpack("<f", f.read(4))[0]
                    vy4e = unpack("<f", f.read(4))[0]
                    vz4e = unpack("<f", f.read(4))[0]
                    vw4e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5e = unpack("<f", f.read(4))[0]
                    vy5e = unpack("<f", f.read(4))[0]
                    vz5e = unpack("<f", f.read(4))[0]
                    vw5e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6e = unpack("<f", f.read(4))[0]
                    vy6e = unpack("<f", f.read(4))[0]
                    vz6e = unpack("<f", f.read(4))[0]
                    vw6e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7e = unpack("<f", f.read(4))[0]
                    vy7e = unpack("<f", f.read(4))[0]
                    vz7e = unpack("<f", f.read(4))[0]
                    vw7e = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7e = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    f.seek(-224,1)
                    
                    vx1ea = unpack("<f", f.read(4))[0]
                    vy1ea = unpack("<f", f.read(4))[0]
                    vz1ea = unpack("<f", f.read(4))[0]
                    vw1ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ea = unpack("<f", f.read(4))[0]
                    vy2ea = unpack("<f", f.read(4))[0]
                    vz2ea = unpack("<f", f.read(4))[0]
                    vw2ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ea = unpack("<f", f.read(4))[0]
                    vy3ea = unpack("<f", f.read(4))[0]
                    vz3ea = unpack("<f", f.read(4))[0]
                    vw3ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ea = unpack("<f", f.read(4))[0]
                    vy4ea = unpack("<f", f.read(4))[0]
                    vz4ea = unpack("<f", f.read(4))[0]
                    vw4ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ea = unpack("<f", f.read(4))[0]
                    vy5ea = unpack("<f", f.read(4))[0]
                    vz5ea = unpack("<f", f.read(4))[0]
                    vw5ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ea = unpack("<f", f.read(4))[0]
                    vy6ea = unpack("<f", f.read(4))[0]
                    vz6ea = unpack("<f", f.read(4))[0]
                    vw6ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ea = unpack("<f", f.read(4))[0]
                    vy7ea = unpack("<f", f.read(4))[0]
                    vz7ea = unpack("<f", f.read(4))[0]
                    vw7ea = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ea = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-224,1)

                    vx1eb = unpack("<f", f.read(4))[0]
                    vy1eb = unpack("<f", f.read(4))[0]
                    vz1eb = unpack("<f", f.read(4))[0]
                    vw1eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2eb = unpack("<f", f.read(4))[0]
                    vy2eb = unpack("<f", f.read(4))[0]
                    vz2eb = unpack("<f", f.read(4))[0]
                    vw2eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3eb = unpack("<f", f.read(4))[0]
                    vy3eb = unpack("<f", f.read(4))[0]
                    vz3eb = unpack("<f", f.read(4))[0]
                    vw3eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4eb = unpack("<f", f.read(4))[0]
                    vy4eb = unpack("<f", f.read(4))[0]
                    vz4eb = unpack("<f", f.read(4))[0]
                    vw4eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5eb = unpack("<f", f.read(4))[0]
                    vy5eb = unpack("<f", f.read(4))[0]
                    vz5eb = unpack("<f", f.read(4))[0]
                    vw5eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6eb = unpack("<f", f.read(4))[0]
                    vy6eb = unpack("<f", f.read(4))[0]
                    vz6eb = unpack("<f", f.read(4))[0]
                    vw6eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7eb = unpack("<f", f.read(4))[0]
                    vy7eb = unpack("<f", f.read(4))[0]
                    vz7eb = unpack("<f", f.read(4))[0]
                    vw7eb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7eb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-224,1)

                    vx1ec = unpack("<f", f.read(4))[0]
                    vy1ec = unpack("<f", f.read(4))[0]
                    vz1ec = unpack("<f", f.read(4))[0]
                    vw1ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ec = unpack("<f", f.read(4))[0]
                    vy2ec = unpack("<f", f.read(4))[0]
                    vz2ec = unpack("<f", f.read(4))[0]
                    vw2ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ec = unpack("<f", f.read(4))[0]
                    vy3ec = unpack("<f", f.read(4))[0]
                    vz3ec = unpack("<f", f.read(4))[0]
                    vw3ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ec = unpack("<f", f.read(4))[0]
                    vy4ec = unpack("<f", f.read(4))[0]
                    vz4ec = unpack("<f", f.read(4))[0]
                    vw4ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ec = unpack("<f", f.read(4))[0]
                    vy5ec = unpack("<f", f.read(4))[0]
                    vz5ec = unpack("<f", f.read(4))[0]
                    vw5ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ec = unpack("<f", f.read(4))[0]
                    vy6ec = unpack("<f", f.read(4))[0]
                    vz6ec = unpack("<f", f.read(4))[0]
                    vw6ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ec = unpack("<f", f.read(4))[0]
                    vy7ec = unpack("<f", f.read(4))[0]
                    vz7ec = unpack("<f", f.read(4))[0]
                    vw7ec = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ec = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-224,1)

                    vx1ed = unpack("<f", f.read(4))[0]
                    vy1ed = unpack("<f", f.read(4))[0]
                    vz1ed = unpack("<f", f.read(4))[0]
                    vw1ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ed = unpack("<f", f.read(4))[0]
                    vy2ed = unpack("<f", f.read(4))[0]
                    vz2ed = unpack("<f", f.read(4))[0]
                    vw2ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ed = unpack("<f", f.read(4))[0]
                    vy3ed = unpack("<f", f.read(4))[0]
                    vz3ed = unpack("<f", f.read(4))[0]
                    vw3ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ed = unpack("<f", f.read(4))[0]
                    vy4ed = unpack("<f", f.read(4))[0]
                    vz4ed = unpack("<f", f.read(4))[0]
                    vw4ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ed = unpack("<f", f.read(4))[0]
                    vy5ed = unpack("<f", f.read(4))[0]
                    vz5ed = unpack("<f", f.read(4))[0]
                    vw5ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ed = unpack("<f", f.read(4))[0]
                    vy6ed = unpack("<f", f.read(4))[0]
                    vz6ed = unpack("<f", f.read(4))[0]
                    vw6ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ed = unpack("<f", f.read(4))[0]
                    vy7ed = unpack("<f", f.read(4))[0]
                    vz7ed = unpack("<f", f.read(4))[0]
                    vw7ed = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ed = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-224,1)

                    vx1edd = unpack("<f", f.read(4))[0]
                    vy1edd = unpack("<f", f.read(4))[0]
                    vz1edd = unpack("<f", f.read(4))[0]
                    vw1edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2edd = unpack("<f", f.read(4))[0]
                    vy2edd = unpack("<f", f.read(4))[0]
                    vz2edd = unpack("<f", f.read(4))[0]
                    vw2edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3edd = unpack("<f", f.read(4))[0]
                    vy3edd = unpack("<f", f.read(4))[0]
                    vz3edd = unpack("<f", f.read(4))[0]
                    vw3edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4edd = unpack("<f", f.read(4))[0]
                    vy4edd = unpack("<f", f.read(4))[0]
                    vz4edd = unpack("<f", f.read(4))[0]
                    vw4edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5edd = unpack("<f", f.read(4))[0]
                    vy5edd = unpack("<f", f.read(4))[0]
                    vz5edd = unpack("<f", f.read(4))[0]
                    vw5edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6edd = unpack("<f", f.read(4))[0]
                    vy6edd = unpack("<f", f.read(4))[0]
                    vz6edd = unpack("<f", f.read(4))[0]
                    vw6edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7edd = unpack("<f", f.read(4))[0]
                    vy7edd = unpack("<f", f.read(4))[0]
                    vz7edd = unpack("<f", f.read(4))[0]
                    vw7edd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7edd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa8 = bm_3e.verts.new([-vx1e,-vy1e,-vz1e])
                    fb8 = bm_3e.verts.new([-vx2e,-vy2e,-vz2e])
                    fc8 = bm_3e.verts.new([-vx3e,-vy3e,-vz3e])
                    fd8 = bm_3e.verts.new([-vx4e,-vy4e,-vz4e])
                    fe8 = bm_3e.verts.new([-vx5e,-vy5e,-vz5e])
                    ff8 = bm_3e.verts.new([-vx6e,-vy6e,-vz6e])
                    fg8 = bm_3e.verts.new([-vx7e,-vy7e,-vz7e])

                    fa9 = bm_3ea.verts.new([-vx1ea,-vy1ea,-vz1ea])
                    fb9 = bm_3ea.verts.new([-vx2ea,-vy2ea,-vz2ea])
                    fc9 = bm_3ea.verts.new([-vx3ea,-vy3ea,-vz3ea])
                    fd9 = bm_3ea.verts.new([-vx4ea,-vy4ea,-vz4ea])
                    fe9 = bm_3ea.verts.new([-vx5ea,-vy5ea,-vz5ea])
                    ff9 = bm_3ea.verts.new([-vx6ea,-vy6ea,-vz6ea])
                    fg9 = bm_3ea.verts.new([-vx7ea,-vy7ea,-vz7ea])

                    fa10 = bm_3eb.verts.new([-vx1eb,-vy1eb,-vz1eb])
                    fb10 = bm_3eb.verts.new([-vx2eb,-vy2eb,-vz2eb])
                    fc10 = bm_3eb.verts.new([-vx3eb,-vy3eb,-vz3eb])
                    fd10 = bm_3eb.verts.new([-vx4eb,-vy4eb,-vz4eb])
                    fe10 = bm_3eb.verts.new([-vx5eb,-vy5eb,-vz5eb])
                    ff10 = bm_3eb.verts.new([-vx6eb,-vy6eb,-vz6eb])
                    fg10 = bm_3eb.verts.new([-vx7eb,-vy7eb,-vz7eb])

                    fa11 = bm_3ec.verts.new([-vx1ec,-vy1ec,-vz1ec])
                    fb11 = bm_3ec.verts.new([-vx2ec,-vy2ec,-vz2ec])
                    fc11 = bm_3ec.verts.new([-vx3ec,-vy3ec,-vz3ec])
                    fd11 = bm_3ec.verts.new([-vx4ec,-vy4ec,-vz4ec])
                    fe11 = bm_3ec.verts.new([-vx5ec,-vy5ec,-vz5ec])
                    ff11 = bm_3ec.verts.new([-vx6ec,-vy6ec,-vz6ec])
                    fg11 = bm_3ec.verts.new([-vx7ec,-vy7ec,-vz7ec])

                    fa12 = bm_3ed.verts.new([-vx1ed,-vy1ed,-vz1ed])
                    fb12 = bm_3ed.verts.new([-vx2ed,-vy2ed,-vz2ed])
                    fc12 = bm_3ed.verts.new([-vx3ed,-vy3ed,-vz3ed])
                    fd12 = bm_3ed.verts.new([-vx4ed,-vy4ed,-vz4ed])
                    fe12 = bm_3ed.verts.new([-vx5ed,-vy5ed,-vz5ed])
                    ff12 = bm_3ed.verts.new([-vx6ed,-vy6ed,-vz6ed])
                    fg12 = bm_3ed.verts.new([-vx7ed,-vy7ed,-vz7ed])

                    fa12a = bm_3edd.verts.new([-vx1edd,-vy1edd,-vz1edd])
                    fb12a = bm_3edd.verts.new([-vx2edd,-vy2edd,-vz2edd])
                    fc12a = bm_3edd.verts.new([-vx3edd,-vy3edd,-vz3edd])
                    fd12a = bm_3edd.verts.new([-vx4edd,-vy4edd,-vz4edd])
                    fe12a = bm_3edd.verts.new([-vx5edd,-vy5edd,-vz5edd])
                    ff12a = bm_3edd.verts.new([-vx6edd,-vy6edd,-vz6edd])
                    fg12a = bm_3edd.verts.new([-vx7edd,-vy7edd,-vz7edd])

                    if type1edd == 1:
                        if type2edd == 1:
                            if type3edd == 0:
                                if type4edd == 1:
                                    if type5edd == 1:
                                        if type6edd == 0:
                                            if type7edd == 0:
                                                bm_3edd.faces.new([fa12a,fb12a,fc12a])
                                                bm_3edd.faces.new([fd12a,fe12a,ff12a])
                                                bm_3edd.faces.new([fe12a,ff12a,fg12a])

                    if type1ed == 1:
                        if type2ed == 1:
                            if type3ed == 0:
                                if type4ed == 0:
                                    if type5ed == 0:
                                        if type6ed == 1:
                                            if type7ed == 1:
                                                bm_3ed.faces.new([fa12,fb12,fc12])
                                                bm_3ed.faces.new([fb12,fc12,fd12])
                                                bm_3ed.faces.new([fc12,fd12,fe12])
                                                bm_3ed.faces.new([fc12,fe12,ff12])
                                                bm_3ed.faces.new([fe12,ff12,fg12])

                    if type1ec == 1:
                        if type2ec == 1:
                            if type3ec == 0:
                                if type4ec == 1:
                                    if type5ec == 1:
                                        if type6ec == 0:
                                            if type7ec == 1:
                                                bm_3ec.faces.new([fa11,fb11,fc11])
                                                bm_3ec.faces.new([fd11,fe11,ff11])
                                                bm_3ec.faces.new([fd11,ff11,fg11])
                            

                    if type1eb == 1:
                        if type2eb == 1:
                            if type3eb == 0:
                                if type4eb == 0:
                                    if type5eb == 0:
                                        if type6eb == 0:
                                            if type7eb == 1:
                                                bm_3eb.faces.new([fa10,fb10,fc10])
                                                bm_3eb.faces.new([fb10,fc10,fd10])
                                                bm_3eb.faces.new([fc10,fd10,fe10])
                                                bm_3eb.faces.new([fd10,fe10,ff10])
                                                bm_3eb.faces.new([fd10,ff10,fg10])

                    if type1ea == 1:
                        if type2ea == 1:
                            if type3ea == 0:
                                if type4ea == 0:
                                    if type5ea == 1:
                                        if type6ea == 1:
                                            if type7ea == 0:
                                                bm_3ea.faces.new([fa9,fb9,fc9])
                                                bm_3ea.faces.new([fb9,fc9,fd9])
                                                bm_3ea.faces.new([fe9,ff9,fg9])
                                        

                    if type1e == 1:
                        if type2e == 1:
                            if type3e == 0:
                                if type4e == 0:
                                    if type5e == 0:
                                        if type6e == 0:
                                            if type7e == 0:
                                                bm_3e.faces.new([fa8,fb8,fc8])
                                                bm_3e.faces.new([fb8,fc8,fd8])
                                                bm_3e.faces.new([fc8,fd8,fe8])
                                                bm_3e.faces.new([fd8,fe8,ff8])
                                                bm_3e.faces.new([fe8,ff8,fg8])

            elif vertexCount == 8:
                for i in range(vertexCount//8):           
                    vx1f = unpack("<f", f.read(4))[0]
                    vy1f = unpack("<f", f.read(4))[0]
                    vz1f = unpack("<f", f.read(4))[0]
                    vw1f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2f = unpack("<f", f.read(4))[0]
                    vy2f = unpack("<f", f.read(4))[0]
                    vz2f = unpack("<f", f.read(4))[0]
                    vw2f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3f = unpack("<f", f.read(4))[0]
                    vy3f = unpack("<f", f.read(4))[0]
                    vz3f = unpack("<f", f.read(4))[0]
                    vw3f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4f = unpack("<f", f.read(4))[0]
                    vy4f = unpack("<f", f.read(4))[0]
                    vz4f = unpack("<f", f.read(4))[0]
                    vw4f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5f = unpack("<f", f.read(4))[0]
                    vy5f = unpack("<f", f.read(4))[0]
                    vz5f = unpack("<f", f.read(4))[0]
                    vw5f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6f = unpack("<f", f.read(4))[0]
                    vy6f = unpack("<f", f.read(4))[0]
                    vz6f = unpack("<f", f.read(4))[0]
                    vw6f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7f = unpack("<f", f.read(4))[0]
                    vy7f = unpack("<f", f.read(4))[0]
                    vz7f = unpack("<f", f.read(4))[0]
                    vw7f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7f = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8f = unpack("<f", f.read(4))[0]
                    vy8f = unpack("<f", f.read(4))[0]
                    vz8f = unpack("<f", f.read(4))[0]
                    vw8f = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8f = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fa = unpack("<f", f.read(4))[0]
                    vy1fa = unpack("<f", f.read(4))[0]
                    vz1fa = unpack("<f", f.read(4))[0]
                    vw1fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fa = unpack("<f", f.read(4))[0]
                    vy2fa = unpack("<f", f.read(4))[0]
                    vz2fa = unpack("<f", f.read(4))[0]
                    vw2fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fa = unpack("<f", f.read(4))[0]
                    vy3fa = unpack("<f", f.read(4))[0]
                    vz3fa = unpack("<f", f.read(4))[0]
                    vw3fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fa = unpack("<f", f.read(4))[0]
                    vy4fa = unpack("<f", f.read(4))[0]
                    vz4fa = unpack("<f", f.read(4))[0]
                    vw4fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fa = unpack("<f", f.read(4))[0]
                    vy5fa = unpack("<f", f.read(4))[0]
                    vz5fa = unpack("<f", f.read(4))[0]
                    vw5fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fa = unpack("<f", f.read(4))[0]
                    vy6fa = unpack("<f", f.read(4))[0]
                    vz6fa = unpack("<f", f.read(4))[0]
                    vw6fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fa = unpack("<f", f.read(4))[0]
                    vy7fa = unpack("<f", f.read(4))[0]
                    vz7fa = unpack("<f", f.read(4))[0]
                    vw7fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fa = unpack("<f", f.read(4))[0]
                    vy8fa = unpack("<f", f.read(4))[0]
                    vz8fa = unpack("<f", f.read(4))[0]
                    vw8fa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fa = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fb = unpack("<f", f.read(4))[0]
                    vy1fb = unpack("<f", f.read(4))[0]
                    vz1fb = unpack("<f", f.read(4))[0]
                    vw1fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fb = unpack("<f", f.read(4))[0]
                    vy2fb = unpack("<f", f.read(4))[0]
                    vz2fb = unpack("<f", f.read(4))[0]
                    vw2fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fb = unpack("<f", f.read(4))[0]
                    vy3fb = unpack("<f", f.read(4))[0]
                    vz3fb = unpack("<f", f.read(4))[0]
                    vw3fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fb = unpack("<f", f.read(4))[0]
                    vy4fb = unpack("<f", f.read(4))[0]
                    vz4fb = unpack("<f", f.read(4))[0]
                    vw4fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fb = unpack("<f", f.read(4))[0]
                    vy5fb = unpack("<f", f.read(4))[0]
                    vz5fb = unpack("<f", f.read(4))[0]
                    vw5fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fb = unpack("<f", f.read(4))[0]
                    vy6fb = unpack("<f", f.read(4))[0]
                    vz6fb = unpack("<f", f.read(4))[0]
                    vw6fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fb = unpack("<f", f.read(4))[0]
                    vy7fb = unpack("<f", f.read(4))[0]
                    vz7fb = unpack("<f", f.read(4))[0]
                    vw7fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fb = unpack("<f", f.read(4))[0]
                    vy8fb = unpack("<f", f.read(4))[0]
                    vz8fb = unpack("<f", f.read(4))[0]
                    vw8fb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fc = unpack("<f", f.read(4))[0]
                    vy1fc = unpack("<f", f.read(4))[0]
                    vz1fc = unpack("<f", f.read(4))[0]
                    vw1fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fc = unpack("<f", f.read(4))[0]
                    vy2fc = unpack("<f", f.read(4))[0]
                    vz2fc = unpack("<f", f.read(4))[0]
                    vw2fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fc = unpack("<f", f.read(4))[0]
                    vy3fc = unpack("<f", f.read(4))[0]
                    vz3fc = unpack("<f", f.read(4))[0]
                    vw3fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fc = unpack("<f", f.read(4))[0]
                    vy4fc = unpack("<f", f.read(4))[0]
                    vz4fc = unpack("<f", f.read(4))[0]
                    vw4fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fc = unpack("<f", f.read(4))[0]
                    vy5fc = unpack("<f", f.read(4))[0]
                    vz5fc = unpack("<f", f.read(4))[0]
                    vw5fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fc = unpack("<f", f.read(4))[0]
                    vy6fc = unpack("<f", f.read(4))[0]
                    vz6fc = unpack("<f", f.read(4))[0]
                    vw6fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fc = unpack("<f", f.read(4))[0]
                    vy7fc = unpack("<f", f.read(4))[0]
                    vz7fc = unpack("<f", f.read(4))[0]
                    vw7fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fc = unpack("<f", f.read(4))[0]
                    vy8fc = unpack("<f", f.read(4))[0]
                    vz8fc = unpack("<f", f.read(4))[0]
                    vw8fc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fd = unpack("<f", f.read(4))[0]
                    vy1fd = unpack("<f", f.read(4))[0]
                    vz1fd = unpack("<f", f.read(4))[0]
                    vw1fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fd = unpack("<f", f.read(4))[0]
                    vy2fd = unpack("<f", f.read(4))[0]
                    vz2fd = unpack("<f", f.read(4))[0]
                    vw2fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fd = unpack("<f", f.read(4))[0]
                    vy3fd = unpack("<f", f.read(4))[0]
                    vz3fd = unpack("<f", f.read(4))[0]
                    vw3fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fd = unpack("<f", f.read(4))[0]
                    vy4fd = unpack("<f", f.read(4))[0]
                    vz4fd = unpack("<f", f.read(4))[0]
                    vw4fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fd = unpack("<f", f.read(4))[0]
                    vy5fd = unpack("<f", f.read(4))[0]
                    vz5fd = unpack("<f", f.read(4))[0]
                    vw5fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fd = unpack("<f", f.read(4))[0]
                    vy6fd = unpack("<f", f.read(4))[0]
                    vz6fd = unpack("<f", f.read(4))[0]
                    vw6fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fd = unpack("<f", f.read(4))[0]
                    vy7fd = unpack("<f", f.read(4))[0]
                    vz7fd = unpack("<f", f.read(4))[0]
                    vw7fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fd = unpack("<f", f.read(4))[0]
                    vy8fd = unpack("<f", f.read(4))[0]
                    vz8fd = unpack("<f", f.read(4))[0]
                    vw8fd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fdd = unpack("<f", f.read(4))[0]
                    vy1fdd = unpack("<f", f.read(4))[0]
                    vz1fdd = unpack("<f", f.read(4))[0]
                    vw1fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fdd = unpack("<f", f.read(4))[0]
                    vy2fdd = unpack("<f", f.read(4))[0]
                    vz2fdd = unpack("<f", f.read(4))[0]
                    vw2fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fdd = unpack("<f", f.read(4))[0]
                    vy3fdd = unpack("<f", f.read(4))[0]
                    vz3fdd = unpack("<f", f.read(4))[0]
                    vw3fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fdd = unpack("<f", f.read(4))[0]
                    vy4fdd = unpack("<f", f.read(4))[0]
                    vz4fdd = unpack("<f", f.read(4))[0]
                    vw4fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fdd = unpack("<f", f.read(4))[0]
                    vy5fdd = unpack("<f", f.read(4))[0]
                    vz5fdd = unpack("<f", f.read(4))[0]
                    vw5fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fdd = unpack("<f", f.read(4))[0]
                    vy6fdd = unpack("<f", f.read(4))[0]
                    vz6fdd = unpack("<f", f.read(4))[0]
                    vw6fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fdd = unpack("<f", f.read(4))[0]
                    vy7fdd = unpack("<f", f.read(4))[0]
                    vz7fdd = unpack("<f", f.read(4))[0]
                    vw7fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fdd = unpack("<f", f.read(4))[0]
                    vy8fdd = unpack("<f", f.read(4))[0]
                    vz8fdd = unpack("<f", f.read(4))[0]
                    vw8fdd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fdd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fddd = unpack("<f", f.read(4))[0]
                    vy1fddd = unpack("<f", f.read(4))[0]
                    vz1fddd = unpack("<f", f.read(4))[0]
                    vw1fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fddd = unpack("<f", f.read(4))[0]
                    vy2fddd = unpack("<f", f.read(4))[0]
                    vz2fddd = unpack("<f", f.read(4))[0]
                    vw2fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fddd = unpack("<f", f.read(4))[0]
                    vy3fddd = unpack("<f", f.read(4))[0]
                    vz3fddd = unpack("<f", f.read(4))[0]
                    vw3fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fddd = unpack("<f", f.read(4))[0]
                    vy4fddd = unpack("<f", f.read(4))[0]
                    vz4fddd = unpack("<f", f.read(4))[0]
                    vw4fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fddd = unpack("<f", f.read(4))[0]
                    vy5fddd = unpack("<f", f.read(4))[0]
                    vz5fddd = unpack("<f", f.read(4))[0]
                    vw5fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fddd = unpack("<f", f.read(4))[0]
                    vy6fddd = unpack("<f", f.read(4))[0]
                    vz6fddd = unpack("<f", f.read(4))[0]
                    vw6fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fddd = unpack("<f", f.read(4))[0]
                    vy7fddd = unpack("<f", f.read(4))[0]
                    vz7fddd = unpack("<f", f.read(4))[0]
                    vw7fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fddd = unpack("<f", f.read(4))[0]
                    vy8fddd = unpack("<f", f.read(4))[0]
                    vz8fddd = unpack("<f", f.read(4))[0]
                    vw8fddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fdddd = unpack("<f", f.read(4))[0]
                    vy1fdddd = unpack("<f", f.read(4))[0]
                    vz1fdddd = unpack("<f", f.read(4))[0]
                    vw1fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fdddd = unpack("<f", f.read(4))[0]
                    vy2fdddd = unpack("<f", f.read(4))[0]
                    vz2fdddd = unpack("<f", f.read(4))[0]
                    vw2fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fdddd = unpack("<f", f.read(4))[0]
                    vy3fdddd = unpack("<f", f.read(4))[0]
                    vz3fdddd = unpack("<f", f.read(4))[0]
                    vw3fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fdddd = unpack("<f", f.read(4))[0]
                    vy4fdddd = unpack("<f", f.read(4))[0]
                    vz4fdddd = unpack("<f", f.read(4))[0]
                    vw4fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fdddd = unpack("<f", f.read(4))[0]
                    vy5fdddd = unpack("<f", f.read(4))[0]
                    vz5fdddd = unpack("<f", f.read(4))[0]
                    vw5fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fdddd = unpack("<f", f.read(4))[0]
                    vy6fdddd = unpack("<f", f.read(4))[0]
                    vz6fdddd = unpack("<f", f.read(4))[0]
                    vw6fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fdddd = unpack("<f", f.read(4))[0]
                    vy7fdddd = unpack("<f", f.read(4))[0]
                    vz7fdddd = unpack("<f", f.read(4))[0]
                    vw7fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fdddd = unpack("<f", f.read(4))[0]
                    vy8fdddd = unpack("<f", f.read(4))[0]
                    vz8fdddd = unpack("<f", f.read(4))[0]
                    vw8fdddd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fdddd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-256,1)

                    vx1fdddd1 = unpack("<f", f.read(4))[0]
                    vy1fdddd1 = unpack("<f", f.read(4))[0]
                    vz1fdddd1 = unpack("<f", f.read(4))[0]
                    vw1fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2fdddd1 = unpack("<f", f.read(4))[0]
                    vy2fdddd1 = unpack("<f", f.read(4))[0]
                    vz2fdddd1 = unpack("<f", f.read(4))[0]
                    vw2fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3fdddd1 = unpack("<f", f.read(4))[0]
                    vy3fdddd1 = unpack("<f", f.read(4))[0]
                    vz3fdddd1 = unpack("<f", f.read(4))[0]
                    vw3fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4fdddd1 = unpack("<f", f.read(4))[0]
                    vy4fdddd1 = unpack("<f", f.read(4))[0]
                    vz4fdddd1 = unpack("<f", f.read(4))[0]
                    vw4fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5fdddd1 = unpack("<f", f.read(4))[0]
                    vy5fdddd1 = unpack("<f", f.read(4))[0]
                    vz5fdddd1 = unpack("<f", f.read(4))[0]
                    vw5fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6fdddd1 = unpack("<f", f.read(4))[0]
                    vy6fdddd1 = unpack("<f", f.read(4))[0]
                    vz6fdddd1 = unpack("<f", f.read(4))[0]
                    vw6fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7fdddd1 = unpack("<f", f.read(4))[0]
                    vy7fdddd1 = unpack("<f", f.read(4))[0]
                    vz7fdddd1 = unpack("<f", f.read(4))[0]
                    vw7fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8fdddd1 = unpack("<f", f.read(4))[0]
                    vy8fdddd1 = unpack("<f", f.read(4))[0]
                    vz8fdddd1 = unpack("<f", f.read(4))[0]
                    vw8fdddd1 = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8fdddd1 = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa13 = bm_3f.verts.new([-vx1f,-vy1f,-vz1f])
                    fb13 = bm_3f.verts.new([-vx2f,-vy2f,-vz2f])
                    fc13 = bm_3f.verts.new([-vx3f,-vy3f,-vz3f])
                    fd13 = bm_3f.verts.new([-vx4f,-vy4f,-vz4f])
                    fe13 = bm_3f.verts.new([-vx5f,-vy5f,-vz5f])
                    ff13 = bm_3f.verts.new([-vx6f,-vy6f,-vz6f])
                    fg13 = bm_3f.verts.new([-vx7f,-vy7f,-vz7f])
                    fh13 = bm_3f.verts.new([-vx8f,-vy8f,-vz8f])

                    fa14 = bm_3fa.verts.new([-vx1fa,-vy1fa,-vz1fa])
                    fb14 = bm_3fa.verts.new([-vx2fa,-vy2fa,-vz2fa])
                    fc14 = bm_3fa.verts.new([-vx3fa,-vy3fa,-vz3fa])
                    fd14 = bm_3fa.verts.new([-vx4fa,-vy4fa,-vz4fa])
                    fe14 = bm_3fa.verts.new([-vx5fa,-vy5fa,-vz5fa])
                    ff14 = bm_3fa.verts.new([-vx6fa,-vy6fa,-vz6fa])
                    fg14 = bm_3fa.verts.new([-vx7fa,-vy7fa,-vz7fa])
                    fh14 = bm_3fa.verts.new([-vx8fa,-vy8fa,-vz8fa])

                    fa15 = bm_3fb.verts.new([-vx1fb,-vy1fb,-vz1fb])
                    fb15 = bm_3fb.verts.new([-vx2fb,-vy2fb,-vz2fb])
                    fc15 = bm_3fb.verts.new([-vx3fb,-vy3fb,-vz3fb])
                    fd15 = bm_3fb.verts.new([-vx4fb,-vy4fb,-vz4fb])
                    fe15 = bm_3fb.verts.new([-vx5fb,-vy5fb,-vz5fb])
                    ff15 = bm_3fb.verts.new([-vx6fb,-vy6fb,-vz6fb])
                    fg15 = bm_3fb.verts.new([-vx7fb,-vy7fb,-vz7fb])
                    fh15 = bm_3fb.verts.new([-vx8fb,-vy8fb,-vz8fb])

                    fa16 = bm_3fc.verts.new([-vx1fc,-vy1fc,-vz1fc])
                    fb16 = bm_3fc.verts.new([-vx2fc,-vy2fc,-vz2fc])
                    fc16 = bm_3fc.verts.new([-vx3fc,-vy3fc,-vz3fc])
                    fd16 = bm_3fc.verts.new([-vx4fc,-vy4fc,-vz4fc])
                    fe16 = bm_3fc.verts.new([-vx5fc,-vy5fc,-vz5fc])
                    ff16 = bm_3fc.verts.new([-vx6fc,-vy6fc,-vz6fc])
                    fg16 = bm_3fc.verts.new([-vx7fc,-vy7fc,-vz7fc])
                    fh16 = bm_3fc.verts.new([-vx8fc,-vy8fc,-vz8fc])

                    fa17 = bm_3fd.verts.new([-vx1fd,-vy1fd,-vz1fd])
                    fb17 = bm_3fd.verts.new([-vx2fd,-vy2fd,-vz2fd])
                    fc17 = bm_3fd.verts.new([-vx3fd,-vy3fd,-vz3fd])
                    fd17 = bm_3fd.verts.new([-vx4fd,-vy4fd,-vz4fd])
                    fe17 = bm_3fd.verts.new([-vx5fd,-vy5fd,-vz5fd])
                    ff17 = bm_3fd.verts.new([-vx6fd,-vy6fd,-vz6fd])
                    fg17 = bm_3fd.verts.new([-vx7fd,-vy7fd,-vz7fd])
                    fh17 = bm_3fd.verts.new([-vx8fd,-vy8fd,-vz8fd])

                    fa17a = bm_3fdd.verts.new([-vx1fdd,-vy1fdd,-vz1fdd])
                    fb17a = bm_3fdd.verts.new([-vx2fdd,-vy2fdd,-vz2fdd])
                    fc17a = bm_3fdd.verts.new([-vx3fdd,-vy3fdd,-vz3fdd])
                    fd17a = bm_3fdd.verts.new([-vx4fdd,-vy4fdd,-vz4fdd])
                    fe17a = bm_3fdd.verts.new([-vx5fdd,-vy5fdd,-vz5fdd])
                    ff17a = bm_3fdd.verts.new([-vx6fdd,-vy6fdd,-vz6fdd])
                    fg17a = bm_3fdd.verts.new([-vx7fdd,-vy7fdd,-vz7fdd])
                    fh17a = bm_3fdd.verts.new([-vx8fdd,-vy8fdd,-vz8fdd])

                    fa17b = bm_3fddd.verts.new([-vx1fddd,-vy1fddd,-vz1fddd])
                    fb17b = bm_3fddd.verts.new([-vx2fddd,-vy2fddd,-vz2fddd])
                    fc17b = bm_3fddd.verts.new([-vx3fddd,-vy3fddd,-vz3fddd])
                    fd17b = bm_3fddd.verts.new([-vx4fddd,-vy4fddd,-vz4fddd])
                    fe17b = bm_3fddd.verts.new([-vx5fddd,-vy5fddd,-vz5fddd])
                    ff17b = bm_3fddd.verts.new([-vx6fddd,-vy6fddd,-vz6fddd])
                    fg17b = bm_3fddd.verts.new([-vx7fddd,-vy7fddd,-vz7fddd])
                    fh17b = bm_3fddd.verts.new([-vx8fddd,-vy8fddd,-vz8fddd])

                    fa17c = bm_3fdddd.verts.new([-vx1fdddd,-vy1fdddd,-vz1fdddd])
                    fb17c = bm_3fdddd.verts.new([-vx2fdddd,-vy2fdddd,-vz2fdddd])
                    fc17c = bm_3fdddd.verts.new([-vx3fdddd,-vy3fdddd,-vz3fdddd])
                    fd17c = bm_3fdddd.verts.new([-vx4fdddd,-vy4fdddd,-vz4fdddd])
                    fe17c = bm_3fdddd.verts.new([-vx5fdddd,-vy5fdddd,-vz5fdddd])
                    ff17c = bm_3fdddd.verts.new([-vx6fdddd,-vy6fdddd,-vz6fdddd])
                    fg17c = bm_3fdddd.verts.new([-vx7fdddd,-vy7fdddd,-vz7fdddd])
                    fh17c = bm_3fdddd.verts.new([-vx8fdddd,-vy8fdddd,-vz8fdddd])

                    fa17ca = bm_3fdddd1.verts.new([-vx1fdddd1,-vy1fdddd1,-vz1fdddd1])
                    fb17ca = bm_3fdddd1.verts.new([-vx2fdddd1,-vy2fdddd1,-vz2fdddd1])
                    fc17ca = bm_3fdddd1.verts.new([-vx3fdddd1,-vy3fdddd1,-vz3fdddd1])
                    fd17ca = bm_3fdddd1.verts.new([-vx4fdddd1,-vy4fdddd1,-vz4fdddd1])
                    fe17ca = bm_3fdddd1.verts.new([-vx5fdddd1,-vy5fdddd1,-vz5fdddd1])
                    ff17ca = bm_3fdddd1.verts.new([-vx6fdddd1,-vy6fdddd1,-vz6fdddd1])
                    fg17ca = bm_3fdddd1.verts.new([-vx7fdddd1,-vy7fdddd1,-vz7fdddd1])
                    fh17ca = bm_3fdddd1.verts.new([-vx8fdddd1,-vy8fdddd1,-vz8fdddd1])

                    if type1fdddd1 == 1:
                        if type2fdddd1 == 1:
                            if type3fdddd1 == 0:
                                if type4fdddd1 == 0:
                                    if type5fdddd1 == 1:
                                        if type6fdddd1 == 1:
                                            if type7fdddd1 == 0:
                                                if type8fdddd1 == 1:
                                                    bm_3fdddd1.faces.new([fa17ca,fb17ca,fc17ca])
                                                    bm_3fdddd1.faces.new([fb17ca,fc17ca,fd17ca])
                                                    bm_3fdddd1.faces.new([fe17ca,ff17ca,fg17ca])
                                                    bm_3fdddd1.faces.new([fe17ca,fg17ca,fh17ca])

                    if type1fdddd == 1:
                        if type2fdddd == 1:
                            if type3fdddd == 0:
                                if type4fdddd == 1:
                                    if type5fdddd == 1:
                                        if type6fdddd == 0:
                                            if type7fdddd == 1:
                                                if type8fdddd == 1:
                                                    bm_3fdddd.faces.new([fa17c,fb17c,fc17c])
                                                    bm_3fdddd.faces.new([fd17c,fe17c,ff17c])
                                                    bm_3fdddd.faces.new([fe17c,ff17c,fg17c])
                                                    bm_3fdddd.faces.new([fe17c,fg17c,fh17c])

                    

                    if type1fddd == 1:
                        if type2fddd == 1:
                            if type3fddd == 0:
                                if type4fddd == 1:
                                    if type5fddd == 1:
                                        if type6fddd == 0:
                                            if type7fddd == 0:
                                                if type8fddd == 1:
                                                    bm_3fddd.faces.new([fa17b,fb17b,fc17b])
                                                    bm_3fddd.faces.new([fd17b,fe17b,ff17b])
                                                    bm_3fddd.faces.new([fe17b,ff17b,fg17b])
                                                    bm_3fddd.faces.new([fe17b,fg17b,fh17b])

                    if type1fdd == 1:
                        if type2fdd == 1:
                            if type3fdd == 0:
                                if type4fdd == 1:
                                    if type5fdd == 1:
                                        if type6fdd == 0:
                                            if type7fdd == 0:
                                                if type8fdd == 0:
                                                    bm_3fdd.faces.new([fa17a,fb17a,fc17a])
                                                    bm_3fdd.faces.new([fd17a,fe17a,ff17a])
                                                    bm_3fdd.faces.new([fe17a,ff17a,fg17a])
                                                    bm_3fdd.faces.new([ff17a,fg17a,fh17a])

                    if type1fd == 1:
                        if type2fd == 1:
                            if type3fd == 0:
                                if type4fd == 0:
                                    if type5fd == 0:
                                        if type6fd == 0:
                                            if type7fd == 1:
                                                if type8fd == 1:
                                                    bm_3fd.faces.new([fa17,fb17,fc17])
                                                    bm_3fd.faces.new([fb17,fc17,fd17])
                                                    bm_3fd.faces.new([fc17,fd17,fe17])
                                                    bm_3fd.faces.new([fd17,fe17,ff17])
                                                    bm_3fd.faces.new([fd17,ff17,fg17])
                                                    bm_3fd.faces.new([ff17,fg17,fh17])

                    if type1fc == 1:
                        if type2fc == 1:
                            if type3fc == 0:
                                if type4fc == 0:
                                    if type5fc == 0:
                                        if type6fc == 1:
                                            if type7fc == 1:
                                                if type8fc == 0:
                                                    bm_3fc.faces.new([fa16,fb16,fc16])
                                                    bm_3fc.faces.new([fb16,fc16,fd16])
                                                    bm_3fc.faces.new([fc16,fd16,fe16])
                                                    bm_3fc.faces.new([ff16,fg16,fh16])

                    if type1fb == 1:
                        if type2fb == 1:
                            if type3fb == 0:
                                if type4fb == 0:
                                    if type5fb == 0:
                                        if type6fb == 0:
                                            if type7fb == 0:
                                                if type8fb == 1:
                                                    bm_3fb.faces.new([fa15,fb15,fc15])
                                                    bm_3fb.faces.new([fb15,fc15,fd15])
                                                    bm_3fb.faces.new([fc15,fd15,fe15])
                                                    bm_3fb.faces.new([fd15,fe15,ff15])
                                                    bm_3fb.faces.new([fe15,ff15,fg15])
                                                    bm_3fb.faces.new([fe15,fg15,fh15])

                    if type1fa == 1:
                        if type2fa == 1:
                            if type3fa == 0:
                                if type4fa == 0:
                                    if type5fa == 1:
                                        if type6fa == 1:
                                            if type7fa == 0:
                                                if type8fa == 0:
                                                    bm_3fa.faces.new([fa14,fb14,fc14])
                                                    bm_3fa.faces.new([fb14,fc14,fd14])
                                                    bm_3fa.faces.new([fe14,ff14,fg14])
                                                    bm_3fa.faces.new([ff14,fg14,fh14])

                    if type1f == 1:
                        if type2f == 1:
                            if type3f == 0:
                                if type4f == 0:
                                    if type5f == 0:
                                        if type6f == 0:
                                            if type7f == 0:
                                                if type8f == 0:
                                                    bm_3f.faces.new([fa13,fb13,fc13])
                                                    bm_3f.faces.new([fb13,fc13,fd13])
                                                    bm_3f.faces.new([fc13,fd13,fe13])
                                                    bm_3f.faces.new([fd13,fe13,ff13])
                                                    bm_3f.faces.new([fe13,ff13,fg13])
                                                    bm_3f.faces.new([ff13,fg13,fh13])

            elif vertexCount == 9:
                for i in range(vertexCount//9):
                    vx1g = unpack("<f", f.read(4))[0]
                    vy1g = unpack("<f", f.read(4))[0]
                    vz1g = unpack("<f", f.read(4))[0]
                    vw1g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2g = unpack("<f", f.read(4))[0]
                    vy2g = unpack("<f", f.read(4))[0]
                    vz2g = unpack("<f", f.read(4))[0]
                    vw2g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3g = unpack("<f", f.read(4))[0]
                    vy3g = unpack("<f", f.read(4))[0]
                    vz3g = unpack("<f", f.read(4))[0]
                    vw3g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4g = unpack("<f", f.read(4))[0]
                    vy4g = unpack("<f", f.read(4))[0]
                    vz4g = unpack("<f", f.read(4))[0]
                    vw4g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5g = unpack("<f", f.read(4))[0]
                    vy5g = unpack("<f", f.read(4))[0]
                    vz5g = unpack("<f", f.read(4))[0]
                    vw5g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6g = unpack("<f", f.read(4))[0]
                    vy6g = unpack("<f", f.read(4))[0]
                    vz6g = unpack("<f", f.read(4))[0]
                    vw6g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7g = unpack("<f", f.read(4))[0]
                    vy7g = unpack("<f", f.read(4))[0]
                    vz7g = unpack("<f", f.read(4))[0]
                    vw7g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8g = unpack("<f", f.read(4))[0]
                    vy8g = unpack("<f", f.read(4))[0]
                    vz8g = unpack("<f", f.read(4))[0]
                    vw8g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8g = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9g = unpack("<f", f.read(4))[0]
                    vy9g = unpack("<f", f.read(4))[0]
                    vz9g = unpack("<f", f.read(4))[0]
                    vw9g = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9g = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1ga = unpack("<f", f.read(4))[0]
                    vy1ga = unpack("<f", f.read(4))[0]
                    vz1ga = unpack("<f", f.read(4))[0]
                    vw1ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ga = unpack("<f", f.read(4))[0]
                    vy2ga = unpack("<f", f.read(4))[0]
                    vz2ga = unpack("<f", f.read(4))[0]
                    vw2ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ga = unpack("<f", f.read(4))[0]
                    vy3ga = unpack("<f", f.read(4))[0]
                    vz3ga = unpack("<f", f.read(4))[0]
                    vw3ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ga = unpack("<f", f.read(4))[0]
                    vy4ga = unpack("<f", f.read(4))[0]
                    vz4ga = unpack("<f", f.read(4))[0]
                    vw4ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ga = unpack("<f", f.read(4))[0]
                    vy5ga = unpack("<f", f.read(4))[0]
                    vz5ga = unpack("<f", f.read(4))[0]
                    vw5ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ga = unpack("<f", f.read(4))[0]
                    vy6ga = unpack("<f", f.read(4))[0]
                    vz6ga = unpack("<f", f.read(4))[0]
                    vw6ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ga = unpack("<f", f.read(4))[0]
                    vy7ga = unpack("<f", f.read(4))[0]
                    vz7ga = unpack("<f", f.read(4))[0]
                    vw7ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ga = unpack("<f", f.read(4))[0]
                    vy8ga = unpack("<f", f.read(4))[0]
                    vz8ga = unpack("<f", f.read(4))[0]
                    vw8ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ga = unpack("<f", f.read(4))[0]
                    vy9ga = unpack("<f", f.read(4))[0]
                    vz9ga = unpack("<f", f.read(4))[0]
                    vw9ga = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ga = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gb = unpack("<f", f.read(4))[0]
                    vy1gb = unpack("<f", f.read(4))[0]
                    vz1gb = unpack("<f", f.read(4))[0]
                    vw1gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gb = unpack("<f", f.read(4))[0]
                    vy2gb = unpack("<f", f.read(4))[0]
                    vz2gb = unpack("<f", f.read(4))[0]
                    vw2gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gb = unpack("<f", f.read(4))[0]
                    vy3gb = unpack("<f", f.read(4))[0]
                    vz3gb = unpack("<f", f.read(4))[0]
                    vw3gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gb = unpack("<f", f.read(4))[0]
                    vy4gb = unpack("<f", f.read(4))[0]
                    vz4gb = unpack("<f", f.read(4))[0]
                    vw4gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gb = unpack("<f", f.read(4))[0]
                    vy5gb = unpack("<f", f.read(4))[0]
                    vz5gb = unpack("<f", f.read(4))[0]
                    vw5gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gb = unpack("<f", f.read(4))[0]
                    vy6gb = unpack("<f", f.read(4))[0]
                    vz6gb = unpack("<f", f.read(4))[0]
                    vw6gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gb = unpack("<f", f.read(4))[0]
                    vy7gb = unpack("<f", f.read(4))[0]
                    vz7gb = unpack("<f", f.read(4))[0]
                    vw7gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gb = unpack("<f", f.read(4))[0]
                    vy8gb = unpack("<f", f.read(4))[0]
                    vz8gb = unpack("<f", f.read(4))[0]
                    vw8gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gb = unpack("<f", f.read(4))[0]
                    vy9gb = unpack("<f", f.read(4))[0]
                    vz9gb = unpack("<f", f.read(4))[0]
                    vw9gb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gc = unpack("<f", f.read(4))[0]
                    vy1gc = unpack("<f", f.read(4))[0]
                    vz1gc = unpack("<f", f.read(4))[0]
                    vw1gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gc = unpack("<f", f.read(4))[0]
                    vy2gc = unpack("<f", f.read(4))[0]
                    vz2gc = unpack("<f", f.read(4))[0]
                    vw2gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gc = unpack("<f", f.read(4))[0]
                    vy3gc = unpack("<f", f.read(4))[0]
                    vz3gc = unpack("<f", f.read(4))[0]
                    vw3gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gc = unpack("<f", f.read(4))[0]
                    vy4gc = unpack("<f", f.read(4))[0]
                    vz4gc = unpack("<f", f.read(4))[0]
                    vw4gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gc = unpack("<f", f.read(4))[0]
                    vy5gc = unpack("<f", f.read(4))[0]
                    vz5gc = unpack("<f", f.read(4))[0]
                    vw5gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gc = unpack("<f", f.read(4))[0]
                    vy6gc = unpack("<f", f.read(4))[0]
                    vz6gc = unpack("<f", f.read(4))[0]
                    vw6gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gc = unpack("<f", f.read(4))[0]
                    vy7gc = unpack("<f", f.read(4))[0]
                    vz7gc = unpack("<f", f.read(4))[0]
                    vw7gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gc = unpack("<f", f.read(4))[0]
                    vy8gc = unpack("<f", f.read(4))[0]
                    vz8gc = unpack("<f", f.read(4))[0]
                    vw8gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gc = unpack("<f", f.read(4))[0]
                    vy9gc = unpack("<f", f.read(4))[0]
                    vz9gc = unpack("<f", f.read(4))[0]
                    vw9gc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gd = unpack("<f", f.read(4))[0]
                    vy1gd = unpack("<f", f.read(4))[0]
                    vz1gd = unpack("<f", f.read(4))[0]
                    vw1gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gd = unpack("<f", f.read(4))[0]
                    vy2gd = unpack("<f", f.read(4))[0]
                    vz2gd = unpack("<f", f.read(4))[0]
                    vw2gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gd = unpack("<f", f.read(4))[0]
                    vy3gd = unpack("<f", f.read(4))[0]
                    vz3gd = unpack("<f", f.read(4))[0]
                    vw3gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gd = unpack("<f", f.read(4))[0]
                    vy4gd = unpack("<f", f.read(4))[0]
                    vz4gd = unpack("<f", f.read(4))[0]
                    vw4gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gd = unpack("<f", f.read(4))[0]
                    vy5gd = unpack("<f", f.read(4))[0]
                    vz5gd = unpack("<f", f.read(4))[0]
                    vw5gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gd = unpack("<f", f.read(4))[0]
                    vy6gd = unpack("<f", f.read(4))[0]
                    vz6gd = unpack("<f", f.read(4))[0]
                    vw6gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gd = unpack("<f", f.read(4))[0]
                    vy7gd = unpack("<f", f.read(4))[0]
                    vz7gd = unpack("<f", f.read(4))[0]
                    vw7gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gd = unpack("<f", f.read(4))[0]
                    vy8gd = unpack("<f", f.read(4))[0]
                    vz8gd = unpack("<f", f.read(4))[0]
                    vw8gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gd = unpack("<f", f.read(4))[0]
                    vy9gd = unpack("<f", f.read(4))[0]
                    vz9gd = unpack("<f", f.read(4))[0]
                    vw9gd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1ge = unpack("<f", f.read(4))[0]
                    vy1ge = unpack("<f", f.read(4))[0]
                    vz1ge = unpack("<f", f.read(4))[0]
                    vw1ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ge = unpack("<f", f.read(4))[0]
                    vy2ge = unpack("<f", f.read(4))[0]
                    vz2ge = unpack("<f", f.read(4))[0]
                    vw2ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ge = unpack("<f", f.read(4))[0]
                    vy3ge = unpack("<f", f.read(4))[0]
                    vz3ge = unpack("<f", f.read(4))[0]
                    vw3ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ge = unpack("<f", f.read(4))[0]
                    vy4ge = unpack("<f", f.read(4))[0]
                    vz4ge = unpack("<f", f.read(4))[0]
                    vw4ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ge = unpack("<f", f.read(4))[0]
                    vy5ge = unpack("<f", f.read(4))[0]
                    vz5ge = unpack("<f", f.read(4))[0]
                    vw5ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ge = unpack("<f", f.read(4))[0]
                    vy6ge = unpack("<f", f.read(4))[0]
                    vz6ge = unpack("<f", f.read(4))[0]
                    vw6ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ge = unpack("<f", f.read(4))[0]
                    vy7ge = unpack("<f", f.read(4))[0]
                    vz7ge = unpack("<f", f.read(4))[0]
                    vw7ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ge = unpack("<f", f.read(4))[0]
                    vy8ge = unpack("<f", f.read(4))[0]
                    vz8ge = unpack("<f", f.read(4))[0]
                    vw8ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ge = unpack("<f", f.read(4))[0]
                    vy9ge = unpack("<f", f.read(4))[0]
                    vz9ge = unpack("<f", f.read(4))[0]
                    vw9ge = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ge = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gf = unpack("<f", f.read(4))[0]
                    vy1gf = unpack("<f", f.read(4))[0]
                    vz1gf = unpack("<f", f.read(4))[0]
                    vw1gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gf = unpack("<f", f.read(4))[0]
                    vy2gf = unpack("<f", f.read(4))[0]
                    vz2gf = unpack("<f", f.read(4))[0]
                    vw2gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gf = unpack("<f", f.read(4))[0]
                    vy3gf = unpack("<f", f.read(4))[0]
                    vz3gf = unpack("<f", f.read(4))[0]
                    vw3gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gf = unpack("<f", f.read(4))[0]
                    vy4gf = unpack("<f", f.read(4))[0]
                    vz4gf = unpack("<f", f.read(4))[0]
                    vw4gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gf = unpack("<f", f.read(4))[0]
                    vy5gf = unpack("<f", f.read(4))[0]
                    vz5gf = unpack("<f", f.read(4))[0]
                    vw5gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gf = unpack("<f", f.read(4))[0]
                    vy6gf = unpack("<f", f.read(4))[0]
                    vz6gf = unpack("<f", f.read(4))[0]
                    vw6gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gf = unpack("<f", f.read(4))[0]
                    vy7gf = unpack("<f", f.read(4))[0]
                    vz7gf = unpack("<f", f.read(4))[0]
                    vw7gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gf = unpack("<f", f.read(4))[0]
                    vy8gf = unpack("<f", f.read(4))[0]
                    vz8gf = unpack("<f", f.read(4))[0]
                    vw8gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gf = unpack("<f", f.read(4))[0]
                    vy9gf = unpack("<f", f.read(4))[0]
                    vz9gf = unpack("<f", f.read(4))[0]
                    vw9gf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gg = unpack("<f", f.read(4))[0]
                    vy1gg = unpack("<f", f.read(4))[0]
                    vz1gg = unpack("<f", f.read(4))[0]
                    vw1gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gg = unpack("<f", f.read(4))[0]
                    vy2gg = unpack("<f", f.read(4))[0]
                    vz2gg = unpack("<f", f.read(4))[0]
                    vw2gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gg = unpack("<f", f.read(4))[0]
                    vy3gg = unpack("<f", f.read(4))[0]
                    vz3gg = unpack("<f", f.read(4))[0]
                    vw3gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gg = unpack("<f", f.read(4))[0]
                    vy4gg = unpack("<f", f.read(4))[0]
                    vz4gg = unpack("<f", f.read(4))[0]
                    vw4gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gg = unpack("<f", f.read(4))[0]
                    vy5gg = unpack("<f", f.read(4))[0]
                    vz5gg = unpack("<f", f.read(4))[0]
                    vw5gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gg = unpack("<f", f.read(4))[0]
                    vy6gg = unpack("<f", f.read(4))[0]
                    vz6gg = unpack("<f", f.read(4))[0]
                    vw6gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gg = unpack("<f", f.read(4))[0]
                    vy7gg = unpack("<f", f.read(4))[0]
                    vz7gg = unpack("<f", f.read(4))[0]
                    vw7gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gg = unpack("<f", f.read(4))[0]
                    vy8gg = unpack("<f", f.read(4))[0]
                    vz8gg = unpack("<f", f.read(4))[0]
                    vw8gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gg = unpack("<f", f.read(4))[0]
                    vy9gg = unpack("<f", f.read(4))[0]
                    vz9gg = unpack("<f", f.read(4))[0]
                    vw9gg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gg = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gh = unpack("<f", f.read(4))[0]
                    vy1gh = unpack("<f", f.read(4))[0]
                    vz1gh = unpack("<f", f.read(4))[0]
                    vw1gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gh = unpack("<f", f.read(4))[0]
                    vy2gh = unpack("<f", f.read(4))[0]
                    vz2gh = unpack("<f", f.read(4))[0]
                    vw2gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gh = unpack("<f", f.read(4))[0]
                    vy3gh = unpack("<f", f.read(4))[0]
                    vz3gh = unpack("<f", f.read(4))[0]
                    vw3gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gh = unpack("<f", f.read(4))[0]
                    vy4gh = unpack("<f", f.read(4))[0]
                    vz4gh = unpack("<f", f.read(4))[0]
                    vw4gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gh = unpack("<f", f.read(4))[0]
                    vy5gh = unpack("<f", f.read(4))[0]
                    vz5gh = unpack("<f", f.read(4))[0]
                    vw5gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gh = unpack("<f", f.read(4))[0]
                    vy6gh = unpack("<f", f.read(4))[0]
                    vz6gh = unpack("<f", f.read(4))[0]
                    vw6gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gh = unpack("<f", f.read(4))[0]
                    vy7gh = unpack("<f", f.read(4))[0]
                    vz7gh = unpack("<f", f.read(4))[0]
                    vw7gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gh = unpack("<f", f.read(4))[0]
                    vy8gh = unpack("<f", f.read(4))[0]
                    vz8gh = unpack("<f", f.read(4))[0]
                    vw8gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gh = unpack("<f", f.read(4))[0]
                    vy9gh = unpack("<f", f.read(4))[0]
                    vz9gh = unpack("<f", f.read(4))[0]
                    vw9gh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gh = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1gha = unpack("<f", f.read(4))[0]
                    vy1gha = unpack("<f", f.read(4))[0]
                    vz1gha = unpack("<f", f.read(4))[0]
                    vw1gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2gha = unpack("<f", f.read(4))[0]
                    vy2gha = unpack("<f", f.read(4))[0]
                    vz2gha = unpack("<f", f.read(4))[0]
                    vw2gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3gha = unpack("<f", f.read(4))[0]
                    vy3gha = unpack("<f", f.read(4))[0]
                    vz3gha = unpack("<f", f.read(4))[0]
                    vw3gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4gha = unpack("<f", f.read(4))[0]
                    vy4gha = unpack("<f", f.read(4))[0]
                    vz4gha = unpack("<f", f.read(4))[0]
                    vw4gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5gha = unpack("<f", f.read(4))[0]
                    vy5gha = unpack("<f", f.read(4))[0]
                    vz5gha = unpack("<f", f.read(4))[0]
                    vw5gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6gha = unpack("<f", f.read(4))[0]
                    vy6gha = unpack("<f", f.read(4))[0]
                    vz6gha = unpack("<f", f.read(4))[0]
                    vw6gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7gha = unpack("<f", f.read(4))[0]
                    vy7gha = unpack("<f", f.read(4))[0]
                    vz7gha = unpack("<f", f.read(4))[0]
                    vw7gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8gha = unpack("<f", f.read(4))[0]
                    vy8gha = unpack("<f", f.read(4))[0]
                    vz8gha = unpack("<f", f.read(4))[0]
                    vw8gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9gha = unpack("<f", f.read(4))[0]
                    vy9gha = unpack("<f", f.read(4))[0]
                    vz9gha = unpack("<f", f.read(4))[0]
                    vw9gha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9gha = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1ghb = unpack("<f", f.read(4))[0]
                    vy1ghb = unpack("<f", f.read(4))[0]
                    vz1ghb = unpack("<f", f.read(4))[0]
                    vw1ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ghb = unpack("<f", f.read(4))[0]
                    vy2ghb = unpack("<f", f.read(4))[0]
                    vz2ghb = unpack("<f", f.read(4))[0]
                    vw2ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ghb = unpack("<f", f.read(4))[0]
                    vy3ghb = unpack("<f", f.read(4))[0]
                    vz3ghb = unpack("<f", f.read(4))[0]
                    vw3ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ghb = unpack("<f", f.read(4))[0]
                    vy4ghb = unpack("<f", f.read(4))[0]
                    vz4ghb = unpack("<f", f.read(4))[0]
                    vw4ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ghb = unpack("<f", f.read(4))[0]
                    vy5ghb = unpack("<f", f.read(4))[0]
                    vz5ghb = unpack("<f", f.read(4))[0]
                    vw5ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ghb = unpack("<f", f.read(4))[0]
                    vy6ghb = unpack("<f", f.read(4))[0]
                    vz6ghb = unpack("<f", f.read(4))[0]
                    vw6ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ghb = unpack("<f", f.read(4))[0]
                    vy7ghb = unpack("<f", f.read(4))[0]
                    vz7ghb = unpack("<f", f.read(4))[0]
                    vw7ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ghb = unpack("<f", f.read(4))[0]
                    vy8ghb = unpack("<f", f.read(4))[0]
                    vz8ghb = unpack("<f", f.read(4))[0]
                    vw8ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ghb = unpack("<f", f.read(4))[0]
                    vy9ghb = unpack("<f", f.read(4))[0]
                    vz9ghb = unpack("<f", f.read(4))[0]
                    vw9ghb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ghb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-288,1)

                    vx1ghc = unpack("<f", f.read(4))[0]
                    vy1ghc = unpack("<f", f.read(4))[0]
                    vz1ghc = unpack("<f", f.read(4))[0]
                    vw1ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ghc = unpack("<f", f.read(4))[0]
                    vy2ghc = unpack("<f", f.read(4))[0]
                    vz2ghc = unpack("<f", f.read(4))[0]
                    vw2ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ghc = unpack("<f", f.read(4))[0]
                    vy3ghc = unpack("<f", f.read(4))[0]
                    vz3ghc = unpack("<f", f.read(4))[0]
                    vw3ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ghc = unpack("<f", f.read(4))[0]
                    vy4ghc = unpack("<f", f.read(4))[0]
                    vz4ghc = unpack("<f", f.read(4))[0]
                    vw4ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ghc = unpack("<f", f.read(4))[0]
                    vy5ghc = unpack("<f", f.read(4))[0]
                    vz5ghc = unpack("<f", f.read(4))[0]
                    vw5ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ghc = unpack("<f", f.read(4))[0]
                    vy6ghc = unpack("<f", f.read(4))[0]
                    vz6ghc = unpack("<f", f.read(4))[0]
                    vw6ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ghc = unpack("<f", f.read(4))[0]
                    vy7ghc = unpack("<f", f.read(4))[0]
                    vz7ghc = unpack("<f", f.read(4))[0]
                    vw7ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ghc = unpack("<f", f.read(4))[0]
                    vy8ghc = unpack("<f", f.read(4))[0]
                    vz8ghc = unpack("<f", f.read(4))[0]
                    vw8ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ghc = unpack("<f", f.read(4))[0]
                    vy9ghc = unpack("<f", f.read(4))[0]
                    vz9ghc = unpack("<f", f.read(4))[0]
                    vw9ghc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ghc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    

                    fa18 = bm_3g.verts.new([-vx1g,-vy1g,-vz1g])
                    fb18 = bm_3g.verts.new([-vx2g,-vy2g,-vz2g])
                    fc18 = bm_3g.verts.new([-vx3g,-vy3g,-vz3g])
                    fd18 = bm_3g.verts.new([-vx4g,-vy4g,-vz4g])
                    fe18 = bm_3g.verts.new([-vx5g,-vy5g,-vz5g])
                    ff18 = bm_3g.verts.new([-vx6g,-vy6g,-vz6g])
                    fg18 = bm_3g.verts.new([-vx7g,-vy7g,-vz7g])
                    fh18 = bm_3g.verts.new([-vx8g,-vy8g,-vz8g])
                    fi18 = bm_3g.verts.new([-vx9g,-vy9g,-vz9g])

                    fa19 = bm_3ga.verts.new([-vx1ga,-vy1ga,-vz1ga])
                    fb19 = bm_3ga.verts.new([-vx2ga,-vy2ga,-vz2ga])
                    fc19 = bm_3ga.verts.new([-vx3ga,-vy3ga,-vz3ga])
                    fd19 = bm_3ga.verts.new([-vx4ga,-vy4ga,-vz4ga])
                    fe19 = bm_3ga.verts.new([-vx5ga,-vy5ga,-vz5ga])
                    ff19 = bm_3ga.verts.new([-vx6ga,-vy6ga,-vz6ga])
                    fg19 = bm_3ga.verts.new([-vx7ga,-vy7ga,-vz7ga])
                    fh19 = bm_3ga.verts.new([-vx8ga,-vy8ga,-vz8ga])
                    fi19 = bm_3ga.verts.new([-vx9ga,-vy9ga,-vz9ga])

                    fa20 = bm_3gb.verts.new([-vx1gb,-vy1gb,-vz1gb])
                    fb20 = bm_3gb.verts.new([-vx2gb,-vy2gb,-vz2gb])
                    fc20 = bm_3gb.verts.new([-vx3gb,-vy3gb,-vz3gb])
                    fd20 = bm_3gb.verts.new([-vx4gb,-vy4gb,-vz4gb])
                    fe20 = bm_3gb.verts.new([-vx5gb,-vy5gb,-vz5gb])
                    ff20 = bm_3gb.verts.new([-vx6gb,-vy6gb,-vz6gb])
                    fg20 = bm_3gb.verts.new([-vx7gb,-vy7gb,-vz7gb])
                    fh20 = bm_3gb.verts.new([-vx8gb,-vy8gb,-vz8gb])
                    fi20 = bm_3gb.verts.new([-vx9gb,-vy9gb,-vz9gb])

                    fa21 = bm_3gc.verts.new([-vx1gc,-vy1gc,-vz1gc])
                    fb21 = bm_3gc.verts.new([-vx2gc,-vy2gc,-vz2gc])
                    fc21 = bm_3gc.verts.new([-vx3gc,-vy3gc,-vz3gc])
                    fd21 = bm_3gc.verts.new([-vx4gc,-vy4gc,-vz4gc])
                    fe21 = bm_3gc.verts.new([-vx5gc,-vy5gc,-vz5gc])
                    ff21 = bm_3gc.verts.new([-vx6gc,-vy6gc,-vz6gc])
                    fg21 = bm_3gc.verts.new([-vx7gc,-vy7gc,-vz7gc])
                    fh21 = bm_3gc.verts.new([-vx8gc,-vy8gc,-vz8gc])
                    fi21 = bm_3gc.verts.new([-vx9gc,-vy9gc,-vz9gc])

                    fa22 = bm_3gd.verts.new([-vx1gd,-vy1gd,-vz1gd])
                    fb22 = bm_3gd.verts.new([-vx2gd,-vy2gd,-vz2gd])
                    fc22 = bm_3gd.verts.new([-vx3gd,-vy3gd,-vz3gd])
                    fd22 = bm_3gd.verts.new([-vx4gd,-vy4gd,-vz4gd])
                    fe22 = bm_3gd.verts.new([-vx5gd,-vy5gd,-vz5gd])
                    ff22 = bm_3gd.verts.new([-vx6gd,-vy6gd,-vz6gd])
                    fg22 = bm_3gd.verts.new([-vx7gd,-vy7gd,-vz7gd])
                    fh22 = bm_3gd.verts.new([-vx8gd,-vy8gd,-vz8gd])
                    fi22 = bm_3gd.verts.new([-vx9gd,-vy9gd,-vz9gd])

                    fa23 = bm_3ge.verts.new([-vx1ge,-vy1ge,-vz1ge])
                    fb23 = bm_3ge.verts.new([-vx2ge,-vy2ge,-vz2ge])
                    fc23 = bm_3ge.verts.new([-vx3ge,-vy3ge,-vz3ge])
                    fd23 = bm_3ge.verts.new([-vx4ge,-vy4ge,-vz4ge])
                    fe23 = bm_3ge.verts.new([-vx5ge,-vy5ge,-vz5ge])
                    ff23 = bm_3ge.verts.new([-vx6ge,-vy6ge,-vz6ge])
                    fg23 = bm_3ge.verts.new([-vx7ge,-vy7ge,-vz7ge])
                    fh23 = bm_3ge.verts.new([-vx8ge,-vy8ge,-vz8ge])
                    fi23 = bm_3ge.verts.new([-vx9ge,-vy9ge,-vz9ge])

                    fa24 = bm_3gf.verts.new([-vx1gf,-vy1gf,-vz1gf])
                    fb24 = bm_3gf.verts.new([-vx2gf,-vy2gf,-vz2gf])
                    fc24 = bm_3gf.verts.new([-vx3gf,-vy3gf,-vz3gf])
                    fd24 = bm_3gf.verts.new([-vx4gf,-vy4gf,-vz4gf])
                    fe24 = bm_3gf.verts.new([-vx5gf,-vy5gf,-vz5gf])
                    ff24 = bm_3gf.verts.new([-vx6gf,-vy6gf,-vz6gf])
                    fg24 = bm_3gf.verts.new([-vx7gf,-vy7gf,-vz7gf])
                    fh24 = bm_3gf.verts.new([-vx8gf,-vy8gf,-vz8gf])
                    fi24 = bm_3gf.verts.new([-vx9gf,-vy9gf,-vz9gf])

                    fa24a = bm_3gg.verts.new([-vx1gg,-vy1gg,-vz1gg])
                    fb24a = bm_3gg.verts.new([-vx2gg,-vy2gg,-vz2gg])
                    fc24a = bm_3gg.verts.new([-vx3gg,-vy3gg,-vz3gg])
                    fd24a = bm_3gg.verts.new([-vx4gg,-vy4gg,-vz4gg])
                    fe24a = bm_3gg.verts.new([-vx5gg,-vy5gg,-vz5gg])
                    ff24a = bm_3gg.verts.new([-vx6gg,-vy6gg,-vz6gg])
                    fg24a = bm_3gg.verts.new([-vx7gg,-vy7gg,-vz7gg])
                    fh24a = bm_3gg.verts.new([-vx8gg,-vy8gg,-vz8gg])
                    fi24a = bm_3gg.verts.new([-vx9gg,-vy9gg,-vz9gg])

                    fa24b = bm_3gh.verts.new([-vx1gh,-vy1gh,-vz1gh])
                    fb24b = bm_3gh.verts.new([-vx2gh,-vy2gh,-vz2gh])
                    fc24b = bm_3gh.verts.new([-vx3gh,-vy3gh,-vz3gh])
                    fd24b = bm_3gh.verts.new([-vx4gh,-vy4gh,-vz4gh])
                    fe24b = bm_3gh.verts.new([-vx5gh,-vy5gh,-vz5gh])
                    ff24b = bm_3gh.verts.new([-vx6gh,-vy6gh,-vz6gh])
                    fg24b = bm_3gh.verts.new([-vx7gh,-vy7gh,-vz7gh])
                    fh24b = bm_3gh.verts.new([-vx8gh,-vy8gh,-vz8gh])
                    fi24b = bm_3gh.verts.new([-vx9gh,-vy9gh,-vz9gh])

                    fa24ba = bm_3gha.verts.new([-vx1gha,-vy1gha,-vz1gha])
                    fb24ba = bm_3gha.verts.new([-vx2gha,-vy2gha,-vz2gha])
                    fc24ba = bm_3gha.verts.new([-vx3gha,-vy3gha,-vz3gha])
                    fd24ba = bm_3gha.verts.new([-vx4gha,-vy4gha,-vz4gha])
                    fe24ba = bm_3gha.verts.new([-vx5gha,-vy5gha,-vz5gha])
                    ff24ba = bm_3gha.verts.new([-vx6gha,-vy6gha,-vz6gha])
                    fg24ba = bm_3gha.verts.new([-vx7gha,-vy7gha,-vz7gha])
                    fh24ba = bm_3gha.verts.new([-vx8gha,-vy8gha,-vz8gha])
                    fi24ba = bm_3gha.verts.new([-vx9gha,-vy9gha,-vz9gha])

                    fa24bb = bm_3ghb.verts.new([-vx1ghb,-vy1ghb,-vz1ghb])
                    fb24bb = bm_3ghb.verts.new([-vx2ghb,-vy2ghb,-vz2ghb])
                    fc24bb = bm_3ghb.verts.new([-vx3ghb,-vy3ghb,-vz3ghb])
                    fd24bb = bm_3ghb.verts.new([-vx4ghb,-vy4ghb,-vz4ghb])
                    fe24bb = bm_3ghb.verts.new([-vx5ghb,-vy5ghb,-vz5ghb])
                    ff24bb = bm_3ghb.verts.new([-vx6ghb,-vy6ghb,-vz6ghb])
                    fg24bb = bm_3ghb.verts.new([-vx7ghb,-vy7ghb,-vz7ghb])
                    fh24bb = bm_3ghb.verts.new([-vx8ghb,-vy8ghb,-vz8ghb])
                    fi24bb = bm_3ghb.verts.new([-vx9ghb,-vy9ghb,-vz9ghb])

                    fa24bc = bm_3ghc.verts.new([-vx1ghc,-vy1ghc,-vz1ghc])
                    fb24bc = bm_3ghc.verts.new([-vx2ghc,-vy2ghc,-vz2ghc])
                    fc24bc = bm_3ghc.verts.new([-vx3ghc,-vy3ghc,-vz3ghc])
                    fd24bc = bm_3ghc.verts.new([-vx4ghc,-vy4ghc,-vz4ghc])
                    fe24bc = bm_3ghc.verts.new([-vx5ghc,-vy5ghc,-vz5ghc])
                    ff24bc = bm_3ghc.verts.new([-vx6ghc,-vy6ghc,-vz6ghc])
                    fg24bc = bm_3ghc.verts.new([-vx7ghc,-vy7ghc,-vz7ghc])
                    fh24bc = bm_3ghc.verts.new([-vx8ghc,-vy8ghc,-vz8ghc])
                    fi24bc = bm_3ghc.verts.new([-vx9ghc,-vy9ghc,-vz9ghc])

                    if type1ghc == 1:
                        if type2ghc == 1:
                            if type3ghc == 0:
                                if type4ghc == 1:
                                    if type5ghc == 1:
                                        if type6ghc == 0:
                                            if type7ghc == 0:
                                                if type8ghc == 0:
                                                    if type9ghc == 1:
                                                        bm_3ghc.faces.new([fa24bc,fb24bc,fc24bc])
                                                        bm_3ghc.faces.new([fd24bc,fe24bc,ff24bc])
                                                        bm_3ghc.faces.new([fe24bc,ff24bc,fg24bc])
                                                        bm_3ghc.faces.new([ff24bc,fg24bc,fh24bc])
                                                        bm_3ghc.faces.new([ff24bc,fh24bc,fi24bc])

                    if type1ghb == 1:
                        if type2ghb == 1:
                            if type3ghb == 0:
                                if type4ghb == 1:
                                    if type5ghb == 1:
                                        if type6ghb == 0:
                                            if type7ghb == 0:
                                                if type8ghb == 1:
                                                    if type9ghb == 1:
                                                        bm_3ghb.faces.new([fa24bb,fb24bb,fc24bb])
                                                        bm_3ghb.faces.new([fd24bb,fe24bb,ff24bb])
                                                        bm_3ghb.faces.new([fe24bb,ff24bb,fg24bb])
                                                        bm_3ghb.faces.new([ff24bb,fg24bb,fh24bb])
                                                        bm_3ghb.faces.new([ff24bb,fh24bb,fi24bb])

                    if type1gha == 1:
                        if type2gha == 1:
                            if type3gha == 0:
                                if type4gha == 1:
                                    if type5gha == 1:
                                        if type6gha == 0:
                                            if type7gha == 0:
                                                if type8gha == 0:
                                                    if type9gha == 0:
                                                        bm_3gha.faces.new([fa24ba,fb24ba,fc24ba])
                                                        bm_3gha.faces.new([fd24ba,fe24ba,ff24ba])
                                                        bm_3gha.faces.new([fe24ba,ff24ba,fg24ba])
                                                        bm_3gha.faces.new([ff24ba,fg24ba,fh24ba])
                                                        bm_3gha.faces.new([fg24ba,fh24ba,fi24ba])

                    if type1gh == 1:
                        if type2gh == 1:
                            if type3gh == 0:
                                if type4gh == 0:
                                    if type5gh == 1:
                                        if type6gh == 1:
                                            if type7gh == 0:
                                                if type8gh == 1:
                                                    if type9gh == 1:
                                                        bm_3gh.faces.new([fa24b,fb24b,fc24b])
                                                        bm_3gh.faces.new([fb24b,fc24b,fd24b])
                                                        bm_3gh.faces.new([fe24b,ff24b,fg24b])
                                                        bm_3gh.faces.new([ff24b,fh24b,fi24b])

                    if type1gg == 1:
                        if type2gg == 1:
                            if type3gg == 0:
                                if type4gg == 0:
                                    if type5gg == 0:
                                        if type6gg == 0:
                                            if type7gg == 0:
                                                if type8gg == 1:
                                                    if type9gg == 1:
                                                        bm_3gg.faces.new([fa24a,fb24a,fc24a])
                                                        bm_3gg.faces.new([fb24a,fc24a,fd24a])
                                                        bm_3gg.faces.new([fc24a,fd24a,fe24a])
                                                        bm_3gg.faces.new([fd24a,fe24a,ff24a])
                                                        bm_3gg.faces.new([fe24a,ff24a,fg24a])
                                                        bm_3gg.faces.new([fe24a,fg24a,fi24a])

                    if type1gf == 1:
                        if type2gf == 1:
                            if type3gf == 0:
                                if type4gf == 0:
                                    if type5gf == 0:
                                        if type6gf == 0:
                                            if type7gf == 1:
                                                if type8gf == 1:
                                                    if type9gf == 0:
                                                        bm_3gf.faces.new([fa24,fb24,fc24])
                                                        bm_3gf.faces.new([fb24,fc24,fd24])
                                                        bm_3gf.faces.new([fc24,fd24,fe24])
                                                        bm_3gf.faces.new([fd24,fe24,ff24])
                                                        bm_3gf.faces.new([fg24,fh24,fi24])

                    if type1ge == 1:
                        if type2ge == 1:
                            if type3ge == 0:
                                if type4ge == 1:
                                    if type5ge == 1:
                                        if type6ge == 0:
                                            if type7ge == 1:
                                                if type8ge == 1:
                                                    if type9ge == 0:
                                                        bm_3ge.faces.new([fa23,fb23,fc23])
                                                        bm_3ge.faces.new([fd23,fe23,ff23])
                                                        bm_3ge.faces.new([fg23,fh23,fi23])

                    if type1gd == 1:
                        if type2gd == 1:
                            if type3gd == 0:
                                if type4gd == 0:
                                    if type5gd == 0:
                                        if type6gd == 0:
                                            if type7gd == 0:
                                                if type8gd == 0:
                                                    if type9gd == 1:
                                                        bm_3gd.faces.new([fa22,fb22,fc22])
                                                        bm_3gd.faces.new([fb22,fc22,fd22])
                                                        bm_3gd.faces.new([fc22,fd22,fe22])
                                                        bm_3gd.faces.new([fd22,fe22,ff22])
                                                        bm_3gd.faces.new([fe22,ff22,fg22])
                                                        bm_3gd.faces.new([ff22,fg22,fh22])
                                                        bm_3gd.faces.new([ff22,fh22,fi22])

                    if type1gc == 1:
                        if type2gc == 1:
                            if type3gc == 0:
                                if type4gc == 0:
                                    if type5gc == 1:
                                        if type6gc == 1:
                                            if type7gc == 0:
                                                if type8gc == 0:
                                                    if type9gc == 0:
                                                        bm_3gc.faces.new([fa21,fb21,fc21])
                                                        bm_3gc.faces.new([fb21,fc21,fd21])
                                                        bm_3gc.faces.new([fe21,ff21,fg21])
                                                        bm_3gc.faces.new([ff21,fg21,fh21])
                                                        bm_3gc.faces.new([fg21,fh21,fi21])

                    if type1gb == 1:
                        if type2gb == 1:
                            if type3gb == 0:
                                if type4gb == 0:
                                    if type5gb == 1:
                                        if type6gb == 1:
                                            if type7gb == 0:
                                                if type8gb == 0:
                                                    if type9gb == 1:
                                                        bm_3gb.faces.new([fa20,fb20,fc20])
                                                        bm_3gb.faces.new([fb20,fc20,fd20])
                                                        bm_3gb.faces.new([fe20,ff20,fg20])
                                                        bm_3gb.faces.new([ff20,fg20,fh20])
                                                        bm_3gb.faces.new([ff20,fh20,fi20])

                    if type1ga == 1:
                        if type2ga == 1:
                            if type3ga == 0:
                                if type4ga == 0:
                                    if type5ga == 0:
                                        if type6ga == 1:
                                            if type7ga == 1:
                                                if type8ga == 0:
                                                    if type9ga == 0:
                                                        bm_3ga.faces.new([fa19,fb19,fc19])
                                                        bm_3ga.faces.new([fb19,fc19,fd19])
                                                        bm_3ga.faces.new([fc19,fd19,fe19])
                                                        bm_3ga.faces.new([ff19,fg19,fh19])
                                                        bm_3ga.faces.new([fg19,fh19,fi19])

                    if type1g == 1:
                        if type2g == 1:
                            if type3g == 0:
                                if type4g == 0:
                                    if type5g == 0:
                                        if type6g == 0:
                                            if type7g == 0:
                                                if type8g == 0:
                                                    if type9g == 0:
                                                        bm_3g.faces.new([fa18,fb18,fc18])
                                                        bm_3g.faces.new([fb18,fc18,fd18])
                                                        bm_3g.faces.new([fc18,fd18,fe18])
                                                        bm_3g.faces.new([fd18,fe18,ff18])
                                                        bm_3g.faces.new([fe18,ff18,fg18])
                                                        bm_3g.faces.new([ff18,fg18,fh18])
                                                        bm_3g.faces.new([fg18,fh18,fi18])
                
        
                    
            elif vertexCount == 10:
                for i in range(vertexCount//10):
                    vx1h = unpack("<f", f.read(4))[0]
                    vy1h = unpack("<f", f.read(4))[0]
                    vz1h = unpack("<f", f.read(4))[0]
                    vw1h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2h = unpack("<f", f.read(4))[0]
                    vy2h = unpack("<f", f.read(4))[0]
                    vz2h = unpack("<f", f.read(4))[0]
                    vw2h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3h = unpack("<f", f.read(4))[0]
                    vy3h = unpack("<f", f.read(4))[0]
                    vz3h = unpack("<f", f.read(4))[0]
                    vw3h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4h = unpack("<f", f.read(4))[0]
                    vy4h = unpack("<f", f.read(4))[0]
                    vz4h = unpack("<f", f.read(4))[0]
                    vw4h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5h = unpack("<f", f.read(4))[0]
                    vy5h = unpack("<f", f.read(4))[0]
                    vz5h = unpack("<f", f.read(4))[0]
                    vw5h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6h = unpack("<f", f.read(4))[0]
                    vy6h = unpack("<f", f.read(4))[0]
                    vz6h = unpack("<f", f.read(4))[0]
                    vw6h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7h = unpack("<f", f.read(4))[0]
                    vy7h = unpack("<f", f.read(4))[0]
                    vz7h = unpack("<f", f.read(4))[0]
                    vw7h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8h = unpack("<f", f.read(4))[0]
                    vy8h = unpack("<f", f.read(4))[0]
                    vz8h = unpack("<f", f.read(4))[0]
                    vw8h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9h = unpack("<f", f.read(4))[0]
                    vy9h = unpack("<f", f.read(4))[0]
                    vz9h = unpack("<f", f.read(4))[0]
                    vw9h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9h = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10h = unpack("<f", f.read(4))[0]
                    vy10h = unpack("<f", f.read(4))[0]
                    vz10h = unpack("<f", f.read(4))[0]
                    vw10h = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10h = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1ha = unpack("<f", f.read(4))[0]
                    vy1ha = unpack("<f", f.read(4))[0]
                    vz1ha = unpack("<f", f.read(4))[0]
                    vw1ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ha = unpack("<f", f.read(4))[0]
                    vy2ha = unpack("<f", f.read(4))[0]
                    vz2ha = unpack("<f", f.read(4))[0]
                    vw2ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ha = unpack("<f", f.read(4))[0]
                    vy3ha = unpack("<f", f.read(4))[0]
                    vz3ha = unpack("<f", f.read(4))[0]
                    vw3ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ha = unpack("<f", f.read(4))[0]
                    vy4ha = unpack("<f", f.read(4))[0]
                    vz4ha = unpack("<f", f.read(4))[0]
                    vw4ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ha = unpack("<f", f.read(4))[0]
                    vy5ha = unpack("<f", f.read(4))[0]
                    vz5ha = unpack("<f", f.read(4))[0]
                    vw5ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ha = unpack("<f", f.read(4))[0]
                    vy6ha = unpack("<f", f.read(4))[0]
                    vz6ha = unpack("<f", f.read(4))[0]
                    vw6ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ha = unpack("<f", f.read(4))[0]
                    vy7ha = unpack("<f", f.read(4))[0]
                    vz7ha = unpack("<f", f.read(4))[0]
                    vw7ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ha = unpack("<f", f.read(4))[0]
                    vy8ha = unpack("<f", f.read(4))[0]
                    vz8ha = unpack("<f", f.read(4))[0]
                    vw8ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ha = unpack("<f", f.read(4))[0]
                    vy9ha = unpack("<f", f.read(4))[0]
                    vz9ha = unpack("<f", f.read(4))[0]
                    vw9ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ha = unpack("<f", f.read(4))[0]
                    vy10ha = unpack("<f", f.read(4))[0]
                    vz10ha = unpack("<f", f.read(4))[0]
                    vw10ha = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ha = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1hb = unpack("<f", f.read(4))[0]
                    vy1hb = unpack("<f", f.read(4))[0]
                    vz1hb = unpack("<f", f.read(4))[0]
                    vw1hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2hb = unpack("<f", f.read(4))[0]
                    vy2hb = unpack("<f", f.read(4))[0]
                    vz2hb = unpack("<f", f.read(4))[0]
                    vw2hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3hb = unpack("<f", f.read(4))[0]
                    vy3hb = unpack("<f", f.read(4))[0]
                    vz3hb = unpack("<f", f.read(4))[0]
                    vw3hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4hb = unpack("<f", f.read(4))[0]
                    vy4hb = unpack("<f", f.read(4))[0]
                    vz4hb = unpack("<f", f.read(4))[0]
                    vw4hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5hb = unpack("<f", f.read(4))[0]
                    vy5hb = unpack("<f", f.read(4))[0]
                    vz5hb = unpack("<f", f.read(4))[0]
                    vw5hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6hb = unpack("<f", f.read(4))[0]
                    vy6hb = unpack("<f", f.read(4))[0]
                    vz6hb = unpack("<f", f.read(4))[0]
                    vw6hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7hb = unpack("<f", f.read(4))[0]
                    vy7hb = unpack("<f", f.read(4))[0]
                    vz7hb = unpack("<f", f.read(4))[0]
                    vw7hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8hb = unpack("<f", f.read(4))[0]
                    vy8hb = unpack("<f", f.read(4))[0]
                    vz8hb = unpack("<f", f.read(4))[0]
                    vw8hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9hb = unpack("<f", f.read(4))[0]
                    vy9hb = unpack("<f", f.read(4))[0]
                    vz9hb = unpack("<f", f.read(4))[0]
                    vw9hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10hb = unpack("<f", f.read(4))[0]
                    vy10hb = unpack("<f", f.read(4))[0]
                    vz10hb = unpack("<f", f.read(4))[0]
                    vw10hb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10hb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1hc = unpack("<f", f.read(4))[0]
                    vy1hc = unpack("<f", f.read(4))[0]
                    vz1hc = unpack("<f", f.read(4))[0]
                    vw1hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2hc = unpack("<f", f.read(4))[0]
                    vy2hc = unpack("<f", f.read(4))[0]
                    vz2hc = unpack("<f", f.read(4))[0]
                    vw2hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3hc = unpack("<f", f.read(4))[0]
                    vy3hc = unpack("<f", f.read(4))[0]
                    vz3hc = unpack("<f", f.read(4))[0]
                    vw3hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4hc = unpack("<f", f.read(4))[0]
                    vy4hc = unpack("<f", f.read(4))[0]
                    vz4hc = unpack("<f", f.read(4))[0]
                    vw4hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5hc = unpack("<f", f.read(4))[0]
                    vy5hc = unpack("<f", f.read(4))[0]
                    vz5hc = unpack("<f", f.read(4))[0]
                    vw5hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6hc = unpack("<f", f.read(4))[0]
                    vy6hc = unpack("<f", f.read(4))[0]
                    vz6hc = unpack("<f", f.read(4))[0]
                    vw6hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7hc = unpack("<f", f.read(4))[0]
                    vy7hc = unpack("<f", f.read(4))[0]
                    vz7hc = unpack("<f", f.read(4))[0]
                    vw7hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8hc = unpack("<f", f.read(4))[0]
                    vy8hc = unpack("<f", f.read(4))[0]
                    vz8hc = unpack("<f", f.read(4))[0]
                    vw8hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9hc = unpack("<f", f.read(4))[0]
                    vy9hc = unpack("<f", f.read(4))[0]
                    vz9hc = unpack("<f", f.read(4))[0]
                    vw9hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10hc = unpack("<f", f.read(4))[0]
                    vy10hc = unpack("<f", f.read(4))[0]
                    vz10hc = unpack("<f", f.read(4))[0]
                    vw10hc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10hc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1hd = unpack("<f", f.read(4))[0]
                    vy1hd = unpack("<f", f.read(4))[0]
                    vz1hd = unpack("<f", f.read(4))[0]
                    vw1hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2hd = unpack("<f", f.read(4))[0]
                    vy2hd = unpack("<f", f.read(4))[0]
                    vz2hd = unpack("<f", f.read(4))[0]
                    vw2hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3hd = unpack("<f", f.read(4))[0]
                    vy3hd = unpack("<f", f.read(4))[0]
                    vz3hd = unpack("<f", f.read(4))[0]
                    vw3hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4hd = unpack("<f", f.read(4))[0]
                    vy4hd = unpack("<f", f.read(4))[0]
                    vz4hd = unpack("<f", f.read(4))[0]
                    vw4hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5hd = unpack("<f", f.read(4))[0]
                    vy5hd = unpack("<f", f.read(4))[0]
                    vz5hd = unpack("<f", f.read(4))[0]
                    vw5hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6hd = unpack("<f", f.read(4))[0]
                    vy6hd = unpack("<f", f.read(4))[0]
                    vz6hd = unpack("<f", f.read(4))[0]
                    vw6hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7hd = unpack("<f", f.read(4))[0]
                    vy7hd = unpack("<f", f.read(4))[0]
                    vz7hd = unpack("<f", f.read(4))[0]
                    vw7hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8hd = unpack("<f", f.read(4))[0]
                    vy8hd = unpack("<f", f.read(4))[0]
                    vz8hd = unpack("<f", f.read(4))[0]
                    vw8hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9hd = unpack("<f", f.read(4))[0]
                    vy9hd = unpack("<f", f.read(4))[0]
                    vz9hd = unpack("<f", f.read(4))[0]
                    vw9hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10hd = unpack("<f", f.read(4))[0]
                    vy10hd = unpack("<f", f.read(4))[0]
                    vz10hd = unpack("<f", f.read(4))[0]
                    vw10hd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10hd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1he = unpack("<f", f.read(4))[0]
                    vy1he = unpack("<f", f.read(4))[0]
                    vz1he = unpack("<f", f.read(4))[0]
                    vw1he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2he = unpack("<f", f.read(4))[0]
                    vy2he = unpack("<f", f.read(4))[0]
                    vz2he = unpack("<f", f.read(4))[0]
                    vw2he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3he = unpack("<f", f.read(4))[0]
                    vy3he = unpack("<f", f.read(4))[0]
                    vz3he = unpack("<f", f.read(4))[0]
                    vw3he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4he = unpack("<f", f.read(4))[0]
                    vy4he = unpack("<f", f.read(4))[0]
                    vz4he = unpack("<f", f.read(4))[0]
                    vw4he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5he = unpack("<f", f.read(4))[0]
                    vy5he = unpack("<f", f.read(4))[0]
                    vz5he = unpack("<f", f.read(4))[0]
                    vw5he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6he = unpack("<f", f.read(4))[0]
                    vy6he = unpack("<f", f.read(4))[0]
                    vz6he = unpack("<f", f.read(4))[0]
                    vw6he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7he = unpack("<f", f.read(4))[0]
                    vy7he = unpack("<f", f.read(4))[0]
                    vz7he = unpack("<f", f.read(4))[0]
                    vw7he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8he = unpack("<f", f.read(4))[0]
                    vy8he = unpack("<f", f.read(4))[0]
                    vz8he = unpack("<f", f.read(4))[0]
                    vw8he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9he = unpack("<f", f.read(4))[0]
                    vy9he = unpack("<f", f.read(4))[0]
                    vz9he = unpack("<f", f.read(4))[0]
                    vw9he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9he = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10he = unpack("<f", f.read(4))[0]
                    vy10he = unpack("<f", f.read(4))[0]
                    vz10he = unpack("<f", f.read(4))[0]
                    vw10he = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10he = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1hf = unpack("<f", f.read(4))[0]
                    vy1hf = unpack("<f", f.read(4))[0]
                    vz1hf = unpack("<f", f.read(4))[0]
                    vw1hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2hf = unpack("<f", f.read(4))[0]
                    vy2hf = unpack("<f", f.read(4))[0]
                    vz2hf = unpack("<f", f.read(4))[0]
                    vw2hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3hf = unpack("<f", f.read(4))[0]
                    vy3hf = unpack("<f", f.read(4))[0]
                    vz3hf = unpack("<f", f.read(4))[0]
                    vw3hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4hf = unpack("<f", f.read(4))[0]
                    vy4hf = unpack("<f", f.read(4))[0]
                    vz4hf = unpack("<f", f.read(4))[0]
                    vw4hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5hf = unpack("<f", f.read(4))[0]
                    vy5hf = unpack("<f", f.read(4))[0]
                    vz5hf = unpack("<f", f.read(4))[0]
                    vw5hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6hf = unpack("<f", f.read(4))[0]
                    vy6hf = unpack("<f", f.read(4))[0]
                    vz6hf = unpack("<f", f.read(4))[0]
                    vw6hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7hf = unpack("<f", f.read(4))[0]
                    vy7hf = unpack("<f", f.read(4))[0]
                    vz7hf = unpack("<f", f.read(4))[0]
                    vw7hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8hf = unpack("<f", f.read(4))[0]
                    vy8hf = unpack("<f", f.read(4))[0]
                    vz8hf = unpack("<f", f.read(4))[0]
                    vw8hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9hf = unpack("<f", f.read(4))[0]
                    vy9hf = unpack("<f", f.read(4))[0]
                    vz9hf = unpack("<f", f.read(4))[0]
                    vw9hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10hf = unpack("<f", f.read(4))[0]
                    vy10hf = unpack("<f", f.read(4))[0]
                    vz10hf = unpack("<f", f.read(4))[0]
                    vw10hf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10hf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1hg = unpack("<f", f.read(4))[0]
                    vy1hg = unpack("<f", f.read(4))[0]
                    vz1hg = unpack("<f", f.read(4))[0]
                    vw1hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2hg = unpack("<f", f.read(4))[0]
                    vy2hg = unpack("<f", f.read(4))[0]
                    vz2hg = unpack("<f", f.read(4))[0]
                    vw2hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3hg = unpack("<f", f.read(4))[0]
                    vy3hg = unpack("<f", f.read(4))[0]
                    vz3hg = unpack("<f", f.read(4))[0]
                    vw3hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4hg = unpack("<f", f.read(4))[0]
                    vy4hg = unpack("<f", f.read(4))[0]
                    vz4hg = unpack("<f", f.read(4))[0]
                    vw4hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5hg = unpack("<f", f.read(4))[0]
                    vy5hg = unpack("<f", f.read(4))[0]
                    vz5hg = unpack("<f", f.read(4))[0]
                    vw5hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6hg = unpack("<f", f.read(4))[0]
                    vy6hg = unpack("<f", f.read(4))[0]
                    vz6hg = unpack("<f", f.read(4))[0]
                    vw6hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7hg = unpack("<f", f.read(4))[0]
                    vy7hg = unpack("<f", f.read(4))[0]
                    vz7hg = unpack("<f", f.read(4))[0]
                    vw7hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8hg = unpack("<f", f.read(4))[0]
                    vy8hg = unpack("<f", f.read(4))[0]
                    vz8hg = unpack("<f", f.read(4))[0]
                    vw8hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9hg = unpack("<f", f.read(4))[0]
                    vy9hg = unpack("<f", f.read(4))[0]
                    vz9hg = unpack("<f", f.read(4))[0]
                    vw9hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10hg = unpack("<f", f.read(4))[0]
                    vy10hg = unpack("<f", f.read(4))[0]
                    vz10hg = unpack("<f", f.read(4))[0]
                    vw10hg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10hg = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-320,1)

                    vx1hh = unpack("<f", f.read(4))[0]
                    vy1hh = unpack("<f", f.read(4))[0]
                    vz1hh = unpack("<f", f.read(4))[0]
                    vw1hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2hh = unpack("<f", f.read(4))[0]
                    vy2hh = unpack("<f", f.read(4))[0]
                    vz2hh = unpack("<f", f.read(4))[0]
                    vw2hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3hh = unpack("<f", f.read(4))[0]
                    vy3hh = unpack("<f", f.read(4))[0]
                    vz3hh = unpack("<f", f.read(4))[0]
                    vw3hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4hh = unpack("<f", f.read(4))[0]
                    vy4hh = unpack("<f", f.read(4))[0]
                    vz4hh = unpack("<f", f.read(4))[0]
                    vw4hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5hh = unpack("<f", f.read(4))[0]
                    vy5hh = unpack("<f", f.read(4))[0]
                    vz5hh = unpack("<f", f.read(4))[0]
                    vw5hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6hh = unpack("<f", f.read(4))[0]
                    vy6hh = unpack("<f", f.read(4))[0]
                    vz6hh = unpack("<f", f.read(4))[0]
                    vw6hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7hh = unpack("<f", f.read(4))[0]
                    vy7hh = unpack("<f", f.read(4))[0]
                    vz7hh = unpack("<f", f.read(4))[0]
                    vw7hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8hh = unpack("<f", f.read(4))[0]
                    vy8hh = unpack("<f", f.read(4))[0]
                    vz8hh = unpack("<f", f.read(4))[0]
                    vw8hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9hh = unpack("<f", f.read(4))[0]
                    vy9hh = unpack("<f", f.read(4))[0]
                    vz9hh = unpack("<f", f.read(4))[0]
                    vw9hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10hh = unpack("<f", f.read(4))[0]
                    vy10hh = unpack("<f", f.read(4))[0]
                    vz10hh = unpack("<f", f.read(4))[0]
                    vw10hh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10hh = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa25 = bm_3h.verts.new([-vx1h,-vy1h,-vz1h])
                    fb25 = bm_3h.verts.new([-vx2h,-vy2h,-vz2h])
                    fc25 = bm_3h.verts.new([-vx3h,-vy3h,-vz3h])
                    fd25 = bm_3h.verts.new([-vx4h,-vy4h,-vz4h])
                    fe25 = bm_3h.verts.new([-vx5h,-vy5h,-vz5h])
                    ff25 = bm_3h.verts.new([-vx6h,-vy6h,-vz6h])
                    fg25 = bm_3h.verts.new([-vx7h,-vy7h,-vz7h])
                    fh25 = bm_3h.verts.new([-vx8h,-vy8h,-vz8h])
                    fi25 = bm_3h.verts.new([-vx9h,-vy9h,-vz9h])
                    fj25 = bm_3h.verts.new([-vx10h,-vy10h,-vz10h])

                    fa26 = bm_3ha.verts.new([-vx1ha,-vy1ha,-vz1ha])
                    fb26 = bm_3ha.verts.new([-vx2ha,-vy2ha,-vz2ha])
                    fc26 = bm_3ha.verts.new([-vx3ha,-vy3ha,-vz3ha])
                    fd26 = bm_3ha.verts.new([-vx4ha,-vy4ha,-vz4ha])
                    fe26 = bm_3ha.verts.new([-vx5ha,-vy5ha,-vz5ha])
                    ff26 = bm_3ha.verts.new([-vx6ha,-vy6ha,-vz6ha])
                    fg26 = bm_3ha.verts.new([-vx7ha,-vy7ha,-vz7ha])
                    fh26 = bm_3ha.verts.new([-vx8ha,-vy8ha,-vz8ha])
                    fi26 = bm_3ha.verts.new([-vx9ha,-vy9ha,-vz9ha])
                    fj26 = bm_3ha.verts.new([-vx10ha,-vy10ha,-vz10ha])

                    fa27 = bm_3hb.verts.new([-vx1hb,-vy1hb,-vz1hb])
                    fb27 = bm_3hb.verts.new([-vx2hb,-vy2hb,-vz2hb])
                    fc27 = bm_3hb.verts.new([-vx3hb,-vy3hb,-vz3hb])
                    fd27 = bm_3hb.verts.new([-vx4hb,-vy4hb,-vz4hb])
                    fe27 = bm_3hb.verts.new([-vx5hb,-vy5hb,-vz5hb])
                    ff27 = bm_3hb.verts.new([-vx6hb,-vy6hb,-vz6hb])
                    fg27 = bm_3hb.verts.new([-vx7hb,-vy7hb,-vz7hb])
                    fh27 = bm_3hb.verts.new([-vx8hb,-vy8hb,-vz8hb])
                    fi27 = bm_3hb.verts.new([-vx9hb,-vy9hb,-vz9hb])
                    fj27 = bm_3hb.verts.new([-vx10hb,-vy10hb,-vz10hb])

                    fa28 = bm_3hc.verts.new([-vx1hc,-vy1hc,-vz1hc])
                    fb28 = bm_3hc.verts.new([-vx2hc,-vy2hc,-vz2hc])
                    fc28 = bm_3hc.verts.new([-vx3hc,-vy3hc,-vz3hc])
                    fd28 = bm_3hc.verts.new([-vx4hc,-vy4hc,-vz4hc])
                    fe28 = bm_3hc.verts.new([-vx5hc,-vy5hc,-vz5hc])
                    ff28 = bm_3hc.verts.new([-vx6hc,-vy6hc,-vz6hc])
                    fg28 = bm_3hc.verts.new([-vx7hc,-vy7hc,-vz7hc])
                    fh28 = bm_3hc.verts.new([-vx8hc,-vy8hc,-vz8hc])
                    fi28 = bm_3hc.verts.new([-vx9hc,-vy9hc,-vz9hc])
                    fj28 = bm_3hc.verts.new([-vx10hc,-vy10hc,-vz10hc])

                    fa29 = bm_3hd.verts.new([-vx1hd,-vy1hd,-vz1hd])
                    fb29 = bm_3hd.verts.new([-vx2hd,-vy2hd,-vz2hd])
                    fc29 = bm_3hd.verts.new([-vx3hd,-vy3hd,-vz3hd])
                    fd29 = bm_3hd.verts.new([-vx4hd,-vy4hd,-vz4hd])
                    fe29 = bm_3hd.verts.new([-vx5hd,-vy5hd,-vz5hd])
                    ff29 = bm_3hd.verts.new([-vx6hd,-vy6hd,-vz6hd])
                    fg29 = bm_3hd.verts.new([-vx7hd,-vy7hd,-vz7hd])
                    fh29 = bm_3hd.verts.new([-vx8hd,-vy8hd,-vz8hd])
                    fi29 = bm_3hd.verts.new([-vx9hd,-vy9hd,-vz9hd])
                    fj29 = bm_3hd.verts.new([-vx10hd,-vy10hd,-vz10hd])

                    fa30 = bm_3he.verts.new([-vx1he,-vy1he,-vz1he])
                    fb30 = bm_3he.verts.new([-vx2he,-vy2he,-vz2he])
                    fc30 = bm_3he.verts.new([-vx3he,-vy3he,-vz3he])
                    fd30 = bm_3he.verts.new([-vx4he,-vy4he,-vz4he])
                    fe30 = bm_3he.verts.new([-vx5he,-vy5he,-vz5he])
                    ff30 = bm_3he.verts.new([-vx6he,-vy6he,-vz6he])
                    fg30 = bm_3he.verts.new([-vx7he,-vy7he,-vz7he])
                    fh30 = bm_3he.verts.new([-vx8he,-vy8he,-vz8he])
                    fi30 = bm_3he.verts.new([-vx9he,-vy9he,-vz9he])
                    fj30 = bm_3he.verts.new([-vx10he,-vy10he,-vz10he])

                    fa31 = bm_3hf.verts.new([-vx1hf,-vy1hf,-vz1hf])
                    fb31 = bm_3hf.verts.new([-vx2hf,-vy2hf,-vz2hf])
                    fc31 = bm_3hf.verts.new([-vx3hf,-vy3hf,-vz3hf])
                    fd31 = bm_3hf.verts.new([-vx4hf,-vy4hf,-vz4hf])
                    fe31 = bm_3hf.verts.new([-vx5hf,-vy5hf,-vz5hf])
                    ff31 = bm_3hf.verts.new([-vx6hf,-vy6hf,-vz6hf])
                    fg31 = bm_3hf.verts.new([-vx7hf,-vy7hf,-vz7hf])
                    fh31 = bm_3hf.verts.new([-vx8hf,-vy8hf,-vz8hf])
                    fi31 = bm_3hf.verts.new([-vx9hf,-vy9hf,-vz9hf])
                    fj31 = bm_3hf.verts.new([-vx10hf,-vy10hf,-vz10hf])

                    fa32 = bm_3hg.verts.new([-vx1hg,-vy1hg,-vz1hg])
                    fb32 = bm_3hg.verts.new([-vx2hg,-vy2hg,-vz2hg])
                    fc32 = bm_3hg.verts.new([-vx3hg,-vy3hg,-vz3hg])
                    fd32 = bm_3hg.verts.new([-vx4hg,-vy4hg,-vz4hg])
                    fe32 = bm_3hg.verts.new([-vx5hg,-vy5hg,-vz5hg])
                    ff32 = bm_3hg.verts.new([-vx6hg,-vy6hg,-vz6hg])
                    fg32 = bm_3hg.verts.new([-vx7hg,-vy7hg,-vz7hg])
                    fh32 = bm_3hg.verts.new([-vx8hg,-vy8hg,-vz8hg])
                    fi32 = bm_3hg.verts.new([-vx9hg,-vy9hg,-vz9hg])
                    fj32 = bm_3hg.verts.new([-vx10hg,-vy10hg,-vz10hg])

                    fa33 = bm_3hh.verts.new([-vx1hh,-vy1hh,-vz1hh])
                    fb33 = bm_3hh.verts.new([-vx2hh,-vy2hh,-vz2hh])
                    fc33 = bm_3hh.verts.new([-vx3hh,-vy3hh,-vz3hh])
                    fd33 = bm_3hh.verts.new([-vx4hh,-vy4hh,-vz4hh])
                    fe33 = bm_3hh.verts.new([-vx5hh,-vy5hh,-vz5hh])
                    ff33 = bm_3hh.verts.new([-vx6hh,-vy6hh,-vz6hh])
                    fg33 = bm_3hh.verts.new([-vx7hh,-vy7hh,-vz7hh])
                    fh33 = bm_3hh.verts.new([-vx8hh,-vy8hh,-vz8hh])
                    fi33 = bm_3hh.verts.new([-vx9hh,-vy9hh,-vz9hh])
                    fj33 = bm_3hh.verts.new([-vx10hh,-vy10hh,-vz10hh])
                    

                    if type1hh == 1:
                        if type2hh == 1:
                            if type3hh == 0:
                                if type4hh == 0:
                                    if type5hh == 0:
                                        if type6hh == 1:
                                            if type7hh == 1:
                                                if type8hh == 0:
                                                    if type9hh == 0:
                                                        if type10hh == 0:
                                                            bm_3hh.faces.new([fa33,fb33,fc33])
                                                            bm_3hh.faces.new([fb33,fc33,fd33])
                                                            bm_3hh.faces.new([fc33,fd33,fe33])
                                                            bm_3hh.faces.new([ff33,fg33,fh33])
                                                            bm_3hh.faces.new([fg33,fh33,fi33])
                                                            bm_3hh.faces.new([fh33,fi33,fj33])

                    if type1hg == 1:
                        if type2hg == 1:
                            if type3hg == 0:
                                if type4hg == 0:
                                    if type5hg == 0:
                                        if type6hg == 0:
                                            if type7hg == 0:
                                                if type8hg == 1:
                                                    if type9hg == 1:
                                                        if type10hg == 0:
                                                            bm_3hg.faces.new([fa32,fb32,fc32])
                                                            bm_3hg.faces.new([fb32,fc32,fd32])
                                                            bm_3hg.faces.new([fc32,fd32,fe32])
                                                            bm_3hg.faces.new([fd32,fe32,ff32])
                                                            bm_3hg.faces.new([fe32,ff32,fg32])
                                                            bm_3hg.faces.new([fh32,fi32,fj32])

                    if type1hf == 1:
                        if type2hf == 1:
                            if type3hf == 0:
                                if type4hf == 0:
                                    if type5hf == 1:
                                        if type6hf == 1:
                                            if type7hf == 0:
                                                if type8hf == 0:
                                                    if type9hf == 1:
                                                        if type10hf == 1:
                                                            bm_3hf.faces.new([fa31,fb31,fc31])
                                                            bm_3hf.faces.new([fb31,fc31,fd31])
                                                            bm_3hf.faces.new([fe31,ff31,fg31])
                                                            bm_3hf.faces.new([ff31,fg31,fh31])
                                                            bm_3hf.faces.new([ff31,fh31,fi31])
                                                            bm_3hf.faces.new([fh31,fi31,fj31])

                    if type1he == 1:
                        if type2he == 1:
                            if type3he == 0:
                                if type4he == 0:
                                    if type5he == 1:
                                        if type6he == 1:
                                            if type7he == 0:
                                                if type8he == 0:
                                                    if type9he == 0:
                                                        if type10he == 0:
                                                            bm_3he.faces.new([fa30,fb30,fc30])
                                                            bm_3he.faces.new([fb30,fc30,fd30])
                                                            bm_3he.faces.new([fe30,ff30,fg30])
                                                            bm_3he.faces.new([ff30,fg30,fh30])
                                                            bm_3he.faces.new([fg30,fh30,fi30])
                                                            bm_3he.faces.new([fh30,fi30,fj30])

                    if type1hd == 1:
                        if type2hd == 1:
                            if type3hd == 0:
                                if type4hd == 0:
                                    if type5hd == 0:
                                        if type6hd == 0:
                                            if type7hd == 0:
                                                if type8hd == 0:
                                                    if type9hd == 1:
                                                        if type10hd == 1:
                                                            bm_3hd.faces.new([fa29,fb29,fc29])
                                                            bm_3hd.faces.new([fb29,fc29,fd29])
                                                            bm_3hd.faces.new([fc29,fd29,fe29])
                                                            bm_3hd.faces.new([fd29,fe29,ff29])
                                                            bm_3hd.faces.new([fe29,ff29,fg29])
                                                            bm_3hd.faces.new([ff29,fg29,fh29])
                                                            bm_3hd.faces.new([ff29,fh29,fi29])
                                                            bm_3hd.faces.new([fh29,fi29,fj29])

                    if type1hc == 1:
                        if type2hc == 1:
                            if type3hc == 0:
                                if type4hc == 0:
                                    if type5hc == 0:
                                        if type6hc == 0:
                                            if type7hc == 1:
                                                if type8hc == 1:
                                                    if type9hc == 0:
                                                        if type10hc == 0:
                                                            bm_3hc.faces.new([fa28,fb28,fc28])
                                                            bm_3hc.faces.new([fb28,fc28,fd28])
                                                            bm_3hc.faces.new([fc28,fd28,fe28])
                                                            bm_3hc.faces.new([fd28,fe28,ff28])
                                                            bm_3hc.faces.new([fg28,fh28,fi28])
                                                            bm_3hc.faces.new([fh28,fi28,fj28])

                    if type1hb == 1:
                        if type2hb == 1:
                            if type3hb == 0:
                                if type4hb == 0:
                                    if type5hb == 0:
                                        if type6hb == 0:
                                            if type7hb == 0:
                                                if type8hb == 0:
                                                    if type9hb == 0:
                                                        if type10hb == 0:
                                                            bm_3hb.faces.new([fa27,fb27,fc27])
                                                            bm_3hb.faces.new([fb27,fc27,fd27])
                                                            bm_3hb.faces.new([fc27,fd27,fe27])
                                                            bm_3hb.faces.new([fd27,fe27,ff27])
                                                            bm_3hb.faces.new([fe27,ff27,fg27])
                                                            bm_3hb.faces.new([ff27,fg27,fh27])
                                                            bm_3hb.faces.new([fg27,fh27,fi27])
                                                            bm_3hb.faces.new([fh27,fi27,fj27])

                    

                    if type1ha == 1:
                        if type2ha == 1:
                            if type3ha == 0:
                                if type4ha == 0:
                                    if type5ha == 0:
                                        if type6ha == 1:
                                            if type7ha == 1:
                                                if type8ha == 0:
                                                    if type9ha == 0:
                                                        if type10ha == 1:
                                                            bm_3ha.faces.new([fa26,fb26,fc26])
                                                            bm_3ha.faces.new([fb26,fc26,fd26])
                                                            bm_3ha.faces.new([fc26,fd26,fe26])
                                                            bm_3ha.faces.new([ff26,fg26,fh26])
                                                            bm_3ha.faces.new([fg26,fh26,fi26])
                                                            bm_3ha.faces.new([fg26,fi26,fj26])

                    if type1h == 1:
                        if type2h == 1:
                            if type3h == 0:
                                if type4h == 0:
                                    if type5h == 0:
                                        if type6h == 0:
                                            if type7h == 0:
                                                if type8h == 0:
                                                    if type9h == 0:
                                                        if type10h == 1:
                                                            bm_3h.faces.new([fa25,fb25,fc25])
                                                            bm_3h.faces.new([fb25,fc25,fd25])
                                                            bm_3h.faces.new([fc25,fd25,fe25])
                                                            bm_3h.faces.new([fd25,fe25,ff25])
                                                            bm_3h.faces.new([fe25,ff25,fg25])
                                                            bm_3h.faces.new([ff25,fg25,fh25])
                                                            bm_3h.faces.new([fg25,fh25,fi25])
                                                            bm_3h.faces.new([fg25,fi25,fj25])

            elif vertexCount == 11:
                for i in range(vertexCount//11):
                    vx1i = unpack("<f", f.read(4))[0]
                    vy1i = unpack("<f", f.read(4))[0]
                    vz1i = unpack("<f", f.read(4))[0]
                    vw1i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2i = unpack("<f", f.read(4))[0]
                    vy2i = unpack("<f", f.read(4))[0]
                    vz2i = unpack("<f", f.read(4))[0]
                    vw2i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3i = unpack("<f", f.read(4))[0]
                    vy3i = unpack("<f", f.read(4))[0]
                    vz3i = unpack("<f", f.read(4))[0]
                    vw3i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4i = unpack("<f", f.read(4))[0]
                    vy4i = unpack("<f", f.read(4))[0]
                    vz4i = unpack("<f", f.read(4))[0]
                    vw4i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5i = unpack("<f", f.read(4))[0]
                    vy5i = unpack("<f", f.read(4))[0]
                    vz5i = unpack("<f", f.read(4))[0]
                    vw5i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6i = unpack("<f", f.read(4))[0]
                    vy6i = unpack("<f", f.read(4))[0]
                    vz6i = unpack("<f", f.read(4))[0]
                    vw6i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7i = unpack("<f", f.read(4))[0]
                    vy7i = unpack("<f", f.read(4))[0]
                    vz7i = unpack("<f", f.read(4))[0]
                    vw7i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8i = unpack("<f", f.read(4))[0]
                    vy8i = unpack("<f", f.read(4))[0]
                    vz8i = unpack("<f", f.read(4))[0]
                    vw8i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9i = unpack("<f", f.read(4))[0]
                    vy9i = unpack("<f", f.read(4))[0]
                    vz9i = unpack("<f", f.read(4))[0]
                    vw9i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10i = unpack("<f", f.read(4))[0]
                    vy10i = unpack("<f", f.read(4))[0]
                    vz10i = unpack("<f", f.read(4))[0]
                    vw10i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10i = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11i = unpack("<f", f.read(4))[0]
                    vy11i = unpack("<f", f.read(4))[0]
                    vz11i = unpack("<f", f.read(4))[0]
                    vw11i = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11i = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1ia = unpack("<f", f.read(4))[0]
                    vy1ia = unpack("<f", f.read(4))[0]
                    vz1ia = unpack("<f", f.read(4))[0]
                    vw1ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ia = unpack("<f", f.read(4))[0]
                    vy2ia = unpack("<f", f.read(4))[0]
                    vz2ia = unpack("<f", f.read(4))[0]
                    vw2ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ia = unpack("<f", f.read(4))[0]
                    vy3ia = unpack("<f", f.read(4))[0]
                    vz3ia = unpack("<f", f.read(4))[0]
                    vw3ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ia = unpack("<f", f.read(4))[0]
                    vy4ia = unpack("<f", f.read(4))[0]
                    vz4ia = unpack("<f", f.read(4))[0]
                    vw4ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ia = unpack("<f", f.read(4))[0]
                    vy5ia = unpack("<f", f.read(4))[0]
                    vz5ia = unpack("<f", f.read(4))[0]
                    vw5ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ia = unpack("<f", f.read(4))[0]
                    vy6ia = unpack("<f", f.read(4))[0]
                    vz6ia = unpack("<f", f.read(4))[0]
                    vw6ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ia = unpack("<f", f.read(4))[0]
                    vy7ia = unpack("<f", f.read(4))[0]
                    vz7ia = unpack("<f", f.read(4))[0]
                    vw7ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ia = unpack("<f", f.read(4))[0]
                    vy8ia = unpack("<f", f.read(4))[0]
                    vz8ia = unpack("<f", f.read(4))[0]
                    vw8ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ia = unpack("<f", f.read(4))[0]
                    vy9ia = unpack("<f", f.read(4))[0]
                    vz9ia = unpack("<f", f.read(4))[0]
                    vw9ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ia = unpack("<f", f.read(4))[0]
                    vy10ia = unpack("<f", f.read(4))[0]
                    vz10ia = unpack("<f", f.read(4))[0]
                    vw10ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ia = unpack("<f", f.read(4))[0]
                    vy11ia = unpack("<f", f.read(4))[0]
                    vz11ia = unpack("<f", f.read(4))[0]
                    vw11ia = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ia = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1ib = unpack("<f", f.read(4))[0]
                    vy1ib = unpack("<f", f.read(4))[0]
                    vz1ib = unpack("<f", f.read(4))[0]
                    vw1ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ib = unpack("<f", f.read(4))[0]
                    vy2ib = unpack("<f", f.read(4))[0]
                    vz2ib = unpack("<f", f.read(4))[0]
                    vw2ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ib = unpack("<f", f.read(4))[0]
                    vy3ib = unpack("<f", f.read(4))[0]
                    vz3ib = unpack("<f", f.read(4))[0]
                    vw3ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ib = unpack("<f", f.read(4))[0]
                    vy4ib = unpack("<f", f.read(4))[0]
                    vz4ib = unpack("<f", f.read(4))[0]
                    vw4ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ib = unpack("<f", f.read(4))[0]
                    vy5ib = unpack("<f", f.read(4))[0]
                    vz5ib = unpack("<f", f.read(4))[0]
                    vw5ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ib = unpack("<f", f.read(4))[0]
                    vy6ib = unpack("<f", f.read(4))[0]
                    vz6ib = unpack("<f", f.read(4))[0]
                    vw6ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ib = unpack("<f", f.read(4))[0]
                    vy7ib = unpack("<f", f.read(4))[0]
                    vz7ib = unpack("<f", f.read(4))[0]
                    vw7ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ib = unpack("<f", f.read(4))[0]
                    vy8ib = unpack("<f", f.read(4))[0]
                    vz8ib = unpack("<f", f.read(4))[0]
                    vw8ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ib = unpack("<f", f.read(4))[0]
                    vy9ib = unpack("<f", f.read(4))[0]
                    vz9ib = unpack("<f", f.read(4))[0]
                    vw9ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ib = unpack("<f", f.read(4))[0]
                    vy10ib = unpack("<f", f.read(4))[0]
                    vz10ib = unpack("<f", f.read(4))[0]
                    vw10ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ib = unpack("<f", f.read(4))[0]
                    vy11ib = unpack("<f", f.read(4))[0]
                    vz11ib = unpack("<f", f.read(4))[0]
                    vw11ib = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ib = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1ic = unpack("<f", f.read(4))[0]
                    vy1ic = unpack("<f", f.read(4))[0]
                    vz1ic = unpack("<f", f.read(4))[0]
                    vw1ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ic = unpack("<f", f.read(4))[0]
                    vy2ic = unpack("<f", f.read(4))[0]
                    vz2ic = unpack("<f", f.read(4))[0]
                    vw2ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ic = unpack("<f", f.read(4))[0]
                    vy3ic = unpack("<f", f.read(4))[0]
                    vz3ic = unpack("<f", f.read(4))[0]
                    vw3ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ic = unpack("<f", f.read(4))[0]
                    vy4ic = unpack("<f", f.read(4))[0]
                    vz4ic = unpack("<f", f.read(4))[0]
                    vw4ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ic = unpack("<f", f.read(4))[0]
                    vy5ic = unpack("<f", f.read(4))[0]
                    vz5ic = unpack("<f", f.read(4))[0]
                    vw5ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ic = unpack("<f", f.read(4))[0]
                    vy6ic = unpack("<f", f.read(4))[0]
                    vz6ic = unpack("<f", f.read(4))[0]
                    vw6ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ic = unpack("<f", f.read(4))[0]
                    vy7ic = unpack("<f", f.read(4))[0]
                    vz7ic = unpack("<f", f.read(4))[0]
                    vw7ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ic = unpack("<f", f.read(4))[0]
                    vy8ic = unpack("<f", f.read(4))[0]
                    vz8ic = unpack("<f", f.read(4))[0]
                    vw8ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ic = unpack("<f", f.read(4))[0]
                    vy9ic = unpack("<f", f.read(4))[0]
                    vz9ic = unpack("<f", f.read(4))[0]
                    vw9ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ic = unpack("<f", f.read(4))[0]
                    vy10ic = unpack("<f", f.read(4))[0]
                    vz10ic = unpack("<f", f.read(4))[0]
                    vw10ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ic = unpack("<f", f.read(4))[0]
                    vy11ic = unpack("<f", f.read(4))[0]
                    vz11ic = unpack("<f", f.read(4))[0]
                    vw11ic = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ic = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1id = unpack("<f", f.read(4))[0]
                    vy1id = unpack("<f", f.read(4))[0]
                    vz1id = unpack("<f", f.read(4))[0]
                    vw1id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2id = unpack("<f", f.read(4))[0]
                    vy2id = unpack("<f", f.read(4))[0]
                    vz2id = unpack("<f", f.read(4))[0]
                    vw2id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3id = unpack("<f", f.read(4))[0]
                    vy3id = unpack("<f", f.read(4))[0]
                    vz3id = unpack("<f", f.read(4))[0]
                    vw3id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4id = unpack("<f", f.read(4))[0]
                    vy4id = unpack("<f", f.read(4))[0]
                    vz4id = unpack("<f", f.read(4))[0]
                    vw4id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5id = unpack("<f", f.read(4))[0]
                    vy5id = unpack("<f", f.read(4))[0]
                    vz5id = unpack("<f", f.read(4))[0]
                    vw5id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6id = unpack("<f", f.read(4))[0]
                    vy6id = unpack("<f", f.read(4))[0]
                    vz6id = unpack("<f", f.read(4))[0]
                    vw6id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7id = unpack("<f", f.read(4))[0]
                    vy7id = unpack("<f", f.read(4))[0]
                    vz7id = unpack("<f", f.read(4))[0]
                    vw7id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8id = unpack("<f", f.read(4))[0]
                    vy8id = unpack("<f", f.read(4))[0]
                    vz8id = unpack("<f", f.read(4))[0]
                    vw8id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9id = unpack("<f", f.read(4))[0]
                    vy9id = unpack("<f", f.read(4))[0]
                    vz9id = unpack("<f", f.read(4))[0]
                    vw9id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10id = unpack("<f", f.read(4))[0]
                    vy10id = unpack("<f", f.read(4))[0]
                    vz10id = unpack("<f", f.read(4))[0]
                    vw10id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10id = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11id = unpack("<f", f.read(4))[0]
                    vy11id = unpack("<f", f.read(4))[0]
                    vz11id = unpack("<f", f.read(4))[0]
                    vw11id = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11id = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1ie = unpack("<f", f.read(4))[0]
                    vy1ie = unpack("<f", f.read(4))[0]
                    vz1ie = unpack("<f", f.read(4))[0]
                    vw1ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ie = unpack("<f", f.read(4))[0]
                    vy2ie = unpack("<f", f.read(4))[0]
                    vz2ie = unpack("<f", f.read(4))[0]
                    vw2ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ie = unpack("<f", f.read(4))[0]
                    vy3ie = unpack("<f", f.read(4))[0]
                    vz3ie = unpack("<f", f.read(4))[0]
                    vw3ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ie = unpack("<f", f.read(4))[0]
                    vy4ie = unpack("<f", f.read(4))[0]
                    vz4ie = unpack("<f", f.read(4))[0]
                    vw4ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ie = unpack("<f", f.read(4))[0]
                    vy5ie = unpack("<f", f.read(4))[0]
                    vz5ie = unpack("<f", f.read(4))[0]
                    vw5ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ie = unpack("<f", f.read(4))[0]
                    vy6ie = unpack("<f", f.read(4))[0]
                    vz6ie = unpack("<f", f.read(4))[0]
                    vw6ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ie = unpack("<f", f.read(4))[0]
                    vy7ie = unpack("<f", f.read(4))[0]
                    vz7ie = unpack("<f", f.read(4))[0]
                    vw7ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ie = unpack("<f", f.read(4))[0]
                    vy8ie = unpack("<f", f.read(4))[0]
                    vz8ie = unpack("<f", f.read(4))[0]
                    vw8ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ie = unpack("<f", f.read(4))[0]
                    vy9ie = unpack("<f", f.read(4))[0]
                    vz9ie = unpack("<f", f.read(4))[0]
                    vw9ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ie = unpack("<f", f.read(4))[0]
                    vy10ie = unpack("<f", f.read(4))[0]
                    vz10ie = unpack("<f", f.read(4))[0]
                    vw10ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ie = unpack("<f", f.read(4))[0]
                    vy11ie = unpack("<f", f.read(4))[0]
                    vz11ie = unpack("<f", f.read(4))[0]
                    vw11ie = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ie = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1if = unpack("<f", f.read(4))[0]
                    vy1if = unpack("<f", f.read(4))[0]
                    vz1if = unpack("<f", f.read(4))[0]
                    vw1if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2if = unpack("<f", f.read(4))[0]
                    vy2if = unpack("<f", f.read(4))[0]
                    vz2if = unpack("<f", f.read(4))[0]
                    vw2if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3if = unpack("<f", f.read(4))[0]
                    vy3if = unpack("<f", f.read(4))[0]
                    vz3if = unpack("<f", f.read(4))[0]
                    vw3if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4if = unpack("<f", f.read(4))[0]
                    vy4if = unpack("<f", f.read(4))[0]
                    vz4if = unpack("<f", f.read(4))[0]
                    vw4if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5if = unpack("<f", f.read(4))[0]
                    vy5if = unpack("<f", f.read(4))[0]
                    vz5if = unpack("<f", f.read(4))[0]
                    vw5if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6if = unpack("<f", f.read(4))[0]
                    vy6if = unpack("<f", f.read(4))[0]
                    vz6if = unpack("<f", f.read(4))[0]
                    vw6if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7if = unpack("<f", f.read(4))[0]
                    vy7if = unpack("<f", f.read(4))[0]
                    vz7if = unpack("<f", f.read(4))[0]
                    vw7if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8if = unpack("<f", f.read(4))[0]
                    vy8if = unpack("<f", f.read(4))[0]
                    vz8if = unpack("<f", f.read(4))[0]
                    vw8if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9if = unpack("<f", f.read(4))[0]
                    vy9if = unpack("<f", f.read(4))[0]
                    vz9if = unpack("<f", f.read(4))[0]
                    vw9if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10if = unpack("<f", f.read(4))[0]
                    vy10if = unpack("<f", f.read(4))[0]
                    vz10if = unpack("<f", f.read(4))[0]
                    vw10if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10if = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11if = unpack("<f", f.read(4))[0]
                    vy11if = unpack("<f", f.read(4))[0]
                    vz11if = unpack("<f", f.read(4))[0]
                    vw11if = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11if = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1ig = unpack("<f", f.read(4))[0]
                    vy1ig = unpack("<f", f.read(4))[0]
                    vz1ig = unpack("<f", f.read(4))[0]
                    vw1ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ig = unpack("<f", f.read(4))[0]
                    vy2ig = unpack("<f", f.read(4))[0]
                    vz2ig = unpack("<f", f.read(4))[0]
                    vw2ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ig = unpack("<f", f.read(4))[0]
                    vy3ig = unpack("<f", f.read(4))[0]
                    vz3ig = unpack("<f", f.read(4))[0]
                    vw3ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ig = unpack("<f", f.read(4))[0]
                    vy4ig = unpack("<f", f.read(4))[0]
                    vz4ig = unpack("<f", f.read(4))[0]
                    vw4ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ig = unpack("<f", f.read(4))[0]
                    vy5ig = unpack("<f", f.read(4))[0]
                    vz5ig = unpack("<f", f.read(4))[0]
                    vw5ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ig = unpack("<f", f.read(4))[0]
                    vy6ig = unpack("<f", f.read(4))[0]
                    vz6ig = unpack("<f", f.read(4))[0]
                    vw6ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ig = unpack("<f", f.read(4))[0]
                    vy7ig = unpack("<f", f.read(4))[0]
                    vz7ig = unpack("<f", f.read(4))[0]
                    vw7ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ig = unpack("<f", f.read(4))[0]
                    vy8ig = unpack("<f", f.read(4))[0]
                    vz8ig = unpack("<f", f.read(4))[0]
                    vw8ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ig = unpack("<f", f.read(4))[0]
                    vy9ig = unpack("<f", f.read(4))[0]
                    vz9ig = unpack("<f", f.read(4))[0]
                    vw9ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ig = unpack("<f", f.read(4))[0]
                    vy10ig = unpack("<f", f.read(4))[0]
                    vz10ig = unpack("<f", f.read(4))[0]
                    vw10ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ig = unpack("<f", f.read(4))[0]
                    vy11ig = unpack("<f", f.read(4))[0]
                    vz11ig = unpack("<f", f.read(4))[0]
                    vw11ig = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ig = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-352,1)

                    vx1ih = unpack("<f", f.read(4))[0]
                    vy1ih = unpack("<f", f.read(4))[0]
                    vz1ih = unpack("<f", f.read(4))[0]
                    vw1ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ih = unpack("<f", f.read(4))[0]
                    vy2ih = unpack("<f", f.read(4))[0]
                    vz2ih = unpack("<f", f.read(4))[0]
                    vw2ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ih = unpack("<f", f.read(4))[0]
                    vy3ih = unpack("<f", f.read(4))[0]
                    vz3ih = unpack("<f", f.read(4))[0]
                    vw3ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ih = unpack("<f", f.read(4))[0]
                    vy4ih = unpack("<f", f.read(4))[0]
                    vz4ih = unpack("<f", f.read(4))[0]
                    vw4ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ih = unpack("<f", f.read(4))[0]
                    vy5ih = unpack("<f", f.read(4))[0]
                    vz5ih = unpack("<f", f.read(4))[0]
                    vw5ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ih = unpack("<f", f.read(4))[0]
                    vy6ih = unpack("<f", f.read(4))[0]
                    vz6ih = unpack("<f", f.read(4))[0]
                    vw6ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ih = unpack("<f", f.read(4))[0]
                    vy7ih = unpack("<f", f.read(4))[0]
                    vz7ih = unpack("<f", f.read(4))[0]
                    vw7ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ih = unpack("<f", f.read(4))[0]
                    vy8ih = unpack("<f", f.read(4))[0]
                    vz8ih = unpack("<f", f.read(4))[0]
                    vw8ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ih = unpack("<f", f.read(4))[0]
                    vy9ih = unpack("<f", f.read(4))[0]
                    vz9ih = unpack("<f", f.read(4))[0]
                    vw9ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ih = unpack("<f", f.read(4))[0]
                    vy10ih = unpack("<f", f.read(4))[0]
                    vz10ih = unpack("<f", f.read(4))[0]
                    vw10ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ih = unpack("<f", f.read(4))[0]
                    vy11ih = unpack("<f", f.read(4))[0]
                    vz11ih = unpack("<f", f.read(4))[0]
                    vw11ih = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ih = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    

                    fa34 = bm_3i.verts.new([-vx1i,-vy1i,-vz1i])
                    fb34 = bm_3i.verts.new([-vx2i,-vy2i,-vz2i])
                    fc34 = bm_3i.verts.new([-vx3i,-vy3i,-vz3i])
                    fd34 = bm_3i.verts.new([-vx4i,-vy4i,-vz4i])
                    fe34 = bm_3i.verts.new([-vx5i,-vy5i,-vz5i])
                    ff34 = bm_3i.verts.new([-vx6i,-vy6i,-vz6i])
                    fg34 = bm_3i.verts.new([-vx7i,-vy7i,-vz7i])
                    fh34 = bm_3i.verts.new([-vx8i,-vy8i,-vz8i])
                    fi34 = bm_3i.verts.new([-vx9i,-vy9i,-vz9i])
                    fj34 = bm_3i.verts.new([-vx10i,-vy10i,-vz10i])
                    fk34 = bm_3i.verts.new([-vx11i,-vy11i,-vz11i])

                    fa35 = bm_3ia.verts.new([-vx1ia,-vy1ia,-vz1ia])
                    fb35 = bm_3ia.verts.new([-vx2ia,-vy2ia,-vz2ia])
                    fc35 = bm_3ia.verts.new([-vx3ia,-vy3ia,-vz3ia])
                    fd35 = bm_3ia.verts.new([-vx4ia,-vy4ia,-vz4ia])
                    fe35 = bm_3ia.verts.new([-vx5ia,-vy5ia,-vz5ia])
                    ff35 = bm_3ia.verts.new([-vx6ia,-vy6ia,-vz6ia])
                    fg35 = bm_3ia.verts.new([-vx7ia,-vy7ia,-vz7ia])
                    fh35 = bm_3ia.verts.new([-vx8ia,-vy8ia,-vz8ia])
                    fi35 = bm_3ia.verts.new([-vx9ia,-vy9ia,-vz9ia])
                    fj35 = bm_3ia.verts.new([-vx10ia,-vy10ia,-vz10ia])
                    fk35 = bm_3ia.verts.new([-vx11ia,-vy11ia,-vz11ia])

                    fa36 = bm_3ib.verts.new([-vx1ib,-vy1ib,-vz1ib])
                    fb36 = bm_3ib.verts.new([-vx2ib,-vy2ib,-vz2ib])
                    fc36 = bm_3ib.verts.new([-vx3ib,-vy3ib,-vz3ib])
                    fd36 = bm_3ib.verts.new([-vx4ib,-vy4ib,-vz4ib])
                    fe36 = bm_3ib.verts.new([-vx5ib,-vy5ib,-vz5ib])
                    ff36 = bm_3ib.verts.new([-vx6ib,-vy6ib,-vz6ib])
                    fg36 = bm_3ib.verts.new([-vx7ib,-vy7ib,-vz7ib])
                    fh36 = bm_3ib.verts.new([-vx8ib,-vy8ib,-vz8ib])
                    fi36 = bm_3ib.verts.new([-vx9ib,-vy9ib,-vz9ib])
                    fj36 = bm_3ib.verts.new([-vx10ib,-vy10ib,-vz10ib])
                    fk36 = bm_3ib.verts.new([-vx11ib,-vy11ib,-vz11ib])

                    fa37 = bm_3ic.verts.new([-vx1ic,-vy1ic,-vz1ic])
                    fb37 = bm_3ic.verts.new([-vx2ic,-vy2ic,-vz2ic])
                    fc37 = bm_3ic.verts.new([-vx3ic,-vy3ic,-vz3ic])
                    fd37 = bm_3ic.verts.new([-vx4ic,-vy4ic,-vz4ic])
                    fe37 = bm_3ic.verts.new([-vx5ic,-vy5ic,-vz5ic])
                    ff37 = bm_3ic.verts.new([-vx6ic,-vy6ic,-vz6ic])
                    fg37 = bm_3ic.verts.new([-vx7ic,-vy7ic,-vz7ic])
                    fh37 = bm_3ic.verts.new([-vx8ic,-vy8ic,-vz8ic])
                    fi37 = bm_3ic.verts.new([-vx9ic,-vy9ic,-vz9ic])
                    fj37 = bm_3ic.verts.new([-vx10ic,-vy10ic,-vz10ic])
                    fk37 = bm_3ic.verts.new([-vx11ic,-vy11ic,-vz11ic])

                    fa38 = bm_3id.verts.new([-vx1id,-vy1id,-vz1id])
                    fb38 = bm_3id.verts.new([-vx2id,-vy2id,-vz2id])
                    fc38 = bm_3id.verts.new([-vx3id,-vy3id,-vz3id])
                    fd38 = bm_3id.verts.new([-vx4id,-vy4id,-vz4id])
                    fe38 = bm_3id.verts.new([-vx5id,-vy5id,-vz5id])
                    ff38 = bm_3id.verts.new([-vx6id,-vy6id,-vz6id])
                    fg38 = bm_3id.verts.new([-vx7id,-vy7id,-vz7id])
                    fh38 = bm_3id.verts.new([-vx8id,-vy8id,-vz8id])
                    fi38 = bm_3id.verts.new([-vx9id,-vy9id,-vz9id])
                    fj38 = bm_3id.verts.new([-vx10id,-vy10id,-vz10id])
                    fk38 = bm_3id.verts.new([-vx11id,-vy11id,-vz11id])

                    fa39 = bm_3ie.verts.new([-vx1ie,-vy1ie,-vz1ie])
                    fb39 = bm_3ie.verts.new([-vx2ie,-vy2ie,-vz2ie])
                    fc39 = bm_3ie.verts.new([-vx3ie,-vy3ie,-vz3ie])
                    fd39 = bm_3ie.verts.new([-vx4ie,-vy4ie,-vz4ie])
                    fe39 = bm_3ie.verts.new([-vx5ie,-vy5ie,-vz5ie])
                    ff39 = bm_3ie.verts.new([-vx6ie,-vy6ie,-vz6ie])
                    fg39 = bm_3ie.verts.new([-vx7ie,-vy7ie,-vz7ie])
                    fh39 = bm_3ie.verts.new([-vx8ie,-vy8ie,-vz8ie])
                    fi39 = bm_3ie.verts.new([-vx9ie,-vy9ie,-vz9ie])
                    fj39 = bm_3ie.verts.new([-vx10ie,-vy10ie,-vz10ie])
                    fk39 = bm_3ie.verts.new([-vx11ie,-vy11ie,-vz11ie])

                    fa40 = bm_3if.verts.new([-vx1if,-vy1if,-vz1if])
                    fb40 = bm_3if.verts.new([-vx2if,-vy2if,-vz2if])
                    fc40 = bm_3if.verts.new([-vx3if,-vy3if,-vz3if])
                    fd40 = bm_3if.verts.new([-vx4if,-vy4if,-vz4if])
                    fe40 = bm_3if.verts.new([-vx5if,-vy5if,-vz5if])
                    ff40 = bm_3if.verts.new([-vx6if,-vy6if,-vz6if])
                    fg40 = bm_3if.verts.new([-vx7if,-vy7if,-vz7if])
                    fh40 = bm_3if.verts.new([-vx8if,-vy8if,-vz8if])
                    fi40 = bm_3if.verts.new([-vx9if,-vy9if,-vz9if])
                    fj40 = bm_3if.verts.new([-vx10if,-vy10if,-vz10if])
                    fk40 = bm_3if.verts.new([-vx11if,-vy11if,-vz11if])

                    fa41 = bm_3ig.verts.new([-vx1ig,-vy1ig,-vz1ig])
                    fb41 = bm_3ig.verts.new([-vx2ig,-vy2ig,-vz2ig])
                    fc41 = bm_3ig.verts.new([-vx3ig,-vy3ig,-vz3ig])
                    fd41 = bm_3ig.verts.new([-vx4ig,-vy4ig,-vz4ig])
                    fe41 = bm_3ig.verts.new([-vx5ig,-vy5ig,-vz5ig])
                    ff41 = bm_3ig.verts.new([-vx6ig,-vy6ig,-vz6ig])
                    fg41 = bm_3ig.verts.new([-vx7ig,-vy7ig,-vz7ig])
                    fh41 = bm_3ig.verts.new([-vx8ig,-vy8ig,-vz8ig])
                    fi41 = bm_3ig.verts.new([-vx9ig,-vy9ig,-vz9ig])
                    fj41 = bm_3ig.verts.new([-vx10ig,-vy10ig,-vz10ig])
                    fk41 = bm_3ig.verts.new([-vx11ig,-vy11ig,-vz11ig])

                    fa42 = bm_3ih.verts.new([-vx1ih,-vy1ih,-vz1ih])
                    fb42 = bm_3ih.verts.new([-vx2ih,-vy2ih,-vz2ih])
                    fc42 = bm_3ih.verts.new([-vx3ih,-vy3ih,-vz3ih])
                    fd42 = bm_3ih.verts.new([-vx4ih,-vy4ih,-vz4ih])
                    fe42 = bm_3ih.verts.new([-vx5ih,-vy5ih,-vz5ih])
                    ff42 = bm_3ih.verts.new([-vx6ih,-vy6ih,-vz6ih])
                    fg42 = bm_3ih.verts.new([-vx7ih,-vy7ih,-vz7ih])
                    fh42 = bm_3ih.verts.new([-vx8ih,-vy8ih,-vz8ih])
                    fi42 = bm_3ih.verts.new([-vx9ih,-vy9ih,-vz9ih])
                    fj42 = bm_3ih.verts.new([-vx10ih,-vy10ih,-vz10ih])
                    fk42 = bm_3ih.verts.new([-vx11ih,-vy11ih,-vz11ih])

                    if type1ih == 1:
                        if type2ih == 1:
                            if type3ih == 0:
                                if type4ih == 0:
                                    if type5ih == 1:
                                        if type6ih == 1:
                                            if type7ih == 0:
                                                if type8ih == 0:
                                                    if type9ih == 0:
                                                        if type10ih == 0:
                                                            if type11ih == 0:
                                                                bm_3ih.faces.new([fa42,fb42,fc42])
                                                                bm_3ih.faces.new([fb42,fc42,fd42])
                                                                bm_3ih.faces.new([fe42,ff42,fg42])
                                                                bm_3ih.faces.new([ff42,fg42,fh42])
                                                                bm_3ih.faces.new([fg42,fh42,fi42])
                                                                bm_3ih.faces.new([fh42,fi42,fj42])
                                                                bm_3ih.faces.new([fi42,fj42,fk42])

                    if type1ig == 1:
                        if type2ig == 1:
                            if type3ig == 0:
                                if type4ig == 0:
                                    if type5ig == 1:
                                        if type6ig == 1:
                                            if type7ig == 0:
                                                if type8ig == 0:
                                                    if type9ig == 1:
                                                        if type10ig == 1:
                                                            if type11ig == 0:
                                                                bm_3ig.faces.new([fa41,fb41,fc41])
                                                                bm_3ig.faces.new([fb41,fc41,fd41])
                                                                bm_3ig.faces.new([fe41,ff41,fg41])
                                                                bm_3ig.faces.new([ff41,fg41,fh41])
                                                                bm_3ig.faces.new([fi41,fj41,fk41])

                    if type1if == 1:
                        if type2if == 1:
                            if type3if == 0:
                                if type4if == 0:
                                    if type5if == 0:
                                        if type6if == 0:
                                            if type7if == 1:
                                                if type8if == 1:
                                                    if type9if == 0:
                                                        if type10if == 0:
                                                            if type11if == 0:
                                                                bm_3if.faces.new([fa40,fb40,fc40])
                                                                bm_3if.faces.new([fb40,fc40,fd40])
                                                                bm_3if.faces.new([fc40,fd40,fe40])
                                                                bm_3if.faces.new([fd40,fe40,ff40])
                                                                bm_3if.faces.new([fg40,fh40,fi40])
                                                                bm_3if.faces.new([fh40,fi40,fj40])
                                                                bm_3if.faces.new([fi40,fj40,fk40])

                    if type1ie == 1:
                        if type2ie == 1:
                            if type3ie == 0:
                                if type4ie == 0:
                                    if type5ie == 0:
                                        if type6ie == 1:
                                            if type7ie == 1:
                                                if type8ie == 0:
                                                    if type9ie == 0:
                                                        if type10ie == 0:
                                                            if type11ie == 1:
                                                                bm_3ie.faces.new([fa39,fb39,fc39])
                                                                bm_3ie.faces.new([fb39,fc39,fd39])
                                                                bm_3ie.faces.new([fe39,ff39,fg39])
                                                                bm_3ie.faces.new([ff39,fg39,fh39])
                                                                bm_3ie.faces.new([fg39,fh39,fi39])
                                                                bm_3ie.faces.new([fh39,fi39,fj39])
                                                                bm_3ie.faces.new([fh39,fj39,fk39])

                    if type1id == 1:
                        if type2id == 1:
                            if type3id == 0:
                                if type4id == 0:
                                    if type5id == 1:
                                        if type6id == 1:
                                            if type7id == 0:
                                                if type8id == 0:
                                                    if type9id == 0:
                                                        if type10id == 0:
                                                            if type11id == 1:
                                                                bm_3id.faces.new([fa38,fb38,fc38])
                                                                bm_3id.faces.new([fb38,fc38,fd38])
                                                                bm_3id.faces.new([fe38,ff38,fg38])
                                                                bm_3id.faces.new([ff38,fg38,fh38])
                                                                bm_3id.faces.new([fg38,fh38,fi38])
                                                                bm_3id.faces.new([fh38,fi38,fj38])
                                                                bm_3id.faces.new([fh38,fj38,fk38])

                    if type1ic == 1:
                        if type2ic == 1:
                            if type3ic == 0:
                                if type4ic == 0:
                                    if type5ic == 0:
                                        if type6ic == 1:
                                            if type7ic == 1:
                                                if type8ic == 0:
                                                    if type9ic == 0:
                                                        if type10ic == 1:
                                                            if type11ic == 1:
                                                                bm_3ic.faces.new([fa37,fb37,fc37])
                                                                bm_3ic.faces.new([fb37,fc37,fd37])
                                                                bm_3ic.faces.new([fc37,fd37,fe37])
                                                                bm_3ic.faces.new([ff37,fg37,fh37])
                                                                bm_3ic.faces.new([fg37,fh37,fi37])
                                                                bm_3ic.faces.new([fg37,fi37,fj37])
                                                                bm_3ic.faces.new([fi37,fj37,fk37])
                                                                

                    if type1ib == 1:
                        if type2ib == 1:
                            if type3ib == 0:
                                if type4ib == 0:
                                    if type5ib == 0:
                                        if type6ib == 0:
                                            if type7ib == 0:
                                                if type8ib == 1:
                                                    if type9ib == 1:
                                                        if type10ib == 0:
                                                            if type11ib == 0:
                                                                bm_3ib.faces.new([fa36,fb36,fc36])
                                                                bm_3ib.faces.new([fb36,fc36,fd36])
                                                                bm_3ib.faces.new([fc36,fd36,fe36])
                                                                bm_3ib.faces.new([fd36,fe36,ff36])
                                                                bm_3ib.faces.new([fe36,ff36,fg36])
                                                                bm_3ib.faces.new([fh36,fi36,fj36])
                                                                bm_3ib.faces.new([fi36,fj36,fk36])

                    if type1ia == 1:
                        if type2ia == 1:
                            if type3ia == 0:
                                if type4ia == 0:
                                    if type5ia == 0:
                                        if type6ia == 0:
                                            if type7ia == 0:
                                                if type8ia == 0:
                                                    if type9ia == 1:
                                                        if type10ia == 1:
                                                            if type11ia == 0:
                                                                bm_3ia.faces.new([fa35,fb35,fc35])
                                                                bm_3ia.faces.new([fb35,fc35,fd35])
                                                                bm_3ia.faces.new([fc35,fd35,fe35])
                                                                bm_3ia.faces.new([fd35,fe35,ff35])
                                                                bm_3ia.faces.new([fe35,ff35,fg35])
                                                                bm_3ia.faces.new([ff35,fg35,fh35])
                                                                bm_3ia.faces.new([fi35,fj35,fk35])

                    if type1i == 1:
                        if type2i == 1:
                            if type3i == 0:
                                if type4i == 0:
                                    if type5i == 0:
                                        if type6i == 0:
                                            if type7i == 0:
                                                if type8i == 0:
                                                    if type9i == 0:
                                                        if type10i == 0:
                                                            if type11i == 0:
                                                                bm_3i.faces.new([fa34,fb34,fc34])
                                                                bm_3i.faces.new([fb34,fc34,fd34])
                                                                bm_3i.faces.new([fc34,fd34,fe34])
                                                                bm_3i.faces.new([fd34,fe34,ff34])
                                                                bm_3i.faces.new([fe34,ff34,fg34])
                                                                bm_3i.faces.new([ff34,fg34,fh34])
                                                                bm_3i.faces.new([fg34,fh34,fi34])
                                                                bm_3i.faces.new([fh34,fi34,fj34])
                                                                bm_3i.faces.new([fi34,fj34,fk34])

            elif vertexCount == 12:
                for i in range(vertexCount//12):
                    vx1j = unpack("<f", f.read(4))[0]
                    vy1j = unpack("<f", f.read(4))[0]
                    vz1j = unpack("<f", f.read(4))[0]
                    vw1j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2j = unpack("<f", f.read(4))[0]
                    vy2j = unpack("<f", f.read(4))[0]
                    vz2j = unpack("<f", f.read(4))[0]
                    vw2j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3j = unpack("<f", f.read(4))[0]
                    vy3j = unpack("<f", f.read(4))[0]
                    vz3j = unpack("<f", f.read(4))[0]
                    vw3j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4j = unpack("<f", f.read(4))[0]
                    vy4j = unpack("<f", f.read(4))[0]
                    vz4j = unpack("<f", f.read(4))[0]
                    vw4j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5j = unpack("<f", f.read(4))[0]
                    vy5j = unpack("<f", f.read(4))[0]
                    vz5j = unpack("<f", f.read(4))[0]
                    vw5j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6j = unpack("<f", f.read(4))[0]
                    vy6j = unpack("<f", f.read(4))[0]
                    vz6j = unpack("<f", f.read(4))[0]
                    vw6j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7j = unpack("<f", f.read(4))[0]
                    vy7j = unpack("<f", f.read(4))[0]
                    vz7j = unpack("<f", f.read(4))[0]
                    vw7j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8j = unpack("<f", f.read(4))[0]
                    vy8j = unpack("<f", f.read(4))[0]
                    vz8j = unpack("<f", f.read(4))[0]
                    vw8j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9j = unpack("<f", f.read(4))[0]
                    vy9j = unpack("<f", f.read(4))[0]
                    vz9j = unpack("<f", f.read(4))[0]
                    vw9j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10j = unpack("<f", f.read(4))[0]
                    vy10j = unpack("<f", f.read(4))[0]
                    vz10j = unpack("<f", f.read(4))[0]
                    vw10j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11j = unpack("<f", f.read(4))[0]
                    vy11j = unpack("<f", f.read(4))[0]
                    vz11j = unpack("<f", f.read(4))[0]
                    vw11j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11j = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12j = unpack("<f", f.read(4))[0]
                    vy12j = unpack("<f", f.read(4))[0]
                    vz12j = unpack("<f", f.read(4))[0]
                    vw12j = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12j = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-384,1)

                    vx1ja = unpack("<f", f.read(4))[0]
                    vy1ja = unpack("<f", f.read(4))[0]
                    vz1ja = unpack("<f", f.read(4))[0]
                    vw1ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ja = unpack("<f", f.read(4))[0]
                    vy2ja = unpack("<f", f.read(4))[0]
                    vz2ja = unpack("<f", f.read(4))[0]
                    vw2ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ja = unpack("<f", f.read(4))[0]
                    vy3ja = unpack("<f", f.read(4))[0]
                    vz3ja = unpack("<f", f.read(4))[0]
                    vw3ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ja = unpack("<f", f.read(4))[0]
                    vy4ja = unpack("<f", f.read(4))[0]
                    vz4ja = unpack("<f", f.read(4))[0]
                    vw4ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ja = unpack("<f", f.read(4))[0]
                    vy5ja = unpack("<f", f.read(4))[0]
                    vz5ja = unpack("<f", f.read(4))[0]
                    vw5ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ja = unpack("<f", f.read(4))[0]
                    vy6ja = unpack("<f", f.read(4))[0]
                    vz6ja = unpack("<f", f.read(4))[0]
                    vw6ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ja = unpack("<f", f.read(4))[0]
                    vy7ja = unpack("<f", f.read(4))[0]
                    vz7ja = unpack("<f", f.read(4))[0]
                    vw7ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ja = unpack("<f", f.read(4))[0]
                    vy8ja = unpack("<f", f.read(4))[0]
                    vz8ja = unpack("<f", f.read(4))[0]
                    vw8ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ja = unpack("<f", f.read(4))[0]
                    vy9ja = unpack("<f", f.read(4))[0]
                    vz9ja = unpack("<f", f.read(4))[0]
                    vw9ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ja = unpack("<f", f.read(4))[0]
                    vy10ja = unpack("<f", f.read(4))[0]
                    vz10ja = unpack("<f", f.read(4))[0]
                    vw10ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ja = unpack("<f", f.read(4))[0]
                    vy11ja = unpack("<f", f.read(4))[0]
                    vz11ja = unpack("<f", f.read(4))[0]
                    vw11ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ja = unpack("<f", f.read(4))[0]
                    vy12ja = unpack("<f", f.read(4))[0]
                    vz12ja = unpack("<f", f.read(4))[0]
                    vw12ja = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ja = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-384,1)

                    vx1jb = unpack("<f", f.read(4))[0]
                    vy1jb = unpack("<f", f.read(4))[0]
                    vz1jb = unpack("<f", f.read(4))[0]
                    vw1jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2jb = unpack("<f", f.read(4))[0]
                    vy2jb = unpack("<f", f.read(4))[0]
                    vz2jb = unpack("<f", f.read(4))[0]
                    vw2jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3jb = unpack("<f", f.read(4))[0]
                    vy3jb = unpack("<f", f.read(4))[0]
                    vz3jb = unpack("<f", f.read(4))[0]
                    vw3jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4jb = unpack("<f", f.read(4))[0]
                    vy4jb = unpack("<f", f.read(4))[0]
                    vz4jb = unpack("<f", f.read(4))[0]
                    vw4jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5jb = unpack("<f", f.read(4))[0]
                    vy5jb = unpack("<f", f.read(4))[0]
                    vz5jb = unpack("<f", f.read(4))[0]
                    vw5jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6jb = unpack("<f", f.read(4))[0]
                    vy6jb = unpack("<f", f.read(4))[0]
                    vz6jb = unpack("<f", f.read(4))[0]
                    vw6jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7jb = unpack("<f", f.read(4))[0]
                    vy7jb = unpack("<f", f.read(4))[0]
                    vz7jb = unpack("<f", f.read(4))[0]
                    vw7jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8jb = unpack("<f", f.read(4))[0]
                    vy8jb = unpack("<f", f.read(4))[0]
                    vz8jb = unpack("<f", f.read(4))[0]
                    vw8jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9jb = unpack("<f", f.read(4))[0]
                    vy9jb = unpack("<f", f.read(4))[0]
                    vz9jb = unpack("<f", f.read(4))[0]
                    vw9jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10jb = unpack("<f", f.read(4))[0]
                    vy10jb = unpack("<f", f.read(4))[0]
                    vz10jb = unpack("<f", f.read(4))[0]
                    vw10jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11jb = unpack("<f", f.read(4))[0]
                    vy11jb = unpack("<f", f.read(4))[0]
                    vz11jb = unpack("<f", f.read(4))[0]
                    vw11jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12jb = unpack("<f", f.read(4))[0]
                    vy12jb = unpack("<f", f.read(4))[0]
                    vz12jb = unpack("<f", f.read(4))[0]
                    vw12jb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12jb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-384,1)

                    vx1jc = unpack("<f", f.read(4))[0]
                    vy1jc = unpack("<f", f.read(4))[0]
                    vz1jc = unpack("<f", f.read(4))[0]
                    vw1jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2jc = unpack("<f", f.read(4))[0]
                    vy2jc = unpack("<f", f.read(4))[0]
                    vz2jc = unpack("<f", f.read(4))[0]
                    vw2jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3jc = unpack("<f", f.read(4))[0]
                    vy3jc = unpack("<f", f.read(4))[0]
                    vz3jc = unpack("<f", f.read(4))[0]
                    vw3jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4jc = unpack("<f", f.read(4))[0]
                    vy4jc = unpack("<f", f.read(4))[0]
                    vz4jc = unpack("<f", f.read(4))[0]
                    vw4jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5jc = unpack("<f", f.read(4))[0]
                    vy5jc = unpack("<f", f.read(4))[0]
                    vz5jc = unpack("<f", f.read(4))[0]
                    vw5jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6jc = unpack("<f", f.read(4))[0]
                    vy6jc = unpack("<f", f.read(4))[0]
                    vz6jc = unpack("<f", f.read(4))[0]
                    vw6jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7jc = unpack("<f", f.read(4))[0]
                    vy7jc = unpack("<f", f.read(4))[0]
                    vz7jc = unpack("<f", f.read(4))[0]
                    vw7jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8jc = unpack("<f", f.read(4))[0]
                    vy8jc = unpack("<f", f.read(4))[0]
                    vz8jc = unpack("<f", f.read(4))[0]
                    vw8jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9jc = unpack("<f", f.read(4))[0]
                    vy9jc = unpack("<f", f.read(4))[0]
                    vz9jc = unpack("<f", f.read(4))[0]
                    vw9jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10jc = unpack("<f", f.read(4))[0]
                    vy10jc = unpack("<f", f.read(4))[0]
                    vz10jc = unpack("<f", f.read(4))[0]
                    vw10jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11jc = unpack("<f", f.read(4))[0]
                    vy11jc = unpack("<f", f.read(4))[0]
                    vz11jc = unpack("<f", f.read(4))[0]
                    vw11jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12jc = unpack("<f", f.read(4))[0]
                    vy12jc = unpack("<f", f.read(4))[0]
                    vz12jc = unpack("<f", f.read(4))[0]
                    vw12jc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12jc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-384,1)

                    vx1jd = unpack("<f", f.read(4))[0]
                    vy1jd = unpack("<f", f.read(4))[0]
                    vz1jd = unpack("<f", f.read(4))[0]
                    vw1jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2jd = unpack("<f", f.read(4))[0]
                    vy2jd = unpack("<f", f.read(4))[0]
                    vz2jd = unpack("<f", f.read(4))[0]
                    vw2jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3jd = unpack("<f", f.read(4))[0]
                    vy3jd = unpack("<f", f.read(4))[0]
                    vz3jd = unpack("<f", f.read(4))[0]
                    vw3jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4jd = unpack("<f", f.read(4))[0]
                    vy4jd = unpack("<f", f.read(4))[0]
                    vz4jd = unpack("<f", f.read(4))[0]
                    vw4jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5jd = unpack("<f", f.read(4))[0]
                    vy5jd = unpack("<f", f.read(4))[0]
                    vz5jd = unpack("<f", f.read(4))[0]
                    vw5jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6jd = unpack("<f", f.read(4))[0]
                    vy6jd = unpack("<f", f.read(4))[0]
                    vz6jd = unpack("<f", f.read(4))[0]
                    vw6jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7jd = unpack("<f", f.read(4))[0]
                    vy7jd = unpack("<f", f.read(4))[0]
                    vz7jd = unpack("<f", f.read(4))[0]
                    vw7jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8jd = unpack("<f", f.read(4))[0]
                    vy8jd = unpack("<f", f.read(4))[0]
                    vz8jd = unpack("<f", f.read(4))[0]
                    vw8jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9jd = unpack("<f", f.read(4))[0]
                    vy9jd = unpack("<f", f.read(4))[0]
                    vz9jd = unpack("<f", f.read(4))[0]
                    vw9jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10jd = unpack("<f", f.read(4))[0]
                    vy10jd = unpack("<f", f.read(4))[0]
                    vz10jd = unpack("<f", f.read(4))[0]
                    vw10jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11jd = unpack("<f", f.read(4))[0]
                    vy11jd = unpack("<f", f.read(4))[0]
                    vz11jd = unpack("<f", f.read(4))[0]
                    vw11jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12jd = unpack("<f", f.read(4))[0]
                    vy12jd = unpack("<f", f.read(4))[0]
                    vz12jd = unpack("<f", f.read(4))[0]
                    vw12jd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12jd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa43 = bm_3j.verts.new([-vx1j,-vy1j,-vz1j])
                    fb43 = bm_3j.verts.new([-vx2j,-vy2j,-vz2j])
                    fc43 = bm_3j.verts.new([-vx3j,-vy3j,-vz3j])
                    fd43 = bm_3j.verts.new([-vx4j,-vy4j,-vz4j])
                    fe43 = bm_3j.verts.new([-vx5j,-vy5j,-vz5j])
                    ff43 = bm_3j.verts.new([-vx6j,-vy6j,-vz6j])
                    fg43 = bm_3j.verts.new([-vx7j,-vy7j,-vz7j])
                    fh43 = bm_3j.verts.new([-vx8j,-vy8j,-vz8j])
                    fi43 = bm_3j.verts.new([-vx9j,-vy9j,-vz9j])
                    fj43 = bm_3j.verts.new([-vx10j,-vy10j,-vz10j])
                    fk43 = bm_3j.verts.new([-vx11j,-vy11j,-vz11j])
                    fl43 = bm_3j.verts.new([-vx12j,-vy12j,-vz12j])

                    fa44 = bm_3ja.verts.new([-vx1ja,-vy1ja,-vz1ja])
                    fb44 = bm_3ja.verts.new([-vx2ja,-vy2ja,-vz2ja])
                    fc44 = bm_3ja.verts.new([-vx3ja,-vy3ja,-vz3ja])
                    fd44 = bm_3ja.verts.new([-vx4ja,-vy4ja,-vz4ja])
                    fe44 = bm_3ja.verts.new([-vx5ja,-vy5ja,-vz5ja])
                    ff44 = bm_3ja.verts.new([-vx6ja,-vy6ja,-vz6ja])
                    fg44 = bm_3ja.verts.new([-vx7ja,-vy7ja,-vz7ja])
                    fh44 = bm_3ja.verts.new([-vx8ja,-vy8ja,-vz8ja])
                    fi44 = bm_3ja.verts.new([-vx9ja,-vy9ja,-vz9ja])
                    fj44 = bm_3ja.verts.new([-vx10ja,-vy10ja,-vz10ja])
                    fk44 = bm_3ja.verts.new([-vx11ja,-vy11ja,-vz11ja])
                    fl44 = bm_3ja.verts.new([-vx12ja,-vy12ja,-vz12ja])

                    fa45 = bm_3jb.verts.new([-vx1jb,-vy1jb,-vz1jb])
                    fb45 = bm_3jb.verts.new([-vx2jb,-vy2jb,-vz2jb])
                    fc45 = bm_3jb.verts.new([-vx3jb,-vy3jb,-vz3jb])
                    fd45 = bm_3jb.verts.new([-vx4jb,-vy4jb,-vz4jb])
                    fe45 = bm_3jb.verts.new([-vx5jb,-vy5jb,-vz5jb])
                    ff45 = bm_3jb.verts.new([-vx6jb,-vy6jb,-vz6jb])
                    fg45 = bm_3jb.verts.new([-vx7jb,-vy7jb,-vz7jb])
                    fh45 = bm_3jb.verts.new([-vx8jb,-vy8jb,-vz8jb])
                    fi45 = bm_3jb.verts.new([-vx9jb,-vy9jb,-vz9jb])
                    fj45 = bm_3jb.verts.new([-vx10jb,-vy10jb,-vz10jb])
                    fk45 = bm_3jb.verts.new([-vx11jb,-vy11jb,-vz11jb])
                    fl45 = bm_3jb.verts.new([-vx12jb,-vy12jb,-vz12jb])

                    fa46 = bm_3jc.verts.new([-vx1jc,-vy1jc,-vz1jc])
                    fb46 = bm_3jc.verts.new([-vx2jc,-vy2jc,-vz2jc])
                    fc46 = bm_3jc.verts.new([-vx3jc,-vy3jc,-vz3jc])
                    fd46 = bm_3jc.verts.new([-vx4jc,-vy4jc,-vz4jc])
                    fe46 = bm_3jc.verts.new([-vx5jc,-vy5jc,-vz5jc])
                    ff46 = bm_3jc.verts.new([-vx6jc,-vy6jc,-vz6jc])
                    fg46 = bm_3jc.verts.new([-vx7jc,-vy7jc,-vz7jc])
                    fh46 = bm_3jc.verts.new([-vx8jc,-vy8jc,-vz8jc])
                    fi46 = bm_3jc.verts.new([-vx9jc,-vy9jc,-vz9jc])
                    fj46 = bm_3jc.verts.new([-vx10jc,-vy10jc,-vz10jc])
                    fk46 = bm_3jc.verts.new([-vx11jc,-vy11jc,-vz11jc])
                    fl46 = bm_3jc.verts.new([-vx12jc,-vy12jc,-vz12jc])

                    fa47 = bm_3jd.verts.new([-vx1jd,-vy1jd,-vz1jd])
                    fb47 = bm_3jd.verts.new([-vx2jd,-vy2jd,-vz2jd])
                    fc47 = bm_3jd.verts.new([-vx3jd,-vy3jd,-vz3jd])
                    fd47 = bm_3jd.verts.new([-vx4jd,-vy4jd,-vz4jd])
                    fe47 = bm_3jd.verts.new([-vx5jd,-vy5jd,-vz5jd])
                    ff47 = bm_3jd.verts.new([-vx6jd,-vy6jd,-vz6jd])
                    fg47 = bm_3jd.verts.new([-vx7jd,-vy7jd,-vz7jd])
                    fh47 = bm_3jd.verts.new([-vx8jd,-vy8jd,-vz8jd])
                    fi47 = bm_3jd.verts.new([-vx9jd,-vy9jd,-vz9jd])
                    fj47 = bm_3jd.verts.new([-vx10jd,-vy10jd,-vz10jd])
                    fk47 = bm_3jd.verts.new([-vx11jd,-vy11jd,-vz11jd])
                    fl47 = bm_3jd.verts.new([-vx12jd,-vy12jd,-vz12jd])

                    if type1jd == 1:
                        if type2jd == 1:
                            if type3jd == 0:
                                if type4jd == 0:
                                    if type5jd == 1:
                                        if type6jd == 1:
                                            if type7jd == 0:
                                                if type8jd == 0:
                                                    if type9jd == 1:
                                                        if type10jd == 1:
                                                            if type11jd == 0:
                                                                if type12jd == 0:
                                                                    bm_3jd.faces.new([fa47,fb47,fc47])
                                                                    bm_3jd.faces.new([fb47,fc47,fd47])
                                                                    bm_3jd.faces.new([fe47,ff47,fg47])
                                                                    bm_3jd.faces.new([ff47,fg47,fh47])
                                                                    bm_3jd.faces.new([fi47,fj47,fk47])
                                                                    bm_3jd.faces.new([fj47,fk47,fl47])

                    if type1jc == 1:
                        if type2jc == 1:
                            if type3jc == 0:
                                if type4jc == 0:
                                    if type5jc == 1:
                                        if type6jc == 1:
                                            if type7jc == 0:
                                                if type8jc == 0:
                                                    if type9jc == 0:
                                                        if type10jc == 0:
                                                            if type11jc == 0:
                                                                if type12jc == 0:
                                                                    bm_3jc.faces.new([fa46,fb46,fc46])
                                                                    bm_3jc.faces.new([fb46,fc46,fd46])
                                                                    bm_3jc.faces.new([fe46,ff46,fg46])
                                                                    bm_3jc.faces.new([ff46,fg46,fh46])
                                                                    bm_3jc.faces.new([fg46,fh46,fi46])
                                                                    bm_3jc.faces.new([fh46,fi46,fj46])
                                                                    bm_3jc.faces.new([fi46,fj46,fk46])
                                                                    bm_3jc.faces.new([fj46,fk46,fl46])

                    if type1jb == 1:
                        if type2jb == 1:
                            if type3jb == 0:
                                if type4jb == 0:
                                    if type5jb == 0:
                                        if type6jb == 0:
                                            if type7jb == 1:
                                                if type8jb == 1:
                                                    if type9jb == 0:
                                                        if type10jb == 0:
                                                            if type11jb == 1:
                                                                if type12jb == 1:
                                                                    bm_3jb.faces.new([fa45,fb45,fc45])
                                                                    bm_3jb.faces.new([fb45,fc45,fd45])
                                                                    bm_3jb.faces.new([fc45,fd45,fe45])
                                                                    bm_3jb.faces.new([fd45,fe45,ff45])
                                                                    bm_3jb.faces.new([fg45,fh45,fi45])
                                                                    bm_3jb.faces.new([fh45,fi45,fj45])
                                                                    bm_3jb.faces.new([fh45,fj45,fk45])
                                                                    bm_3jb.faces.new([fj45,fk45,fl45])

                    if type1ja == 1:
                        if type2ja == 1:
                            if type3ja == 0:
                                if type4ja == 0:
                                    if type5ja == 0:
                                        if type6ja == 0:
                                            if type7ja == 0:
                                                if type8ja == 0:
                                                    if type9ja == 0:
                                                        if type10ja == 0:
                                                            if type11ja == 0:
                                                                if type12ja == 0:
                                                                    bm_3ja.faces.new([fa44,fb44,fc44])
                                                                    bm_3ja.faces.new([fb44,fc44,fd44])
                                                                    bm_3ja.faces.new([fc44,fd44,fe44])
                                                                    bm_3ja.faces.new([fd44,fe44,ff44])
                                                                    bm_3ja.faces.new([fe44,ff44,fg44])
                                                                    bm_3ja.faces.new([ff44,fg44,fh44])
                                                                    bm_3ja.faces.new([fg44,fh44,fi44])
                                                                    bm_3ja.faces.new([fh44,fi44,fj44])
                                                                    bm_3ja.faces.new([fi44,fj44,fk44])
                                                                    bm_3ja.faces.new([fj44,fk44,fl44])

                    if type1j == 1:
                        if type2j == 1:
                            if type3j == 0:
                                if type4j == 0:
                                    if type5j == 0:
                                        if type6j == 0:
                                            if type7j == 1:
                                                if type8j == 1:
                                                    if type9j == 0:
                                                        if type10j == 0:
                                                            if type11j == 0:
                                                                if type12j == 0:
                                                                    bm_3j.faces.new([fa43,fb43,fc43])
                                                                    bm_3j.faces.new([fb43,fc43,fd43])
                                                                    bm_3j.faces.new([fc43,fd43,fe43])
                                                                    bm_3j.faces.new([fd43,fe43,ff43])
                                                                    bm_3j.faces.new([fg43,fh43,fi43])
                                                                    bm_3j.faces.new([fh43,fi43,fj43])
                                                                    bm_3j.faces.new([fi43,fj43,fk43])
                                                                    bm_3j.faces.new([fj43,fk43,fl43])
                                            
            elif vertexCount == 13:
                for i in range(vertexCount//13):
                    vx1k = unpack("<f", f.read(4))[0]
                    vy1k = unpack("<f", f.read(4))[0]
                    vz1k = unpack("<f", f.read(4))[0]
                    vw1k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2k = unpack("<f", f.read(4))[0]
                    vy2k = unpack("<f", f.read(4))[0]
                    vz2k = unpack("<f", f.read(4))[0]
                    vw2k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3k = unpack("<f", f.read(4))[0]
                    vy3k = unpack("<f", f.read(4))[0]
                    vz3k = unpack("<f", f.read(4))[0]
                    vw3k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4k = unpack("<f", f.read(4))[0]
                    vy4k = unpack("<f", f.read(4))[0]
                    vz4k = unpack("<f", f.read(4))[0]
                    vw4k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5k = unpack("<f", f.read(4))[0]
                    vy5k = unpack("<f", f.read(4))[0]
                    vz5k = unpack("<f", f.read(4))[0]
                    vw5k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6k = unpack("<f", f.read(4))[0]
                    vy6k = unpack("<f", f.read(4))[0]
                    vz6k = unpack("<f", f.read(4))[0]
                    vw6k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7k = unpack("<f", f.read(4))[0]
                    vy7k = unpack("<f", f.read(4))[0]
                    vz7k = unpack("<f", f.read(4))[0]
                    vw7k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8k = unpack("<f", f.read(4))[0]
                    vy8k = unpack("<f", f.read(4))[0]
                    vz8k = unpack("<f", f.read(4))[0]
                    vw8k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9k = unpack("<f", f.read(4))[0]
                    vy9k = unpack("<f", f.read(4))[0]
                    vz9k = unpack("<f", f.read(4))[0]
                    vw9k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10k = unpack("<f", f.read(4))[0]
                    vy10k = unpack("<f", f.read(4))[0]
                    vz10k = unpack("<f", f.read(4))[0]
                    vw10k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11k = unpack("<f", f.read(4))[0]
                    vy11k = unpack("<f", f.read(4))[0]
                    vz11k = unpack("<f", f.read(4))[0]
                    vw11k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12k = unpack("<f", f.read(4))[0]
                    vy12k = unpack("<f", f.read(4))[0]
                    vz12k = unpack("<f", f.read(4))[0]
                    vw12k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12k = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13k = unpack("<f", f.read(4))[0]
                    vy13k = unpack("<f", f.read(4))[0]
                    vz13k = unpack("<f", f.read(4))[0]
                    vw13k = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13k = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ka = unpack("<f", f.read(4))[0]
                    vy1ka = unpack("<f", f.read(4))[0]
                    vz1ka = unpack("<f", f.read(4))[0]
                    vw1ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ka = unpack("<f", f.read(4))[0]
                    vy2ka = unpack("<f", f.read(4))[0]
                    vz2ka = unpack("<f", f.read(4))[0]
                    vw2ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ka = unpack("<f", f.read(4))[0]
                    vy3ka = unpack("<f", f.read(4))[0]
                    vz3ka = unpack("<f", f.read(4))[0]
                    vw3ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ka = unpack("<f", f.read(4))[0]
                    vy4ka = unpack("<f", f.read(4))[0]
                    vz4ka = unpack("<f", f.read(4))[0]
                    vw4ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ka = unpack("<f", f.read(4))[0]
                    vy5ka = unpack("<f", f.read(4))[0]
                    vz5ka = unpack("<f", f.read(4))[0]
                    vw5ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ka = unpack("<f", f.read(4))[0]
                    vy6ka = unpack("<f", f.read(4))[0]
                    vz6ka = unpack("<f", f.read(4))[0]
                    vw6ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ka = unpack("<f", f.read(4))[0]
                    vy7ka = unpack("<f", f.read(4))[0]
                    vz7ka = unpack("<f", f.read(4))[0]
                    vw7ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ka = unpack("<f", f.read(4))[0]
                    vy8ka = unpack("<f", f.read(4))[0]
                    vz8ka = unpack("<f", f.read(4))[0]
                    vw8ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ka = unpack("<f", f.read(4))[0]
                    vy9ka = unpack("<f", f.read(4))[0]
                    vz9ka = unpack("<f", f.read(4))[0]
                    vw9ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ka = unpack("<f", f.read(4))[0]
                    vy10ka = unpack("<f", f.read(4))[0]
                    vz10ka = unpack("<f", f.read(4))[0]
                    vw10ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ka = unpack("<f", f.read(4))[0]
                    vy11ka = unpack("<f", f.read(4))[0]
                    vz11ka = unpack("<f", f.read(4))[0]
                    vw11ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ka = unpack("<f", f.read(4))[0]
                    vy12ka = unpack("<f", f.read(4))[0]
                    vz12ka = unpack("<f", f.read(4))[0]
                    vw12ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ka = unpack("<f", f.read(4))[0]
                    vy13ka = unpack("<f", f.read(4))[0]
                    vz13ka = unpack("<f", f.read(4))[0]
                    vw13ka = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ka = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kb = unpack("<f", f.read(4))[0]
                    vy1kb = unpack("<f", f.read(4))[0]
                    vz1kb = unpack("<f", f.read(4))[0]
                    vw1kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kb = unpack("<f", f.read(4))[0]
                    vy2kb = unpack("<f", f.read(4))[0]
                    vz2kb = unpack("<f", f.read(4))[0]
                    vw2kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kb = unpack("<f", f.read(4))[0]
                    vy3kb = unpack("<f", f.read(4))[0]
                    vz3kb = unpack("<f", f.read(4))[0]
                    vw3kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kb = unpack("<f", f.read(4))[0]
                    vy4kb = unpack("<f", f.read(4))[0]
                    vz4kb = unpack("<f", f.read(4))[0]
                    vw4kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kb = unpack("<f", f.read(4))[0]
                    vy5kb = unpack("<f", f.read(4))[0]
                    vz5kb = unpack("<f", f.read(4))[0]
                    vw5kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kb = unpack("<f", f.read(4))[0]
                    vy6kb = unpack("<f", f.read(4))[0]
                    vz6kb = unpack("<f", f.read(4))[0]
                    vw6kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kb = unpack("<f", f.read(4))[0]
                    vy7kb = unpack("<f", f.read(4))[0]
                    vz7kb = unpack("<f", f.read(4))[0]
                    vw7kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kb = unpack("<f", f.read(4))[0]
                    vy8kb = unpack("<f", f.read(4))[0]
                    vz8kb = unpack("<f", f.read(4))[0]
                    vw8kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kb = unpack("<f", f.read(4))[0]
                    vy9kb = unpack("<f", f.read(4))[0]
                    vz9kb = unpack("<f", f.read(4))[0]
                    vw9kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kb = unpack("<f", f.read(4))[0]
                    vy10kb = unpack("<f", f.read(4))[0]
                    vz10kb = unpack("<f", f.read(4))[0]
                    vw10kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kb = unpack("<f", f.read(4))[0]
                    vy11kb = unpack("<f", f.read(4))[0]
                    vz11kb = unpack("<f", f.read(4))[0]
                    vw11kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kb = unpack("<f", f.read(4))[0]
                    vy12kb = unpack("<f", f.read(4))[0]
                    vz12kb = unpack("<f", f.read(4))[0]
                    vw12kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kb = unpack("<f", f.read(4))[0]
                    vy13kb = unpack("<f", f.read(4))[0]
                    vz13kb = unpack("<f", f.read(4))[0]
                    vw13kb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kc = unpack("<f", f.read(4))[0]
                    vy1kc = unpack("<f", f.read(4))[0]
                    vz1kc = unpack("<f", f.read(4))[0]
                    vw1kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kc = unpack("<f", f.read(4))[0]
                    vy2kc = unpack("<f", f.read(4))[0]
                    vz2kc = unpack("<f", f.read(4))[0]
                    vw2kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kc = unpack("<f", f.read(4))[0]
                    vy3kc = unpack("<f", f.read(4))[0]
                    vz3kc = unpack("<f", f.read(4))[0]
                    vw3kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kc = unpack("<f", f.read(4))[0]
                    vy4kc = unpack("<f", f.read(4))[0]
                    vz4kc = unpack("<f", f.read(4))[0]
                    vw4kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kc = unpack("<f", f.read(4))[0]
                    vy5kc = unpack("<f", f.read(4))[0]
                    vz5kc = unpack("<f", f.read(4))[0]
                    vw5kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kc = unpack("<f", f.read(4))[0]
                    vy6kc = unpack("<f", f.read(4))[0]
                    vz6kc = unpack("<f", f.read(4))[0]
                    vw6kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kc = unpack("<f", f.read(4))[0]
                    vy7kc = unpack("<f", f.read(4))[0]
                    vz7kc = unpack("<f", f.read(4))[0]
                    vw7kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kc = unpack("<f", f.read(4))[0]
                    vy8kc = unpack("<f", f.read(4))[0]
                    vz8kc = unpack("<f", f.read(4))[0]
                    vw8kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kc = unpack("<f", f.read(4))[0]
                    vy9kc = unpack("<f", f.read(4))[0]
                    vz9kc = unpack("<f", f.read(4))[0]
                    vw9kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kc = unpack("<f", f.read(4))[0]
                    vy10kc = unpack("<f", f.read(4))[0]
                    vz10kc = unpack("<f", f.read(4))[0]
                    vw10kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kc = unpack("<f", f.read(4))[0]
                    vy11kc = unpack("<f", f.read(4))[0]
                    vz11kc = unpack("<f", f.read(4))[0]
                    vw11kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kc = unpack("<f", f.read(4))[0]
                    vy12kc = unpack("<f", f.read(4))[0]
                    vz12kc = unpack("<f", f.read(4))[0]
                    vw12kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kc = unpack("<f", f.read(4))[0]
                    vy13kc = unpack("<f", f.read(4))[0]
                    vz13kc = unpack("<f", f.read(4))[0]
                    vw13kc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kd = unpack("<f", f.read(4))[0]
                    vy1kd = unpack("<f", f.read(4))[0]
                    vz1kd = unpack("<f", f.read(4))[0]
                    vw1kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kd = unpack("<f", f.read(4))[0]
                    vy2kd = unpack("<f", f.read(4))[0]
                    vz2kd = unpack("<f", f.read(4))[0]
                    vw2kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kd = unpack("<f", f.read(4))[0]
                    vy3kd = unpack("<f", f.read(4))[0]
                    vz3kd = unpack("<f", f.read(4))[0]
                    vw3kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kd = unpack("<f", f.read(4))[0]
                    vy4kd = unpack("<f", f.read(4))[0]
                    vz4kd = unpack("<f", f.read(4))[0]
                    vw4kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kd = unpack("<f", f.read(4))[0]
                    vy5kd = unpack("<f", f.read(4))[0]
                    vz5kd = unpack("<f", f.read(4))[0]
                    vw5kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kd = unpack("<f", f.read(4))[0]
                    vy6kd = unpack("<f", f.read(4))[0]
                    vz6kd = unpack("<f", f.read(4))[0]
                    vw6kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kd = unpack("<f", f.read(4))[0]
                    vy7kd = unpack("<f", f.read(4))[0]
                    vz7kd = unpack("<f", f.read(4))[0]
                    vw7kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kd = unpack("<f", f.read(4))[0]
                    vy8kd = unpack("<f", f.read(4))[0]
                    vz8kd = unpack("<f", f.read(4))[0]
                    vw8kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kd = unpack("<f", f.read(4))[0]
                    vy9kd = unpack("<f", f.read(4))[0]
                    vz9kd = unpack("<f", f.read(4))[0]
                    vw9kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kd = unpack("<f", f.read(4))[0]
                    vy10kd = unpack("<f", f.read(4))[0]
                    vz10kd = unpack("<f", f.read(4))[0]
                    vw10kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kd = unpack("<f", f.read(4))[0]
                    vy11kd = unpack("<f", f.read(4))[0]
                    vz11kd = unpack("<f", f.read(4))[0]
                    vw11kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kd = unpack("<f", f.read(4))[0]
                    vy12kd = unpack("<f", f.read(4))[0]
                    vz12kd = unpack("<f", f.read(4))[0]
                    vw12kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kd = unpack("<f", f.read(4))[0]
                    vy13kd = unpack("<f", f.read(4))[0]
                    vz13kd = unpack("<f", f.read(4))[0]
                    vw13kd = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kd = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ke = unpack("<f", f.read(4))[0]
                    vy1ke = unpack("<f", f.read(4))[0]
                    vz1ke = unpack("<f", f.read(4))[0]
                    vw1ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ke = unpack("<f", f.read(4))[0]
                    vy2ke = unpack("<f", f.read(4))[0]
                    vz2ke = unpack("<f", f.read(4))[0]
                    vw2ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ke = unpack("<f", f.read(4))[0]
                    vy3ke = unpack("<f", f.read(4))[0]
                    vz3ke = unpack("<f", f.read(4))[0]
                    vw3ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ke = unpack("<f", f.read(4))[0]
                    vy4ke = unpack("<f", f.read(4))[0]
                    vz4ke = unpack("<f", f.read(4))[0]
                    vw4ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ke = unpack("<f", f.read(4))[0]
                    vy5ke = unpack("<f", f.read(4))[0]
                    vz5ke = unpack("<f", f.read(4))[0]
                    vw5ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ke = unpack("<f", f.read(4))[0]
                    vy6ke = unpack("<f", f.read(4))[0]
                    vz6ke = unpack("<f", f.read(4))[0]
                    vw6ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ke = unpack("<f", f.read(4))[0]
                    vy7ke = unpack("<f", f.read(4))[0]
                    vz7ke = unpack("<f", f.read(4))[0]
                    vw7ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ke = unpack("<f", f.read(4))[0]
                    vy8ke = unpack("<f", f.read(4))[0]
                    vz8ke = unpack("<f", f.read(4))[0]
                    vw8ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ke = unpack("<f", f.read(4))[0]
                    vy9ke = unpack("<f", f.read(4))[0]
                    vz9ke = unpack("<f", f.read(4))[0]
                    vw9ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ke = unpack("<f", f.read(4))[0]
                    vy10ke = unpack("<f", f.read(4))[0]
                    vz10ke = unpack("<f", f.read(4))[0]
                    vw10ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ke = unpack("<f", f.read(4))[0]
                    vy11ke = unpack("<f", f.read(4))[0]
                    vz11ke = unpack("<f", f.read(4))[0]
                    vw11ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ke = unpack("<f", f.read(4))[0]
                    vy12ke = unpack("<f", f.read(4))[0]
                    vz12ke = unpack("<f", f.read(4))[0]
                    vw12ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ke = unpack("<f", f.read(4))[0]
                    vy13ke = unpack("<f", f.read(4))[0]
                    vz13ke = unpack("<f", f.read(4))[0]
                    vw13ke = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ke = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kf = unpack("<f", f.read(4))[0]
                    vy1kf = unpack("<f", f.read(4))[0]
                    vz1kf = unpack("<f", f.read(4))[0]
                    vw1kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kf = unpack("<f", f.read(4))[0]
                    vy2kf = unpack("<f", f.read(4))[0]
                    vz2kf = unpack("<f", f.read(4))[0]
                    vw2kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kf = unpack("<f", f.read(4))[0]
                    vy3kf = unpack("<f", f.read(4))[0]
                    vz3kf = unpack("<f", f.read(4))[0]
                    vw3kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kf = unpack("<f", f.read(4))[0]
                    vy4kf = unpack("<f", f.read(4))[0]
                    vz4kf = unpack("<f", f.read(4))[0]
                    vw4kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kf = unpack("<f", f.read(4))[0]
                    vy5kf = unpack("<f", f.read(4))[0]
                    vz5kf = unpack("<f", f.read(4))[0]
                    vw5kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kf = unpack("<f", f.read(4))[0]
                    vy6kf = unpack("<f", f.read(4))[0]
                    vz6kf = unpack("<f", f.read(4))[0]
                    vw6kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kf = unpack("<f", f.read(4))[0]
                    vy7kf = unpack("<f", f.read(4))[0]
                    vz7kf = unpack("<f", f.read(4))[0]
                    vw7kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kf = unpack("<f", f.read(4))[0]
                    vy8kf = unpack("<f", f.read(4))[0]
                    vz8kf = unpack("<f", f.read(4))[0]
                    vw8kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kf = unpack("<f", f.read(4))[0]
                    vy9kf = unpack("<f", f.read(4))[0]
                    vz9kf = unpack("<f", f.read(4))[0]
                    vw9kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kf = unpack("<f", f.read(4))[0]
                    vy10kf = unpack("<f", f.read(4))[0]
                    vz10kf = unpack("<f", f.read(4))[0]
                    vw10kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kf = unpack("<f", f.read(4))[0]
                    vy11kf = unpack("<f", f.read(4))[0]
                    vz11kf = unpack("<f", f.read(4))[0]
                    vw11kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kf = unpack("<f", f.read(4))[0]
                    vy12kf = unpack("<f", f.read(4))[0]
                    vz12kf = unpack("<f", f.read(4))[0]
                    vw12kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kf = unpack("<f", f.read(4))[0]
                    vy13kf = unpack("<f", f.read(4))[0]
                    vz13kf = unpack("<f", f.read(4))[0]
                    vw13kf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kg = unpack("<f", f.read(4))[0]
                    vy1kg = unpack("<f", f.read(4))[0]
                    vz1kg = unpack("<f", f.read(4))[0]
                    vw1kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kg = unpack("<f", f.read(4))[0]
                    vy2kg = unpack("<f", f.read(4))[0]
                    vz2kg = unpack("<f", f.read(4))[0]
                    vw2kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kg = unpack("<f", f.read(4))[0]
                    vy3kg = unpack("<f", f.read(4))[0]
                    vz3kg = unpack("<f", f.read(4))[0]
                    vw3kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kg = unpack("<f", f.read(4))[0]
                    vy4kg = unpack("<f", f.read(4))[0]
                    vz4kg = unpack("<f", f.read(4))[0]
                    vw4kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kg = unpack("<f", f.read(4))[0]
                    vy5kg = unpack("<f", f.read(4))[0]
                    vz5kg = unpack("<f", f.read(4))[0]
                    vw5kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kg = unpack("<f", f.read(4))[0]
                    vy6kg = unpack("<f", f.read(4))[0]
                    vz6kg = unpack("<f", f.read(4))[0]
                    vw6kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kg = unpack("<f", f.read(4))[0]
                    vy7kg = unpack("<f", f.read(4))[0]
                    vz7kg = unpack("<f", f.read(4))[0]
                    vw7kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kg = unpack("<f", f.read(4))[0]
                    vy8kg = unpack("<f", f.read(4))[0]
                    vz8kg = unpack("<f", f.read(4))[0]
                    vw8kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kg = unpack("<f", f.read(4))[0]
                    vy9kg = unpack("<f", f.read(4))[0]
                    vz9kg = unpack("<f", f.read(4))[0]
                    vw9kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kg = unpack("<f", f.read(4))[0]
                    vy10kg = unpack("<f", f.read(4))[0]
                    vz10kg = unpack("<f", f.read(4))[0]
                    vw10kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kg = unpack("<f", f.read(4))[0]
                    vy11kg = unpack("<f", f.read(4))[0]
                    vz11kg = unpack("<f", f.read(4))[0]
                    vw11kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kg = unpack("<f", f.read(4))[0]
                    vy12kg = unpack("<f", f.read(4))[0]
                    vz12kg = unpack("<f", f.read(4))[0]
                    vw12kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kg = unpack("<f", f.read(4))[0]
                    vy13kg = unpack("<f", f.read(4))[0]
                    vz13kg = unpack("<f", f.read(4))[0]
                    vw13kg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kg = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kh = unpack("<f", f.read(4))[0]
                    vy1kh = unpack("<f", f.read(4))[0]
                    vz1kh = unpack("<f", f.read(4))[0]
                    vw1kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kh = unpack("<f", f.read(4))[0]
                    vy2kh = unpack("<f", f.read(4))[0]
                    vz2kh = unpack("<f", f.read(4))[0]
                    vw2kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kh = unpack("<f", f.read(4))[0]
                    vy3kh = unpack("<f", f.read(4))[0]
                    vz3kh = unpack("<f", f.read(4))[0]
                    vw3kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kh = unpack("<f", f.read(4))[0]
                    vy4kh = unpack("<f", f.read(4))[0]
                    vz4kh = unpack("<f", f.read(4))[0]
                    vw4kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kh = unpack("<f", f.read(4))[0]
                    vy5kh = unpack("<f", f.read(4))[0]
                    vz5kh = unpack("<f", f.read(4))[0]
                    vw5kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kh = unpack("<f", f.read(4))[0]
                    vy6kh = unpack("<f", f.read(4))[0]
                    vz6kh = unpack("<f", f.read(4))[0]
                    vw6kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kh = unpack("<f", f.read(4))[0]
                    vy7kh = unpack("<f", f.read(4))[0]
                    vz7kh = unpack("<f", f.read(4))[0]
                    vw7kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kh = unpack("<f", f.read(4))[0]
                    vy8kh = unpack("<f", f.read(4))[0]
                    vz8kh = unpack("<f", f.read(4))[0]
                    vw8kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kh = unpack("<f", f.read(4))[0]
                    vy9kh = unpack("<f", f.read(4))[0]
                    vz9kh = unpack("<f", f.read(4))[0]
                    vw9kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kh = unpack("<f", f.read(4))[0]
                    vy10kh = unpack("<f", f.read(4))[0]
                    vz10kh = unpack("<f", f.read(4))[0]
                    vw10kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kh = unpack("<f", f.read(4))[0]
                    vy11kh = unpack("<f", f.read(4))[0]
                    vz11kh = unpack("<f", f.read(4))[0]
                    vw11kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kh = unpack("<f", f.read(4))[0]
                    vy12kh = unpack("<f", f.read(4))[0]
                    vz12kh = unpack("<f", f.read(4))[0]
                    vw12kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kh = unpack("<f", f.read(4))[0]
                    vy13kh = unpack("<f", f.read(4))[0]
                    vz13kh = unpack("<f", f.read(4))[0]
                    vw13kh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kh = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ki = unpack("<f", f.read(4))[0]
                    vy1ki = unpack("<f", f.read(4))[0]
                    vz1ki = unpack("<f", f.read(4))[0]
                    vw1ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ki = unpack("<f", f.read(4))[0]
                    vy2ki = unpack("<f", f.read(4))[0]
                    vz2ki = unpack("<f", f.read(4))[0]
                    vw2ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ki = unpack("<f", f.read(4))[0]
                    vy3ki = unpack("<f", f.read(4))[0]
                    vz3ki = unpack("<f", f.read(4))[0]
                    vw3ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ki = unpack("<f", f.read(4))[0]
                    vy4ki = unpack("<f", f.read(4))[0]
                    vz4ki = unpack("<f", f.read(4))[0]
                    vw4ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ki = unpack("<f", f.read(4))[0]
                    vy5ki = unpack("<f", f.read(4))[0]
                    vz5ki = unpack("<f", f.read(4))[0]
                    vw5ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ki = unpack("<f", f.read(4))[0]
                    vy6ki = unpack("<f", f.read(4))[0]
                    vz6ki = unpack("<f", f.read(4))[0]
                    vw6ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ki = unpack("<f", f.read(4))[0]
                    vy7ki = unpack("<f", f.read(4))[0]
                    vz7ki = unpack("<f", f.read(4))[0]
                    vw7ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ki = unpack("<f", f.read(4))[0]
                    vy8ki = unpack("<f", f.read(4))[0]
                    vz8ki = unpack("<f", f.read(4))[0]
                    vw8ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ki = unpack("<f", f.read(4))[0]
                    vy9ki = unpack("<f", f.read(4))[0]
                    vz9ki = unpack("<f", f.read(4))[0]
                    vw9ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ki = unpack("<f", f.read(4))[0]
                    vy10ki = unpack("<f", f.read(4))[0]
                    vz10ki = unpack("<f", f.read(4))[0]
                    vw10ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ki = unpack("<f", f.read(4))[0]
                    vy11ki = unpack("<f", f.read(4))[0]
                    vz11ki = unpack("<f", f.read(4))[0]
                    vw11ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ki = unpack("<f", f.read(4))[0]
                    vy12ki = unpack("<f", f.read(4))[0]
                    vz12ki = unpack("<f", f.read(4))[0]
                    vw12ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ki = unpack("<f", f.read(4))[0]
                    vy13ki = unpack("<f", f.read(4))[0]
                    vz13ki = unpack("<f", f.read(4))[0]
                    vw13ki = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ki = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kj = unpack("<f", f.read(4))[0]
                    vy1kj = unpack("<f", f.read(4))[0]
                    vz1kj = unpack("<f", f.read(4))[0]
                    vw1kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kj = unpack("<f", f.read(4))[0]
                    vy2kj = unpack("<f", f.read(4))[0]
                    vz2kj = unpack("<f", f.read(4))[0]
                    vw2kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kj = unpack("<f", f.read(4))[0]
                    vy3kj = unpack("<f", f.read(4))[0]
                    vz3kj = unpack("<f", f.read(4))[0]
                    vw3kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kj = unpack("<f", f.read(4))[0]
                    vy4kj = unpack("<f", f.read(4))[0]
                    vz4kj = unpack("<f", f.read(4))[0]
                    vw4kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kj = unpack("<f", f.read(4))[0]
                    vy5kj = unpack("<f", f.read(4))[0]
                    vz5kj = unpack("<f", f.read(4))[0]
                    vw5kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kj = unpack("<f", f.read(4))[0]
                    vy6kj = unpack("<f", f.read(4))[0]
                    vz6kj = unpack("<f", f.read(4))[0]
                    vw6kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kj = unpack("<f", f.read(4))[0]
                    vy7kj = unpack("<f", f.read(4))[0]
                    vz7kj = unpack("<f", f.read(4))[0]
                    vw7kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kj = unpack("<f", f.read(4))[0]
                    vy8kj = unpack("<f", f.read(4))[0]
                    vz8kj = unpack("<f", f.read(4))[0]
                    vw8kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kj = unpack("<f", f.read(4))[0]
                    vy9kj = unpack("<f", f.read(4))[0]
                    vz9kj = unpack("<f", f.read(4))[0]
                    vw9kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kj = unpack("<f", f.read(4))[0]
                    vy10kj = unpack("<f", f.read(4))[0]
                    vz10kj = unpack("<f", f.read(4))[0]
                    vw10kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kj = unpack("<f", f.read(4))[0]
                    vy11kj = unpack("<f", f.read(4))[0]
                    vz11kj = unpack("<f", f.read(4))[0]
                    vw11kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kj = unpack("<f", f.read(4))[0]
                    vy12kj = unpack("<f", f.read(4))[0]
                    vz12kj = unpack("<f", f.read(4))[0]
                    vw12kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kj = unpack("<f", f.read(4))[0]
                    vy13kj = unpack("<f", f.read(4))[0]
                    vz13kj = unpack("<f", f.read(4))[0]
                    vw13kj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kj = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kk = unpack("<f", f.read(4))[0]
                    vy1kk = unpack("<f", f.read(4))[0]
                    vz1kk = unpack("<f", f.read(4))[0]
                    vw1kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kk = unpack("<f", f.read(4))[0]
                    vy2kk = unpack("<f", f.read(4))[0]
                    vz2kk = unpack("<f", f.read(4))[0]
                    vw2kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kk = unpack("<f", f.read(4))[0]
                    vy3kk = unpack("<f", f.read(4))[0]
                    vz3kk = unpack("<f", f.read(4))[0]
                    vw3kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kk = unpack("<f", f.read(4))[0]
                    vy4kk = unpack("<f", f.read(4))[0]
                    vz4kk = unpack("<f", f.read(4))[0]
                    vw4kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kk = unpack("<f", f.read(4))[0]
                    vy5kk = unpack("<f", f.read(4))[0]
                    vz5kk = unpack("<f", f.read(4))[0]
                    vw5kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kk = unpack("<f", f.read(4))[0]
                    vy6kk = unpack("<f", f.read(4))[0]
                    vz6kk = unpack("<f", f.read(4))[0]
                    vw6kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kk = unpack("<f", f.read(4))[0]
                    vy7kk = unpack("<f", f.read(4))[0]
                    vz7kk = unpack("<f", f.read(4))[0]
                    vw7kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kk = unpack("<f", f.read(4))[0]
                    vy8kk = unpack("<f", f.read(4))[0]
                    vz8kk = unpack("<f", f.read(4))[0]
                    vw8kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kk = unpack("<f", f.read(4))[0]
                    vy9kk = unpack("<f", f.read(4))[0]
                    vz9kk = unpack("<f", f.read(4))[0]
                    vw9kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kk = unpack("<f", f.read(4))[0]
                    vy10kk = unpack("<f", f.read(4))[0]
                    vz10kk = unpack("<f", f.read(4))[0]
                    vw10kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kk = unpack("<f", f.read(4))[0]
                    vy11kk = unpack("<f", f.read(4))[0]
                    vz11kk = unpack("<f", f.read(4))[0]
                    vw11kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kk = unpack("<f", f.read(4))[0]
                    vy12kk = unpack("<f", f.read(4))[0]
                    vz12kk = unpack("<f", f.read(4))[0]
                    vw12kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kk = unpack("<f", f.read(4))[0]
                    vy13kk = unpack("<f", f.read(4))[0]
                    vz13kk = unpack("<f", f.read(4))[0]
                    vw13kk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kk = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kl = unpack("<f", f.read(4))[0]
                    vy1kl = unpack("<f", f.read(4))[0]
                    vz1kl = unpack("<f", f.read(4))[0]
                    vw1kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kl = unpack("<f", f.read(4))[0]
                    vy2kl = unpack("<f", f.read(4))[0]
                    vz2kl = unpack("<f", f.read(4))[0]
                    vw2kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kl = unpack("<f", f.read(4))[0]
                    vy3kl = unpack("<f", f.read(4))[0]
                    vz3kl = unpack("<f", f.read(4))[0]
                    vw3kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kl = unpack("<f", f.read(4))[0]
                    vy4kl = unpack("<f", f.read(4))[0]
                    vz4kl = unpack("<f", f.read(4))[0]
                    vw4kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kl = unpack("<f", f.read(4))[0]
                    vy5kl = unpack("<f", f.read(4))[0]
                    vz5kl = unpack("<f", f.read(4))[0]
                    vw5kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kl = unpack("<f", f.read(4))[0]
                    vy6kl = unpack("<f", f.read(4))[0]
                    vz6kl = unpack("<f", f.read(4))[0]
                    vw6kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kl = unpack("<f", f.read(4))[0]
                    vy7kl = unpack("<f", f.read(4))[0]
                    vz7kl = unpack("<f", f.read(4))[0]
                    vw7kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kl = unpack("<f", f.read(4))[0]
                    vy8kl = unpack("<f", f.read(4))[0]
                    vz8kl = unpack("<f", f.read(4))[0]
                    vw8kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kl = unpack("<f", f.read(4))[0]
                    vy9kl = unpack("<f", f.read(4))[0]
                    vz9kl = unpack("<f", f.read(4))[0]
                    vw9kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kl = unpack("<f", f.read(4))[0]
                    vy10kl = unpack("<f", f.read(4))[0]
                    vz10kl = unpack("<f", f.read(4))[0]
                    vw10kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kl = unpack("<f", f.read(4))[0]
                    vy11kl = unpack("<f", f.read(4))[0]
                    vz11kl = unpack("<f", f.read(4))[0]
                    vw11kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kl = unpack("<f", f.read(4))[0]
                    vy12kl = unpack("<f", f.read(4))[0]
                    vz12kl = unpack("<f", f.read(4))[0]
                    vw12kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kl = unpack("<f", f.read(4))[0]
                    vy13kl = unpack("<f", f.read(4))[0]
                    vz13kl = unpack("<f", f.read(4))[0]
                    vw13kl = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kl = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1km = unpack("<f", f.read(4))[0]
                    vy1km = unpack("<f", f.read(4))[0]
                    vz1km = unpack("<f", f.read(4))[0]
                    vw1km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2km = unpack("<f", f.read(4))[0]
                    vy2km = unpack("<f", f.read(4))[0]
                    vz2km = unpack("<f", f.read(4))[0]
                    vw2km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3km = unpack("<f", f.read(4))[0]
                    vy3km = unpack("<f", f.read(4))[0]
                    vz3km = unpack("<f", f.read(4))[0]
                    vw3km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4km = unpack("<f", f.read(4))[0]
                    vy4km = unpack("<f", f.read(4))[0]
                    vz4km = unpack("<f", f.read(4))[0]
                    vw4km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5km = unpack("<f", f.read(4))[0]
                    vy5km = unpack("<f", f.read(4))[0]
                    vz5km = unpack("<f", f.read(4))[0]
                    vw5km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6km = unpack("<f", f.read(4))[0]
                    vy6km = unpack("<f", f.read(4))[0]
                    vz6km = unpack("<f", f.read(4))[0]
                    vw6km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7km = unpack("<f", f.read(4))[0]
                    vy7km = unpack("<f", f.read(4))[0]
                    vz7km = unpack("<f", f.read(4))[0]
                    vw7km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8km = unpack("<f", f.read(4))[0]
                    vy8km = unpack("<f", f.read(4))[0]
                    vz8km = unpack("<f", f.read(4))[0]
                    vw8km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9km = unpack("<f", f.read(4))[0]
                    vy9km = unpack("<f", f.read(4))[0]
                    vz9km = unpack("<f", f.read(4))[0]
                    vw9km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10km = unpack("<f", f.read(4))[0]
                    vy10km = unpack("<f", f.read(4))[0]
                    vz10km = unpack("<f", f.read(4))[0]
                    vw10km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11km = unpack("<f", f.read(4))[0]
                    vy11km = unpack("<f", f.read(4))[0]
                    vz11km = unpack("<f", f.read(4))[0]
                    vw11km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12km = unpack("<f", f.read(4))[0]
                    vy12km = unpack("<f", f.read(4))[0]
                    vz12km = unpack("<f", f.read(4))[0]
                    vw12km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12km = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13km = unpack("<f", f.read(4))[0]
                    vy13km = unpack("<f", f.read(4))[0]
                    vz13km = unpack("<f", f.read(4))[0]
                    vw13km = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13km = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kn = unpack("<f", f.read(4))[0]
                    vy1kn = unpack("<f", f.read(4))[0]
                    vz1kn = unpack("<f", f.read(4))[0]
                    vw1kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kn = unpack("<f", f.read(4))[0]
                    vy2kn = unpack("<f", f.read(4))[0]
                    vz2kn = unpack("<f", f.read(4))[0]
                    vw2kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kn = unpack("<f", f.read(4))[0]
                    vy3kn = unpack("<f", f.read(4))[0]
                    vz3kn = unpack("<f", f.read(4))[0]
                    vw3kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kn = unpack("<f", f.read(4))[0]
                    vy4kn = unpack("<f", f.read(4))[0]
                    vz4kn = unpack("<f", f.read(4))[0]
                    vw4kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kn = unpack("<f", f.read(4))[0]
                    vy5kn = unpack("<f", f.read(4))[0]
                    vz5kn = unpack("<f", f.read(4))[0]
                    vw5kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kn = unpack("<f", f.read(4))[0]
                    vy6kn = unpack("<f", f.read(4))[0]
                    vz6kn = unpack("<f", f.read(4))[0]
                    vw6kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kn = unpack("<f", f.read(4))[0]
                    vy7kn = unpack("<f", f.read(4))[0]
                    vz7kn = unpack("<f", f.read(4))[0]
                    vw7kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kn = unpack("<f", f.read(4))[0]
                    vy8kn = unpack("<f", f.read(4))[0]
                    vz8kn = unpack("<f", f.read(4))[0]
                    vw8kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kn = unpack("<f", f.read(4))[0]
                    vy9kn = unpack("<f", f.read(4))[0]
                    vz9kn = unpack("<f", f.read(4))[0]
                    vw9kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kn = unpack("<f", f.read(4))[0]
                    vy10kn = unpack("<f", f.read(4))[0]
                    vz10kn = unpack("<f", f.read(4))[0]
                    vw10kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kn = unpack("<f", f.read(4))[0]
                    vy11kn = unpack("<f", f.read(4))[0]
                    vz11kn = unpack("<f", f.read(4))[0]
                    vw11kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kn = unpack("<f", f.read(4))[0]
                    vy12kn = unpack("<f", f.read(4))[0]
                    vz12kn = unpack("<f", f.read(4))[0]
                    vw12kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kn = unpack("<f", f.read(4))[0]
                    vy13kn = unpack("<f", f.read(4))[0]
                    vz13kn = unpack("<f", f.read(4))[0]
                    vw13kn = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kn = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ko = unpack("<f", f.read(4))[0]
                    vy1ko = unpack("<f", f.read(4))[0]
                    vz1ko = unpack("<f", f.read(4))[0]
                    vw1ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ko = unpack("<f", f.read(4))[0]
                    vy2ko = unpack("<f", f.read(4))[0]
                    vz2ko = unpack("<f", f.read(4))[0]
                    vw2ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ko = unpack("<f", f.read(4))[0]
                    vy3ko = unpack("<f", f.read(4))[0]
                    vz3ko = unpack("<f", f.read(4))[0]
                    vw3ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ko = unpack("<f", f.read(4))[0]
                    vy4ko = unpack("<f", f.read(4))[0]
                    vz4ko = unpack("<f", f.read(4))[0]
                    vw4ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ko = unpack("<f", f.read(4))[0]
                    vy5ko = unpack("<f", f.read(4))[0]
                    vz5ko = unpack("<f", f.read(4))[0]
                    vw5ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ko = unpack("<f", f.read(4))[0]
                    vy6ko = unpack("<f", f.read(4))[0]
                    vz6ko = unpack("<f", f.read(4))[0]
                    vw6ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ko = unpack("<f", f.read(4))[0]
                    vy7ko = unpack("<f", f.read(4))[0]
                    vz7ko = unpack("<f", f.read(4))[0]
                    vw7ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ko = unpack("<f", f.read(4))[0]
                    vy8ko = unpack("<f", f.read(4))[0]
                    vz8ko = unpack("<f", f.read(4))[0]
                    vw8ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ko = unpack("<f", f.read(4))[0]
                    vy9ko = unpack("<f", f.read(4))[0]
                    vz9ko = unpack("<f", f.read(4))[0]
                    vw9ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ko = unpack("<f", f.read(4))[0]
                    vy10ko = unpack("<f", f.read(4))[0]
                    vz10ko = unpack("<f", f.read(4))[0]
                    vw10ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ko = unpack("<f", f.read(4))[0]
                    vy11ko = unpack("<f", f.read(4))[0]
                    vz11ko = unpack("<f", f.read(4))[0]
                    vw11ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ko = unpack("<f", f.read(4))[0]
                    vy12ko = unpack("<f", f.read(4))[0]
                    vz12ko = unpack("<f", f.read(4))[0]
                    vw12ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ko = unpack("<f", f.read(4))[0]
                    vy13ko = unpack("<f", f.read(4))[0]
                    vz13ko = unpack("<f", f.read(4))[0]
                    vw13ko = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ko = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kp = unpack("<f", f.read(4))[0]
                    vy1kp = unpack("<f", f.read(4))[0]
                    vz1kp = unpack("<f", f.read(4))[0]
                    vw1kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kp = unpack("<f", f.read(4))[0]
                    vy2kp = unpack("<f", f.read(4))[0]
                    vz2kp = unpack("<f", f.read(4))[0]
                    vw2kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kp = unpack("<f", f.read(4))[0]
                    vy3kp = unpack("<f", f.read(4))[0]
                    vz3kp = unpack("<f", f.read(4))[0]
                    vw3kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kp = unpack("<f", f.read(4))[0]
                    vy4kp = unpack("<f", f.read(4))[0]
                    vz4kp = unpack("<f", f.read(4))[0]
                    vw4kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kp = unpack("<f", f.read(4))[0]
                    vy5kp = unpack("<f", f.read(4))[0]
                    vz5kp = unpack("<f", f.read(4))[0]
                    vw5kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kp = unpack("<f", f.read(4))[0]
                    vy6kp = unpack("<f", f.read(4))[0]
                    vz6kp = unpack("<f", f.read(4))[0]
                    vw6kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kp = unpack("<f", f.read(4))[0]
                    vy7kp = unpack("<f", f.read(4))[0]
                    vz7kp = unpack("<f", f.read(4))[0]
                    vw7kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kp = unpack("<f", f.read(4))[0]
                    vy8kp = unpack("<f", f.read(4))[0]
                    vz8kp = unpack("<f", f.read(4))[0]
                    vw8kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kp = unpack("<f", f.read(4))[0]
                    vy9kp = unpack("<f", f.read(4))[0]
                    vz9kp = unpack("<f", f.read(4))[0]
                    vw9kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kp = unpack("<f", f.read(4))[0]
                    vy10kp = unpack("<f", f.read(4))[0]
                    vz10kp = unpack("<f", f.read(4))[0]
                    vw10kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kp = unpack("<f", f.read(4))[0]
                    vy11kp = unpack("<f", f.read(4))[0]
                    vz11kp = unpack("<f", f.read(4))[0]
                    vw11kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kp = unpack("<f", f.read(4))[0]
                    vy12kp = unpack("<f", f.read(4))[0]
                    vz12kp = unpack("<f", f.read(4))[0]
                    vw12kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kp = unpack("<f", f.read(4))[0]
                    vy13kp = unpack("<f", f.read(4))[0]
                    vz13kp = unpack("<f", f.read(4))[0]
                    vw13kp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kp = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kq = unpack("<f", f.read(4))[0]
                    vy1kq = unpack("<f", f.read(4))[0]
                    vz1kq = unpack("<f", f.read(4))[0]
                    vw1kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kq = unpack("<f", f.read(4))[0]
                    vy2kq = unpack("<f", f.read(4))[0]
                    vz2kq = unpack("<f", f.read(4))[0]
                    vw2kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kq = unpack("<f", f.read(4))[0]
                    vy3kq = unpack("<f", f.read(4))[0]
                    vz3kq = unpack("<f", f.read(4))[0]
                    vw3kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kq = unpack("<f", f.read(4))[0]
                    vy4kq = unpack("<f", f.read(4))[0]
                    vz4kq = unpack("<f", f.read(4))[0]
                    vw4kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kq = unpack("<f", f.read(4))[0]
                    vy5kq = unpack("<f", f.read(4))[0]
                    vz5kq = unpack("<f", f.read(4))[0]
                    vw5kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kq = unpack("<f", f.read(4))[0]
                    vy6kq = unpack("<f", f.read(4))[0]
                    vz6kq = unpack("<f", f.read(4))[0]
                    vw6kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kq = unpack("<f", f.read(4))[0]
                    vy7kq = unpack("<f", f.read(4))[0]
                    vz7kq = unpack("<f", f.read(4))[0]
                    vw7kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kq = unpack("<f", f.read(4))[0]
                    vy8kq = unpack("<f", f.read(4))[0]
                    vz8kq = unpack("<f", f.read(4))[0]
                    vw8kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kq = unpack("<f", f.read(4))[0]
                    vy9kq = unpack("<f", f.read(4))[0]
                    vz9kq = unpack("<f", f.read(4))[0]
                    vw9kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kq = unpack("<f", f.read(4))[0]
                    vy10kq = unpack("<f", f.read(4))[0]
                    vz10kq = unpack("<f", f.read(4))[0]
                    vw10kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kq = unpack("<f", f.read(4))[0]
                    vy11kq = unpack("<f", f.read(4))[0]
                    vz11kq = unpack("<f", f.read(4))[0]
                    vw11kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kq = unpack("<f", f.read(4))[0]
                    vy12kq = unpack("<f", f.read(4))[0]
                    vz12kq = unpack("<f", f.read(4))[0]
                    vw12kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kq = unpack("<f", f.read(4))[0]
                    vy13kq = unpack("<f", f.read(4))[0]
                    vz13kq = unpack("<f", f.read(4))[0]
                    vw13kq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kq = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kr = unpack("<f", f.read(4))[0]
                    vy1kr = unpack("<f", f.read(4))[0]
                    vz1kr = unpack("<f", f.read(4))[0]
                    vw1kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kr = unpack("<f", f.read(4))[0]
                    vy2kr = unpack("<f", f.read(4))[0]
                    vz2kr = unpack("<f", f.read(4))[0]
                    vw2kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kr = unpack("<f", f.read(4))[0]
                    vy3kr = unpack("<f", f.read(4))[0]
                    vz3kr = unpack("<f", f.read(4))[0]
                    vw3kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kr = unpack("<f", f.read(4))[0]
                    vy4kr = unpack("<f", f.read(4))[0]
                    vz4kr = unpack("<f", f.read(4))[0]
                    vw4kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kr = unpack("<f", f.read(4))[0]
                    vy5kr = unpack("<f", f.read(4))[0]
                    vz5kr = unpack("<f", f.read(4))[0]
                    vw5kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kr = unpack("<f", f.read(4))[0]
                    vy6kr = unpack("<f", f.read(4))[0]
                    vz6kr = unpack("<f", f.read(4))[0]
                    vw6kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kr = unpack("<f", f.read(4))[0]
                    vy7kr = unpack("<f", f.read(4))[0]
                    vz7kr = unpack("<f", f.read(4))[0]
                    vw7kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kr = unpack("<f", f.read(4))[0]
                    vy8kr = unpack("<f", f.read(4))[0]
                    vz8kr = unpack("<f", f.read(4))[0]
                    vw8kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kr = unpack("<f", f.read(4))[0]
                    vy9kr = unpack("<f", f.read(4))[0]
                    vz9kr = unpack("<f", f.read(4))[0]
                    vw9kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kr = unpack("<f", f.read(4))[0]
                    vy10kr = unpack("<f", f.read(4))[0]
                    vz10kr = unpack("<f", f.read(4))[0]
                    vw10kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kr = unpack("<f", f.read(4))[0]
                    vy11kr = unpack("<f", f.read(4))[0]
                    vz11kr = unpack("<f", f.read(4))[0]
                    vw11kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kr = unpack("<f", f.read(4))[0]
                    vy12kr = unpack("<f", f.read(4))[0]
                    vz12kr = unpack("<f", f.read(4))[0]
                    vw12kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kr = unpack("<f", f.read(4))[0]
                    vy13kr = unpack("<f", f.read(4))[0]
                    vz13kr = unpack("<f", f.read(4))[0]
                    vw13kr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kr = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ks = unpack("<f", f.read(4))[0]
                    vy1ks = unpack("<f", f.read(4))[0]
                    vz1ks = unpack("<f", f.read(4))[0]
                    vw1ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ks = unpack("<f", f.read(4))[0]
                    vy2ks = unpack("<f", f.read(4))[0]
                    vz2ks = unpack("<f", f.read(4))[0]
                    vw2ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ks = unpack("<f", f.read(4))[0]
                    vy3ks = unpack("<f", f.read(4))[0]
                    vz3ks = unpack("<f", f.read(4))[0]
                    vw3ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ks = unpack("<f", f.read(4))[0]
                    vy4ks = unpack("<f", f.read(4))[0]
                    vz4ks = unpack("<f", f.read(4))[0]
                    vw4ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ks = unpack("<f", f.read(4))[0]
                    vy5ks = unpack("<f", f.read(4))[0]
                    vz5ks = unpack("<f", f.read(4))[0]
                    vw5ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ks = unpack("<f", f.read(4))[0]
                    vy6ks = unpack("<f", f.read(4))[0]
                    vz6ks = unpack("<f", f.read(4))[0]
                    vw6ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ks = unpack("<f", f.read(4))[0]
                    vy7ks = unpack("<f", f.read(4))[0]
                    vz7ks = unpack("<f", f.read(4))[0]
                    vw7ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ks = unpack("<f", f.read(4))[0]
                    vy8ks = unpack("<f", f.read(4))[0]
                    vz8ks = unpack("<f", f.read(4))[0]
                    vw8ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ks = unpack("<f", f.read(4))[0]
                    vy9ks = unpack("<f", f.read(4))[0]
                    vz9ks = unpack("<f", f.read(4))[0]
                    vw9ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ks = unpack("<f", f.read(4))[0]
                    vy10ks = unpack("<f", f.read(4))[0]
                    vz10ks = unpack("<f", f.read(4))[0]
                    vw10ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ks = unpack("<f", f.read(4))[0]
                    vy11ks = unpack("<f", f.read(4))[0]
                    vz11ks = unpack("<f", f.read(4))[0]
                    vw11ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ks = unpack("<f", f.read(4))[0]
                    vy12ks = unpack("<f", f.read(4))[0]
                    vz12ks = unpack("<f", f.read(4))[0]
                    vw12ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ks = unpack("<f", f.read(4))[0]
                    vy13ks = unpack("<f", f.read(4))[0]
                    vz13ks = unpack("<f", f.read(4))[0]
                    vw13ks = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ks = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kt = unpack("<f", f.read(4))[0]
                    vy1kt = unpack("<f", f.read(4))[0]
                    vz1kt = unpack("<f", f.read(4))[0]
                    vw1kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kt = unpack("<f", f.read(4))[0]
                    vy2kt = unpack("<f", f.read(4))[0]
                    vz2kt = unpack("<f", f.read(4))[0]
                    vw2kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kt = unpack("<f", f.read(4))[0]
                    vy3kt = unpack("<f", f.read(4))[0]
                    vz3kt = unpack("<f", f.read(4))[0]
                    vw3kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kt = unpack("<f", f.read(4))[0]
                    vy4kt = unpack("<f", f.read(4))[0]
                    vz4kt = unpack("<f", f.read(4))[0]
                    vw4kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kt = unpack("<f", f.read(4))[0]
                    vy5kt = unpack("<f", f.read(4))[0]
                    vz5kt = unpack("<f", f.read(4))[0]
                    vw5kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kt = unpack("<f", f.read(4))[0]
                    vy6kt = unpack("<f", f.read(4))[0]
                    vz6kt = unpack("<f", f.read(4))[0]
                    vw6kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kt = unpack("<f", f.read(4))[0]
                    vy7kt = unpack("<f", f.read(4))[0]
                    vz7kt = unpack("<f", f.read(4))[0]
                    vw7kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kt = unpack("<f", f.read(4))[0]
                    vy8kt = unpack("<f", f.read(4))[0]
                    vz8kt = unpack("<f", f.read(4))[0]
                    vw8kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kt = unpack("<f", f.read(4))[0]
                    vy9kt = unpack("<f", f.read(4))[0]
                    vz9kt = unpack("<f", f.read(4))[0]
                    vw9kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kt = unpack("<f", f.read(4))[0]
                    vy10kt = unpack("<f", f.read(4))[0]
                    vz10kt = unpack("<f", f.read(4))[0]
                    vw10kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kt = unpack("<f", f.read(4))[0]
                    vy11kt = unpack("<f", f.read(4))[0]
                    vz11kt = unpack("<f", f.read(4))[0]
                    vw11kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kt = unpack("<f", f.read(4))[0]
                    vy12kt = unpack("<f", f.read(4))[0]
                    vz12kt = unpack("<f", f.read(4))[0]
                    vw12kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kt = unpack("<f", f.read(4))[0]
                    vy13kt = unpack("<f", f.read(4))[0]
                    vz13kt = unpack("<f", f.read(4))[0]
                    vw13kt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kt = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ku = unpack("<f", f.read(4))[0]
                    vy1ku = unpack("<f", f.read(4))[0]
                    vz1ku = unpack("<f", f.read(4))[0]
                    vw1ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ku = unpack("<f", f.read(4))[0]
                    vy2ku = unpack("<f", f.read(4))[0]
                    vz2ku = unpack("<f", f.read(4))[0]
                    vw2ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ku = unpack("<f", f.read(4))[0]
                    vy3ku = unpack("<f", f.read(4))[0]
                    vz3ku = unpack("<f", f.read(4))[0]
                    vw3ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ku = unpack("<f", f.read(4))[0]
                    vy4ku = unpack("<f", f.read(4))[0]
                    vz4ku = unpack("<f", f.read(4))[0]
                    vw4ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ku = unpack("<f", f.read(4))[0]
                    vy5ku = unpack("<f", f.read(4))[0]
                    vz5ku = unpack("<f", f.read(4))[0]
                    vw5ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ku = unpack("<f", f.read(4))[0]
                    vy6ku = unpack("<f", f.read(4))[0]
                    vz6ku = unpack("<f", f.read(4))[0]
                    vw6ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ku = unpack("<f", f.read(4))[0]
                    vy7ku = unpack("<f", f.read(4))[0]
                    vz7ku = unpack("<f", f.read(4))[0]
                    vw7ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ku = unpack("<f", f.read(4))[0]
                    vy8ku = unpack("<f", f.read(4))[0]
                    vz8ku = unpack("<f", f.read(4))[0]
                    vw8ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ku = unpack("<f", f.read(4))[0]
                    vy9ku = unpack("<f", f.read(4))[0]
                    vz9ku = unpack("<f", f.read(4))[0]
                    vw9ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ku = unpack("<f", f.read(4))[0]
                    vy10ku = unpack("<f", f.read(4))[0]
                    vz10ku = unpack("<f", f.read(4))[0]
                    vw10ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ku = unpack("<f", f.read(4))[0]
                    vy11ku = unpack("<f", f.read(4))[0]
                    vz11ku = unpack("<f", f.read(4))[0]
                    vw11ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ku = unpack("<f", f.read(4))[0]
                    vy12ku = unpack("<f", f.read(4))[0]
                    vz12ku = unpack("<f", f.read(4))[0]
                    vw12ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ku = unpack("<f", f.read(4))[0]
                    vy13ku = unpack("<f", f.read(4))[0]
                    vz13ku = unpack("<f", f.read(4))[0]
                    vw13ku = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ku = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kv = unpack("<f", f.read(4))[0]
                    vy1kv = unpack("<f", f.read(4))[0]
                    vz1kv = unpack("<f", f.read(4))[0]
                    vw1kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kv = unpack("<f", f.read(4))[0]
                    vy2kv = unpack("<f", f.read(4))[0]
                    vz2kv = unpack("<f", f.read(4))[0]
                    vw2kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kv = unpack("<f", f.read(4))[0]
                    vy3kv = unpack("<f", f.read(4))[0]
                    vz3kv = unpack("<f", f.read(4))[0]
                    vw3kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kv = unpack("<f", f.read(4))[0]
                    vy4kv = unpack("<f", f.read(4))[0]
                    vz4kv = unpack("<f", f.read(4))[0]
                    vw4kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kv = unpack("<f", f.read(4))[0]
                    vy5kv = unpack("<f", f.read(4))[0]
                    vz5kv = unpack("<f", f.read(4))[0]
                    vw5kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kv = unpack("<f", f.read(4))[0]
                    vy6kv = unpack("<f", f.read(4))[0]
                    vz6kv = unpack("<f", f.read(4))[0]
                    vw6kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kv = unpack("<f", f.read(4))[0]
                    vy7kv = unpack("<f", f.read(4))[0]
                    vz7kv = unpack("<f", f.read(4))[0]
                    vw7kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kv = unpack("<f", f.read(4))[0]
                    vy8kv = unpack("<f", f.read(4))[0]
                    vz8kv = unpack("<f", f.read(4))[0]
                    vw8kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kv = unpack("<f", f.read(4))[0]
                    vy9kv = unpack("<f", f.read(4))[0]
                    vz9kv = unpack("<f", f.read(4))[0]
                    vw9kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kv = unpack("<f", f.read(4))[0]
                    vy10kv = unpack("<f", f.read(4))[0]
                    vz10kv = unpack("<f", f.read(4))[0]
                    vw10kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kv = unpack("<f", f.read(4))[0]
                    vy11kv = unpack("<f", f.read(4))[0]
                    vz11kv = unpack("<f", f.read(4))[0]
                    vw11kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kv = unpack("<f", f.read(4))[0]
                    vy12kv = unpack("<f", f.read(4))[0]
                    vz12kv = unpack("<f", f.read(4))[0]
                    vw12kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kv = unpack("<f", f.read(4))[0]
                    vy13kv = unpack("<f", f.read(4))[0]
                    vz13kv = unpack("<f", f.read(4))[0]
                    vw13kv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kv = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kw = unpack("<f", f.read(4))[0]
                    vy1kw = unpack("<f", f.read(4))[0]
                    vz1kw = unpack("<f", f.read(4))[0]
                    vw1kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kw = unpack("<f", f.read(4))[0]
                    vy2kw = unpack("<f", f.read(4))[0]
                    vz2kw = unpack("<f", f.read(4))[0]
                    vw2kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kw = unpack("<f", f.read(4))[0]
                    vy3kw = unpack("<f", f.read(4))[0]
                    vz3kw = unpack("<f", f.read(4))[0]
                    vw3kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kw = unpack("<f", f.read(4))[0]
                    vy4kw = unpack("<f", f.read(4))[0]
                    vz4kw = unpack("<f", f.read(4))[0]
                    vw4kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kw = unpack("<f", f.read(4))[0]
                    vy5kw = unpack("<f", f.read(4))[0]
                    vz5kw = unpack("<f", f.read(4))[0]
                    vw5kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kw = unpack("<f", f.read(4))[0]
                    vy6kw = unpack("<f", f.read(4))[0]
                    vz6kw = unpack("<f", f.read(4))[0]
                    vw6kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kw = unpack("<f", f.read(4))[0]
                    vy7kw = unpack("<f", f.read(4))[0]
                    vz7kw = unpack("<f", f.read(4))[0]
                    vw7kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kw = unpack("<f", f.read(4))[0]
                    vy8kw = unpack("<f", f.read(4))[0]
                    vz8kw = unpack("<f", f.read(4))[0]
                    vw8kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kw = unpack("<f", f.read(4))[0]
                    vy9kw = unpack("<f", f.read(4))[0]
                    vz9kw = unpack("<f", f.read(4))[0]
                    vw9kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kw = unpack("<f", f.read(4))[0]
                    vy10kw = unpack("<f", f.read(4))[0]
                    vz10kw = unpack("<f", f.read(4))[0]
                    vw10kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kw = unpack("<f", f.read(4))[0]
                    vy11kw = unpack("<f", f.read(4))[0]
                    vz11kw = unpack("<f", f.read(4))[0]
                    vw11kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kw = unpack("<f", f.read(4))[0]
                    vy12kw = unpack("<f", f.read(4))[0]
                    vz12kw = unpack("<f", f.read(4))[0]
                    vw12kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kw = unpack("<f", f.read(4))[0]
                    vy13kw = unpack("<f", f.read(4))[0]
                    vz13kw = unpack("<f", f.read(4))[0]
                    vw13kw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kw = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kx = unpack("<f", f.read(4))[0]
                    vy1kx = unpack("<f", f.read(4))[0]
                    vz1kx = unpack("<f", f.read(4))[0]
                    vw1kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kx = unpack("<f", f.read(4))[0]
                    vy2kx = unpack("<f", f.read(4))[0]
                    vz2kx = unpack("<f", f.read(4))[0]
                    vw2kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kx = unpack("<f", f.read(4))[0]
                    vy3kx = unpack("<f", f.read(4))[0]
                    vz3kx = unpack("<f", f.read(4))[0]
                    vw3kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kx = unpack("<f", f.read(4))[0]
                    vy4kx = unpack("<f", f.read(4))[0]
                    vz4kx = unpack("<f", f.read(4))[0]
                    vw4kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kx = unpack("<f", f.read(4))[0]
                    vy5kx = unpack("<f", f.read(4))[0]
                    vz5kx = unpack("<f", f.read(4))[0]
                    vw5kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kx = unpack("<f", f.read(4))[0]
                    vy6kx = unpack("<f", f.read(4))[0]
                    vz6kx = unpack("<f", f.read(4))[0]
                    vw6kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kx = unpack("<f", f.read(4))[0]
                    vy7kx = unpack("<f", f.read(4))[0]
                    vz7kx = unpack("<f", f.read(4))[0]
                    vw7kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kx = unpack("<f", f.read(4))[0]
                    vy8kx = unpack("<f", f.read(4))[0]
                    vz8kx = unpack("<f", f.read(4))[0]
                    vw8kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kx = unpack("<f", f.read(4))[0]
                    vy9kx = unpack("<f", f.read(4))[0]
                    vz9kx = unpack("<f", f.read(4))[0]
                    vw9kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kx = unpack("<f", f.read(4))[0]
                    vy10kx = unpack("<f", f.read(4))[0]
                    vz10kx = unpack("<f", f.read(4))[0]
                    vw10kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kx = unpack("<f", f.read(4))[0]
                    vy11kx = unpack("<f", f.read(4))[0]
                    vz11kx = unpack("<f", f.read(4))[0]
                    vw11kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kx = unpack("<f", f.read(4))[0]
                    vy12kx = unpack("<f", f.read(4))[0]
                    vz12kx = unpack("<f", f.read(4))[0]
                    vw12kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kx = unpack("<f", f.read(4))[0]
                    vy13kx = unpack("<f", f.read(4))[0]
                    vz13kx = unpack("<f", f.read(4))[0]
                    vw13kx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kx = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1ky = unpack("<f", f.read(4))[0]
                    vy1ky = unpack("<f", f.read(4))[0]
                    vz1ky = unpack("<f", f.read(4))[0]
                    vw1ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ky = unpack("<f", f.read(4))[0]
                    vy2ky = unpack("<f", f.read(4))[0]
                    vz2ky = unpack("<f", f.read(4))[0]
                    vw2ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ky = unpack("<f", f.read(4))[0]
                    vy3ky = unpack("<f", f.read(4))[0]
                    vz3ky = unpack("<f", f.read(4))[0]
                    vw3ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ky = unpack("<f", f.read(4))[0]
                    vy4ky = unpack("<f", f.read(4))[0]
                    vz4ky = unpack("<f", f.read(4))[0]
                    vw4ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ky = unpack("<f", f.read(4))[0]
                    vy5ky = unpack("<f", f.read(4))[0]
                    vz5ky = unpack("<f", f.read(4))[0]
                    vw5ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ky = unpack("<f", f.read(4))[0]
                    vy6ky = unpack("<f", f.read(4))[0]
                    vz6ky = unpack("<f", f.read(4))[0]
                    vw6ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ky = unpack("<f", f.read(4))[0]
                    vy7ky = unpack("<f", f.read(4))[0]
                    vz7ky = unpack("<f", f.read(4))[0]
                    vw7ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ky = unpack("<f", f.read(4))[0]
                    vy8ky = unpack("<f", f.read(4))[0]
                    vz8ky = unpack("<f", f.read(4))[0]
                    vw8ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ky = unpack("<f", f.read(4))[0]
                    vy9ky = unpack("<f", f.read(4))[0]
                    vz9ky = unpack("<f", f.read(4))[0]
                    vw9ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ky = unpack("<f", f.read(4))[0]
                    vy10ky = unpack("<f", f.read(4))[0]
                    vz10ky = unpack("<f", f.read(4))[0]
                    vw10ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ky = unpack("<f", f.read(4))[0]
                    vy11ky = unpack("<f", f.read(4))[0]
                    vz11ky = unpack("<f", f.read(4))[0]
                    vw11ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ky = unpack("<f", f.read(4))[0]
                    vy12ky = unpack("<f", f.read(4))[0]
                    vz12ky = unpack("<f", f.read(4))[0]
                    vw12ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ky = unpack("<f", f.read(4))[0]
                    vy13ky = unpack("<f", f.read(4))[0]
                    vz13ky = unpack("<f", f.read(4))[0]
                    vw13ky = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ky = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kz = unpack("<f", f.read(4))[0]
                    vy1kz = unpack("<f", f.read(4))[0]
                    vz1kz = unpack("<f", f.read(4))[0]
                    vw1kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kz = unpack("<f", f.read(4))[0]
                    vy2kz = unpack("<f", f.read(4))[0]
                    vz2kz = unpack("<f", f.read(4))[0]
                    vw2kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kz = unpack("<f", f.read(4))[0]
                    vy3kz = unpack("<f", f.read(4))[0]
                    vz3kz = unpack("<f", f.read(4))[0]
                    vw3kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kz = unpack("<f", f.read(4))[0]
                    vy4kz = unpack("<f", f.read(4))[0]
                    vz4kz = unpack("<f", f.read(4))[0]
                    vw4kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kz = unpack("<f", f.read(4))[0]
                    vy5kz = unpack("<f", f.read(4))[0]
                    vz5kz = unpack("<f", f.read(4))[0]
                    vw5kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kz = unpack("<f", f.read(4))[0]
                    vy6kz = unpack("<f", f.read(4))[0]
                    vz6kz = unpack("<f", f.read(4))[0]
                    vw6kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kz = unpack("<f", f.read(4))[0]
                    vy7kz = unpack("<f", f.read(4))[0]
                    vz7kz = unpack("<f", f.read(4))[0]
                    vw7kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kz = unpack("<f", f.read(4))[0]
                    vy8kz = unpack("<f", f.read(4))[0]
                    vz8kz = unpack("<f", f.read(4))[0]
                    vw8kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kz = unpack("<f", f.read(4))[0]
                    vy9kz = unpack("<f", f.read(4))[0]
                    vz9kz = unpack("<f", f.read(4))[0]
                    vw9kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kz = unpack("<f", f.read(4))[0]
                    vy10kz = unpack("<f", f.read(4))[0]
                    vz10kz = unpack("<f", f.read(4))[0]
                    vw10kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kz = unpack("<f", f.read(4))[0]
                    vy11kz = unpack("<f", f.read(4))[0]
                    vz11kz = unpack("<f", f.read(4))[0]
                    vw11kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kz = unpack("<f", f.read(4))[0]
                    vy12kz = unpack("<f", f.read(4))[0]
                    vz12kz = unpack("<f", f.read(4))[0]
                    vw12kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kz = unpack("<f", f.read(4))[0]
                    vy13kz = unpack("<f", f.read(4))[0]
                    vz13kz = unpack("<f", f.read(4))[0]
                    vw13kz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kz = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaa = unpack("<f", f.read(4))[0]
                    vy1kaa = unpack("<f", f.read(4))[0]
                    vz1kaa = unpack("<f", f.read(4))[0]
                    vw1kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaa = unpack("<f", f.read(4))[0]
                    vy2kaa = unpack("<f", f.read(4))[0]
                    vz2kaa = unpack("<f", f.read(4))[0]
                    vw2kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaa = unpack("<f", f.read(4))[0]
                    vy3kaa = unpack("<f", f.read(4))[0]
                    vz3kaa = unpack("<f", f.read(4))[0]
                    vw3kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaa = unpack("<f", f.read(4))[0]
                    vy4kaa = unpack("<f", f.read(4))[0]
                    vz4kaa = unpack("<f", f.read(4))[0]
                    vw4kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaa = unpack("<f", f.read(4))[0]
                    vy5kaa = unpack("<f", f.read(4))[0]
                    vz5kaa = unpack("<f", f.read(4))[0]
                    vw5kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaa = unpack("<f", f.read(4))[0]
                    vy6kaa = unpack("<f", f.read(4))[0]
                    vz6kaa = unpack("<f", f.read(4))[0]
                    vw6kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaa = unpack("<f", f.read(4))[0]
                    vy7kaa = unpack("<f", f.read(4))[0]
                    vz7kaa = unpack("<f", f.read(4))[0]
                    vw7kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaa = unpack("<f", f.read(4))[0]
                    vy8kaa = unpack("<f", f.read(4))[0]
                    vz8kaa = unpack("<f", f.read(4))[0]
                    vw8kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaa = unpack("<f", f.read(4))[0]
                    vy9kaa = unpack("<f", f.read(4))[0]
                    vz9kaa = unpack("<f", f.read(4))[0]
                    vw9kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaa = unpack("<f", f.read(4))[0]
                    vy10kaa = unpack("<f", f.read(4))[0]
                    vz10kaa = unpack("<f", f.read(4))[0]
                    vw10kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaa = unpack("<f", f.read(4))[0]
                    vy11kaa = unpack("<f", f.read(4))[0]
                    vz11kaa = unpack("<f", f.read(4))[0]
                    vw11kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaa = unpack("<f", f.read(4))[0]
                    vy12kaa = unpack("<f", f.read(4))[0]
                    vz12kaa = unpack("<f", f.read(4))[0]
                    vw12kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaa = unpack("<f", f.read(4))[0]
                    vy13kaa = unpack("<f", f.read(4))[0]
                    vz13kaa = unpack("<f", f.read(4))[0]
                    vw13kaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kab = unpack("<f", f.read(4))[0]
                    vy1kab = unpack("<f", f.read(4))[0]
                    vz1kab = unpack("<f", f.read(4))[0]
                    vw1kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kab = unpack("<f", f.read(4))[0]
                    vy2kab = unpack("<f", f.read(4))[0]
                    vz2kab = unpack("<f", f.read(4))[0]
                    vw2kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kab = unpack("<f", f.read(4))[0]
                    vy3kab = unpack("<f", f.read(4))[0]
                    vz3kab = unpack("<f", f.read(4))[0]
                    vw3kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kab = unpack("<f", f.read(4))[0]
                    vy4kab = unpack("<f", f.read(4))[0]
                    vz4kab = unpack("<f", f.read(4))[0]
                    vw4kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kab = unpack("<f", f.read(4))[0]
                    vy5kab = unpack("<f", f.read(4))[0]
                    vz5kab = unpack("<f", f.read(4))[0]
                    vw5kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kab = unpack("<f", f.read(4))[0]
                    vy6kab = unpack("<f", f.read(4))[0]
                    vz6kab = unpack("<f", f.read(4))[0]
                    vw6kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kab = unpack("<f", f.read(4))[0]
                    vy7kab = unpack("<f", f.read(4))[0]
                    vz7kab = unpack("<f", f.read(4))[0]
                    vw7kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kab = unpack("<f", f.read(4))[0]
                    vy8kab = unpack("<f", f.read(4))[0]
                    vz8kab = unpack("<f", f.read(4))[0]
                    vw8kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kab = unpack("<f", f.read(4))[0]
                    vy9kab = unpack("<f", f.read(4))[0]
                    vz9kab = unpack("<f", f.read(4))[0]
                    vw9kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kab = unpack("<f", f.read(4))[0]
                    vy10kab = unpack("<f", f.read(4))[0]
                    vz10kab = unpack("<f", f.read(4))[0]
                    vw10kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kab = unpack("<f", f.read(4))[0]
                    vy11kab = unpack("<f", f.read(4))[0]
                    vz11kab = unpack("<f", f.read(4))[0]
                    vw11kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kab = unpack("<f", f.read(4))[0]
                    vy12kab = unpack("<f", f.read(4))[0]
                    vz12kab = unpack("<f", f.read(4))[0]
                    vw12kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kab = unpack("<f", f.read(4))[0]
                    vy13kab = unpack("<f", f.read(4))[0]
                    vz13kab = unpack("<f", f.read(4))[0]
                    vw13kab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kab = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kac = unpack("<f", f.read(4))[0]
                    vy1kac = unpack("<f", f.read(4))[0]
                    vz1kac = unpack("<f", f.read(4))[0]
                    vw1kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kac = unpack("<f", f.read(4))[0]
                    vy2kac = unpack("<f", f.read(4))[0]
                    vz2kac = unpack("<f", f.read(4))[0]
                    vw2kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kac = unpack("<f", f.read(4))[0]
                    vy3kac = unpack("<f", f.read(4))[0]
                    vz3kac = unpack("<f", f.read(4))[0]
                    vw3kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kac = unpack("<f", f.read(4))[0]
                    vy4kac = unpack("<f", f.read(4))[0]
                    vz4kac = unpack("<f", f.read(4))[0]
                    vw4kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kac = unpack("<f", f.read(4))[0]
                    vy5kac = unpack("<f", f.read(4))[0]
                    vz5kac = unpack("<f", f.read(4))[0]
                    vw5kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kac = unpack("<f", f.read(4))[0]
                    vy6kac = unpack("<f", f.read(4))[0]
                    vz6kac = unpack("<f", f.read(4))[0]
                    vw6kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kac = unpack("<f", f.read(4))[0]
                    vy7kac = unpack("<f", f.read(4))[0]
                    vz7kac = unpack("<f", f.read(4))[0]
                    vw7kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kac = unpack("<f", f.read(4))[0]
                    vy8kac = unpack("<f", f.read(4))[0]
                    vz8kac = unpack("<f", f.read(4))[0]
                    vw8kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kac = unpack("<f", f.read(4))[0]
                    vy9kac = unpack("<f", f.read(4))[0]
                    vz9kac = unpack("<f", f.read(4))[0]
                    vw9kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kac = unpack("<f", f.read(4))[0]
                    vy10kac = unpack("<f", f.read(4))[0]
                    vz10kac = unpack("<f", f.read(4))[0]
                    vw10kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kac = unpack("<f", f.read(4))[0]
                    vy11kac = unpack("<f", f.read(4))[0]
                    vz11kac = unpack("<f", f.read(4))[0]
                    vw11kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kac = unpack("<f", f.read(4))[0]
                    vy12kac = unpack("<f", f.read(4))[0]
                    vz12kac = unpack("<f", f.read(4))[0]
                    vw12kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kac = unpack("<f", f.read(4))[0]
                    vy13kac = unpack("<f", f.read(4))[0]
                    vz13kac = unpack("<f", f.read(4))[0]
                    vw13kac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kac = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kad = unpack("<f", f.read(4))[0]
                    vy1kad = unpack("<f", f.read(4))[0]
                    vz1kad = unpack("<f", f.read(4))[0]
                    vw1kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kad = unpack("<f", f.read(4))[0]
                    vy2kad = unpack("<f", f.read(4))[0]
                    vz2kad = unpack("<f", f.read(4))[0]
                    vw2kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kad = unpack("<f", f.read(4))[0]
                    vy3kad = unpack("<f", f.read(4))[0]
                    vz3kad = unpack("<f", f.read(4))[0]
                    vw3kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kad = unpack("<f", f.read(4))[0]
                    vy4kad = unpack("<f", f.read(4))[0]
                    vz4kad = unpack("<f", f.read(4))[0]
                    vw4kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kad = unpack("<f", f.read(4))[0]
                    vy5kad = unpack("<f", f.read(4))[0]
                    vz5kad = unpack("<f", f.read(4))[0]
                    vw5kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kad = unpack("<f", f.read(4))[0]
                    vy6kad = unpack("<f", f.read(4))[0]
                    vz6kad = unpack("<f", f.read(4))[0]
                    vw6kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kad = unpack("<f", f.read(4))[0]
                    vy7kad = unpack("<f", f.read(4))[0]
                    vz7kad = unpack("<f", f.read(4))[0]
                    vw7kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kad = unpack("<f", f.read(4))[0]
                    vy8kad = unpack("<f", f.read(4))[0]
                    vz8kad = unpack("<f", f.read(4))[0]
                    vw8kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kad = unpack("<f", f.read(4))[0]
                    vy9kad = unpack("<f", f.read(4))[0]
                    vz9kad = unpack("<f", f.read(4))[0]
                    vw9kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kad = unpack("<f", f.read(4))[0]
                    vy10kad = unpack("<f", f.read(4))[0]
                    vz10kad = unpack("<f", f.read(4))[0]
                    vw10kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kad = unpack("<f", f.read(4))[0]
                    vy11kad = unpack("<f", f.read(4))[0]
                    vz11kad = unpack("<f", f.read(4))[0]
                    vw11kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kad = unpack("<f", f.read(4))[0]
                    vy12kad = unpack("<f", f.read(4))[0]
                    vz12kad = unpack("<f", f.read(4))[0]
                    vw12kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kad = unpack("<f", f.read(4))[0]
                    vy13kad = unpack("<f", f.read(4))[0]
                    vz13kad = unpack("<f", f.read(4))[0]
                    vw13kad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kad = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kae = unpack("<f", f.read(4))[0]
                    vy1kae = unpack("<f", f.read(4))[0]
                    vz1kae = unpack("<f", f.read(4))[0]
                    vw1kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kae = unpack("<f", f.read(4))[0]
                    vy2kae = unpack("<f", f.read(4))[0]
                    vz2kae = unpack("<f", f.read(4))[0]
                    vw2kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kae = unpack("<f", f.read(4))[0]
                    vy3kae = unpack("<f", f.read(4))[0]
                    vz3kae = unpack("<f", f.read(4))[0]
                    vw3kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kae = unpack("<f", f.read(4))[0]
                    vy4kae = unpack("<f", f.read(4))[0]
                    vz4kae = unpack("<f", f.read(4))[0]
                    vw4kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kae = unpack("<f", f.read(4))[0]
                    vy5kae = unpack("<f", f.read(4))[0]
                    vz5kae = unpack("<f", f.read(4))[0]
                    vw5kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kae = unpack("<f", f.read(4))[0]
                    vy6kae = unpack("<f", f.read(4))[0]
                    vz6kae = unpack("<f", f.read(4))[0]
                    vw6kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kae = unpack("<f", f.read(4))[0]
                    vy7kae = unpack("<f", f.read(4))[0]
                    vz7kae = unpack("<f", f.read(4))[0]
                    vw7kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kae = unpack("<f", f.read(4))[0]
                    vy8kae = unpack("<f", f.read(4))[0]
                    vz8kae = unpack("<f", f.read(4))[0]
                    vw8kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kae = unpack("<f", f.read(4))[0]
                    vy9kae = unpack("<f", f.read(4))[0]
                    vz9kae = unpack("<f", f.read(4))[0]
                    vw9kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kae = unpack("<f", f.read(4))[0]
                    vy10kae = unpack("<f", f.read(4))[0]
                    vz10kae = unpack("<f", f.read(4))[0]
                    vw10kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kae = unpack("<f", f.read(4))[0]
                    vy11kae = unpack("<f", f.read(4))[0]
                    vz11kae = unpack("<f", f.read(4))[0]
                    vw11kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kae = unpack("<f", f.read(4))[0]
                    vy12kae = unpack("<f", f.read(4))[0]
                    vz12kae = unpack("<f", f.read(4))[0]
                    vw12kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kae = unpack("<f", f.read(4))[0]
                    vy13kae = unpack("<f", f.read(4))[0]
                    vz13kae = unpack("<f", f.read(4))[0]
                    vw13kae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kae = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaf = unpack("<f", f.read(4))[0]
                    vy1kaf = unpack("<f", f.read(4))[0]
                    vz1kaf = unpack("<f", f.read(4))[0]
                    vw1kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaf = unpack("<f", f.read(4))[0]
                    vy2kaf = unpack("<f", f.read(4))[0]
                    vz2kaf = unpack("<f", f.read(4))[0]
                    vw2kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaf = unpack("<f", f.read(4))[0]
                    vy3kaf = unpack("<f", f.read(4))[0]
                    vz3kaf = unpack("<f", f.read(4))[0]
                    vw3kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaf = unpack("<f", f.read(4))[0]
                    vy4kaf = unpack("<f", f.read(4))[0]
                    vz4kaf = unpack("<f", f.read(4))[0]
                    vw4kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaf = unpack("<f", f.read(4))[0]
                    vy5kaf = unpack("<f", f.read(4))[0]
                    vz5kaf = unpack("<f", f.read(4))[0]
                    vw5kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaf = unpack("<f", f.read(4))[0]
                    vy6kaf = unpack("<f", f.read(4))[0]
                    vz6kaf = unpack("<f", f.read(4))[0]
                    vw6kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaf = unpack("<f", f.read(4))[0]
                    vy7kaf = unpack("<f", f.read(4))[0]
                    vz7kaf = unpack("<f", f.read(4))[0]
                    vw7kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaf = unpack("<f", f.read(4))[0]
                    vy8kaf = unpack("<f", f.read(4))[0]
                    vz8kaf = unpack("<f", f.read(4))[0]
                    vw8kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaf = unpack("<f", f.read(4))[0]
                    vy9kaf = unpack("<f", f.read(4))[0]
                    vz9kaf = unpack("<f", f.read(4))[0]
                    vw9kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaf = unpack("<f", f.read(4))[0]
                    vy10kaf = unpack("<f", f.read(4))[0]
                    vz10kaf = unpack("<f", f.read(4))[0]
                    vw10kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaf = unpack("<f", f.read(4))[0]
                    vy11kaf = unpack("<f", f.read(4))[0]
                    vz11kaf = unpack("<f", f.read(4))[0]
                    vw11kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaf = unpack("<f", f.read(4))[0]
                    vy12kaf = unpack("<f", f.read(4))[0]
                    vz12kaf = unpack("<f", f.read(4))[0]
                    vw12kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaf = unpack("<f", f.read(4))[0]
                    vy13kaf = unpack("<f", f.read(4))[0]
                    vz13kaf = unpack("<f", f.read(4))[0]
                    vw13kaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kag = unpack("<f", f.read(4))[0]
                    vy1kag = unpack("<f", f.read(4))[0]
                    vz1kag = unpack("<f", f.read(4))[0]
                    vw1kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kag = unpack("<f", f.read(4))[0]
                    vy2kag = unpack("<f", f.read(4))[0]
                    vz2kag = unpack("<f", f.read(4))[0]
                    vw2kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kag = unpack("<f", f.read(4))[0]
                    vy3kag = unpack("<f", f.read(4))[0]
                    vz3kag = unpack("<f", f.read(4))[0]
                    vw3kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kag = unpack("<f", f.read(4))[0]
                    vy4kag = unpack("<f", f.read(4))[0]
                    vz4kag = unpack("<f", f.read(4))[0]
                    vw4kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kag = unpack("<f", f.read(4))[0]
                    vy5kag = unpack("<f", f.read(4))[0]
                    vz5kag = unpack("<f", f.read(4))[0]
                    vw5kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kag = unpack("<f", f.read(4))[0]
                    vy6kag = unpack("<f", f.read(4))[0]
                    vz6kag = unpack("<f", f.read(4))[0]
                    vw6kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kag = unpack("<f", f.read(4))[0]
                    vy7kag = unpack("<f", f.read(4))[0]
                    vz7kag = unpack("<f", f.read(4))[0]
                    vw7kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kag = unpack("<f", f.read(4))[0]
                    vy8kag = unpack("<f", f.read(4))[0]
                    vz8kag = unpack("<f", f.read(4))[0]
                    vw8kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kag = unpack("<f", f.read(4))[0]
                    vy9kag = unpack("<f", f.read(4))[0]
                    vz9kag = unpack("<f", f.read(4))[0]
                    vw9kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kag = unpack("<f", f.read(4))[0]
                    vy10kag = unpack("<f", f.read(4))[0]
                    vz10kag = unpack("<f", f.read(4))[0]
                    vw10kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kag = unpack("<f", f.read(4))[0]
                    vy11kag = unpack("<f", f.read(4))[0]
                    vz11kag = unpack("<f", f.read(4))[0]
                    vw11kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kag = unpack("<f", f.read(4))[0]
                    vy12kag = unpack("<f", f.read(4))[0]
                    vz12kag = unpack("<f", f.read(4))[0]
                    vw12kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kag = unpack("<f", f.read(4))[0]
                    vy13kag = unpack("<f", f.read(4))[0]
                    vz13kag = unpack("<f", f.read(4))[0]
                    vw13kag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kag = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kah = unpack("<f", f.read(4))[0]
                    vy1kah = unpack("<f", f.read(4))[0]
                    vz1kah = unpack("<f", f.read(4))[0]
                    vw1kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kah = unpack("<f", f.read(4))[0]
                    vy2kah = unpack("<f", f.read(4))[0]
                    vz2kah = unpack("<f", f.read(4))[0]
                    vw2kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kah = unpack("<f", f.read(4))[0]
                    vy3kah = unpack("<f", f.read(4))[0]
                    vz3kah = unpack("<f", f.read(4))[0]
                    vw3kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kah = unpack("<f", f.read(4))[0]
                    vy4kah = unpack("<f", f.read(4))[0]
                    vz4kah = unpack("<f", f.read(4))[0]
                    vw4kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kah = unpack("<f", f.read(4))[0]
                    vy5kah = unpack("<f", f.read(4))[0]
                    vz5kah = unpack("<f", f.read(4))[0]
                    vw5kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kah = unpack("<f", f.read(4))[0]
                    vy6kah = unpack("<f", f.read(4))[0]
                    vz6kah = unpack("<f", f.read(4))[0]
                    vw6kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kah = unpack("<f", f.read(4))[0]
                    vy7kah = unpack("<f", f.read(4))[0]
                    vz7kah = unpack("<f", f.read(4))[0]
                    vw7kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kah = unpack("<f", f.read(4))[0]
                    vy8kah = unpack("<f", f.read(4))[0]
                    vz8kah = unpack("<f", f.read(4))[0]
                    vw8kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kah = unpack("<f", f.read(4))[0]
                    vy9kah = unpack("<f", f.read(4))[0]
                    vz9kah = unpack("<f", f.read(4))[0]
                    vw9kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kah = unpack("<f", f.read(4))[0]
                    vy10kah = unpack("<f", f.read(4))[0]
                    vz10kah = unpack("<f", f.read(4))[0]
                    vw10kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kah = unpack("<f", f.read(4))[0]
                    vy11kah = unpack("<f", f.read(4))[0]
                    vz11kah = unpack("<f", f.read(4))[0]
                    vw11kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kah = unpack("<f", f.read(4))[0]
                    vy12kah = unpack("<f", f.read(4))[0]
                    vz12kah = unpack("<f", f.read(4))[0]
                    vw12kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kah = unpack("<f", f.read(4))[0]
                    vy13kah = unpack("<f", f.read(4))[0]
                    vz13kah = unpack("<f", f.read(4))[0]
                    vw13kah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kah = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kai = unpack("<f", f.read(4))[0]
                    vy1kai = unpack("<f", f.read(4))[0]
                    vz1kai = unpack("<f", f.read(4))[0]
                    vw1kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kai = unpack("<f", f.read(4))[0]
                    vy2kai = unpack("<f", f.read(4))[0]
                    vz2kai = unpack("<f", f.read(4))[0]
                    vw2kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kai = unpack("<f", f.read(4))[0]
                    vy3kai = unpack("<f", f.read(4))[0]
                    vz3kai = unpack("<f", f.read(4))[0]
                    vw3kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kai = unpack("<f", f.read(4))[0]
                    vy4kai = unpack("<f", f.read(4))[0]
                    vz4kai = unpack("<f", f.read(4))[0]
                    vw4kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kai = unpack("<f", f.read(4))[0]
                    vy5kai = unpack("<f", f.read(4))[0]
                    vz5kai = unpack("<f", f.read(4))[0]
                    vw5kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kai = unpack("<f", f.read(4))[0]
                    vy6kai = unpack("<f", f.read(4))[0]
                    vz6kai = unpack("<f", f.read(4))[0]
                    vw6kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kai = unpack("<f", f.read(4))[0]
                    vy7kai = unpack("<f", f.read(4))[0]
                    vz7kai = unpack("<f", f.read(4))[0]
                    vw7kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kai = unpack("<f", f.read(4))[0]
                    vy8kai = unpack("<f", f.read(4))[0]
                    vz8kai = unpack("<f", f.read(4))[0]
                    vw8kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kai = unpack("<f", f.read(4))[0]
                    vy9kai = unpack("<f", f.read(4))[0]
                    vz9kai = unpack("<f", f.read(4))[0]
                    vw9kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kai = unpack("<f", f.read(4))[0]
                    vy10kai = unpack("<f", f.read(4))[0]
                    vz10kai = unpack("<f", f.read(4))[0]
                    vw10kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kai = unpack("<f", f.read(4))[0]
                    vy11kai = unpack("<f", f.read(4))[0]
                    vz11kai = unpack("<f", f.read(4))[0]
                    vw11kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kai = unpack("<f", f.read(4))[0]
                    vy12kai = unpack("<f", f.read(4))[0]
                    vz12kai = unpack("<f", f.read(4))[0]
                    vw12kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kai = unpack("<f", f.read(4))[0]
                    vy13kai = unpack("<f", f.read(4))[0]
                    vz13kai = unpack("<f", f.read(4))[0]
                    vw13kai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kai = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaj = unpack("<f", f.read(4))[0]
                    vy1kaj = unpack("<f", f.read(4))[0]
                    vz1kaj = unpack("<f", f.read(4))[0]
                    vw1kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaj = unpack("<f", f.read(4))[0]
                    vy2kaj = unpack("<f", f.read(4))[0]
                    vz2kaj = unpack("<f", f.read(4))[0]
                    vw2kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaj = unpack("<f", f.read(4))[0]
                    vy3kaj = unpack("<f", f.read(4))[0]
                    vz3kaj = unpack("<f", f.read(4))[0]
                    vw3kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaj = unpack("<f", f.read(4))[0]
                    vy4kaj = unpack("<f", f.read(4))[0]
                    vz4kaj = unpack("<f", f.read(4))[0]
                    vw4kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaj = unpack("<f", f.read(4))[0]
                    vy5kaj = unpack("<f", f.read(4))[0]
                    vz5kaj = unpack("<f", f.read(4))[0]
                    vw5kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaj = unpack("<f", f.read(4))[0]
                    vy6kaj = unpack("<f", f.read(4))[0]
                    vz6kaj = unpack("<f", f.read(4))[0]
                    vw6kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaj = unpack("<f", f.read(4))[0]
                    vy7kaj = unpack("<f", f.read(4))[0]
                    vz7kaj = unpack("<f", f.read(4))[0]
                    vw7kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaj = unpack("<f", f.read(4))[0]
                    vy8kaj = unpack("<f", f.read(4))[0]
                    vz8kaj = unpack("<f", f.read(4))[0]
                    vw8kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaj = unpack("<f", f.read(4))[0]
                    vy9kaj = unpack("<f", f.read(4))[0]
                    vz9kaj = unpack("<f", f.read(4))[0]
                    vw9kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaj = unpack("<f", f.read(4))[0]
                    vy10kaj = unpack("<f", f.read(4))[0]
                    vz10kaj = unpack("<f", f.read(4))[0]
                    vw10kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaj = unpack("<f", f.read(4))[0]
                    vy11kaj = unpack("<f", f.read(4))[0]
                    vz11kaj = unpack("<f", f.read(4))[0]
                    vw11kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaj = unpack("<f", f.read(4))[0]
                    vy12kaj = unpack("<f", f.read(4))[0]
                    vz12kaj = unpack("<f", f.read(4))[0]
                    vw12kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaj = unpack("<f", f.read(4))[0]
                    vy13kaj = unpack("<f", f.read(4))[0]
                    vz13kaj = unpack("<f", f.read(4))[0]
                    vw13kaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kak = unpack("<f", f.read(4))[0]
                    vy1kak = unpack("<f", f.read(4))[0]
                    vz1kak = unpack("<f", f.read(4))[0]
                    vw1kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kak = unpack("<f", f.read(4))[0]
                    vy2kak = unpack("<f", f.read(4))[0]
                    vz2kak = unpack("<f", f.read(4))[0]
                    vw2kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kak = unpack("<f", f.read(4))[0]
                    vy3kak = unpack("<f", f.read(4))[0]
                    vz3kak = unpack("<f", f.read(4))[0]
                    vw3kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kak = unpack("<f", f.read(4))[0]
                    vy4kak = unpack("<f", f.read(4))[0]
                    vz4kak = unpack("<f", f.read(4))[0]
                    vw4kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kak = unpack("<f", f.read(4))[0]
                    vy5kak = unpack("<f", f.read(4))[0]
                    vz5kak = unpack("<f", f.read(4))[0]
                    vw5kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kak = unpack("<f", f.read(4))[0]
                    vy6kak = unpack("<f", f.read(4))[0]
                    vz6kak = unpack("<f", f.read(4))[0]
                    vw6kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kak = unpack("<f", f.read(4))[0]
                    vy7kak = unpack("<f", f.read(4))[0]
                    vz7kak = unpack("<f", f.read(4))[0]
                    vw7kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kak = unpack("<f", f.read(4))[0]
                    vy8kak = unpack("<f", f.read(4))[0]
                    vz8kak = unpack("<f", f.read(4))[0]
                    vw8kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kak = unpack("<f", f.read(4))[0]
                    vy9kak = unpack("<f", f.read(4))[0]
                    vz9kak = unpack("<f", f.read(4))[0]
                    vw9kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kak = unpack("<f", f.read(4))[0]
                    vy10kak = unpack("<f", f.read(4))[0]
                    vz10kak = unpack("<f", f.read(4))[0]
                    vw10kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kak = unpack("<f", f.read(4))[0]
                    vy11kak = unpack("<f", f.read(4))[0]
                    vz11kak = unpack("<f", f.read(4))[0]
                    vw11kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kak = unpack("<f", f.read(4))[0]
                    vy12kak = unpack("<f", f.read(4))[0]
                    vz12kak = unpack("<f", f.read(4))[0]
                    vw12kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kak = unpack("<f", f.read(4))[0]
                    vy13kak = unpack("<f", f.read(4))[0]
                    vz13kak = unpack("<f", f.read(4))[0]
                    vw13kak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kak = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kal = unpack("<f", f.read(4))[0]
                    vy1kal = unpack("<f", f.read(4))[0]
                    vz1kal = unpack("<f", f.read(4))[0]
                    vw1kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kal = unpack("<f", f.read(4))[0]
                    vy2kal = unpack("<f", f.read(4))[0]
                    vz2kal = unpack("<f", f.read(4))[0]
                    vw2kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kal = unpack("<f", f.read(4))[0]
                    vy3kal = unpack("<f", f.read(4))[0]
                    vz3kal = unpack("<f", f.read(4))[0]
                    vw3kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kal = unpack("<f", f.read(4))[0]
                    vy4kal = unpack("<f", f.read(4))[0]
                    vz4kal = unpack("<f", f.read(4))[0]
                    vw4kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kal = unpack("<f", f.read(4))[0]
                    vy5kal = unpack("<f", f.read(4))[0]
                    vz5kal = unpack("<f", f.read(4))[0]
                    vw5kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kal = unpack("<f", f.read(4))[0]
                    vy6kal = unpack("<f", f.read(4))[0]
                    vz6kal = unpack("<f", f.read(4))[0]
                    vw6kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kal = unpack("<f", f.read(4))[0]
                    vy7kal = unpack("<f", f.read(4))[0]
                    vz7kal = unpack("<f", f.read(4))[0]
                    vw7kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kal = unpack("<f", f.read(4))[0]
                    vy8kal = unpack("<f", f.read(4))[0]
                    vz8kal = unpack("<f", f.read(4))[0]
                    vw8kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kal = unpack("<f", f.read(4))[0]
                    vy9kal = unpack("<f", f.read(4))[0]
                    vz9kal = unpack("<f", f.read(4))[0]
                    vw9kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kal = unpack("<f", f.read(4))[0]
                    vy10kal = unpack("<f", f.read(4))[0]
                    vz10kal = unpack("<f", f.read(4))[0]
                    vw10kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kal = unpack("<f", f.read(4))[0]
                    vy11kal = unpack("<f", f.read(4))[0]
                    vz11kal = unpack("<f", f.read(4))[0]
                    vw11kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kal = unpack("<f", f.read(4))[0]
                    vy12kal = unpack("<f", f.read(4))[0]
                    vz12kal = unpack("<f", f.read(4))[0]
                    vw12kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kal = unpack("<f", f.read(4))[0]
                    vy13kal = unpack("<f", f.read(4))[0]
                    vz13kal = unpack("<f", f.read(4))[0]
                    vw13kal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kal = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kam = unpack("<f", f.read(4))[0]
                    vy1kam = unpack("<f", f.read(4))[0]
                    vz1kam = unpack("<f", f.read(4))[0]
                    vw1kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kam = unpack("<f", f.read(4))[0]
                    vy2kam = unpack("<f", f.read(4))[0]
                    vz2kam = unpack("<f", f.read(4))[0]
                    vw2kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kam = unpack("<f", f.read(4))[0]
                    vy3kam = unpack("<f", f.read(4))[0]
                    vz3kam = unpack("<f", f.read(4))[0]
                    vw3kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kam = unpack("<f", f.read(4))[0]
                    vy4kam = unpack("<f", f.read(4))[0]
                    vz4kam = unpack("<f", f.read(4))[0]
                    vw4kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kam = unpack("<f", f.read(4))[0]
                    vy5kam = unpack("<f", f.read(4))[0]
                    vz5kam = unpack("<f", f.read(4))[0]
                    vw5kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kam = unpack("<f", f.read(4))[0]
                    vy6kam = unpack("<f", f.read(4))[0]
                    vz6kam = unpack("<f", f.read(4))[0]
                    vw6kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kam = unpack("<f", f.read(4))[0]
                    vy7kam = unpack("<f", f.read(4))[0]
                    vz7kam = unpack("<f", f.read(4))[0]
                    vw7kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kam = unpack("<f", f.read(4))[0]
                    vy8kam = unpack("<f", f.read(4))[0]
                    vz8kam = unpack("<f", f.read(4))[0]
                    vw8kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kam = unpack("<f", f.read(4))[0]
                    vy9kam = unpack("<f", f.read(4))[0]
                    vz9kam = unpack("<f", f.read(4))[0]
                    vw9kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kam = unpack("<f", f.read(4))[0]
                    vy10kam = unpack("<f", f.read(4))[0]
                    vz10kam = unpack("<f", f.read(4))[0]
                    vw10kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kam = unpack("<f", f.read(4))[0]
                    vy11kam = unpack("<f", f.read(4))[0]
                    vz11kam = unpack("<f", f.read(4))[0]
                    vw11kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kam = unpack("<f", f.read(4))[0]
                    vy12kam = unpack("<f", f.read(4))[0]
                    vz12kam = unpack("<f", f.read(4))[0]
                    vw12kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kam = unpack("<f", f.read(4))[0]
                    vy13kam = unpack("<f", f.read(4))[0]
                    vz13kam = unpack("<f", f.read(4))[0]
                    vw13kam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kam = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kan = unpack("<f", f.read(4))[0]
                    vy1kan = unpack("<f", f.read(4))[0]
                    vz1kan = unpack("<f", f.read(4))[0]
                    vw1kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kan = unpack("<f", f.read(4))[0]
                    vy2kan = unpack("<f", f.read(4))[0]
                    vz2kan = unpack("<f", f.read(4))[0]
                    vw2kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kan = unpack("<f", f.read(4))[0]
                    vy3kan = unpack("<f", f.read(4))[0]
                    vz3kan = unpack("<f", f.read(4))[0]
                    vw3kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kan = unpack("<f", f.read(4))[0]
                    vy4kan = unpack("<f", f.read(4))[0]
                    vz4kan = unpack("<f", f.read(4))[0]
                    vw4kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kan = unpack("<f", f.read(4))[0]
                    vy5kan = unpack("<f", f.read(4))[0]
                    vz5kan = unpack("<f", f.read(4))[0]
                    vw5kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kan = unpack("<f", f.read(4))[0]
                    vy6kan = unpack("<f", f.read(4))[0]
                    vz6kan = unpack("<f", f.read(4))[0]
                    vw6kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kan = unpack("<f", f.read(4))[0]
                    vy7kan = unpack("<f", f.read(4))[0]
                    vz7kan = unpack("<f", f.read(4))[0]
                    vw7kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kan = unpack("<f", f.read(4))[0]
                    vy8kan = unpack("<f", f.read(4))[0]
                    vz8kan = unpack("<f", f.read(4))[0]
                    vw8kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kan = unpack("<f", f.read(4))[0]
                    vy9kan = unpack("<f", f.read(4))[0]
                    vz9kan = unpack("<f", f.read(4))[0]
                    vw9kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kan = unpack("<f", f.read(4))[0]
                    vy10kan = unpack("<f", f.read(4))[0]
                    vz10kan = unpack("<f", f.read(4))[0]
                    vw10kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kan = unpack("<f", f.read(4))[0]
                    vy11kan = unpack("<f", f.read(4))[0]
                    vz11kan = unpack("<f", f.read(4))[0]
                    vw11kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kan = unpack("<f", f.read(4))[0]
                    vy12kan = unpack("<f", f.read(4))[0]
                    vz12kan = unpack("<f", f.read(4))[0]
                    vw12kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kan = unpack("<f", f.read(4))[0]
                    vy13kan = unpack("<f", f.read(4))[0]
                    vz13kan = unpack("<f", f.read(4))[0]
                    vw13kan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kan = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kao = unpack("<f", f.read(4))[0]
                    vy1kao = unpack("<f", f.read(4))[0]
                    vz1kao = unpack("<f", f.read(4))[0]
                    vw1kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kao = unpack("<f", f.read(4))[0]
                    vy2kao = unpack("<f", f.read(4))[0]
                    vz2kao = unpack("<f", f.read(4))[0]
                    vw2kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kao = unpack("<f", f.read(4))[0]
                    vy3kao = unpack("<f", f.read(4))[0]
                    vz3kao = unpack("<f", f.read(4))[0]
                    vw3kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kao = unpack("<f", f.read(4))[0]
                    vy4kao = unpack("<f", f.read(4))[0]
                    vz4kao = unpack("<f", f.read(4))[0]
                    vw4kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kao = unpack("<f", f.read(4))[0]
                    vy5kao = unpack("<f", f.read(4))[0]
                    vz5kao = unpack("<f", f.read(4))[0]
                    vw5kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kao = unpack("<f", f.read(4))[0]
                    vy6kao = unpack("<f", f.read(4))[0]
                    vz6kao = unpack("<f", f.read(4))[0]
                    vw6kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kao = unpack("<f", f.read(4))[0]
                    vy7kao = unpack("<f", f.read(4))[0]
                    vz7kao = unpack("<f", f.read(4))[0]
                    vw7kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kao = unpack("<f", f.read(4))[0]
                    vy8kao = unpack("<f", f.read(4))[0]
                    vz8kao = unpack("<f", f.read(4))[0]
                    vw8kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kao = unpack("<f", f.read(4))[0]
                    vy9kao = unpack("<f", f.read(4))[0]
                    vz9kao = unpack("<f", f.read(4))[0]
                    vw9kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kao = unpack("<f", f.read(4))[0]
                    vy10kao = unpack("<f", f.read(4))[0]
                    vz10kao = unpack("<f", f.read(4))[0]
                    vw10kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kao = unpack("<f", f.read(4))[0]
                    vy11kao = unpack("<f", f.read(4))[0]
                    vz11kao = unpack("<f", f.read(4))[0]
                    vw11kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kao = unpack("<f", f.read(4))[0]
                    vy12kao = unpack("<f", f.read(4))[0]
                    vz12kao = unpack("<f", f.read(4))[0]
                    vw12kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kao = unpack("<f", f.read(4))[0]
                    vy13kao = unpack("<f", f.read(4))[0]
                    vz13kao = unpack("<f", f.read(4))[0]
                    vw13kao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kao = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kap = unpack("<f", f.read(4))[0]
                    vy1kap = unpack("<f", f.read(4))[0]
                    vz1kap = unpack("<f", f.read(4))[0]
                    vw1kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kap = unpack("<f", f.read(4))[0]
                    vy2kap = unpack("<f", f.read(4))[0]
                    vz2kap = unpack("<f", f.read(4))[0]
                    vw2kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kap = unpack("<f", f.read(4))[0]
                    vy3kap = unpack("<f", f.read(4))[0]
                    vz3kap = unpack("<f", f.read(4))[0]
                    vw3kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kap = unpack("<f", f.read(4))[0]
                    vy4kap = unpack("<f", f.read(4))[0]
                    vz4kap = unpack("<f", f.read(4))[0]
                    vw4kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kap = unpack("<f", f.read(4))[0]
                    vy5kap = unpack("<f", f.read(4))[0]
                    vz5kap = unpack("<f", f.read(4))[0]
                    vw5kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kap = unpack("<f", f.read(4))[0]
                    vy6kap = unpack("<f", f.read(4))[0]
                    vz6kap = unpack("<f", f.read(4))[0]
                    vw6kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kap = unpack("<f", f.read(4))[0]
                    vy7kap = unpack("<f", f.read(4))[0]
                    vz7kap = unpack("<f", f.read(4))[0]
                    vw7kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kap = unpack("<f", f.read(4))[0]
                    vy8kap = unpack("<f", f.read(4))[0]
                    vz8kap = unpack("<f", f.read(4))[0]
                    vw8kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kap = unpack("<f", f.read(4))[0]
                    vy9kap = unpack("<f", f.read(4))[0]
                    vz9kap = unpack("<f", f.read(4))[0]
                    vw9kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kap = unpack("<f", f.read(4))[0]
                    vy10kap = unpack("<f", f.read(4))[0]
                    vz10kap = unpack("<f", f.read(4))[0]
                    vw10kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kap = unpack("<f", f.read(4))[0]
                    vy11kap = unpack("<f", f.read(4))[0]
                    vz11kap = unpack("<f", f.read(4))[0]
                    vw11kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kap = unpack("<f", f.read(4))[0]
                    vy12kap = unpack("<f", f.read(4))[0]
                    vz12kap = unpack("<f", f.read(4))[0]
                    vw12kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kap = unpack("<f", f.read(4))[0]
                    vy13kap = unpack("<f", f.read(4))[0]
                    vz13kap = unpack("<f", f.read(4))[0]
                    vw13kap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kap = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaq = unpack("<f", f.read(4))[0]
                    vy1kaq = unpack("<f", f.read(4))[0]
                    vz1kaq = unpack("<f", f.read(4))[0]
                    vw1kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaq = unpack("<f", f.read(4))[0]
                    vy2kaq = unpack("<f", f.read(4))[0]
                    vz2kaq = unpack("<f", f.read(4))[0]
                    vw2kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaq = unpack("<f", f.read(4))[0]
                    vy3kaq = unpack("<f", f.read(4))[0]
                    vz3kaq = unpack("<f", f.read(4))[0]
                    vw3kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaq = unpack("<f", f.read(4))[0]
                    vy4kaq = unpack("<f", f.read(4))[0]
                    vz4kaq = unpack("<f", f.read(4))[0]
                    vw4kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaq = unpack("<f", f.read(4))[0]
                    vy5kaq = unpack("<f", f.read(4))[0]
                    vz5kaq = unpack("<f", f.read(4))[0]
                    vw5kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaq = unpack("<f", f.read(4))[0]
                    vy6kaq = unpack("<f", f.read(4))[0]
                    vz6kaq = unpack("<f", f.read(4))[0]
                    vw6kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaq = unpack("<f", f.read(4))[0]
                    vy7kaq = unpack("<f", f.read(4))[0]
                    vz7kaq = unpack("<f", f.read(4))[0]
                    vw7kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaq = unpack("<f", f.read(4))[0]
                    vy8kaq = unpack("<f", f.read(4))[0]
                    vz8kaq = unpack("<f", f.read(4))[0]
                    vw8kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaq = unpack("<f", f.read(4))[0]
                    vy9kaq = unpack("<f", f.read(4))[0]
                    vz9kaq = unpack("<f", f.read(4))[0]
                    vw9kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaq = unpack("<f", f.read(4))[0]
                    vy10kaq = unpack("<f", f.read(4))[0]
                    vz10kaq = unpack("<f", f.read(4))[0]
                    vw10kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaq = unpack("<f", f.read(4))[0]
                    vy11kaq = unpack("<f", f.read(4))[0]
                    vz11kaq = unpack("<f", f.read(4))[0]
                    vw11kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaq = unpack("<f", f.read(4))[0]
                    vy12kaq = unpack("<f", f.read(4))[0]
                    vz12kaq = unpack("<f", f.read(4))[0]
                    vw12kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaq = unpack("<f", f.read(4))[0]
                    vy13kaq = unpack("<f", f.read(4))[0]
                    vz13kaq = unpack("<f", f.read(4))[0]
                    vw13kaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kar = unpack("<f", f.read(4))[0]
                    vy1kar = unpack("<f", f.read(4))[0]
                    vz1kar = unpack("<f", f.read(4))[0]
                    vw1kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kar = unpack("<f", f.read(4))[0]
                    vy2kar = unpack("<f", f.read(4))[0]
                    vz2kar = unpack("<f", f.read(4))[0]
                    vw2kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kar = unpack("<f", f.read(4))[0]
                    vy3kar = unpack("<f", f.read(4))[0]
                    vz3kar = unpack("<f", f.read(4))[0]
                    vw3kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kar = unpack("<f", f.read(4))[0]
                    vy4kar = unpack("<f", f.read(4))[0]
                    vz4kar = unpack("<f", f.read(4))[0]
                    vw4kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kar = unpack("<f", f.read(4))[0]
                    vy5kar = unpack("<f", f.read(4))[0]
                    vz5kar = unpack("<f", f.read(4))[0]
                    vw5kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kar = unpack("<f", f.read(4))[0]
                    vy6kar = unpack("<f", f.read(4))[0]
                    vz6kar = unpack("<f", f.read(4))[0]
                    vw6kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kar = unpack("<f", f.read(4))[0]
                    vy7kar = unpack("<f", f.read(4))[0]
                    vz7kar = unpack("<f", f.read(4))[0]
                    vw7kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kar = unpack("<f", f.read(4))[0]
                    vy8kar = unpack("<f", f.read(4))[0]
                    vz8kar = unpack("<f", f.read(4))[0]
                    vw8kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kar = unpack("<f", f.read(4))[0]
                    vy9kar = unpack("<f", f.read(4))[0]
                    vz9kar = unpack("<f", f.read(4))[0]
                    vw9kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kar = unpack("<f", f.read(4))[0]
                    vy10kar = unpack("<f", f.read(4))[0]
                    vz10kar = unpack("<f", f.read(4))[0]
                    vw10kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kar = unpack("<f", f.read(4))[0]
                    vy11kar = unpack("<f", f.read(4))[0]
                    vz11kar = unpack("<f", f.read(4))[0]
                    vw11kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kar = unpack("<f", f.read(4))[0]
                    vy12kar = unpack("<f", f.read(4))[0]
                    vz12kar = unpack("<f", f.read(4))[0]
                    vw12kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kar = unpack("<f", f.read(4))[0]
                    vy13kar = unpack("<f", f.read(4))[0]
                    vz13kar = unpack("<f", f.read(4))[0]
                    vw13kar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kar = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kas = unpack("<f", f.read(4))[0]
                    vy1kas = unpack("<f", f.read(4))[0]
                    vz1kas = unpack("<f", f.read(4))[0]
                    vw1kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kas = unpack("<f", f.read(4))[0]
                    vy2kas = unpack("<f", f.read(4))[0]
                    vz2kas = unpack("<f", f.read(4))[0]
                    vw2kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kas = unpack("<f", f.read(4))[0]
                    vy3kas = unpack("<f", f.read(4))[0]
                    vz3kas = unpack("<f", f.read(4))[0]
                    vw3kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kas = unpack("<f", f.read(4))[0]
                    vy4kas = unpack("<f", f.read(4))[0]
                    vz4kas = unpack("<f", f.read(4))[0]
                    vw4kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kas = unpack("<f", f.read(4))[0]
                    vy5kas = unpack("<f", f.read(4))[0]
                    vz5kas = unpack("<f", f.read(4))[0]
                    vw5kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kas = unpack("<f", f.read(4))[0]
                    vy6kas = unpack("<f", f.read(4))[0]
                    vz6kas = unpack("<f", f.read(4))[0]
                    vw6kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kas = unpack("<f", f.read(4))[0]
                    vy7kas = unpack("<f", f.read(4))[0]
                    vz7kas = unpack("<f", f.read(4))[0]
                    vw7kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kas = unpack("<f", f.read(4))[0]
                    vy8kas = unpack("<f", f.read(4))[0]
                    vz8kas = unpack("<f", f.read(4))[0]
                    vw8kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kas = unpack("<f", f.read(4))[0]
                    vy9kas = unpack("<f", f.read(4))[0]
                    vz9kas = unpack("<f", f.read(4))[0]
                    vw9kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kas = unpack("<f", f.read(4))[0]
                    vy10kas = unpack("<f", f.read(4))[0]
                    vz10kas = unpack("<f", f.read(4))[0]
                    vw10kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kas = unpack("<f", f.read(4))[0]
                    vy11kas = unpack("<f", f.read(4))[0]
                    vz11kas = unpack("<f", f.read(4))[0]
                    vw11kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kas = unpack("<f", f.read(4))[0]
                    vy12kas = unpack("<f", f.read(4))[0]
                    vz12kas = unpack("<f", f.read(4))[0]
                    vw12kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kas = unpack("<f", f.read(4))[0]
                    vy13kas = unpack("<f", f.read(4))[0]
                    vz13kas = unpack("<f", f.read(4))[0]
                    vw13kas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kas = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kat = unpack("<f", f.read(4))[0]
                    vy1kat = unpack("<f", f.read(4))[0]
                    vz1kat = unpack("<f", f.read(4))[0]
                    vw1kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kat = unpack("<f", f.read(4))[0]
                    vy2kat = unpack("<f", f.read(4))[0]
                    vz2kat = unpack("<f", f.read(4))[0]
                    vw2kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kat = unpack("<f", f.read(4))[0]
                    vy3kat = unpack("<f", f.read(4))[0]
                    vz3kat = unpack("<f", f.read(4))[0]
                    vw3kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kat = unpack("<f", f.read(4))[0]
                    vy4kat = unpack("<f", f.read(4))[0]
                    vz4kat = unpack("<f", f.read(4))[0]
                    vw4kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kat = unpack("<f", f.read(4))[0]
                    vy5kat = unpack("<f", f.read(4))[0]
                    vz5kat = unpack("<f", f.read(4))[0]
                    vw5kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kat = unpack("<f", f.read(4))[0]
                    vy6kat = unpack("<f", f.read(4))[0]
                    vz6kat = unpack("<f", f.read(4))[0]
                    vw6kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kat = unpack("<f", f.read(4))[0]
                    vy7kat = unpack("<f", f.read(4))[0]
                    vz7kat = unpack("<f", f.read(4))[0]
                    vw7kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kat = unpack("<f", f.read(4))[0]
                    vy8kat = unpack("<f", f.read(4))[0]
                    vz8kat = unpack("<f", f.read(4))[0]
                    vw8kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kat = unpack("<f", f.read(4))[0]
                    vy9kat = unpack("<f", f.read(4))[0]
                    vz9kat = unpack("<f", f.read(4))[0]
                    vw9kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kat = unpack("<f", f.read(4))[0]
                    vy10kat = unpack("<f", f.read(4))[0]
                    vz10kat = unpack("<f", f.read(4))[0]
                    vw10kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kat = unpack("<f", f.read(4))[0]
                    vy11kat = unpack("<f", f.read(4))[0]
                    vz11kat = unpack("<f", f.read(4))[0]
                    vw11kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kat = unpack("<f", f.read(4))[0]
                    vy12kat = unpack("<f", f.read(4))[0]
                    vz12kat = unpack("<f", f.read(4))[0]
                    vw12kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kat = unpack("<f", f.read(4))[0]
                    vy13kat = unpack("<f", f.read(4))[0]
                    vz13kat = unpack("<f", f.read(4))[0]
                    vw13kat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kat = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kau = unpack("<f", f.read(4))[0]
                    vy1kau = unpack("<f", f.read(4))[0]
                    vz1kau = unpack("<f", f.read(4))[0]
                    vw1kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kau = unpack("<f", f.read(4))[0]
                    vy2kau = unpack("<f", f.read(4))[0]
                    vz2kau = unpack("<f", f.read(4))[0]
                    vw2kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kau = unpack("<f", f.read(4))[0]
                    vy3kau = unpack("<f", f.read(4))[0]
                    vz3kau = unpack("<f", f.read(4))[0]
                    vw3kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kau = unpack("<f", f.read(4))[0]
                    vy4kau = unpack("<f", f.read(4))[0]
                    vz4kau = unpack("<f", f.read(4))[0]
                    vw4kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kau = unpack("<f", f.read(4))[0]
                    vy5kau = unpack("<f", f.read(4))[0]
                    vz5kau = unpack("<f", f.read(4))[0]
                    vw5kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kau = unpack("<f", f.read(4))[0]
                    vy6kau = unpack("<f", f.read(4))[0]
                    vz6kau = unpack("<f", f.read(4))[0]
                    vw6kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kau = unpack("<f", f.read(4))[0]
                    vy7kau = unpack("<f", f.read(4))[0]
                    vz7kau = unpack("<f", f.read(4))[0]
                    vw7kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kau = unpack("<f", f.read(4))[0]
                    vy8kau = unpack("<f", f.read(4))[0]
                    vz8kau = unpack("<f", f.read(4))[0]
                    vw8kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kau = unpack("<f", f.read(4))[0]
                    vy9kau = unpack("<f", f.read(4))[0]
                    vz9kau = unpack("<f", f.read(4))[0]
                    vw9kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kau = unpack("<f", f.read(4))[0]
                    vy10kau = unpack("<f", f.read(4))[0]
                    vz10kau = unpack("<f", f.read(4))[0]
                    vw10kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kau = unpack("<f", f.read(4))[0]
                    vy11kau = unpack("<f", f.read(4))[0]
                    vz11kau = unpack("<f", f.read(4))[0]
                    vw11kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kau = unpack("<f", f.read(4))[0]
                    vy12kau = unpack("<f", f.read(4))[0]
                    vz12kau = unpack("<f", f.read(4))[0]
                    vw12kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kau = unpack("<f", f.read(4))[0]
                    vy13kau = unpack("<f", f.read(4))[0]
                    vz13kau = unpack("<f", f.read(4))[0]
                    vw13kau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kau = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kav = unpack("<f", f.read(4))[0]
                    vy1kav = unpack("<f", f.read(4))[0]
                    vz1kav = unpack("<f", f.read(4))[0]
                    vw1kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kav = unpack("<f", f.read(4))[0]
                    vy2kav = unpack("<f", f.read(4))[0]
                    vz2kav = unpack("<f", f.read(4))[0]
                    vw2kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kav = unpack("<f", f.read(4))[0]
                    vy3kav = unpack("<f", f.read(4))[0]
                    vz3kav = unpack("<f", f.read(4))[0]
                    vw3kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kav = unpack("<f", f.read(4))[0]
                    vy4kav = unpack("<f", f.read(4))[0]
                    vz4kav = unpack("<f", f.read(4))[0]
                    vw4kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kav = unpack("<f", f.read(4))[0]
                    vy5kav = unpack("<f", f.read(4))[0]
                    vz5kav = unpack("<f", f.read(4))[0]
                    vw5kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kav = unpack("<f", f.read(4))[0]
                    vy6kav = unpack("<f", f.read(4))[0]
                    vz6kav = unpack("<f", f.read(4))[0]
                    vw6kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kav = unpack("<f", f.read(4))[0]
                    vy7kav = unpack("<f", f.read(4))[0]
                    vz7kav = unpack("<f", f.read(4))[0]
                    vw7kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kav = unpack("<f", f.read(4))[0]
                    vy8kav = unpack("<f", f.read(4))[0]
                    vz8kav = unpack("<f", f.read(4))[0]
                    vw8kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kav = unpack("<f", f.read(4))[0]
                    vy9kav = unpack("<f", f.read(4))[0]
                    vz9kav = unpack("<f", f.read(4))[0]
                    vw9kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kav = unpack("<f", f.read(4))[0]
                    vy10kav = unpack("<f", f.read(4))[0]
                    vz10kav = unpack("<f", f.read(4))[0]
                    vw10kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kav = unpack("<f", f.read(4))[0]
                    vy11kav = unpack("<f", f.read(4))[0]
                    vz11kav = unpack("<f", f.read(4))[0]
                    vw11kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kav = unpack("<f", f.read(4))[0]
                    vy12kav = unpack("<f", f.read(4))[0]
                    vz12kav = unpack("<f", f.read(4))[0]
                    vw12kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kav = unpack("<f", f.read(4))[0]
                    vy13kav = unpack("<f", f.read(4))[0]
                    vz13kav = unpack("<f", f.read(4))[0]
                    vw13kav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kav = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaw = unpack("<f", f.read(4))[0]
                    vy1kaw = unpack("<f", f.read(4))[0]
                    vz1kaw = unpack("<f", f.read(4))[0]
                    vw1kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaw = unpack("<f", f.read(4))[0]
                    vy2kaw = unpack("<f", f.read(4))[0]
                    vz2kaw = unpack("<f", f.read(4))[0]
                    vw2kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaw = unpack("<f", f.read(4))[0]
                    vy3kaw = unpack("<f", f.read(4))[0]
                    vz3kaw = unpack("<f", f.read(4))[0]
                    vw3kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaw = unpack("<f", f.read(4))[0]
                    vy4kaw = unpack("<f", f.read(4))[0]
                    vz4kaw = unpack("<f", f.read(4))[0]
                    vw4kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaw = unpack("<f", f.read(4))[0]
                    vy5kaw = unpack("<f", f.read(4))[0]
                    vz5kaw = unpack("<f", f.read(4))[0]
                    vw5kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaw = unpack("<f", f.read(4))[0]
                    vy6kaw = unpack("<f", f.read(4))[0]
                    vz6kaw = unpack("<f", f.read(4))[0]
                    vw6kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaw = unpack("<f", f.read(4))[0]
                    vy7kaw = unpack("<f", f.read(4))[0]
                    vz7kaw = unpack("<f", f.read(4))[0]
                    vw7kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaw = unpack("<f", f.read(4))[0]
                    vy8kaw = unpack("<f", f.read(4))[0]
                    vz8kaw = unpack("<f", f.read(4))[0]
                    vw8kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaw = unpack("<f", f.read(4))[0]
                    vy9kaw = unpack("<f", f.read(4))[0]
                    vz9kaw = unpack("<f", f.read(4))[0]
                    vw9kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaw = unpack("<f", f.read(4))[0]
                    vy10kaw = unpack("<f", f.read(4))[0]
                    vz10kaw = unpack("<f", f.read(4))[0]
                    vw10kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaw = unpack("<f", f.read(4))[0]
                    vy11kaw = unpack("<f", f.read(4))[0]
                    vz11kaw = unpack("<f", f.read(4))[0]
                    vw11kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaw = unpack("<f", f.read(4))[0]
                    vy12kaw = unpack("<f", f.read(4))[0]
                    vz12kaw = unpack("<f", f.read(4))[0]
                    vw12kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaw = unpack("<f", f.read(4))[0]
                    vy13kaw = unpack("<f", f.read(4))[0]
                    vz13kaw = unpack("<f", f.read(4))[0]
                    vw13kaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kax = unpack("<f", f.read(4))[0]
                    vy1kax = unpack("<f", f.read(4))[0]
                    vz1kax = unpack("<f", f.read(4))[0]
                    vw1kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kax = unpack("<f", f.read(4))[0]
                    vy2kax = unpack("<f", f.read(4))[0]
                    vz2kax = unpack("<f", f.read(4))[0]
                    vw2kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kax = unpack("<f", f.read(4))[0]
                    vy3kax = unpack("<f", f.read(4))[0]
                    vz3kax = unpack("<f", f.read(4))[0]
                    vw3kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kax = unpack("<f", f.read(4))[0]
                    vy4kax = unpack("<f", f.read(4))[0]
                    vz4kax = unpack("<f", f.read(4))[0]
                    vw4kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kax = unpack("<f", f.read(4))[0]
                    vy5kax = unpack("<f", f.read(4))[0]
                    vz5kax = unpack("<f", f.read(4))[0]
                    vw5kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kax = unpack("<f", f.read(4))[0]
                    vy6kax = unpack("<f", f.read(4))[0]
                    vz6kax = unpack("<f", f.read(4))[0]
                    vw6kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kax = unpack("<f", f.read(4))[0]
                    vy7kax = unpack("<f", f.read(4))[0]
                    vz7kax = unpack("<f", f.read(4))[0]
                    vw7kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kax = unpack("<f", f.read(4))[0]
                    vy8kax = unpack("<f", f.read(4))[0]
                    vz8kax = unpack("<f", f.read(4))[0]
                    vw8kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kax = unpack("<f", f.read(4))[0]
                    vy9kax = unpack("<f", f.read(4))[0]
                    vz9kax = unpack("<f", f.read(4))[0]
                    vw9kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kax = unpack("<f", f.read(4))[0]
                    vy10kax = unpack("<f", f.read(4))[0]
                    vz10kax = unpack("<f", f.read(4))[0]
                    vw10kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kax = unpack("<f", f.read(4))[0]
                    vy11kax = unpack("<f", f.read(4))[0]
                    vz11kax = unpack("<f", f.read(4))[0]
                    vw11kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kax = unpack("<f", f.read(4))[0]
                    vy12kax = unpack("<f", f.read(4))[0]
                    vz12kax = unpack("<f", f.read(4))[0]
                    vw12kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kax = unpack("<f", f.read(4))[0]
                    vy13kax = unpack("<f", f.read(4))[0]
                    vz13kax = unpack("<f", f.read(4))[0]
                    vw13kax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kax = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kay = unpack("<f", f.read(4))[0]
                    vy1kay = unpack("<f", f.read(4))[0]
                    vz1kay = unpack("<f", f.read(4))[0]
                    vw1kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kay = unpack("<f", f.read(4))[0]
                    vy2kay = unpack("<f", f.read(4))[0]
                    vz2kay = unpack("<f", f.read(4))[0]
                    vw2kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kay = unpack("<f", f.read(4))[0]
                    vy3kay = unpack("<f", f.read(4))[0]
                    vz3kay = unpack("<f", f.read(4))[0]
                    vw3kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kay = unpack("<f", f.read(4))[0]
                    vy4kay = unpack("<f", f.read(4))[0]
                    vz4kay = unpack("<f", f.read(4))[0]
                    vw4kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kay = unpack("<f", f.read(4))[0]
                    vy5kay = unpack("<f", f.read(4))[0]
                    vz5kay = unpack("<f", f.read(4))[0]
                    vw5kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kay = unpack("<f", f.read(4))[0]
                    vy6kay = unpack("<f", f.read(4))[0]
                    vz6kay = unpack("<f", f.read(4))[0]
                    vw6kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kay = unpack("<f", f.read(4))[0]
                    vy7kay = unpack("<f", f.read(4))[0]
                    vz7kay = unpack("<f", f.read(4))[0]
                    vw7kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kay = unpack("<f", f.read(4))[0]
                    vy8kay = unpack("<f", f.read(4))[0]
                    vz8kay = unpack("<f", f.read(4))[0]
                    vw8kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kay = unpack("<f", f.read(4))[0]
                    vy9kay = unpack("<f", f.read(4))[0]
                    vz9kay = unpack("<f", f.read(4))[0]
                    vw9kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kay = unpack("<f", f.read(4))[0]
                    vy10kay = unpack("<f", f.read(4))[0]
                    vz10kay = unpack("<f", f.read(4))[0]
                    vw10kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kay = unpack("<f", f.read(4))[0]
                    vy11kay = unpack("<f", f.read(4))[0]
                    vz11kay = unpack("<f", f.read(4))[0]
                    vw11kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kay = unpack("<f", f.read(4))[0]
                    vy12kay = unpack("<f", f.read(4))[0]
                    vz12kay = unpack("<f", f.read(4))[0]
                    vw12kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kay = unpack("<f", f.read(4))[0]
                    vy13kay = unpack("<f", f.read(4))[0]
                    vz13kay = unpack("<f", f.read(4))[0]
                    vw13kay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kay = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaz = unpack("<f", f.read(4))[0]
                    vy1kaz = unpack("<f", f.read(4))[0]
                    vz1kaz = unpack("<f", f.read(4))[0]
                    vw1kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaz = unpack("<f", f.read(4))[0]
                    vy2kaz = unpack("<f", f.read(4))[0]
                    vz2kaz = unpack("<f", f.read(4))[0]
                    vw2kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaz = unpack("<f", f.read(4))[0]
                    vy3kaz = unpack("<f", f.read(4))[0]
                    vz3kaz = unpack("<f", f.read(4))[0]
                    vw3kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaz = unpack("<f", f.read(4))[0]
                    vy4kaz = unpack("<f", f.read(4))[0]
                    vz4kaz = unpack("<f", f.read(4))[0]
                    vw4kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaz = unpack("<f", f.read(4))[0]
                    vy5kaz = unpack("<f", f.read(4))[0]
                    vz5kaz = unpack("<f", f.read(4))[0]
                    vw5kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaz = unpack("<f", f.read(4))[0]
                    vy6kaz = unpack("<f", f.read(4))[0]
                    vz6kaz = unpack("<f", f.read(4))[0]
                    vw6kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaz = unpack("<f", f.read(4))[0]
                    vy7kaz = unpack("<f", f.read(4))[0]
                    vz7kaz = unpack("<f", f.read(4))[0]
                    vw7kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaz = unpack("<f", f.read(4))[0]
                    vy8kaz = unpack("<f", f.read(4))[0]
                    vz8kaz = unpack("<f", f.read(4))[0]
                    vw8kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaz = unpack("<f", f.read(4))[0]
                    vy9kaz = unpack("<f", f.read(4))[0]
                    vz9kaz = unpack("<f", f.read(4))[0]
                    vw9kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaz = unpack("<f", f.read(4))[0]
                    vy10kaz = unpack("<f", f.read(4))[0]
                    vz10kaz = unpack("<f", f.read(4))[0]
                    vw10kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaz = unpack("<f", f.read(4))[0]
                    vy11kaz = unpack("<f", f.read(4))[0]
                    vz11kaz = unpack("<f", f.read(4))[0]
                    vw11kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaz = unpack("<f", f.read(4))[0]
                    vy12kaz = unpack("<f", f.read(4))[0]
                    vz12kaz = unpack("<f", f.read(4))[0]
                    vw12kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaz = unpack("<f", f.read(4))[0]
                    vy13kaz = unpack("<f", f.read(4))[0]
                    vz13kaz = unpack("<f", f.read(4))[0]
                    vw13kaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaaa = unpack("<f", f.read(4))[0]
                    vy1kaaa = unpack("<f", f.read(4))[0]
                    vz1kaaa = unpack("<f", f.read(4))[0]
                    vw1kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaaa = unpack("<f", f.read(4))[0]
                    vy2kaaa = unpack("<f", f.read(4))[0]
                    vz2kaaa = unpack("<f", f.read(4))[0]
                    vw2kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaaa = unpack("<f", f.read(4))[0]
                    vy3kaaa = unpack("<f", f.read(4))[0]
                    vz3kaaa = unpack("<f", f.read(4))[0]
                    vw3kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaaa = unpack("<f", f.read(4))[0]
                    vy4kaaa = unpack("<f", f.read(4))[0]
                    vz4kaaa = unpack("<f", f.read(4))[0]
                    vw4kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaaa = unpack("<f", f.read(4))[0]
                    vy5kaaa = unpack("<f", f.read(4))[0]
                    vz5kaaa = unpack("<f", f.read(4))[0]
                    vw5kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaaa = unpack("<f", f.read(4))[0]
                    vy6kaaa = unpack("<f", f.read(4))[0]
                    vz6kaaa = unpack("<f", f.read(4))[0]
                    vw6kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaaa = unpack("<f", f.read(4))[0]
                    vy7kaaa = unpack("<f", f.read(4))[0]
                    vz7kaaa = unpack("<f", f.read(4))[0]
                    vw7kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaaa = unpack("<f", f.read(4))[0]
                    vy8kaaa = unpack("<f", f.read(4))[0]
                    vz8kaaa = unpack("<f", f.read(4))[0]
                    vw8kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaaa = unpack("<f", f.read(4))[0]
                    vy9kaaa = unpack("<f", f.read(4))[0]
                    vz9kaaa = unpack("<f", f.read(4))[0]
                    vw9kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaaa = unpack("<f", f.read(4))[0]
                    vy10kaaa = unpack("<f", f.read(4))[0]
                    vz10kaaa = unpack("<f", f.read(4))[0]
                    vw10kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaaa = unpack("<f", f.read(4))[0]
                    vy11kaaa = unpack("<f", f.read(4))[0]
                    vz11kaaa = unpack("<f", f.read(4))[0]
                    vw11kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaaa = unpack("<f", f.read(4))[0]
                    vy12kaaa = unpack("<f", f.read(4))[0]
                    vz12kaaa = unpack("<f", f.read(4))[0]
                    vw12kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaaa = unpack("<f", f.read(4))[0]
                    vy13kaaa = unpack("<f", f.read(4))[0]
                    vz13kaaa = unpack("<f", f.read(4))[0]
                    vw13kaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaab = unpack("<f", f.read(4))[0]
                    vy1kaab = unpack("<f", f.read(4))[0]
                    vz1kaab = unpack("<f", f.read(4))[0]
                    vw1kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaab = unpack("<f", f.read(4))[0]
                    vy2kaab = unpack("<f", f.read(4))[0]
                    vz2kaab = unpack("<f", f.read(4))[0]
                    vw2kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaab = unpack("<f", f.read(4))[0]
                    vy3kaab = unpack("<f", f.read(4))[0]
                    vz3kaab = unpack("<f", f.read(4))[0]
                    vw3kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaab = unpack("<f", f.read(4))[0]
                    vy4kaab = unpack("<f", f.read(4))[0]
                    vz4kaab = unpack("<f", f.read(4))[0]
                    vw4kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaab = unpack("<f", f.read(4))[0]
                    vy5kaab = unpack("<f", f.read(4))[0]
                    vz5kaab = unpack("<f", f.read(4))[0]
                    vw5kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaab = unpack("<f", f.read(4))[0]
                    vy6kaab = unpack("<f", f.read(4))[0]
                    vz6kaab = unpack("<f", f.read(4))[0]
                    vw6kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaab = unpack("<f", f.read(4))[0]
                    vy7kaab = unpack("<f", f.read(4))[0]
                    vz7kaab = unpack("<f", f.read(4))[0]
                    vw7kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaab = unpack("<f", f.read(4))[0]
                    vy8kaab = unpack("<f", f.read(4))[0]
                    vz8kaab = unpack("<f", f.read(4))[0]
                    vw8kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaab = unpack("<f", f.read(4))[0]
                    vy9kaab = unpack("<f", f.read(4))[0]
                    vz9kaab = unpack("<f", f.read(4))[0]
                    vw9kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaab = unpack("<f", f.read(4))[0]
                    vy10kaab = unpack("<f", f.read(4))[0]
                    vz10kaab = unpack("<f", f.read(4))[0]
                    vw10kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaab = unpack("<f", f.read(4))[0]
                    vy11kaab = unpack("<f", f.read(4))[0]
                    vz11kaab = unpack("<f", f.read(4))[0]
                    vw11kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaab = unpack("<f", f.read(4))[0]
                    vy12kaab = unpack("<f", f.read(4))[0]
                    vz12kaab = unpack("<f", f.read(4))[0]
                    vw12kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaab = unpack("<f", f.read(4))[0]
                    vy13kaab = unpack("<f", f.read(4))[0]
                    vz13kaab = unpack("<f", f.read(4))[0]
                    vw13kaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaac = unpack("<f", f.read(4))[0]
                    vy1kaac = unpack("<f", f.read(4))[0]
                    vz1kaac = unpack("<f", f.read(4))[0]
                    vw1kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaac = unpack("<f", f.read(4))[0]
                    vy2kaac = unpack("<f", f.read(4))[0]
                    vz2kaac = unpack("<f", f.read(4))[0]
                    vw2kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaac = unpack("<f", f.read(4))[0]
                    vy3kaac = unpack("<f", f.read(4))[0]
                    vz3kaac = unpack("<f", f.read(4))[0]
                    vw3kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaac = unpack("<f", f.read(4))[0]
                    vy4kaac = unpack("<f", f.read(4))[0]
                    vz4kaac = unpack("<f", f.read(4))[0]
                    vw4kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaac = unpack("<f", f.read(4))[0]
                    vy5kaac = unpack("<f", f.read(4))[0]
                    vz5kaac = unpack("<f", f.read(4))[0]
                    vw5kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaac = unpack("<f", f.read(4))[0]
                    vy6kaac = unpack("<f", f.read(4))[0]
                    vz6kaac = unpack("<f", f.read(4))[0]
                    vw6kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaac = unpack("<f", f.read(4))[0]
                    vy7kaac = unpack("<f", f.read(4))[0]
                    vz7kaac = unpack("<f", f.read(4))[0]
                    vw7kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaac = unpack("<f", f.read(4))[0]
                    vy8kaac = unpack("<f", f.read(4))[0]
                    vz8kaac = unpack("<f", f.read(4))[0]
                    vw8kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaac = unpack("<f", f.read(4))[0]
                    vy9kaac = unpack("<f", f.read(4))[0]
                    vz9kaac = unpack("<f", f.read(4))[0]
                    vw9kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaac = unpack("<f", f.read(4))[0]
                    vy10kaac = unpack("<f", f.read(4))[0]
                    vz10kaac = unpack("<f", f.read(4))[0]
                    vw10kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaac = unpack("<f", f.read(4))[0]
                    vy11kaac = unpack("<f", f.read(4))[0]
                    vz11kaac = unpack("<f", f.read(4))[0]
                    vw11kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaac = unpack("<f", f.read(4))[0]
                    vy12kaac = unpack("<f", f.read(4))[0]
                    vz12kaac = unpack("<f", f.read(4))[0]
                    vw12kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaac = unpack("<f", f.read(4))[0]
                    vy13kaac = unpack("<f", f.read(4))[0]
                    vz13kaac = unpack("<f", f.read(4))[0]
                    vw13kaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaad = unpack("<f", f.read(4))[0]
                    vy1kaad = unpack("<f", f.read(4))[0]
                    vz1kaad = unpack("<f", f.read(4))[0]
                    vw1kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaad = unpack("<f", f.read(4))[0]
                    vy2kaad = unpack("<f", f.read(4))[0]
                    vz2kaad = unpack("<f", f.read(4))[0]
                    vw2kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaad = unpack("<f", f.read(4))[0]
                    vy3kaad = unpack("<f", f.read(4))[0]
                    vz3kaad = unpack("<f", f.read(4))[0]
                    vw3kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaad = unpack("<f", f.read(4))[0]
                    vy4kaad = unpack("<f", f.read(4))[0]
                    vz4kaad = unpack("<f", f.read(4))[0]
                    vw4kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaad = unpack("<f", f.read(4))[0]
                    vy5kaad = unpack("<f", f.read(4))[0]
                    vz5kaad = unpack("<f", f.read(4))[0]
                    vw5kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaad = unpack("<f", f.read(4))[0]
                    vy6kaad = unpack("<f", f.read(4))[0]
                    vz6kaad = unpack("<f", f.read(4))[0]
                    vw6kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaad = unpack("<f", f.read(4))[0]
                    vy7kaad = unpack("<f", f.read(4))[0]
                    vz7kaad = unpack("<f", f.read(4))[0]
                    vw7kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaad = unpack("<f", f.read(4))[0]
                    vy8kaad = unpack("<f", f.read(4))[0]
                    vz8kaad = unpack("<f", f.read(4))[0]
                    vw8kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaad = unpack("<f", f.read(4))[0]
                    vy9kaad = unpack("<f", f.read(4))[0]
                    vz9kaad = unpack("<f", f.read(4))[0]
                    vw9kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaad = unpack("<f", f.read(4))[0]
                    vy10kaad = unpack("<f", f.read(4))[0]
                    vz10kaad = unpack("<f", f.read(4))[0]
                    vw10kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaad = unpack("<f", f.read(4))[0]
                    vy11kaad = unpack("<f", f.read(4))[0]
                    vz11kaad = unpack("<f", f.read(4))[0]
                    vw11kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaad = unpack("<f", f.read(4))[0]
                    vy12kaad = unpack("<f", f.read(4))[0]
                    vz12kaad = unpack("<f", f.read(4))[0]
                    vw12kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaad = unpack("<f", f.read(4))[0]
                    vy13kaad = unpack("<f", f.read(4))[0]
                    vz13kaad = unpack("<f", f.read(4))[0]
                    vw13kaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaae = unpack("<f", f.read(4))[0]
                    vy1kaae = unpack("<f", f.read(4))[0]
                    vz1kaae = unpack("<f", f.read(4))[0]
                    vw1kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaae = unpack("<f", f.read(4))[0]
                    vy2kaae = unpack("<f", f.read(4))[0]
                    vz2kaae = unpack("<f", f.read(4))[0]
                    vw2kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaae = unpack("<f", f.read(4))[0]
                    vy3kaae = unpack("<f", f.read(4))[0]
                    vz3kaae = unpack("<f", f.read(4))[0]
                    vw3kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaae = unpack("<f", f.read(4))[0]
                    vy4kaae = unpack("<f", f.read(4))[0]
                    vz4kaae = unpack("<f", f.read(4))[0]
                    vw4kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaae = unpack("<f", f.read(4))[0]
                    vy5kaae = unpack("<f", f.read(4))[0]
                    vz5kaae = unpack("<f", f.read(4))[0]
                    vw5kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaae = unpack("<f", f.read(4))[0]
                    vy6kaae = unpack("<f", f.read(4))[0]
                    vz6kaae = unpack("<f", f.read(4))[0]
                    vw6kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaae = unpack("<f", f.read(4))[0]
                    vy7kaae = unpack("<f", f.read(4))[0]
                    vz7kaae = unpack("<f", f.read(4))[0]
                    vw7kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaae = unpack("<f", f.read(4))[0]
                    vy8kaae = unpack("<f", f.read(4))[0]
                    vz8kaae = unpack("<f", f.read(4))[0]
                    vw8kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaae = unpack("<f", f.read(4))[0]
                    vy9kaae = unpack("<f", f.read(4))[0]
                    vz9kaae = unpack("<f", f.read(4))[0]
                    vw9kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaae = unpack("<f", f.read(4))[0]
                    vy10kaae = unpack("<f", f.read(4))[0]
                    vz10kaae = unpack("<f", f.read(4))[0]
                    vw10kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaae = unpack("<f", f.read(4))[0]
                    vy11kaae = unpack("<f", f.read(4))[0]
                    vz11kaae = unpack("<f", f.read(4))[0]
                    vw11kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaae = unpack("<f", f.read(4))[0]
                    vy12kaae = unpack("<f", f.read(4))[0]
                    vz12kaae = unpack("<f", f.read(4))[0]
                    vw12kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaae = unpack("<f", f.read(4))[0]
                    vy13kaae = unpack("<f", f.read(4))[0]
                    vz13kaae = unpack("<f", f.read(4))[0]
                    vw13kaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaaf = unpack("<f", f.read(4))[0]
                    vy1kaaf = unpack("<f", f.read(4))[0]
                    vz1kaaf = unpack("<f", f.read(4))[0]
                    vw1kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaaf = unpack("<f", f.read(4))[0]
                    vy2kaaf = unpack("<f", f.read(4))[0]
                    vz2kaaf = unpack("<f", f.read(4))[0]
                    vw2kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaaf = unpack("<f", f.read(4))[0]
                    vy3kaaf = unpack("<f", f.read(4))[0]
                    vz3kaaf = unpack("<f", f.read(4))[0]
                    vw3kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaaf = unpack("<f", f.read(4))[0]
                    vy4kaaf = unpack("<f", f.read(4))[0]
                    vz4kaaf = unpack("<f", f.read(4))[0]
                    vw4kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaaf = unpack("<f", f.read(4))[0]
                    vy5kaaf = unpack("<f", f.read(4))[0]
                    vz5kaaf = unpack("<f", f.read(4))[0]
                    vw5kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaaf = unpack("<f", f.read(4))[0]
                    vy6kaaf = unpack("<f", f.read(4))[0]
                    vz6kaaf = unpack("<f", f.read(4))[0]
                    vw6kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaaf = unpack("<f", f.read(4))[0]
                    vy7kaaf = unpack("<f", f.read(4))[0]
                    vz7kaaf = unpack("<f", f.read(4))[0]
                    vw7kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaaf = unpack("<f", f.read(4))[0]
                    vy8kaaf = unpack("<f", f.read(4))[0]
                    vz8kaaf = unpack("<f", f.read(4))[0]
                    vw8kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaaf = unpack("<f", f.read(4))[0]
                    vy9kaaf = unpack("<f", f.read(4))[0]
                    vz9kaaf = unpack("<f", f.read(4))[0]
                    vw9kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaaf = unpack("<f", f.read(4))[0]
                    vy10kaaf = unpack("<f", f.read(4))[0]
                    vz10kaaf = unpack("<f", f.read(4))[0]
                    vw10kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaaf = unpack("<f", f.read(4))[0]
                    vy11kaaf = unpack("<f", f.read(4))[0]
                    vz11kaaf = unpack("<f", f.read(4))[0]
                    vw11kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaaf = unpack("<f", f.read(4))[0]
                    vy12kaaf = unpack("<f", f.read(4))[0]
                    vz12kaaf = unpack("<f", f.read(4))[0]
                    vw12kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaaf = unpack("<f", f.read(4))[0]
                    vy13kaaf = unpack("<f", f.read(4))[0]
                    vz13kaaf = unpack("<f", f.read(4))[0]
                    vw13kaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaag = unpack("<f", f.read(4))[0]
                    vy1kaag = unpack("<f", f.read(4))[0]
                    vz1kaag = unpack("<f", f.read(4))[0]
                    vw1kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaag = unpack("<f", f.read(4))[0]
                    vy2kaag = unpack("<f", f.read(4))[0]
                    vz2kaag = unpack("<f", f.read(4))[0]
                    vw2kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaag = unpack("<f", f.read(4))[0]
                    vy3kaag = unpack("<f", f.read(4))[0]
                    vz3kaag = unpack("<f", f.read(4))[0]
                    vw3kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaag = unpack("<f", f.read(4))[0]
                    vy4kaag = unpack("<f", f.read(4))[0]
                    vz4kaag = unpack("<f", f.read(4))[0]
                    vw4kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaag = unpack("<f", f.read(4))[0]
                    vy5kaag = unpack("<f", f.read(4))[0]
                    vz5kaag = unpack("<f", f.read(4))[0]
                    vw5kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaag = unpack("<f", f.read(4))[0]
                    vy6kaag = unpack("<f", f.read(4))[0]
                    vz6kaag = unpack("<f", f.read(4))[0]
                    vw6kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaag = unpack("<f", f.read(4))[0]
                    vy7kaag = unpack("<f", f.read(4))[0]
                    vz7kaag = unpack("<f", f.read(4))[0]
                    vw7kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaag = unpack("<f", f.read(4))[0]
                    vy8kaag = unpack("<f", f.read(4))[0]
                    vz8kaag = unpack("<f", f.read(4))[0]
                    vw8kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaag = unpack("<f", f.read(4))[0]
                    vy9kaag = unpack("<f", f.read(4))[0]
                    vz9kaag = unpack("<f", f.read(4))[0]
                    vw9kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaag = unpack("<f", f.read(4))[0]
                    vy10kaag = unpack("<f", f.read(4))[0]
                    vz10kaag = unpack("<f", f.read(4))[0]
                    vw10kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaag = unpack("<f", f.read(4))[0]
                    vy11kaag = unpack("<f", f.read(4))[0]
                    vz11kaag = unpack("<f", f.read(4))[0]
                    vw11kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaag = unpack("<f", f.read(4))[0]
                    vy12kaag = unpack("<f", f.read(4))[0]
                    vz12kaag = unpack("<f", f.read(4))[0]
                    vw12kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaag = unpack("<f", f.read(4))[0]
                    vy13kaag = unpack("<f", f.read(4))[0]
                    vz13kaag = unpack("<f", f.read(4))[0]
                    vw13kaag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaag = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-416,1)

                    vx1kaah = unpack("<f", f.read(4))[0]
                    vy1kaah = unpack("<f", f.read(4))[0]
                    vz1kaah = unpack("<f", f.read(4))[0]
                    vw1kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2kaah = unpack("<f", f.read(4))[0]
                    vy2kaah = unpack("<f", f.read(4))[0]
                    vz2kaah = unpack("<f", f.read(4))[0]
                    vw2kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3kaah = unpack("<f", f.read(4))[0]
                    vy3kaah = unpack("<f", f.read(4))[0]
                    vz3kaah = unpack("<f", f.read(4))[0]
                    vw3kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4kaah = unpack("<f", f.read(4))[0]
                    vy4kaah = unpack("<f", f.read(4))[0]
                    vz4kaah = unpack("<f", f.read(4))[0]
                    vw4kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5kaah = unpack("<f", f.read(4))[0]
                    vy5kaah = unpack("<f", f.read(4))[0]
                    vz5kaah = unpack("<f", f.read(4))[0]
                    vw5kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6kaah = unpack("<f", f.read(4))[0]
                    vy6kaah = unpack("<f", f.read(4))[0]
                    vz6kaah = unpack("<f", f.read(4))[0]
                    vw6kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7kaah = unpack("<f", f.read(4))[0]
                    vy7kaah = unpack("<f", f.read(4))[0]
                    vz7kaah = unpack("<f", f.read(4))[0]
                    vw7kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8kaah = unpack("<f", f.read(4))[0]
                    vy8kaah = unpack("<f", f.read(4))[0]
                    vz8kaah = unpack("<f", f.read(4))[0]
                    vw8kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9kaah = unpack("<f", f.read(4))[0]
                    vy9kaah = unpack("<f", f.read(4))[0]
                    vz9kaah = unpack("<f", f.read(4))[0]
                    vw9kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10kaah = unpack("<f", f.read(4))[0]
                    vy10kaah = unpack("<f", f.read(4))[0]
                    vz10kaah = unpack("<f", f.read(4))[0]
                    vw10kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11kaah = unpack("<f", f.read(4))[0]
                    vy11kaah = unpack("<f", f.read(4))[0]
                    vz11kaah = unpack("<f", f.read(4))[0]
                    vw11kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12kaah = unpack("<f", f.read(4))[0]
                    vy12kaah = unpack("<f", f.read(4))[0]
                    vz12kaah = unpack("<f", f.read(4))[0]
                    vw12kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13kaah = unpack("<f", f.read(4))[0]
                    vy13kaah = unpack("<f", f.read(4))[0]
                    vz13kaah = unpack("<f", f.read(4))[0]
                    vw13kaah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13kaah = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    

                    fa48 = bm_3k.verts.new([-vx1k,-vy1k,-vz1k])
                    fb48 = bm_3k.verts.new([-vx2k,-vy2k,-vz2k])
                    fc48 = bm_3k.verts.new([-vx3k,-vy3k,-vz3k])
                    fd48 = bm_3k.verts.new([-vx4k,-vy4k,-vz4k])
                    fe48 = bm_3k.verts.new([-vx5k,-vy5k,-vz5k])
                    ff48 = bm_3k.verts.new([-vx6k,-vy6k,-vz6k])
                    fg48 = bm_3k.verts.new([-vx7k,-vy7k,-vz7k])
                    fh48 = bm_3k.verts.new([-vx8k,-vy8k,-vz8k])
                    fi48 = bm_3k.verts.new([-vx9k,-vy9k,-vz9k])
                    fj48 = bm_3k.verts.new([-vx10k,-vy10k,-vz10k])
                    fk48 = bm_3k.verts.new([-vx11k,-vy11k,-vz11k])
                    fl48 = bm_3k.verts.new([-vx12k,-vy12k,-vz12k])
                    fm48 = bm_3k.verts.new([-vx13k,-vy13k,-vz13k])

                    fa49 = bm_3ka.verts.new([-vx1ka,-vy1ka,-vz1ka])
                    fb49 = bm_3ka.verts.new([-vx2ka,-vy2ka,-vz2ka])
                    fc49 = bm_3ka.verts.new([-vx3ka,-vy3ka,-vz3ka])
                    fd49 = bm_3ka.verts.new([-vx4ka,-vy4ka,-vz4ka])
                    fe49 = bm_3ka.verts.new([-vx5ka,-vy5ka,-vz5ka])
                    ff49 = bm_3ka.verts.new([-vx6ka,-vy6ka,-vz6ka])
                    fg49 = bm_3ka.verts.new([-vx7ka,-vy7ka,-vz7ka])
                    fh49 = bm_3ka.verts.new([-vx8ka,-vy8ka,-vz8ka])
                    fi49 = bm_3ka.verts.new([-vx9ka,-vy9ka,-vz9ka])
                    fj49 = bm_3ka.verts.new([-vx10ka,-vy10ka,-vz10ka])
                    fk49 = bm_3ka.verts.new([-vx11ka,-vy11ka,-vz11ka])
                    fl49 = bm_3ka.verts.new([-vx12ka,-vy12ka,-vz12ka])
                    fm49 = bm_3ka.verts.new([-vx13ka,-vy13ka,-vz13ka])

                    fa50 = bm_3kb.verts.new([-vx1kb,-vy1kb,-vz1kb])
                    fb50 = bm_3kb.verts.new([-vx2kb,-vy2kb,-vz2kb])
                    fc50 = bm_3kb.verts.new([-vx3kb,-vy3kb,-vz3kb])
                    fd50 = bm_3kb.verts.new([-vx4kb,-vy4kb,-vz4kb])
                    fe50 = bm_3kb.verts.new([-vx5kb,-vy5kb,-vz5kb])
                    ff50 = bm_3kb.verts.new([-vx6kb,-vy6kb,-vz6kb])
                    fg50 = bm_3kb.verts.new([-vx7kb,-vy7kb,-vz7kb])
                    fh50 = bm_3kb.verts.new([-vx8kb,-vy8kb,-vz8kb])
                    fi50 = bm_3kb.verts.new([-vx9kb,-vy9kb,-vz9kb])
                    fj50 = bm_3kb.verts.new([-vx10kb,-vy10kb,-vz10kb])
                    fk50 = bm_3kb.verts.new([-vx11kb,-vy11kb,-vz11kb])
                    fl50 = bm_3kb.verts.new([-vx12kb,-vy12kb,-vz12kb])
                    fm50 = bm_3kb.verts.new([-vx13kb,-vy13kb,-vz13kb])

                    fa51 = bm_3kc.verts.new([-vx1kc,-vy1kc,-vz1kc])
                    fb51 = bm_3kc.verts.new([-vx2kc,-vy2kc,-vz2kc])
                    fc51 = bm_3kc.verts.new([-vx3kc,-vy3kc,-vz3kc])
                    fd51 = bm_3kc.verts.new([-vx4kc,-vy4kc,-vz4kc])
                    fe51 = bm_3kc.verts.new([-vx5kc,-vy5kc,-vz5kc])
                    ff51 = bm_3kc.verts.new([-vx6kc,-vy6kc,-vz6kc])
                    fg51 = bm_3kc.verts.new([-vx7kc,-vy7kc,-vz7kc])
                    fh51 = bm_3kc.verts.new([-vx8kc,-vy8kc,-vz8kc])
                    fi51 = bm_3kc.verts.new([-vx9kc,-vy9kc,-vz9kc])
                    fj51 = bm_3kc.verts.new([-vx10kc,-vy10kc,-vz10kc])
                    fk51 = bm_3kc.verts.new([-vx11kc,-vy11kc,-vz11kc])
                    fl51 = bm_3kc.verts.new([-vx12kc,-vy12kc,-vz12kc])
                    fm51 = bm_3kc.verts.new([-vx13kc,-vy13kc,-vz13kc])

                    fa52 = bm_3kd.verts.new([-vx1kd,-vy1kd,-vz1kd])
                    fb52 = bm_3kd.verts.new([-vx2kd,-vy2kd,-vz2kd])
                    fc52 = bm_3kd.verts.new([-vx3kd,-vy3kd,-vz3kd])
                    fd52 = bm_3kd.verts.new([-vx4kd,-vy4kd,-vz4kd])
                    fe52 = bm_3kd.verts.new([-vx5kd,-vy5kd,-vz5kd])
                    ff52 = bm_3kd.verts.new([-vx6kd,-vy6kd,-vz6kd])
                    fg52 = bm_3kd.verts.new([-vx7kd,-vy7kd,-vz7kd])
                    fh52 = bm_3kd.verts.new([-vx8kd,-vy8kd,-vz8kd])
                    fi52 = bm_3kd.verts.new([-vx9kd,-vy9kd,-vz9kd])
                    fj52 = bm_3kd.verts.new([-vx10kd,-vy10kd,-vz10kd])
                    fk52 = bm_3kd.verts.new([-vx11kd,-vy11kd,-vz11kd])
                    fl52 = bm_3kd.verts.new([-vx12kd,-vy12kd,-vz12kd])
                    fm52 = bm_3kd.verts.new([-vx13kd,-vy13kd,-vz13kd])

                    fa53 = bm_3ke.verts.new([-vx1ke,-vy1ke,-vz1ke])
                    fb53 = bm_3ke.verts.new([-vx2ke,-vy2ke,-vz2ke])
                    fc53 = bm_3ke.verts.new([-vx3ke,-vy3ke,-vz3ke])
                    fd53 = bm_3ke.verts.new([-vx4ke,-vy4ke,-vz4ke])
                    fe53 = bm_3ke.verts.new([-vx5ke,-vy5ke,-vz5ke])
                    ff53 = bm_3ke.verts.new([-vx6ke,-vy6ke,-vz6ke])
                    fg53 = bm_3ke.verts.new([-vx7ke,-vy7ke,-vz7ke])
                    fh53 = bm_3ke.verts.new([-vx8ke,-vy8ke,-vz8ke])
                    fi53 = bm_3ke.verts.new([-vx9ke,-vy9ke,-vz9ke])
                    fj53 = bm_3ke.verts.new([-vx10ke,-vy10ke,-vz10ke])
                    fk53 = bm_3ke.verts.new([-vx11ke,-vy11ke,-vz11ke])
                    fl53 = bm_3ke.verts.new([-vx12ke,-vy12ke,-vz12ke])
                    fm53 = bm_3ke.verts.new([-vx13ke,-vy13ke,-vz13ke])

                    fa54 = bm_3kf.verts.new([-vx1kf,-vy1kf,-vz1kf])
                    fb54 = bm_3kf.verts.new([-vx2kf,-vy2kf,-vz2kf])
                    fc54 = bm_3kf.verts.new([-vx3kf,-vy3kf,-vz3kf])
                    fd54 = bm_3kf.verts.new([-vx4kf,-vy4kf,-vz4kf])
                    fe54 = bm_3kf.verts.new([-vx5kf,-vy5kf,-vz5kf])
                    ff54 = bm_3kf.verts.new([-vx6kf,-vy6kf,-vz6kf])
                    fg54 = bm_3kf.verts.new([-vx7kf,-vy7kf,-vz7kf])
                    fh54 = bm_3kf.verts.new([-vx8kf,-vy8kf,-vz8kf])
                    fi54 = bm_3kf.verts.new([-vx9kf,-vy9kf,-vz9kf])
                    fj54 = bm_3kf.verts.new([-vx10kf,-vy10kf,-vz10kf])
                    fk54 = bm_3kf.verts.new([-vx11kf,-vy11kf,-vz11kf])
                    fl54 = bm_3kf.verts.new([-vx12kf,-vy12kf,-vz12kf])
                    fm54 = bm_3kf.verts.new([-vx13kf,-vy13kf,-vz13kf])

                    fa55 = bm_3kg.verts.new([-vx1kg,-vy1kg,-vz1kg])
                    fb55 = bm_3kg.verts.new([-vx2kg,-vy2kg,-vz2kg])
                    fc55 = bm_3kg.verts.new([-vx3kg,-vy3kg,-vz3kg])
                    fd55 = bm_3kg.verts.new([-vx4kg,-vy4kg,-vz4kg])
                    fe55 = bm_3kg.verts.new([-vx5kg,-vy5kg,-vz5kg])
                    ff55 = bm_3kg.verts.new([-vx6kg,-vy6kg,-vz6kg])
                    fg55 = bm_3kg.verts.new([-vx7kg,-vy7kg,-vz7kg])
                    fh55 = bm_3kg.verts.new([-vx8kg,-vy8kg,-vz8kg])
                    fi55 = bm_3kg.verts.new([-vx9kg,-vy9kg,-vz9kg])
                    fj55 = bm_3kg.verts.new([-vx10kg,-vy10kg,-vz10kg])
                    fk55 = bm_3kg.verts.new([-vx11kg,-vy11kg,-vz11kg])
                    fl55 = bm_3kg.verts.new([-vx12kg,-vy12kg,-vz12kg])
                    fm55 = bm_3kg.verts.new([-vx13kg,-vy13kg,-vz13kg])

                    fa56 = bm_3kh.verts.new([-vx1kh,-vy1kh,-vz1kh])
                    fb56 = bm_3kh.verts.new([-vx2kh,-vy2kh,-vz2kh])
                    fc56 = bm_3kh.verts.new([-vx3kh,-vy3kh,-vz3kh])
                    fd56 = bm_3kh.verts.new([-vx4kh,-vy4kh,-vz4kh])
                    fe56 = bm_3kh.verts.new([-vx5kh,-vy5kh,-vz5kh])
                    ff56 = bm_3kh.verts.new([-vx6kh,-vy6kh,-vz6kh])
                    fg56 = bm_3kh.verts.new([-vx7kh,-vy7kh,-vz7kh])
                    fh56 = bm_3kh.verts.new([-vx8kh,-vy8kh,-vz8kh])
                    fi56 = bm_3kh.verts.new([-vx9kh,-vy9kh,-vz9kh])
                    fj56 = bm_3kh.verts.new([-vx10kh,-vy10kh,-vz10kh])
                    fk56 = bm_3kh.verts.new([-vx11kh,-vy11kh,-vz11kh])
                    fl56 = bm_3kh.verts.new([-vx12kh,-vy12kh,-vz12kh])
                    fm56 = bm_3kh.verts.new([-vx13kh,-vy13kh,-vz13kh])

                    fa57 = bm_3ki.verts.new([-vx1ki,-vy1ki,-vz1ki])
                    fb57 = bm_3ki.verts.new([-vx2ki,-vy2ki,-vz2ki])
                    fc57 = bm_3ki.verts.new([-vx3ki,-vy3ki,-vz3ki])
                    fd57 = bm_3ki.verts.new([-vx4ki,-vy4ki,-vz4ki])
                    fe57 = bm_3ki.verts.new([-vx5ki,-vy5ki,-vz5ki])
                    ff57 = bm_3ki.verts.new([-vx6ki,-vy6ki,-vz6ki])
                    fg57 = bm_3ki.verts.new([-vx7ki,-vy7ki,-vz7ki])
                    fh57 = bm_3ki.verts.new([-vx8ki,-vy8ki,-vz8ki])
                    fi57 = bm_3ki.verts.new([-vx9ki,-vy9ki,-vz9ki])
                    fj57 = bm_3ki.verts.new([-vx10ki,-vy10ki,-vz10ki])
                    fk57 = bm_3ki.verts.new([-vx11ki,-vy11ki,-vz11ki])
                    fl57 = bm_3ki.verts.new([-vx12ki,-vy12ki,-vz12ki])
                    fm57 = bm_3ki.verts.new([-vx13ki,-vy13ki,-vz13ki])

                    fa58 = bm_3kj.verts.new([-vx1kj,-vy1kj,-vz1kj])
                    fb58 = bm_3kj.verts.new([-vx2kj,-vy2kj,-vz2kj])
                    fc58 = bm_3kj.verts.new([-vx3kj,-vy3kj,-vz3kj])
                    fd58 = bm_3kj.verts.new([-vx4kj,-vy4kj,-vz4kj])
                    fe58 = bm_3kj.verts.new([-vx5kj,-vy5kj,-vz5kj])
                    ff58 = bm_3kj.verts.new([-vx6kj,-vy6kj,-vz6kj])
                    fg58 = bm_3kj.verts.new([-vx7kj,-vy7kj,-vz7kj])
                    fh58 = bm_3kj.verts.new([-vx8kj,-vy8kj,-vz8kj])
                    fi58 = bm_3kj.verts.new([-vx9kj,-vy9kj,-vz9kj])
                    fj58 = bm_3kj.verts.new([-vx10kj,-vy10kj,-vz10kj])
                    fk58 = bm_3kj.verts.new([-vx11kj,-vy11kj,-vz11kj])
                    fl58 = bm_3kj.verts.new([-vx12kj,-vy12kj,-vz12kj])
                    fm58 = bm_3kj.verts.new([-vx13kj,-vy13kj,-vz13kj])

                    fa59 = bm_3kk.verts.new([-vx1kk,-vy1kk,-vz1kk])
                    fb59 = bm_3kk.verts.new([-vx2kk,-vy2kk,-vz2kk])
                    fc59 = bm_3kk.verts.new([-vx3kk,-vy3kk,-vz3kk])
                    fd59 = bm_3kk.verts.new([-vx4kk,-vy4kk,-vz4kk])
                    fe59 = bm_3kk.verts.new([-vx5kk,-vy5kk,-vz5kk])
                    ff59 = bm_3kk.verts.new([-vx6kk,-vy6kk,-vz6kk])
                    fg59 = bm_3kk.verts.new([-vx7kk,-vy7kk,-vz7kk])
                    fh59 = bm_3kk.verts.new([-vx8kk,-vy8kk,-vz8kk])
                    fi59 = bm_3kk.verts.new([-vx9kk,-vy9kk,-vz9kk])
                    fj59 = bm_3kk.verts.new([-vx10kk,-vy10kk,-vz10kk])
                    fk59 = bm_3kk.verts.new([-vx11kk,-vy11kk,-vz11kk])
                    fl59 = bm_3kk.verts.new([-vx12kk,-vy12kk,-vz12kk])
                    fm59 = bm_3kk.verts.new([-vx13kk,-vy13kk,-vz13kk])

                    fa60 = bm_3kl.verts.new([-vx1kl,-vy1kl,-vz1kl])
                    fb60 = bm_3kl.verts.new([-vx2kl,-vy2kl,-vz2kl])
                    fc60 = bm_3kl.verts.new([-vx3kl,-vy3kl,-vz3kl])
                    fd60 = bm_3kl.verts.new([-vx4kl,-vy4kl,-vz4kl])
                    fe60 = bm_3kl.verts.new([-vx5kl,-vy5kl,-vz5kl])
                    ff60 = bm_3kl.verts.new([-vx6kl,-vy6kl,-vz6kl])
                    fg60 = bm_3kl.verts.new([-vx7kl,-vy7kl,-vz7kl])
                    fh60 = bm_3kl.verts.new([-vx8kl,-vy8kl,-vz8kl])
                    fi60 = bm_3kl.verts.new([-vx9kl,-vy9kl,-vz9kl])
                    fj60 = bm_3kl.verts.new([-vx10kl,-vy10kl,-vz10kl])
                    fk60 = bm_3kl.verts.new([-vx11kl,-vy11kl,-vz11kl])
                    fl60 = bm_3kl.verts.new([-vx12kl,-vy12kl,-vz12kl])
                    fm60 = bm_3kl.verts.new([-vx13kl,-vy13kl,-vz13kl])

                    fa61 = bm_3km.verts.new([-vx1km,-vy1km,-vz1km])
                    fb61 = bm_3km.verts.new([-vx2km,-vy2km,-vz2km])
                    fc61 = bm_3km.verts.new([-vx3km,-vy3km,-vz3km])
                    fd61 = bm_3km.verts.new([-vx4km,-vy4km,-vz4km])
                    fe61 = bm_3km.verts.new([-vx5km,-vy5km,-vz5km])
                    ff61 = bm_3km.verts.new([-vx6km,-vy6km,-vz6km])
                    fg61 = bm_3km.verts.new([-vx7km,-vy7km,-vz7km])
                    fh61 = bm_3km.verts.new([-vx8km,-vy8km,-vz8km])
                    fi61 = bm_3km.verts.new([-vx9km,-vy9km,-vz9km])
                    fj61 = bm_3km.verts.new([-vx10km,-vy10km,-vz10km])
                    fk61 = bm_3km.verts.new([-vx11km,-vy11km,-vz11km])
                    fl61 = bm_3km.verts.new([-vx12km,-vy12km,-vz12km])
                    fm61 = bm_3km.verts.new([-vx13km,-vy13km,-vz13km])

                    fa62 = bm_3kn.verts.new([-vx1kn,-vy1kn,-vz1kn])
                    fb62 = bm_3kn.verts.new([-vx2kn,-vy2kn,-vz2kn])
                    fc62 = bm_3kn.verts.new([-vx3kn,-vy3kn,-vz3kn])
                    fd62 = bm_3kn.verts.new([-vx4kn,-vy4kn,-vz4kn])
                    fe62 = bm_3kn.verts.new([-vx5kn,-vy5kn,-vz5kn])
                    ff62 = bm_3kn.verts.new([-vx6kn,-vy6kn,-vz6kn])
                    fg62 = bm_3kn.verts.new([-vx7kn,-vy7kn,-vz7kn])
                    fh62 = bm_3kn.verts.new([-vx8kn,-vy8kn,-vz8kn])
                    fi62 = bm_3kn.verts.new([-vx9kn,-vy9kn,-vz9kn])
                    fj62 = bm_3kn.verts.new([-vx10kn,-vy10kn,-vz10kn])
                    fk62 = bm_3kn.verts.new([-vx11kn,-vy11kn,-vz11kn])
                    fl62 = bm_3kn.verts.new([-vx12kn,-vy12kn,-vz12kn])
                    fm62 = bm_3kn.verts.new([-vx13kn,-vy13kn,-vz13kn])

                    fa63 = bm_3ko.verts.new([-vx1ko,-vy1ko,-vz1ko])
                    fb63 = bm_3ko.verts.new([-vx2ko,-vy2ko,-vz2ko])
                    fc63 = bm_3ko.verts.new([-vx3ko,-vy3ko,-vz3ko])
                    fd63 = bm_3ko.verts.new([-vx4ko,-vy4ko,-vz4ko])
                    fe63 = bm_3ko.verts.new([-vx5ko,-vy5ko,-vz5ko])
                    ff63 = bm_3ko.verts.new([-vx6ko,-vy6ko,-vz6ko])
                    fg63 = bm_3ko.verts.new([-vx7ko,-vy7ko,-vz7ko])
                    fh63 = bm_3ko.verts.new([-vx8ko,-vy8ko,-vz8ko])
                    fi63 = bm_3ko.verts.new([-vx9ko,-vy9ko,-vz9ko])
                    fj63 = bm_3ko.verts.new([-vx10ko,-vy10ko,-vz10ko])
                    fk63 = bm_3ko.verts.new([-vx11ko,-vy11ko,-vz11ko])
                    fl63 = bm_3ko.verts.new([-vx12ko,-vy12ko,-vz12ko])
                    fm63 = bm_3ko.verts.new([-vx13ko,-vy13ko,-vz13ko])

                    fa64 = bm_3kp.verts.new([-vx1kp,-vy1kp,-vz1kp])
                    fb64 = bm_3kp.verts.new([-vx2kp,-vy2kp,-vz2kp])
                    fc64 = bm_3kp.verts.new([-vx3kp,-vy3kp,-vz3kp])
                    fd64 = bm_3kp.verts.new([-vx4kp,-vy4kp,-vz4kp])
                    fe64 = bm_3kp.verts.new([-vx5kp,-vy5kp,-vz5kp])
                    ff64 = bm_3kp.verts.new([-vx6kp,-vy6kp,-vz6kp])
                    fg64 = bm_3kp.verts.new([-vx7kp,-vy7kp,-vz7kp])
                    fh64 = bm_3kp.verts.new([-vx8kp,-vy8kp,-vz8kp])
                    fi64 = bm_3kp.verts.new([-vx9kp,-vy9kp,-vz9kp])
                    fj64 = bm_3kp.verts.new([-vx10kp,-vy10kp,-vz10kp])
                    fk64 = bm_3kp.verts.new([-vx11kp,-vy11kp,-vz11kp])
                    fl64 = bm_3kp.verts.new([-vx12kp,-vy12kp,-vz12kp])
                    fm64 = bm_3kp.verts.new([-vx13kp,-vy13kp,-vz13kp])

                    fa65 = bm_3kq.verts.new([-vx1kq,-vy1kq,-vz1kq])
                    fb65 = bm_3kq.verts.new([-vx2kq,-vy2kq,-vz2kq])
                    fc65 = bm_3kq.verts.new([-vx3kq,-vy3kq,-vz3kq])
                    fd65 = bm_3kq.verts.new([-vx4kq,-vy4kq,-vz4kq])
                    fe65 = bm_3kq.verts.new([-vx5kq,-vy5kq,-vz5kq])
                    ff65 = bm_3kq.verts.new([-vx6kq,-vy6kq,-vz6kq])
                    fg65 = bm_3kq.verts.new([-vx7kq,-vy7kq,-vz7kq])
                    fh65 = bm_3kq.verts.new([-vx8kq,-vy8kq,-vz8kq])
                    fi65 = bm_3kq.verts.new([-vx9kq,-vy9kq,-vz9kq])
                    fj65 = bm_3kq.verts.new([-vx10kq,-vy10kq,-vz10kq])
                    fk65 = bm_3kq.verts.new([-vx11kq,-vy11kq,-vz11kq])
                    fl65 = bm_3kq.verts.new([-vx12kq,-vy12kq,-vz12kq])
                    fm65 = bm_3kq.verts.new([-vx13kq,-vy13kq,-vz13kq])

                    fa66 = bm_3kr.verts.new([-vx1kr,-vy1kr,-vz1kr])
                    fb66 = bm_3kr.verts.new([-vx2kr,-vy2kr,-vz2kr])
                    fc66 = bm_3kr.verts.new([-vx3kr,-vy3kr,-vz3kr])
                    fd66 = bm_3kr.verts.new([-vx4kr,-vy4kr,-vz4kr])
                    fe66 = bm_3kr.verts.new([-vx5kr,-vy5kr,-vz5kr])
                    ff66 = bm_3kr.verts.new([-vx6kr,-vy6kr,-vz6kr])
                    fg66 = bm_3kr.verts.new([-vx7kr,-vy7kr,-vz7kr])
                    fh66 = bm_3kr.verts.new([-vx8kr,-vy8kr,-vz8kr])
                    fi66 = bm_3kr.verts.new([-vx9kr,-vy9kr,-vz9kr])
                    fj66 = bm_3kr.verts.new([-vx10kr,-vy10kr,-vz10kr])
                    fk66 = bm_3kr.verts.new([-vx11kr,-vy11kr,-vz11kr])
                    fl66 = bm_3kr.verts.new([-vx12kr,-vy12kr,-vz12kr])
                    fm66 = bm_3kr.verts.new([-vx13kr,-vy13kr,-vz13kr])

                    fa67 = bm_3ks.verts.new([-vx1ks,-vy1ks,-vz1ks])
                    fb67 = bm_3ks.verts.new([-vx2ks,-vy2ks,-vz2ks])
                    fc67 = bm_3ks.verts.new([-vx3ks,-vy3ks,-vz3ks])
                    fd67 = bm_3ks.verts.new([-vx4ks,-vy4ks,-vz4ks])
                    fe67 = bm_3ks.verts.new([-vx5ks,-vy5ks,-vz5ks])
                    ff67 = bm_3ks.verts.new([-vx6ks,-vy6ks,-vz6ks])
                    fg67 = bm_3ks.verts.new([-vx7ks,-vy7ks,-vz7ks])
                    fh67 = bm_3ks.verts.new([-vx8ks,-vy8ks,-vz8ks])
                    fi67 = bm_3ks.verts.new([-vx9ks,-vy9ks,-vz9ks])
                    fj67 = bm_3ks.verts.new([-vx10ks,-vy10ks,-vz10ks])
                    fk67 = bm_3ks.verts.new([-vx11ks,-vy11ks,-vz11ks])
                    fl67 = bm_3ks.verts.new([-vx12ks,-vy12ks,-vz12ks])
                    fm67 = bm_3ks.verts.new([-vx13ks,-vy13ks,-vz13ks])

                    fa68 = bm_3kt.verts.new([-vx1kt,-vy1kt,-vz1kt])
                    fb68 = bm_3kt.verts.new([-vx2kt,-vy2kt,-vz2kt])
                    fc68 = bm_3kt.verts.new([-vx3kt,-vy3kt,-vz3kt])
                    fd68 = bm_3kt.verts.new([-vx4kt,-vy4kt,-vz4kt])
                    fe68 = bm_3kt.verts.new([-vx5kt,-vy5kt,-vz5kt])
                    ff68 = bm_3kt.verts.new([-vx6kt,-vy6kt,-vz6kt])
                    fg68 = bm_3kt.verts.new([-vx7kt,-vy7kt,-vz7kt])
                    fh68 = bm_3kt.verts.new([-vx8kt,-vy8kt,-vz8kt])
                    fi68 = bm_3kt.verts.new([-vx9kt,-vy9kt,-vz9kt])
                    fj68 = bm_3kt.verts.new([-vx10kt,-vy10kt,-vz10kt])
                    fk68 = bm_3kt.verts.new([-vx11kt,-vy11kt,-vz11kt])
                    fl68 = bm_3kt.verts.new([-vx12kt,-vy12kt,-vz12kt])
                    fm68 = bm_3kt.verts.new([-vx13kt,-vy13kt,-vz13kt])

                    fa69 = bm_3ku.verts.new([-vx1ku,-vy1ku,-vz1ku])
                    fb69 = bm_3ku.verts.new([-vx2ku,-vy2ku,-vz2ku])
                    fc69 = bm_3ku.verts.new([-vx3ku,-vy3ku,-vz3ku])
                    fd69 = bm_3ku.verts.new([-vx4ku,-vy4ku,-vz4ku])
                    fe69 = bm_3ku.verts.new([-vx5ku,-vy5ku,-vz5ku])
                    ff69 = bm_3ku.verts.new([-vx6ku,-vy6ku,-vz6ku])
                    fg69 = bm_3ku.verts.new([-vx7ku,-vy7ku,-vz7ku])
                    fh69 = bm_3ku.verts.new([-vx8ku,-vy8ku,-vz8ku])
                    fi69 = bm_3ku.verts.new([-vx9ku,-vy9ku,-vz9ku])
                    fj69 = bm_3ku.verts.new([-vx10ku,-vy10ku,-vz10ku])
                    fk69 = bm_3ku.verts.new([-vx11ku,-vy11ku,-vz11ku])
                    fl69 = bm_3ku.verts.new([-vx12ku,-vy12ku,-vz12ku])
                    fm69 = bm_3ku.verts.new([-vx13ku,-vy13ku,-vz13ku])

                    fa70 = bm_3kv.verts.new([-vx1kv,-vy1kv,-vz1kv])
                    fb70 = bm_3kv.verts.new([-vx2kv,-vy2kv,-vz2kv])
                    fc70 = bm_3kv.verts.new([-vx3kv,-vy3kv,-vz3kv])
                    fd70 = bm_3kv.verts.new([-vx4kv,-vy4kv,-vz4kv])
                    fe70 = bm_3kv.verts.new([-vx5kv,-vy5kv,-vz5kv])
                    ff70 = bm_3kv.verts.new([-vx6kv,-vy6kv,-vz6kv])
                    fg70 = bm_3kv.verts.new([-vx7kv,-vy7kv,-vz7kv])
                    fh70 = bm_3kv.verts.new([-vx8kv,-vy8kv,-vz8kv])
                    fi70 = bm_3kv.verts.new([-vx9kv,-vy9kv,-vz9kv])
                    fj70 = bm_3kv.verts.new([-vx10kv,-vy10kv,-vz10kv])
                    fk70 = bm_3kv.verts.new([-vx11kv,-vy11kv,-vz11kv])
                    fl70 = bm_3kv.verts.new([-vx12kv,-vy12kv,-vz12kv])
                    fm70 = bm_3kv.verts.new([-vx13kv,-vy13kv,-vz13kv])

                    fa71 = bm_3kw.verts.new([-vx1kw,-vy1kw,-vz1kw])
                    fb71 = bm_3kw.verts.new([-vx2kw,-vy2kw,-vz2kw])
                    fc71 = bm_3kw.verts.new([-vx3kw,-vy3kw,-vz3kw])
                    fd71 = bm_3kw.verts.new([-vx4kw,-vy4kw,-vz4kw])
                    fe71 = bm_3kw.verts.new([-vx5kw,-vy5kw,-vz5kw])
                    ff71 = bm_3kw.verts.new([-vx6kw,-vy6kw,-vz6kw])
                    fg71 = bm_3kw.verts.new([-vx7kw,-vy7kw,-vz7kw])
                    fh71 = bm_3kw.verts.new([-vx8kw,-vy8kw,-vz8kw])
                    fi71 = bm_3kw.verts.new([-vx9kw,-vy9kw,-vz9kw])
                    fj71 = bm_3kw.verts.new([-vx10kw,-vy10kw,-vz10kw])
                    fk71 = bm_3kw.verts.new([-vx11kw,-vy11kw,-vz11kw])
                    fl71 = bm_3kw.verts.new([-vx12kw,-vy12kw,-vz12kw])
                    fm71 = bm_3kw.verts.new([-vx13kw,-vy13kw,-vz13kw])

                    fa72 = bm_3kx.verts.new([-vx1kx,-vy1kx,-vz1kx])
                    fb72 = bm_3kx.verts.new([-vx2kx,-vy2kx,-vz2kx])
                    fc72 = bm_3kx.verts.new([-vx3kx,-vy3kx,-vz3kx])
                    fd72 = bm_3kx.verts.new([-vx4kx,-vy4kx,-vz4kx])
                    fe72 = bm_3kx.verts.new([-vx5kx,-vy5kx,-vz5kx])
                    ff72 = bm_3kx.verts.new([-vx6kx,-vy6kx,-vz6kx])
                    fg72 = bm_3kx.verts.new([-vx7kx,-vy7kx,-vz7kx])
                    fh72 = bm_3kx.verts.new([-vx8kx,-vy8kx,-vz8kx])
                    fi72 = bm_3kx.verts.new([-vx9kx,-vy9kx,-vz9kx])
                    fj72 = bm_3kx.verts.new([-vx10kx,-vy10kx,-vz10kx])
                    fk72 = bm_3kx.verts.new([-vx11kx,-vy11kx,-vz11kx])
                    fl72 = bm_3kx.verts.new([-vx12kx,-vy12kx,-vz12kx])
                    fm72 = bm_3kx.verts.new([-vx13kx,-vy13kx,-vz13kx])

                    fa73 = bm_3ky.verts.new([-vx1ky,-vy1ky,-vz1ky])
                    fb73 = bm_3ky.verts.new([-vx2ky,-vy2ky,-vz2ky])
                    fc73 = bm_3ky.verts.new([-vx3ky,-vy3ky,-vz3ky])
                    fd73 = bm_3ky.verts.new([-vx4ky,-vy4ky,-vz4ky])
                    fe73 = bm_3ky.verts.new([-vx5ky,-vy5ky,-vz5ky])
                    ff73 = bm_3ky.verts.new([-vx6ky,-vy6ky,-vz6ky])
                    fg73 = bm_3ky.verts.new([-vx7ky,-vy7ky,-vz7ky])
                    fh73 = bm_3ky.verts.new([-vx8ky,-vy8ky,-vz8ky])
                    fi73 = bm_3ky.verts.new([-vx9ky,-vy9ky,-vz9ky])
                    fj73 = bm_3ky.verts.new([-vx10ky,-vy10ky,-vz10ky])
                    fk73 = bm_3ky.verts.new([-vx11ky,-vy11ky,-vz11ky])
                    fl73 = bm_3ky.verts.new([-vx12ky,-vy12ky,-vz12ky])
                    fm73 = bm_3ky.verts.new([-vx13ky,-vy13ky,-vz13ky])

                    fa74 = bm_3kz.verts.new([-vx1kz,-vy1kz,-vz1kz])
                    fb74 = bm_3kz.verts.new([-vx2kz,-vy2kz,-vz2kz])
                    fc74 = bm_3kz.verts.new([-vx3kz,-vy3kz,-vz3kz])
                    fd74 = bm_3kz.verts.new([-vx4kz,-vy4kz,-vz4kz])
                    fe74 = bm_3kz.verts.new([-vx5kz,-vy5kz,-vz5kz])
                    ff74 = bm_3kz.verts.new([-vx6kz,-vy6kz,-vz6kz])
                    fg74 = bm_3kz.verts.new([-vx7kz,-vy7kz,-vz7kz])
                    fh74 = bm_3kz.verts.new([-vx8kz,-vy8kz,-vz8kz])
                    fi74 = bm_3kz.verts.new([-vx9kz,-vy9kz,-vz9kz])
                    fj74 = bm_3kz.verts.new([-vx10kz,-vy10kz,-vz10kz])
                    fk74 = bm_3kz.verts.new([-vx11kz,-vy11kz,-vz11kz])
                    fl74 = bm_3kz.verts.new([-vx12kz,-vy12kz,-vz12kz])
                    fm74 = bm_3kz.verts.new([-vx13kz,-vy13kz,-vz13kz])

                    fa75 = bm_3kaa.verts.new([-vx1kaa,-vy1kaa,-vz1kaa])
                    fb75 = bm_3kaa.verts.new([-vx2kaa,-vy2kaa,-vz2kaa])
                    fc75 = bm_3kaa.verts.new([-vx3kaa,-vy3kaa,-vz3kaa])
                    fd75 = bm_3kaa.verts.new([-vx4kaa,-vy4kaa,-vz4kaa])
                    fe75 = bm_3kaa.verts.new([-vx5kaa,-vy5kaa,-vz5kaa])
                    ff75 = bm_3kaa.verts.new([-vx6kaa,-vy6kaa,-vz6kaa])
                    fg75 = bm_3kaa.verts.new([-vx7kaa,-vy7kaa,-vz7kaa])
                    fh75 = bm_3kaa.verts.new([-vx8kaa,-vy8kaa,-vz8kaa])
                    fi75 = bm_3kaa.verts.new([-vx9kaa,-vy9kaa,-vz9kaa])
                    fj75 = bm_3kaa.verts.new([-vx10kaa,-vy10kaa,-vz10kaa])
                    fk75 = bm_3kaa.verts.new([-vx11kaa,-vy11kaa,-vz11kaa])
                    fl75 = bm_3kaa.verts.new([-vx12kaa,-vy12kaa,-vz12kaa])
                    fm75 = bm_3kaa.verts.new([-vx13kaa,-vy13kaa,-vz13kaa])

                    fa76 = bm_3kab.verts.new([-vx1kab,-vy1kab,-vz1kab])
                    fb76 = bm_3kab.verts.new([-vx2kab,-vy2kab,-vz2kab])
                    fc76 = bm_3kab.verts.new([-vx3kab,-vy3kab,-vz3kab])
                    fd76 = bm_3kab.verts.new([-vx4kab,-vy4kab,-vz4kab])
                    fe76 = bm_3kab.verts.new([-vx5kab,-vy5kab,-vz5kab])
                    ff76 = bm_3kab.verts.new([-vx6kab,-vy6kab,-vz6kab])
                    fg76 = bm_3kab.verts.new([-vx7kab,-vy7kab,-vz7kab])
                    fh76 = bm_3kab.verts.new([-vx8kab,-vy8kab,-vz8kab])
                    fi76 = bm_3kab.verts.new([-vx9kab,-vy9kab,-vz9kab])
                    fj76 = bm_3kab.verts.new([-vx10kab,-vy10kab,-vz10kab])
                    fk76 = bm_3kab.verts.new([-vx11kab,-vy11kab,-vz11kab])
                    fl76 = bm_3kab.verts.new([-vx12kab,-vy12kab,-vz12kab])
                    fm76 = bm_3kab.verts.new([-vx13kab,-vy13kab,-vz13kab])

                    fa77 = bm_3kac.verts.new([-vx1kac,-vy1kac,-vz1kac])
                    fb77 = bm_3kac.verts.new([-vx2kac,-vy2kac,-vz2kac])
                    fc77 = bm_3kac.verts.new([-vx3kac,-vy3kac,-vz3kac])
                    fd77 = bm_3kac.verts.new([-vx4kac,-vy4kac,-vz4kac])
                    fe77 = bm_3kac.verts.new([-vx5kac,-vy5kac,-vz5kac])
                    ff77 = bm_3kac.verts.new([-vx6kac,-vy6kac,-vz6kac])
                    fg77 = bm_3kac.verts.new([-vx7kac,-vy7kac,-vz7kac])
                    fh77 = bm_3kac.verts.new([-vx8kac,-vy8kac,-vz8kac])
                    fi77 = bm_3kac.verts.new([-vx9kac,-vy9kac,-vz9kac])
                    fj77 = bm_3kac.verts.new([-vx10kac,-vy10kac,-vz10kac])
                    fk77 = bm_3kac.verts.new([-vx11kac,-vy11kac,-vz11kac])
                    fl77 = bm_3kac.verts.new([-vx12kac,-vy12kac,-vz12kac])
                    fm77 = bm_3kac.verts.new([-vx13kac,-vy13kac,-vz13kac])

                    fa78 = bm_3kad.verts.new([-vx1kad,-vy1kad,-vz1kad])
                    fb78 = bm_3kad.verts.new([-vx2kad,-vy2kad,-vz2kad])
                    fc78 = bm_3kad.verts.new([-vx3kad,-vy3kad,-vz3kad])
                    fd78 = bm_3kad.verts.new([-vx4kad,-vy4kad,-vz4kad])
                    fe78 = bm_3kad.verts.new([-vx5kad,-vy5kad,-vz5kad])
                    ff78 = bm_3kad.verts.new([-vx6kad,-vy6kad,-vz6kad])
                    fg78 = bm_3kad.verts.new([-vx7kad,-vy7kad,-vz7kad])
                    fh78 = bm_3kad.verts.new([-vx8kad,-vy8kad,-vz8kad])
                    fi78 = bm_3kad.verts.new([-vx9kad,-vy9kad,-vz9kad])
                    fj78 = bm_3kad.verts.new([-vx10kad,-vy10kad,-vz10kad])
                    fk78 = bm_3kad.verts.new([-vx11kad,-vy11kad,-vz11kad])
                    fl78 = bm_3kad.verts.new([-vx12kad,-vy12kad,-vz12kad])
                    fm78 = bm_3kad.verts.new([-vx13kad,-vy13kad,-vz13kad])

                    fa79 = bm_3kae.verts.new([-vx1kae,-vy1kae,-vz1kae])
                    fb79 = bm_3kae.verts.new([-vx2kae,-vy2kae,-vz2kae])
                    fc79 = bm_3kae.verts.new([-vx3kae,-vy3kae,-vz3kae])
                    fd79 = bm_3kae.verts.new([-vx4kae,-vy4kae,-vz4kae])
                    fe79 = bm_3kae.verts.new([-vx5kae,-vy5kae,-vz5kae])
                    ff79 = bm_3kae.verts.new([-vx6kae,-vy6kae,-vz6kae])
                    fg79 = bm_3kae.verts.new([-vx7kae,-vy7kae,-vz7kae])
                    fh79 = bm_3kae.verts.new([-vx8kae,-vy8kae,-vz8kae])
                    fi79 = bm_3kae.verts.new([-vx9kae,-vy9kae,-vz9kae])
                    fj79 = bm_3kae.verts.new([-vx10kae,-vy10kae,-vz10kae])
                    fk79 = bm_3kae.verts.new([-vx11kae,-vy11kae,-vz11kae])
                    fl79 = bm_3kae.verts.new([-vx12kae,-vy12kae,-vz12kae])
                    fm79 = bm_3kae.verts.new([-vx13kae,-vy13kae,-vz13kae])

                    fa80 = bm_3kaf.verts.new([-vx1kaf,-vy1kaf,-vz1kaf])
                    fb80 = bm_3kaf.verts.new([-vx2kaf,-vy2kaf,-vz2kaf])
                    fc80 = bm_3kaf.verts.new([-vx3kaf,-vy3kaf,-vz3kaf])
                    fd80 = bm_3kaf.verts.new([-vx4kaf,-vy4kaf,-vz4kaf])
                    fe80 = bm_3kaf.verts.new([-vx5kaf,-vy5kaf,-vz5kaf])
                    ff80 = bm_3kaf.verts.new([-vx6kaf,-vy6kaf,-vz6kaf])
                    fg80 = bm_3kaf.verts.new([-vx7kaf,-vy7kaf,-vz7kaf])
                    fh80 = bm_3kaf.verts.new([-vx8kaf,-vy8kaf,-vz8kaf])
                    fi80 = bm_3kaf.verts.new([-vx9kaf,-vy9kaf,-vz9kaf])
                    fj80 = bm_3kaf.verts.new([-vx10kaf,-vy10kaf,-vz10kaf])
                    fk80 = bm_3kaf.verts.new([-vx11kaf,-vy11kaf,-vz11kaf])
                    fl80 = bm_3kaf.verts.new([-vx12kaf,-vy12kaf,-vz12kaf])
                    fm80 = bm_3kaf.verts.new([-vx13kaf,-vy13kaf,-vz13kaf])

                    fa81 = bm_3kag.verts.new([-vx1kag,-vy1kag,-vz1kag])
                    fb81 = bm_3kag.verts.new([-vx2kag,-vy2kag,-vz2kag])
                    fc81 = bm_3kag.verts.new([-vx3kag,-vy3kag,-vz3kag])
                    fd81 = bm_3kag.verts.new([-vx4kag,-vy4kag,-vz4kag])
                    fe81 = bm_3kag.verts.new([-vx5kag,-vy5kag,-vz5kag])
                    ff81 = bm_3kag.verts.new([-vx6kag,-vy6kag,-vz6kag])
                    fg81 = bm_3kag.verts.new([-vx7kag,-vy7kag,-vz7kag])
                    fh81 = bm_3kag.verts.new([-vx8kag,-vy8kag,-vz8kag])
                    fi81 = bm_3kag.verts.new([-vx9kag,-vy9kag,-vz9kag])
                    fj81 = bm_3kag.verts.new([-vx10kag,-vy10kag,-vz10kag])
                    fk81 = bm_3kag.verts.new([-vx11kag,-vy11kag,-vz11kag])
                    fl81 = bm_3kag.verts.new([-vx12kag,-vy12kag,-vz12kag])
                    fm81 = bm_3kag.verts.new([-vx13kag,-vy13kag,-vz13kag])

                    fa82 = bm_3kah.verts.new([-vx1kah,-vy1kah,-vz1kah])
                    fb82 = bm_3kah.verts.new([-vx2kah,-vy2kah,-vz2kah])
                    fc82 = bm_3kah.verts.new([-vx3kah,-vy3kah,-vz3kah])
                    fd82 = bm_3kah.verts.new([-vx4kah,-vy4kah,-vz4kah])
                    fe82 = bm_3kah.verts.new([-vx5kah,-vy5kah,-vz5kah])
                    ff82 = bm_3kah.verts.new([-vx6kah,-vy6kah,-vz6kah])
                    fg82 = bm_3kah.verts.new([-vx7kah,-vy7kah,-vz7kah])
                    fh82 = bm_3kah.verts.new([-vx8kah,-vy8kah,-vz8kah])
                    fi82 = bm_3kah.verts.new([-vx9kah,-vy9kah,-vz9kah])
                    fj82 = bm_3kah.verts.new([-vx10kah,-vy10kah,-vz10kah])
                    fk82 = bm_3kah.verts.new([-vx11kah,-vy11kah,-vz11kah])
                    fl82 = bm_3kah.verts.new([-vx12kah,-vy12kah,-vz12kah])
                    fm82 = bm_3kah.verts.new([-vx13kah,-vy13kah,-vz13kah])

                    fa83 = bm_3kai.verts.new([-vx1kai,-vy1kai,-vz1kai])
                    fb83 = bm_3kai.verts.new([-vx2kai,-vy2kai,-vz2kai])
                    fc83 = bm_3kai.verts.new([-vx3kai,-vy3kai,-vz3kai])
                    fd83 = bm_3kai.verts.new([-vx4kai,-vy4kai,-vz4kai])
                    fe83 = bm_3kai.verts.new([-vx5kai,-vy5kai,-vz5kai])
                    ff83 = bm_3kai.verts.new([-vx6kai,-vy6kai,-vz6kai])
                    fg83 = bm_3kai.verts.new([-vx7kai,-vy7kai,-vz7kai])
                    fh83 = bm_3kai.verts.new([-vx8kai,-vy8kai,-vz8kai])
                    fi83 = bm_3kai.verts.new([-vx9kai,-vy9kai,-vz9kai])
                    fj83 = bm_3kai.verts.new([-vx10kai,-vy10kai,-vz10kai])
                    fk83 = bm_3kai.verts.new([-vx11kai,-vy11kai,-vz11kai])
                    fl83 = bm_3kai.verts.new([-vx12kai,-vy12kai,-vz12kai])
                    fm83 = bm_3kai.verts.new([-vx13kai,-vy13kai,-vz13kai])

                    fa84 = bm_3kaj.verts.new([-vx1kaj,-vy1kaj,-vz1kaj])
                    fb84 = bm_3kaj.verts.new([-vx2kaj,-vy2kaj,-vz2kaj])
                    fc84 = bm_3kaj.verts.new([-vx3kaj,-vy3kaj,-vz3kaj])
                    fd84 = bm_3kaj.verts.new([-vx4kaj,-vy4kaj,-vz4kaj])
                    fe84 = bm_3kaj.verts.new([-vx5kaj,-vy5kaj,-vz5kaj])
                    ff84 = bm_3kaj.verts.new([-vx6kaj,-vy6kaj,-vz6kaj])
                    fg84 = bm_3kaj.verts.new([-vx7kaj,-vy7kaj,-vz7kaj])
                    fh84 = bm_3kaj.verts.new([-vx8kaj,-vy8kaj,-vz8kaj])
                    fi84 = bm_3kaj.verts.new([-vx9kaj,-vy9kaj,-vz9kaj])
                    fj84 = bm_3kaj.verts.new([-vx10kaj,-vy10kaj,-vz10kaj])
                    fk84 = bm_3kaj.verts.new([-vx11kaj,-vy11kaj,-vz11kaj])
                    fl84 = bm_3kaj.verts.new([-vx12kaj,-vy12kaj,-vz12kaj])
                    fm84 = bm_3kaj.verts.new([-vx13kaj,-vy13kaj,-vz13kaj])

                    fa85 = bm_3kak.verts.new([-vx1kak,-vy1kak,-vz1kak])
                    fb85 = bm_3kak.verts.new([-vx2kak,-vy2kak,-vz2kak])
                    fc85 = bm_3kak.verts.new([-vx3kak,-vy3kak,-vz3kak])
                    fd85 = bm_3kak.verts.new([-vx4kak,-vy4kak,-vz4kak])
                    fe85 = bm_3kak.verts.new([-vx5kak,-vy5kak,-vz5kak])
                    ff85 = bm_3kak.verts.new([-vx6kak,-vy6kak,-vz6kak])
                    fg85 = bm_3kak.verts.new([-vx7kak,-vy7kak,-vz7kak])
                    fh85 = bm_3kak.verts.new([-vx8kak,-vy8kak,-vz8kak])
                    fi85 = bm_3kak.verts.new([-vx9kak,-vy9kak,-vz9kak])
                    fj85 = bm_3kak.verts.new([-vx10kak,-vy10kak,-vz10kak])
                    fk85 = bm_3kak.verts.new([-vx11kak,-vy11kak,-vz11kak])
                    fl85 = bm_3kak.verts.new([-vx12kak,-vy12kak,-vz12kak])
                    fm85 = bm_3kak.verts.new([-vx13kak,-vy13kak,-vz13kak])

                    fa86 = bm_3kal.verts.new([-vx1kal,-vy1kal,-vz1kal])
                    fb86 = bm_3kal.verts.new([-vx2kal,-vy2kal,-vz2kal])
                    fc86 = bm_3kal.verts.new([-vx3kal,-vy3kal,-vz3kal])
                    fd86 = bm_3kal.verts.new([-vx4kal,-vy4kal,-vz4kal])
                    fe86 = bm_3kal.verts.new([-vx5kal,-vy5kal,-vz5kal])
                    ff86 = bm_3kal.verts.new([-vx6kal,-vy6kal,-vz6kal])
                    fg86 = bm_3kal.verts.new([-vx7kal,-vy7kal,-vz7kal])
                    fh86 = bm_3kal.verts.new([-vx8kal,-vy8kal,-vz8kal])
                    fi86 = bm_3kal.verts.new([-vx9kal,-vy9kal,-vz9kal])
                    fj86 = bm_3kal.verts.new([-vx10kal,-vy10kal,-vz10kal])
                    fk86 = bm_3kal.verts.new([-vx11kal,-vy11kal,-vz11kal])
                    fl86 = bm_3kal.verts.new([-vx12kal,-vy12kal,-vz12kal])
                    fm86 = bm_3kal.verts.new([-vx13kal,-vy13kal,-vz13kal])

                    fa87 = bm_3kam.verts.new([-vx1kam,-vy1kam,-vz1kam])
                    fb87 = bm_3kam.verts.new([-vx2kam,-vy2kam,-vz2kam])
                    fc87 = bm_3kam.verts.new([-vx3kam,-vy3kam,-vz3kam])
                    fd87 = bm_3kam.verts.new([-vx4kam,-vy4kam,-vz4kam])
                    fe87 = bm_3kam.verts.new([-vx5kam,-vy5kam,-vz5kam])
                    ff87 = bm_3kam.verts.new([-vx6kam,-vy6kam,-vz6kam])
                    fg87 = bm_3kam.verts.new([-vx7kam,-vy7kam,-vz7kam])
                    fh87 = bm_3kam.verts.new([-vx8kam,-vy8kam,-vz8kam])
                    fi87 = bm_3kam.verts.new([-vx9kam,-vy9kam,-vz9kam])
                    fj87 = bm_3kam.verts.new([-vx10kam,-vy10kam,-vz10kam])
                    fk87 = bm_3kam.verts.new([-vx11kam,-vy11kam,-vz11kam])
                    fl87 = bm_3kam.verts.new([-vx12kam,-vy12kam,-vz12kam])
                    fm87 = bm_3kam.verts.new([-vx13kam,-vy13kam,-vz13kam])

                    fa88 = bm_3kan.verts.new([-vx1kan,-vy1kan,-vz1kan])
                    fb88 = bm_3kan.verts.new([-vx2kan,-vy2kan,-vz2kan])
                    fc88 = bm_3kan.verts.new([-vx3kan,-vy3kan,-vz3kan])
                    fd88 = bm_3kan.verts.new([-vx4kan,-vy4kan,-vz4kan])
                    fe88 = bm_3kan.verts.new([-vx5kan,-vy5kan,-vz5kan])
                    ff88 = bm_3kan.verts.new([-vx6kan,-vy6kan,-vz6kan])
                    fg88 = bm_3kan.verts.new([-vx7kan,-vy7kan,-vz7kan])
                    fh88 = bm_3kan.verts.new([-vx8kan,-vy8kan,-vz8kan])
                    fi88 = bm_3kan.verts.new([-vx9kan,-vy9kan,-vz9kan])
                    fj88 = bm_3kan.verts.new([-vx10kan,-vy10kan,-vz10kan])
                    fk88 = bm_3kan.verts.new([-vx11kan,-vy11kan,-vz11kan])
                    fl88 = bm_3kan.verts.new([-vx12kan,-vy12kan,-vz12kan])
                    fm88 = bm_3kan.verts.new([-vx13kan,-vy13kan,-vz13kan])

                    fa89 = bm_3kao.verts.new([-vx1kao,-vy1kao,-vz1kao])
                    fb89 = bm_3kao.verts.new([-vx2kao,-vy2kao,-vz2kao])
                    fc89 = bm_3kao.verts.new([-vx3kao,-vy3kao,-vz3kao])
                    fd89 = bm_3kao.verts.new([-vx4kao,-vy4kao,-vz4kao])
                    fe89 = bm_3kao.verts.new([-vx5kao,-vy5kao,-vz5kao])
                    ff89 = bm_3kao.verts.new([-vx6kao,-vy6kao,-vz6kao])
                    fg89 = bm_3kao.verts.new([-vx7kao,-vy7kao,-vz7kao])
                    fh89 = bm_3kao.verts.new([-vx8kao,-vy8kao,-vz8kao])
                    fi89 = bm_3kao.verts.new([-vx9kao,-vy9kao,-vz9kao])
                    fj89 = bm_3kao.verts.new([-vx10kao,-vy10kao,-vz10kao])
                    fk89 = bm_3kao.verts.new([-vx11kao,-vy11kao,-vz11kao])
                    fl89 = bm_3kao.verts.new([-vx12kao,-vy12kao,-vz12kao])
                    fm89 = bm_3kao.verts.new([-vx13kao,-vy13kao,-vz13kao])

                    fa90 = bm_3kap.verts.new([-vx1kap,-vy1kap,-vz1kap])
                    fb90 = bm_3kap.verts.new([-vx2kap,-vy2kap,-vz2kap])
                    fc90 = bm_3kap.verts.new([-vx3kap,-vy3kap,-vz3kap])
                    fd90 = bm_3kap.verts.new([-vx4kap,-vy4kap,-vz4kap])
                    fe90 = bm_3kap.verts.new([-vx5kap,-vy5kap,-vz5kap])
                    ff90 = bm_3kap.verts.new([-vx6kap,-vy6kap,-vz6kap])
                    fg90 = bm_3kap.verts.new([-vx7kap,-vy7kap,-vz7kap])
                    fh90 = bm_3kap.verts.new([-vx8kap,-vy8kap,-vz8kap])
                    fi90 = bm_3kap.verts.new([-vx9kap,-vy9kap,-vz9kap])
                    fj90 = bm_3kap.verts.new([-vx10kap,-vy10kap,-vz10kap])
                    fk90 = bm_3kap.verts.new([-vx11kap,-vy11kap,-vz11kap])
                    fl90 = bm_3kap.verts.new([-vx12kap,-vy12kap,-vz12kap])
                    fm90 = bm_3kap.verts.new([-vx13kap,-vy13kap,-vz13kap])

                    fa91 = bm_3kaq.verts.new([-vx1kaq,-vy1kaq,-vz1kaq])
                    fb91 = bm_3kaq.verts.new([-vx2kaq,-vy2kaq,-vz2kaq])
                    fc91 = bm_3kaq.verts.new([-vx3kaq,-vy3kaq,-vz3kaq])
                    fd91 = bm_3kaq.verts.new([-vx4kaq,-vy4kaq,-vz4kaq])
                    fe91 = bm_3kaq.verts.new([-vx5kaq,-vy5kaq,-vz5kaq])
                    ff91 = bm_3kaq.verts.new([-vx6kaq,-vy6kaq,-vz6kaq])
                    fg91 = bm_3kaq.verts.new([-vx7kaq,-vy7kaq,-vz7kaq])
                    fh91 = bm_3kaq.verts.new([-vx8kaq,-vy8kaq,-vz8kaq])
                    fi91 = bm_3kaq.verts.new([-vx9kaq,-vy9kaq,-vz9kaq])
                    fj91 = bm_3kaq.verts.new([-vx10kaq,-vy10kaq,-vz10kaq])
                    fk91 = bm_3kaq.verts.new([-vx11kaq,-vy11kaq,-vz11kaq])
                    fl91 = bm_3kaq.verts.new([-vx12kaq,-vy12kaq,-vz12kaq])
                    fm91 = bm_3kaq.verts.new([-vx13kaq,-vy13kaq,-vz13kaq])

                    fa92 = bm_3kar.verts.new([-vx1kar,-vy1kar,-vz1kar])
                    fb92 = bm_3kar.verts.new([-vx2kar,-vy2kar,-vz2kar])
                    fc92 = bm_3kar.verts.new([-vx3kar,-vy3kar,-vz3kar])
                    fd92 = bm_3kar.verts.new([-vx4kar,-vy4kar,-vz4kar])
                    fe92 = bm_3kar.verts.new([-vx5kar,-vy5kar,-vz5kar])
                    ff92 = bm_3kar.verts.new([-vx6kar,-vy6kar,-vz6kar])
                    fg92 = bm_3kar.verts.new([-vx7kar,-vy7kar,-vz7kar])
                    fh92 = bm_3kar.verts.new([-vx8kar,-vy8kar,-vz8kar])
                    fi92 = bm_3kar.verts.new([-vx9kar,-vy9kar,-vz9kar])
                    fj92 = bm_3kar.verts.new([-vx10kar,-vy10kar,-vz10kar])
                    fk92 = bm_3kar.verts.new([-vx11kar,-vy11kar,-vz11kar])
                    fl92 = bm_3kar.verts.new([-vx12kar,-vy12kar,-vz12kar])
                    fm92 = bm_3kar.verts.new([-vx13kar,-vy13kar,-vz13kar])

                    fa93 = bm_3kas.verts.new([-vx1kas,-vy1kas,-vz1kas])
                    fb93 = bm_3kas.verts.new([-vx2kas,-vy2kas,-vz2kas])
                    fc93 = bm_3kas.verts.new([-vx3kas,-vy3kas,-vz3kas])
                    fd93 = bm_3kas.verts.new([-vx4kas,-vy4kas,-vz4kas])
                    fe93 = bm_3kas.verts.new([-vx5kas,-vy5kas,-vz5kas])
                    ff93 = bm_3kas.verts.new([-vx6kas,-vy6kas,-vz6kas])
                    fg93 = bm_3kas.verts.new([-vx7kas,-vy7kas,-vz7kas])
                    fh93 = bm_3kas.verts.new([-vx8kas,-vy8kas,-vz8kas])
                    fi93 = bm_3kas.verts.new([-vx9kas,-vy9kas,-vz9kas])
                    fj93 = bm_3kas.verts.new([-vx10kas,-vy10kas,-vz10kas])
                    fk93 = bm_3kas.verts.new([-vx11kas,-vy11kas,-vz11kas])
                    fl93 = bm_3kas.verts.new([-vx12kas,-vy12kas,-vz12kas])
                    fm93 = bm_3kas.verts.new([-vx13kas,-vy13kas,-vz13kas])

                    fa94 = bm_3kat.verts.new([-vx1kat,-vy1kat,-vz1kat])
                    fb94 = bm_3kat.verts.new([-vx2kat,-vy2kat,-vz2kat])
                    fc94 = bm_3kat.verts.new([-vx3kat,-vy3kat,-vz3kat])
                    fd94 = bm_3kat.verts.new([-vx4kat,-vy4kat,-vz4kat])
                    fe94 = bm_3kat.verts.new([-vx5kat,-vy5kat,-vz5kat])
                    ff94 = bm_3kat.verts.new([-vx6kat,-vy6kat,-vz6kat])
                    fg94 = bm_3kat.verts.new([-vx7kat,-vy7kat,-vz7kat])
                    fh94 = bm_3kat.verts.new([-vx8kat,-vy8kat,-vz8kat])
                    fi94 = bm_3kat.verts.new([-vx9kat,-vy9kat,-vz9kat])
                    fj94 = bm_3kat.verts.new([-vx10kat,-vy10kat,-vz10kat])
                    fk94 = bm_3kat.verts.new([-vx11kat,-vy11kat,-vz11kat])
                    fl94 = bm_3kat.verts.new([-vx12kat,-vy12kat,-vz12kat])
                    fm94 = bm_3kat.verts.new([-vx13kat,-vy13kat,-vz13kat])

                    fa95 = bm_3kau.verts.new([-vx1kau,-vy1kau,-vz1kau])
                    fb95 = bm_3kau.verts.new([-vx2kau,-vy2kau,-vz2kau])
                    fc95 = bm_3kau.verts.new([-vx3kau,-vy3kau,-vz3kau])
                    fd95 = bm_3kau.verts.new([-vx4kau,-vy4kau,-vz4kau])
                    fe95 = bm_3kau.verts.new([-vx5kau,-vy5kau,-vz5kau])
                    ff95 = bm_3kau.verts.new([-vx6kau,-vy6kau,-vz6kau])
                    fg95 = bm_3kau.verts.new([-vx7kau,-vy7kau,-vz7kau])
                    fh95 = bm_3kau.verts.new([-vx8kau,-vy8kau,-vz8kau])
                    fi95 = bm_3kau.verts.new([-vx9kau,-vy9kau,-vz9kau])
                    fj95 = bm_3kau.verts.new([-vx10kau,-vy10kau,-vz10kau])
                    fk95 = bm_3kau.verts.new([-vx11kau,-vy11kau,-vz11kau])
                    fl95 = bm_3kau.verts.new([-vx12kau,-vy12kau,-vz12kau])
                    fm95 = bm_3kau.verts.new([-vx13kau,-vy13kau,-vz13kau])

                    fa96 = bm_3kav.verts.new([-vx1kav,-vy1kav,-vz1kav])
                    fb96 = bm_3kav.verts.new([-vx2kav,-vy2kav,-vz2kav])
                    fc96 = bm_3kav.verts.new([-vx3kav,-vy3kav,-vz3kav])
                    fd96 = bm_3kav.verts.new([-vx4kav,-vy4kav,-vz4kav])
                    fe96 = bm_3kav.verts.new([-vx5kav,-vy5kav,-vz5kav])
                    ff96 = bm_3kav.verts.new([-vx6kav,-vy6kav,-vz6kav])
                    fg96 = bm_3kav.verts.new([-vx7kav,-vy7kav,-vz7kav])
                    fh96 = bm_3kav.verts.new([-vx8kav,-vy8kav,-vz8kav])
                    fi96 = bm_3kav.verts.new([-vx9kav,-vy9kav,-vz9kav])
                    fj96 = bm_3kav.verts.new([-vx10kav,-vy10kav,-vz10kav])
                    fk96 = bm_3kav.verts.new([-vx11kav,-vy11kav,-vz11kav])
                    fl96 = bm_3kav.verts.new([-vx12kav,-vy12kav,-vz12kav])
                    fm96 = bm_3kav.verts.new([-vx13kav,-vy13kav,-vz13kav])

                    fa97 = bm_3kaw.verts.new([-vx1kaw,-vy1kaw,-vz1kaw])
                    fb97 = bm_3kaw.verts.new([-vx2kaw,-vy2kaw,-vz2kaw])
                    fc97 = bm_3kaw.verts.new([-vx3kaw,-vy3kaw,-vz3kaw])
                    fd97 = bm_3kaw.verts.new([-vx4kaw,-vy4kaw,-vz4kaw])
                    fe97 = bm_3kaw.verts.new([-vx5kaw,-vy5kaw,-vz5kaw])
                    ff97 = bm_3kaw.verts.new([-vx6kaw,-vy6kaw,-vz6kaw])
                    fg97 = bm_3kaw.verts.new([-vx7kaw,-vy7kaw,-vz7kaw])
                    fh97 = bm_3kaw.verts.new([-vx8kaw,-vy8kaw,-vz8kaw])
                    fi97 = bm_3kaw.verts.new([-vx9kaw,-vy9kaw,-vz9kaw])
                    fj97 = bm_3kaw.verts.new([-vx10kaw,-vy10kaw,-vz10kaw])
                    fk97 = bm_3kaw.verts.new([-vx11kaw,-vy11kaw,-vz11kaw])
                    fl97 = bm_3kaw.verts.new([-vx12kaw,-vy12kaw,-vz12kaw])
                    fm97 = bm_3kaw.verts.new([-vx13kaw,-vy13kaw,-vz13kaw])

                    fa98 = bm_3kax.verts.new([-vx1kax,-vy1kax,-vz1kax])
                    fb98 = bm_3kax.verts.new([-vx2kax,-vy2kax,-vz2kax])
                    fc98 = bm_3kax.verts.new([-vx3kax,-vy3kax,-vz3kax])
                    fd98 = bm_3kax.verts.new([-vx4kax,-vy4kax,-vz4kax])
                    fe98 = bm_3kax.verts.new([-vx5kax,-vy5kax,-vz5kax])
                    ff98 = bm_3kax.verts.new([-vx6kax,-vy6kax,-vz6kax])
                    fg98 = bm_3kax.verts.new([-vx7kax,-vy7kax,-vz7kax])
                    fh98 = bm_3kax.verts.new([-vx8kax,-vy8kax,-vz8kax])
                    fi98 = bm_3kax.verts.new([-vx9kax,-vy9kax,-vz9kax])
                    fj98 = bm_3kax.verts.new([-vx10kax,-vy10kax,-vz10kax])
                    fk98 = bm_3kax.verts.new([-vx11kax,-vy11kax,-vz11kax])
                    fl98 = bm_3kax.verts.new([-vx12kax,-vy12kax,-vz12kax])
                    fm98 = bm_3kax.verts.new([-vx13kax,-vy13kax,-vz13kax])

                    fa99 = bm_3kay.verts.new([-vx1kay,-vy1kay,-vz1kay])
                    fb99 = bm_3kay.verts.new([-vx2kay,-vy2kay,-vz2kay])
                    fc99 = bm_3kay.verts.new([-vx3kay,-vy3kay,-vz3kay])
                    fd99 = bm_3kay.verts.new([-vx4kay,-vy4kay,-vz4kay])
                    fe99 = bm_3kay.verts.new([-vx5kay,-vy5kay,-vz5kay])
                    ff99 = bm_3kay.verts.new([-vx6kay,-vy6kay,-vz6kay])
                    fg99 = bm_3kay.verts.new([-vx7kay,-vy7kay,-vz7kay])
                    fh99 = bm_3kay.verts.new([-vx8kay,-vy8kay,-vz8kay])
                    fi99 = bm_3kay.verts.new([-vx9kay,-vy9kay,-vz9kay])
                    fj99 = bm_3kay.verts.new([-vx10kay,-vy10kay,-vz10kay])
                    fk99 = bm_3kay.verts.new([-vx11kay,-vy11kay,-vz11kay])
                    fl99 = bm_3kay.verts.new([-vx12kay,-vy12kay,-vz12kay])
                    fm99 = bm_3kay.verts.new([-vx13kay,-vy13kay,-vz13kay])

                    fa100 = bm_3kaz.verts.new([-vx1kaz,-vy1kaz,-vz1kaz])
                    fb100 = bm_3kaz.verts.new([-vx2kaz,-vy2kaz,-vz2kaz])
                    fc100 = bm_3kaz.verts.new([-vx3kaz,-vy3kaz,-vz3kaz])
                    fd100 = bm_3kaz.verts.new([-vx4kaz,-vy4kaz,-vz4kaz])
                    fe100 = bm_3kaz.verts.new([-vx5kaz,-vy5kaz,-vz5kaz])
                    ff100 = bm_3kaz.verts.new([-vx6kaz,-vy6kaz,-vz6kaz])
                    fg100 = bm_3kaz.verts.new([-vx7kaz,-vy7kaz,-vz7kaz])
                    fh100 = bm_3kaz.verts.new([-vx8kaz,-vy8kaz,-vz8kaz])
                    fi100 = bm_3kaz.verts.new([-vx9kaz,-vy9kaz,-vz9kaz])
                    fj100 = bm_3kaz.verts.new([-vx10kaz,-vy10kaz,-vz10kaz])
                    fk100 = bm_3kaz.verts.new([-vx11kaz,-vy11kaz,-vz11kaz])
                    fl100 = bm_3kaz.verts.new([-vx12kaz,-vy12kaz,-vz12kaz])
                    fm100 = bm_3kaz.verts.new([-vx13kaz,-vy13kaz,-vz13kaz])

                    fa101 = bm_3kaaa.verts.new([-vx1kaaa,-vy1kaaa,-vz1kaaa])
                    fb101 = bm_3kaaa.verts.new([-vx2kaaa,-vy2kaaa,-vz2kaaa])
                    fc101 = bm_3kaaa.verts.new([-vx3kaaa,-vy3kaaa,-vz3kaaa])
                    fd101 = bm_3kaaa.verts.new([-vx4kaaa,-vy4kaaa,-vz4kaaa])
                    fe101 = bm_3kaaa.verts.new([-vx5kaaa,-vy5kaaa,-vz5kaaa])
                    ff101 = bm_3kaaa.verts.new([-vx6kaaa,-vy6kaaa,-vz6kaaa])
                    fg101 = bm_3kaaa.verts.new([-vx7kaaa,-vy7kaaa,-vz7kaaa])
                    fh101 = bm_3kaaa.verts.new([-vx8kaaa,-vy8kaaa,-vz8kaaa])
                    fi101 = bm_3kaaa.verts.new([-vx9kaaa,-vy9kaaa,-vz9kaaa])
                    fj101 = bm_3kaaa.verts.new([-vx10kaaa,-vy10kaaa,-vz10kaaa])
                    fk101 = bm_3kaaa.verts.new([-vx11kaaa,-vy11kaaa,-vz11kaaa])
                    fl101 = bm_3kaaa.verts.new([-vx12kaaa,-vy12kaaa,-vz12kaaa])
                    fm101 = bm_3kaaa.verts.new([-vx13kaaa,-vy13kaaa,-vz13kaaa])

                    fa102 = bm_3kaab.verts.new([-vx1kaab,-vy1kaab,-vz1kaab])
                    fb102 = bm_3kaab.verts.new([-vx2kaab,-vy2kaab,-vz2kaab])
                    fc102 = bm_3kaab.verts.new([-vx3kaab,-vy3kaab,-vz3kaab])
                    fd102 = bm_3kaab.verts.new([-vx4kaab,-vy4kaab,-vz4kaab])
                    fe102 = bm_3kaab.verts.new([-vx5kaab,-vy5kaab,-vz5kaab])
                    ff102 = bm_3kaab.verts.new([-vx6kaab,-vy6kaab,-vz6kaab])
                    fg102 = bm_3kaab.verts.new([-vx7kaab,-vy7kaab,-vz7kaab])
                    fh102 = bm_3kaab.verts.new([-vx8kaab,-vy8kaab,-vz8kaab])
                    fi102 = bm_3kaab.verts.new([-vx9kaab,-vy9kaab,-vz9kaab])
                    fj102 = bm_3kaab.verts.new([-vx10kaab,-vy10kaab,-vz10kaab])
                    fk102 = bm_3kaab.verts.new([-vx11kaab,-vy11kaab,-vz11kaab])
                    fl102 = bm_3kaab.verts.new([-vx12kaab,-vy12kaab,-vz12kaab])
                    fm102 = bm_3kaab.verts.new([-vx13kaab,-vy13kaab,-vz13kaab])

                    fa103 = bm_3kaac.verts.new([-vx1kaac,-vy1kaac,-vz1kaac])
                    fb103 = bm_3kaac.verts.new([-vx2kaac,-vy2kaac,-vz2kaac])
                    fc103 = bm_3kaac.verts.new([-vx3kaac,-vy3kaac,-vz3kaac])
                    fd103 = bm_3kaac.verts.new([-vx4kaac,-vy4kaac,-vz4kaac])
                    fe103 = bm_3kaac.verts.new([-vx5kaac,-vy5kaac,-vz5kaac])
                    ff103 = bm_3kaac.verts.new([-vx6kaac,-vy6kaac,-vz6kaac])
                    fg103 = bm_3kaac.verts.new([-vx7kaac,-vy7kaac,-vz7kaac])
                    fh103 = bm_3kaac.verts.new([-vx8kaac,-vy8kaac,-vz8kaac])
                    fi103 = bm_3kaac.verts.new([-vx9kaac,-vy9kaac,-vz9kaac])
                    fj103 = bm_3kaac.verts.new([-vx10kaac,-vy10kaac,-vz10kaac])
                    fk103 = bm_3kaac.verts.new([-vx11kaac,-vy11kaac,-vz11kaac])
                    fl103 = bm_3kaac.verts.new([-vx12kaac,-vy12kaac,-vz12kaac])
                    fm103 = bm_3kaac.verts.new([-vx13kaac,-vy13kaac,-vz13kaac])

                    fa104 = bm_3kaad.verts.new([-vx1kaad,-vy1kaad,-vz1kaad])
                    fb104 = bm_3kaad.verts.new([-vx2kaad,-vy2kaad,-vz2kaad])
                    fc104 = bm_3kaad.verts.new([-vx3kaad,-vy3kaad,-vz3kaad])
                    fd104 = bm_3kaad.verts.new([-vx4kaad,-vy4kaad,-vz4kaad])
                    fe104 = bm_3kaad.verts.new([-vx5kaad,-vy5kaad,-vz5kaad])
                    ff104 = bm_3kaad.verts.new([-vx6kaad,-vy6kaad,-vz6kaad])
                    fg104 = bm_3kaad.verts.new([-vx7kaad,-vy7kaad,-vz7kaad])
                    fh104 = bm_3kaad.verts.new([-vx8kaad,-vy8kaad,-vz8kaad])
                    fi104 = bm_3kaad.verts.new([-vx9kaad,-vy9kaad,-vz9kaad])
                    fj104 = bm_3kaad.verts.new([-vx10kaad,-vy10kaad,-vz10kaad])
                    fk104 = bm_3kaad.verts.new([-vx11kaad,-vy11kaad,-vz11kaad])
                    fl104 = bm_3kaad.verts.new([-vx12kaad,-vy12kaad,-vz12kaad])
                    fm104 = bm_3kaad.verts.new([-vx13kaad,-vy13kaad,-vz13kaad])

                    fa105 = bm_3kaae.verts.new([-vx1kaae,-vy1kaae,-vz1kaae])
                    fb105 = bm_3kaae.verts.new([-vx2kaae,-vy2kaae,-vz2kaae])
                    fc105 = bm_3kaae.verts.new([-vx3kaae,-vy3kaae,-vz3kaae])
                    fd105 = bm_3kaae.verts.new([-vx4kaae,-vy4kaae,-vz4kaae])
                    fe105 = bm_3kaae.verts.new([-vx5kaae,-vy5kaae,-vz5kaae])
                    ff105 = bm_3kaae.verts.new([-vx6kaae,-vy6kaae,-vz6kaae])
                    fg105 = bm_3kaae.verts.new([-vx7kaae,-vy7kaae,-vz7kaae])
                    fh105 = bm_3kaae.verts.new([-vx8kaae,-vy8kaae,-vz8kaae])
                    fi105 = bm_3kaae.verts.new([-vx9kaae,-vy9kaae,-vz9kaae])
                    fj105 = bm_3kaae.verts.new([-vx10kaae,-vy10kaae,-vz10kaae])
                    fk105 = bm_3kaae.verts.new([-vx11kaae,-vy11kaae,-vz11kaae])
                    fl105 = bm_3kaae.verts.new([-vx12kaae,-vy12kaae,-vz12kaae])
                    fm105 = bm_3kaae.verts.new([-vx13kaae,-vy13kaae,-vz13kaae])

                    fa106 = bm_3kaaf.verts.new([-vx1kaaf,-vy1kaaf,-vz1kaaf])
                    fb106 = bm_3kaaf.verts.new([-vx2kaaf,-vy2kaaf,-vz2kaaf])
                    fc106 = bm_3kaaf.verts.new([-vx3kaaf,-vy3kaaf,-vz3kaaf])
                    fd106 = bm_3kaaf.verts.new([-vx4kaaf,-vy4kaaf,-vz4kaaf])
                    fe106 = bm_3kaaf.verts.new([-vx5kaaf,-vy5kaaf,-vz5kaaf])
                    ff106 = bm_3kaaf.verts.new([-vx6kaaf,-vy6kaaf,-vz6kaaf])
                    fg106 = bm_3kaaf.verts.new([-vx7kaaf,-vy7kaaf,-vz7kaaf])
                    fh106 = bm_3kaaf.verts.new([-vx8kaaf,-vy8kaaf,-vz8kaaf])
                    fi106 = bm_3kaaf.verts.new([-vx9kaaf,-vy9kaaf,-vz9kaaf])
                    fj106 = bm_3kaaf.verts.new([-vx10kaaf,-vy10kaaf,-vz10kaaf])
                    fk106 = bm_3kaaf.verts.new([-vx11kaaf,-vy11kaaf,-vz11kaaf])
                    fl106 = bm_3kaaf.verts.new([-vx12kaaf,-vy12kaaf,-vz12kaaf])
                    fm106 = bm_3kaaf.verts.new([-vx13kaaf,-vy13kaaf,-vz13kaaf])

                    fa107 = bm_3kaag.verts.new([-vx1kaag,-vy1kaag,-vz1kaag])
                    fb107 = bm_3kaag.verts.new([-vx2kaag,-vy2kaag,-vz2kaag])
                    fc107 = bm_3kaag.verts.new([-vx3kaag,-vy3kaag,-vz3kaag])
                    fd107 = bm_3kaag.verts.new([-vx4kaag,-vy4kaag,-vz4kaag])
                    fe107 = bm_3kaag.verts.new([-vx5kaag,-vy5kaag,-vz5kaag])
                    ff107 = bm_3kaag.verts.new([-vx6kaag,-vy6kaag,-vz6kaag])
                    fg107 = bm_3kaag.verts.new([-vx7kaag,-vy7kaag,-vz7kaag])
                    fh107 = bm_3kaag.verts.new([-vx8kaag,-vy8kaag,-vz8kaag])
                    fi107 = bm_3kaag.verts.new([-vx9kaag,-vy9kaag,-vz9kaag])
                    fj107 = bm_3kaag.verts.new([-vx10kaag,-vy10kaag,-vz10kaag])
                    fk107 = bm_3kaag.verts.new([-vx11kaag,-vy11kaag,-vz11kaag])
                    fl107 = bm_3kaag.verts.new([-vx12kaag,-vy12kaag,-vz12kaag])
                    fm107 = bm_3kaag.verts.new([-vx13kaag,-vy13kaag,-vz13kaag])

                    fa108 = bm_3kaah.verts.new([-vx1kaah,-vy1kaah,-vz1kaah])
                    fb108 = bm_3kaah.verts.new([-vx2kaah,-vy2kaah,-vz2kaah])
                    fc108 = bm_3kaah.verts.new([-vx3kaah,-vy3kaah,-vz3kaah])
                    fd108 = bm_3kaah.verts.new([-vx4kaah,-vy4kaah,-vz4kaah])
                    fe108 = bm_3kaah.verts.new([-vx5kaah,-vy5kaah,-vz5kaah])
                    ff108 = bm_3kaah.verts.new([-vx6kaah,-vy6kaah,-vz6kaah])
                    fg108 = bm_3kaah.verts.new([-vx7kaah,-vy7kaah,-vz7kaah])
                    fh108 = bm_3kaah.verts.new([-vx8kaah,-vy8kaah,-vz8kaah])
                    fi108 = bm_3kaah.verts.new([-vx9kaah,-vy9kaah,-vz9kaah])
                    fj108 = bm_3kaah.verts.new([-vx10kaah,-vy10kaah,-vz10kaah])
                    fk108 = bm_3kaah.verts.new([-vx11kaah,-vy11kaah,-vz11kaah])
                    fl108 = bm_3kaah.verts.new([-vx12kaah,-vy12kaah,-vz12kaah])
                    fm108 = bm_3kaah.verts.new([-vx13kaah,-vy13kaah,-vz13kaah])

                    if type1kaah == 1:
                        if type2kaah == 1:
                            if type3kaah == 0:
                                if type4kaah == 1:
                                    if type5kaah == 1:
                                        if type6kaah == 0:
                                            if type7kaah == 1:
                                                if type8kaah == 1:
                                                    if type9kaah == 0:
                                                        if type10kaah == 1:
                                                            if type11kaah == 1:
                                                                if type12kaah == 0:
                                                                    if type13kaah == 1:
                                                                        bm_3kaah.faces.new([fa108,fb108,fc108])
                                                                        bm_3kaah.faces.new([fd108,fe108,ff108])
                                                                        bm_3kaah.faces.new([fg108,fh108,fi108])
                                                                        bm_3kaah.faces.new([fj108,fk108,fl108])
                                                                        bm_3kaah.faces.new([fj108,fl108,fm108])

                    if type1kaag == 1:
                        if type2kaag == 1:
                            if type3kaag == 0:
                                if type4kaag == 0:
                                    if type5kaag == 0:
                                        if type6kaag == 0:
                                            if type7kaag == 1:
                                                if type8kaag == 1:
                                                    if type9kaag == 0:
                                                        if type10kaag == 1:
                                                            if type11kaag == 1:
                                                                if type12kaag == 0:
                                                                    if type13kaag == 1:
                                                                        bm_3kaag.faces.new([fa107,fb107,fc107])
                                                                        bm_3kaag.faces.new([fb107,fc107,fd107])
                                                                        bm_3kaag.faces.new([fc107,fd107,fe107])
                                                                        bm_3kaag.faces.new([fd107,fe107,ff107])
                                                                        bm_3kaag.faces.new([fg107,fh107,fi107])
                                                                        bm_3kaag.faces.new([fj107,fk107,fl107])
                                                                        bm_3kaag.faces.new([fj107,fl107,fm107])

                    if type1kaaf == 1:
                        if type2kaaf == 1:
                            if type3kaaf == 0:
                                if type4kaaf == 0:
                                    if type5kaaf == 0:
                                        if type6kaaf == 1:
                                            if type7kaaf == 1:
                                                if type8kaaf == 0:
                                                    if type9kaaf == 0:
                                                        if type10kaaf == 1:
                                                            if type11kaaf == 1:
                                                                if type12kaaf == 0:
                                                                    if type13kaaf == 1:
                                                                        bm_3kaaf.faces.new([fa106,fb106,fc106])
                                                                        bm_3kaaf.faces.new([fb106,fc106,fd106])
                                                                        bm_3kaaf.faces.new([fc106,fd106,fe106])
                                                                        bm_3kaaf.faces.new([ff106,fg106,fh106])
                                                                        bm_3kaaf.faces.new([fg106,fh106,fi106])
                                                                        bm_3kaaf.faces.new([fj106,fk106,fl106])
                                                                        bm_3kaaf.faces.new([fj106,fl106,fm106])

                    if type1kaae == 1:
                        if type2kaae == 1:
                            if type3kaae == 0:
                                if type4kaae == 0:
                                    if type5kaae == 0:
                                        if type6kaae == 1:
                                            if type7kaae == 1:
                                                if type8kaae == 0:
                                                    if type9kaae == 1:
                                                        if type10kaae == 1:
                                                            if type11kaae == 0:
                                                                if type12kaae == 0:
                                                                    if type13kaae == 1:
                                                                        bm_3kaae.faces.new([fa105,fb105,fc105])
                                                                        bm_3kaae.faces.new([fb105,fc105,fd105])
                                                                        bm_3kaae.faces.new([fc105,fd105,fe105])
                                                                        bm_3kaae.faces.new([ff105,fg105,fh105])
                                                                        bm_3kaae.faces.new([fi105,fj105,fk105])
                                                                        bm_3kaae.faces.new([fj105,fk105,fl105])
                                                                        bm_3kaae.faces.new([fj105,fl105,fm105])

                    if type1kaad == 1:
                        if type2kaad == 1:
                            if type3kaad == 0:
                                if type4kaad == 0:
                                    if type5kaad == 0:
                                        if type6kaad == 1:
                                            if type7kaad == 1:
                                                if type8kaad == 0:
                                                    if type9kaad == 1:
                                                        if type10kaad == 1:
                                                            if type11kaad == 0:
                                                                if type12kaad == 1:
                                                                    if type13kaad == 1:
                                                                        bm_3kaad.faces.new([fa104,fb104,fc104])
                                                                        bm_3kaad.faces.new([fb104,fc104,fd104])
                                                                        bm_3kaad.faces.new([fc104,fd104,fe104])
                                                                        bm_3kaad.faces.new([ff104,fg104,fh104])
                                                                        bm_3kaad.faces.new([fi104,fj104,fk104])
                                                                        bm_3kaad.faces.new([fi104,fk104,fl104])
                                                                        bm_3kaad.faces.new([fk104,fl104,fm104])

                    if type1kaac == 1:
                        if type2kaac == 1:
                            if type3kaac == 0:
                                if type4kaac == 0:
                                    if type5kaac == 1:
                                        if type6kaac == 1:
                                            if type7kaac == 0:
                                                if type8kaac == 0:
                                                    if type9kaac == 0:
                                                        if type10kaac == 1:
                                                            if type11kaac == 1:
                                                                if type12kaac == 0:
                                                                    if type13kaac == 1:
                                                                        bm_3kaac.faces.new([fa103,fb103,fc103])
                                                                        bm_3kaac.faces.new([fb103,fc103,fd103])
                                                                        bm_3kaac.faces.new([fe103,ff103,fg103])
                                                                        bm_3kaac.faces.new([ff103,fg103,fh103])
                                                                        bm_3kaac.faces.new([fg103,fh103,fi103])
                                                                        bm_3kaac.faces.new([fj103,fk103,fl103])
                                                                        bm_3kaac.faces.new([fj103,fl103,fm103])

                    if type1kaab == 1:
                        if type2kaab == 1:
                            if type3kaab == 0:
                                if type4kaab == 0:
                                    if type5kaab == 1:
                                        if type6kaab == 1:
                                            if type7kaab == 0:
                                                if type8kaab == 0:
                                                    if type9kaab == 1:
                                                        if type10kaab == 1:
                                                            if type11kaab == 0:
                                                                if type12kaab == 0:
                                                                    if type13kaab == 1:
                                                                        bm_3kaab.faces.new([fa102,fb102,fc102])
                                                                        bm_3kaab.faces.new([fb102,fc102,fd102])
                                                                        bm_3kaab.faces.new([fe102,ff102,fg102])
                                                                        bm_3kaab.faces.new([ff102,fg102,fh102])
                                                                        bm_3kaab.faces.new([fi102,fj102,fk102])
                                                                        bm_3kaab.faces.new([fj102,fk102,fl102])
                                                                        bm_3kaab.faces.new([fj102,fl102,fm102])

                    if type1kaaa == 1:
                        if type2kaaa == 1:
                            if type3kaaa == 0:
                                if type4kaaa == 0:
                                    if type5kaaa == 1:
                                        if type6kaaa == 1:
                                            if type7kaaa == 0:
                                                if type8kaaa == 0:
                                                    if type9kaaa == 1:
                                                        if type10kaaa == 1:
                                                            if type11kaaa == 0:
                                                                if type12kaaa == 1:
                                                                    if type13kaaa == 1:
                                                                        bm_3kaaa.faces.new([fa101,fb101,fc101])
                                                                        bm_3kaaa.faces.new([fb101,fc101,fd101])
                                                                        bm_3kaaa.faces.new([fe101,ff101,fg101])
                                                                        bm_3kaaa.faces.new([ff101,fg101,fh101])
                                                                        bm_3kaaa.faces.new([fi101,fj101,fk101])
                                                                        bm_3kaaa.faces.new([fi101,fk101,fl101])
                                                                        bm_3kaaa.faces.new([fk101,fl101,fm101])

                    if type1kaz == 1:
                        if type2kaz == 1:
                            if type3kaz == 0:
                                if type4kaz == 0:
                                    if type5kaz == 1:
                                        if type6kaz == 1:
                                            if type7kaz == 0:
                                                if type8kaz == 1:
                                                    if type9kaz == 1:
                                                        if type10kaz == 0:
                                                            if type11kaz == 0:
                                                                if type12kaz == 0:
                                                                    if type13kaz == 1:
                                                                        bm_3kaz.faces.new([fa100,fb100,fc100])
                                                                        bm_3kaz.faces.new([fb100,fc100,fd100])
                                                                        bm_3kaz.faces.new([fe100,ff100,fg100])
                                                                        bm_3kaz.faces.new([fh100,fi100,fj100])
                                                                        bm_3kaz.faces.new([fi100,fj100,fk100])
                                                                        bm_3kaz.faces.new([fj100,fk100,fl100])
                                                                        bm_3kaz.faces.new([fj100,fl100,fm100])

                    if type1kay == 1:
                        if type2kay == 1:
                            if type3kay == 0:
                                if type4kay == 0:
                                    if type5kay == 1:
                                        if type6kay == 1:
                                            if type7kay == 0:
                                                if type8kay == 1:
                                                    if type9kay == 1:
                                                        if type10kay == 0:
                                                            if type11kay == 0:
                                                                if type12kay == 1:
                                                                    if type13kay == 1:
                                                                        bm_3kay.faces.new([fa99,fb99,fc99])
                                                                        bm_3kay.faces.new([fb99,fc99,fd99])
                                                                        bm_3kay.faces.new([fe99,ff99,fg99])
                                                                        bm_3kay.faces.new([fh99,fi99,fj99])
                                                                        bm_3kay.faces.new([fi99,fj99,fk99])
                                                                        bm_3kay.faces.new([fi99,fk99,fl99])
                                                                        bm_3kay.faces.new([fk99,fl99,fm99])

                    if type1kax == 1:
                        if type2kax == 1:
                            if type3kax == 0:
                                if type4kax == 0:
                                    if type5kax == 1:
                                        if type6kax == 1:
                                            if type7kax == 0:
                                                if type8kax == 1:
                                                    if type9kax == 1:
                                                        if type10kax == 0:
                                                            if type11kax == 1:
                                                                if type12kax == 1:
                                                                    if type13kax == 0:
                                                                        bm_3kax.faces.new([fa98,fb98,fc98])
                                                                        bm_3kax.faces.new([fb98,fc98,fd98])
                                                                        bm_3kax.faces.new([fe98,ff98,fg98])
                                                                        bm_3kax.faces.new([fh98,fi98,fj98])
                                                                        bm_3kax.faces.new([fk98,fl98,fm98])

                    if type1kaw == 1:
                        if type2kaw == 1:
                            if type3kaw == 0:
                                if type4kaw == 1:
                                    if type5kaw == 1:
                                        if type6kaw == 0:
                                            if type7kaw == 0:
                                                if type8kaw == 0:
                                                    if type9kaw == 0:
                                                        if type10kaw == 1:
                                                            if type11kaw == 1:
                                                                if type12kaw == 0:
                                                                    if type13kaw == 1:
                                                                        bm_3kaw.faces.new([fa97,fb97,fc97])
                                                                        bm_3kaw.faces.new([fd97,fe97,ff97])
                                                                        bm_3kaw.faces.new([fe97,ff97,fg97])
                                                                        bm_3kaw.faces.new([ff97,fg97,fh97])
                                                                        bm_3kaw.faces.new([fg97,fh97,fi97])
                                                                        bm_3kaw.faces.new([fj97,fk97,fl97])
                                                                        bm_3kaw.faces.new([fj97,fl97,fm97])

                    if type1kav == 1:
                        if type2kav == 1:
                            if type3kav == 0:
                                if type4kav == 1:
                                    if type5kav == 1:
                                        if type6kav == 0:
                                            if type7kav == 0:
                                                if type8kav == 0:
                                                    if type9kav == 1:
                                                        if type10kav == 1:
                                                            if type11kav == 0:
                                                                if type12kav == 0:
                                                                    if type13kav == 1:
                                                                        bm_3kav.faces.new([fa96,fb96,fc96])
                                                                        bm_3kav.faces.new([fd96,fe96,ff96])
                                                                        bm_3kav.faces.new([fe96,ff96,fg96])
                                                                        bm_3kav.faces.new([ff96,fg96,fh96])
                                                                        bm_3kav.faces.new([fi96,fj96,fk96])
                                                                        bm_3kav.faces.new([fj96,fk96,fl96])
                                                                        bm_3kav.faces.new([fj95,fl96,fm96])

                    if type1kau == 1:
                        if type2kau == 1:
                            if type3kau == 0:
                                if type4kau == 1:
                                    if type5kau == 1:
                                        if type6kau == 0:
                                            if type7kau == 0:
                                                if type8kau == 0:
                                                    if type9kau == 1:
                                                        if type10kau == 1:
                                                            if type11kau == 0:
                                                                if type12kau == 1:
                                                                    if type13kau == 1:
                                                                        bm_3kau.faces.new([fa95,fb95,fc95])
                                                                        bm_3kau.faces.new([fd95,fe95,ff95])
                                                                        bm_3kau.faces.new([fe95,ff95,fg95])
                                                                        bm_3kau.faces.new([ff95,fg95,fh95])
                                                                        bm_3kau.faces.new([fi95,fj95,fk95])
                                                                        bm_3kau.faces.new([fi95,fk95,fl95])
                                                                        bm_3kau.faces.new([fk95,fl95,fm95])

                    if type1kat == 1:
                        if type2kat == 1:
                            if type3kat == 0:
                                if type4kat == 1:
                                    if type5kat == 1:
                                        if type6kat == 0:
                                            if type7kat == 0:
                                                if type8kat == 1:
                                                    if type9kat == 1:
                                                        if type10kat == 0:
                                                            if type11kat == 0:
                                                                if type12kat == 0:
                                                                    if type13kat == 1:
                                                                        bm_3kat.faces.new([fa94,fb94,fc94])
                                                                        bm_3kat.faces.new([fd94,fe94,ff94])
                                                                        bm_3kat.faces.new([fe94,ff94,fg94])
                                                                        bm_3kat.faces.new([fh94,fi94,fj94])
                                                                        bm_3kat.faces.new([fi94,fj94,fk94])
                                                                        bm_3kat.faces.new([fj94,fk94,fl94])
                                                                        bm_3kat.faces.new([fj94,fl94,fm94])

                    if type1kas == 1:
                        if type2kas == 1:
                            if type3kas == 0:
                                if type4kas == 1:
                                    if type5kas == 1:
                                        if type6kas == 0:
                                            if type7kas == 0:
                                                if type8kas == 1:
                                                    if type9kas == 1:
                                                        if type10kas == 0:
                                                            if type11kas == 0:
                                                                if type12kas == 1:
                                                                    if type13kas == 1:
                                                                        bm_3kas.faces.new([fa93,fb93,fc93])
                                                                        bm_3kas.faces.new([fd93,fe93,ff93])
                                                                        bm_3kas.faces.new([fe93,ff93,fg93])
                                                                        bm_3kas.faces.new([fh93,fi93,fj93])
                                                                        bm_3kas.faces.new([fi93,fj93,fk93])
                                                                        bm_3kas.faces.new([fi93,fk93,fl93])
                                                                        bm_3kas.faces.new([fk93,fl93,fm93])

                    if type1kar == 1:
                        if type2kar == 1:
                            if type3kar == 0:
                                if type4kar == 1:
                                    if type5kar == 1:
                                        if type6kar == 0:
                                            if type7kar == 0:
                                                if type8kar == 1:
                                                    if type9kar == 1:
                                                        if type10kar == 0:
                                                            if type11kar == 1:
                                                                if type12kar == 1:
                                                                    if type13kar == 0:
                                                                        bm_3kar.faces.new([fa92,fb92,fc92])
                                                                        bm_3kar.faces.new([fd92,fe92,ff92])
                                                                        bm_3kar.faces.new([fe92,ff92,fg92])
                                                                        bm_3kar.faces.new([fh92,fi92,fj92])
                                                                        bm_3kar.faces.new([fk92,fl92,fm92])

                    if type1kaq == 1:
                        if type2kaq == 1:
                            if type3kaq == 0:
                                if type4kaq == 1:
                                    if type5kaq == 1:
                                        if type6kaq == 0:
                                            if type7kaq == 1:
                                                if type8kaq == 1:
                                                    if type9kaq == 0:
                                                        if type10kaq == 0:
                                                            if type11kaq == 0:
                                                                if type12kaq == 0:
                                                                    if type13kaq == 1:
                                                                        bm_3kaq.faces.new([fa91,fb91,fc91])
                                                                        bm_3kaq.faces.new([fd91,fe91,ff91])
                                                                        bm_3kaq.faces.new([fg91,fh91,fi91])
                                                                        bm_3kaq.faces.new([fh91,fi91,fj91])
                                                                        bm_3kaq.faces.new([fi91,fj91,fk91])
                                                                        bm_3kaq.faces.new([fj91,fk91,fl91])
                                                                        bm_3kaq.faces.new([fj91,fl91,fm91])

                    if type1kap == 1:
                        if type2kap == 1:
                            if type3kap == 0:
                                if type4kap == 1:
                                    if type5kap == 1:
                                        if type6kap == 0:
                                            if type7kap == 1:
                                                if type8kap == 1:
                                                    if type9kap == 0:
                                                        if type10kap == 0:
                                                            if type11kap == 0:
                                                                if type12kap == 1:
                                                                    if type13kap == 1:
                                                                        bm_3kap.faces.new([fa90,fb90,fc90])
                                                                        bm_3kap.faces.new([fd90,fe90,ff90])
                                                                        bm_3kap.faces.new([fg90,fh90,fi90])
                                                                        bm_3kap.faces.new([fh90,fi90,fj90])
                                                                        bm_3kap.faces.new([fi90,fj90,fk90])
                                                                        bm_3kap.faces.new([fi90,fk90,fl90])
                                                                        bm_3kap.faces.new([fk90,fl90,fm90])

                    if type1kao == 1:
                        if type2kao == 1:
                            if type3kao == 0:
                                if type4kao == 1:
                                    if type5kao == 1:
                                        if type6kao == 0:
                                            if type7kao == 1:
                                                if type8kao == 1:
                                                    if type9kao == 0:
                                                        if type10kao == 0:
                                                            if type11kao == 1:
                                                                if type12kao == 1:
                                                                    if type13kao == 0:
                                                                        bm_3kao.faces.new([fa89,fb89,fc89])
                                                                        bm_3kao.faces.new([fd89,fe89,ff89])
                                                                        bm_3kao.faces.new([fg89,fh89,fi89])
                                                                        bm_3kao.faces.new([fh89,fi89,fj89])
                                                                        bm_3kao.faces.new([fk89,fl89,fm89])

                    if type1kan == 1:
                        if type2kan == 1:
                            if type3kan == 0:
                                if type4kan == 1:
                                    if type5kan == 1:
                                        if type6kan == 0:
                                            if type7kan == 1:
                                                if type8kan == 1:
                                                    if type9kan == 0:
                                                        if type10kan == 1:
                                                            if type11kan == 1:
                                                                if type12kan == 0:
                                                                    if type13kan == 0:
                                                                        bm_3kan.faces.new([fa88,fb88,fc88])
                                                                        bm_3kan.faces.new([fd88,fe88,ff88])
                                                                        bm_3kan.faces.new([fg88,fh88,fi88])
                                                                        bm_3kan.faces.new([fj88,fk88,fl88])
                                                                        bm_3kan.faces.new([fk88,fl88,fm88])

                    if type1kam == 1:
                        if type2kam == 1:
                            if type3kam == 0:
                                if type4kam == 0:
                                    if type5kam == 0:
                                        if type6kam == 0:
                                            if type7kam == 0:
                                                if type8kam == 0:
                                                    if type9kam == 0:
                                                        if type10kam == 1:
                                                            if type11kam == 1:
                                                                if type12kam == 0:
                                                                    if type13kam == 1:
                                                                        bm_3kam.faces.new([fa87,fb87,fc87])
                                                                        bm_3kam.faces.new([fb87,fc87,fd87])
                                                                        bm_3kam.faces.new([fc87,fd87,fe87])
                                                                        bm_3kam.faces.new([fd87,fe87,ff87])
                                                                        bm_3kam.faces.new([fe87,ff87,fg87])
                                                                        bm_3kam.faces.new([ff87,fg87,fh87])
                                                                        bm_3kam.faces.new([fg87,fh87,fi87])
                                                                        bm_3kam.faces.new([fj87,fk87,fl87])
                                                                        bm_3kam.faces.new([fj87,fl87,fm87])

                    if type1kal == 1:
                        if type2kal == 1:
                            if type3kal == 0:
                                if type4kal == 0:
                                    if type5kal == 0:
                                        if type6kal == 0:
                                            if type7kal == 0:
                                                if type8kal == 0:
                                                    if type9kal == 1:
                                                        if type10kal == 1:
                                                            if type11kal == 0:
                                                                if type12kal == 0:
                                                                    if type13kal == 1:
                                                                        bm_3kal.faces.new([fa86,fb86,fc86])
                                                                        bm_3kal.faces.new([fb86,fc86,fd86])
                                                                        bm_3kal.faces.new([fc86,fd86,fe86])
                                                                        bm_3kal.faces.new([fd86,fe86,ff86])
                                                                        bm_3kal.faces.new([fe86,ff86,fg86])
                                                                        bm_3kal.faces.new([ff86,fg86,fh86])
                                                                        bm_3kal.faces.new([fi86,fj86,fk86])
                                                                        bm_3kal.faces.new([fj86,fk86,fl86])
                                                                        bm_3kal.faces.new([fj86,fl86,fm86])

                    if type1kak == 1:
                        if type2kak == 1:
                            if type3kak == 0:
                                if type4kak == 0:
                                    if type5kak == 0:
                                        if type6kak == 0:
                                            if type7kak == 0:
                                                if type8kak == 0:
                                                    if type9kak == 1:
                                                        if type10kak == 1:
                                                            if type11kak == 0:
                                                                if type12kak == 1:
                                                                    if type13kak == 1:
                                                                        bm_3kak.faces.new([fa85,fb85,fc85])
                                                                        bm_3kak.faces.new([fb85,fc85,fd85])
                                                                        bm_3kak.faces.new([fc85,fd85,fe85])
                                                                        bm_3kak.faces.new([fd85,fe85,ff85])
                                                                        bm_3kak.faces.new([fe85,ff85,fg85])
                                                                        bm_3kak.faces.new([ff85,fg85,fh85])
                                                                        bm_3kak.faces.new([fi85,fj85,fk85])
                                                                        bm_3kak.faces.new([fi85,fk85,fl85])
                                                                        bm_3kak.faces.new([fk85,fl85,fm85])

                    if type1kaj == 1:
                        if type2kaj == 1:
                            if type3kaj == 0:
                                if type4kaj == 0:
                                    if type5kaj == 0:
                                        if type6kaj == 0:
                                            if type7kaj == 0:
                                                if type8kaj == 1:
                                                    if type9kaj == 1:
                                                        if type10kaj == 0:
                                                            if type11kaj == 0:
                                                                if type12kaj == 0:
                                                                    if type13kaj == 1:
                                                                        bm_3kaj.faces.new([fa84,fb84,fc84])
                                                                        bm_3kaj.faces.new([fb84,fc84,fd84])
                                                                        bm_3kaj.faces.new([fc84,fd84,fe84])
                                                                        bm_3kaj.faces.new([fd84,fe84,ff84])
                                                                        bm_3kaj.faces.new([fe84,ff84,fg84])
                                                                        bm_3kaj.faces.new([fh84,fi84,fj84])
                                                                        bm_3kaj.faces.new([fi84,fj84,fk84])
                                                                        bm_3kaj.faces.new([fj84,fk84,fl84])
                                                                        bm_3kaj.faces.new([fj84,fl84,fm84])

                    if type1kai == 1:
                        if type2kai == 1:
                            if type3kai == 0:
                                if type4kai == 0:
                                    if type5kai == 0:
                                        if type6kai == 0:
                                            if type7kai == 0:
                                                if type8kai == 1:
                                                    if type9kai == 1:
                                                        if type10kai == 0:
                                                            if type11kai == 0:
                                                                if type12kai == 1:
                                                                    if type13kai == 1:
                                                                        bm_3kai.faces.new([fa83,fb83,fc83])
                                                                        bm_3kai.faces.new([fb83,fc83,fd83])
                                                                        bm_3kai.faces.new([fc83,fd83,fe83])
                                                                        bm_3kai.faces.new([fd83,fe83,ff83])
                                                                        bm_3kai.faces.new([fe83,ff83,fg83])
                                                                        bm_3kai.faces.new([fh83,fi83,fj83])
                                                                        bm_3kai.faces.new([fi83,fj83,fk83])
                                                                        bm_3kai.faces.new([fi83,fk83,fl83])
                                                                        bm_3kai.faces.new([fk83,fl83,fm83])

                    if type1kah == 1:
                        if type2kah == 1:
                            if type3kah == 0:
                                if type4kah == 0:
                                    if type5kah == 0:
                                        if type6kah == 0:
                                            if type7kah == 0:
                                                if type8kah == 1:
                                                    if type9kah == 1:
                                                        if type10kah == 0:
                                                            if type11kah == 1:
                                                                if type12kah == 1:
                                                                    if type13kah == 0:
                                                                        bm_3kah.faces.new([fa82,fb82,fc82])
                                                                        bm_3kah.faces.new([fb82,fc82,fd82])
                                                                        bm_3kah.faces.new([fc82,fd82,fe82])
                                                                        bm_3kah.faces.new([fd82,fe82,ff82])
                                                                        bm_3kah.faces.new([fe82,ff82,fg82])
                                                                        bm_3kah.faces.new([fh82,fi82,fj82])
                                                                        bm_3kah.faces.new([fk82,fl82,fm82])

                    if type1kag == 1:
                        if type2kag == 1:
                            if type3kag == 0:
                                if type4kag == 0:
                                    if type5kag == 0:
                                        if type6kag == 0:
                                            if type7kag == 1:
                                                if type8kag == 1:
                                                    if type9kag == 0:
                                                        if type10kag == 0:
                                                            if type11kag == 0:
                                                                if type12kag == 0:
                                                                    if type13kag == 1:
                                                                        bm_3kag.faces.new([fa81,fb81,fc81])
                                                                        bm_3kag.faces.new([fb81,fc81,fd81])
                                                                        bm_3kag.faces.new([fc81,fd81,fe81])
                                                                        bm_3kag.faces.new([fd81,fe81,ff81])
                                                                        bm_3kag.faces.new([fg81,fh81,fi81])
                                                                        bm_3kag.faces.new([fh81,fi81,fj81])
                                                                        bm_3kag.faces.new([fi81,fj81,fk81])
                                                                        bm_3kag.faces.new([fj81,fk81,fl81])
                                                                        bm_3kag.faces.new([fj81,fl81,fm81])

                    if type1kaf == 1:
                        if type2kaf == 1:
                            if type3kaf == 0:
                                if type4kaf == 0:
                                    if type5kaf == 0:
                                        if type6kaf == 0:
                                            if type7kaf == 1:
                                                if type8kaf == 1:
                                                    if type9kaf == 0:
                                                        if type10kaf == 0:
                                                            if type11kaf == 0:
                                                                if type12kaf == 1:
                                                                    if type13kaf == 1:
                                                                        bm_3kaf.faces.new([fa80,fb80,fc80])
                                                                        bm_3kaf.faces.new([fb80,fc80,fd80])
                                                                        bm_3kaf.faces.new([fc80,fd80,fe80])
                                                                        bm_3kaf.faces.new([fd80,fe80,ff80])
                                                                        bm_3kaf.faces.new([fg80,fh80,fi80])
                                                                        bm_3kaf.faces.new([fh80,fi80,fj80])
                                                                        bm_3kaf.faces.new([fi80,fj80,fk80])
                                                                        bm_3kaf.faces.new([fi80,fk80,fl80])
                                                                        bm_3kaf.faces.new([fk80,fl80,fm80])

                    if type1kae == 1:
                        if type2kae == 1:
                            if type3kae == 0:
                                if type4kae == 0:
                                    if type5kae == 0:
                                        if type6kae == 0:
                                            if type7kae == 1:
                                                if type8kae == 1:
                                                    if type9kae == 0:
                                                        if type10kae == 0:
                                                            if type11kae == 1:
                                                                if type12kae == 1:
                                                                    if type13kae == 0:
                                                                        bm_3kae.faces.new([fa79,fb79,fc79])
                                                                        bm_3kae.faces.new([fb79,fc79,fd79])
                                                                        bm_3kae.faces.new([fc79,fd79,fe79])
                                                                        bm_3kae.faces.new([fd79,fe79,ff79])
                                                                        bm_3kae.faces.new([fg79,fh79,fi79])
                                                                        bm_3kae.faces.new([fh79,fi79,fj79])
                                                                        bm_3kae.faces.new([fk79,fl79,fm79])

                    if type1kad == 1:
                        if type2kad == 1:
                            if type3kad == 0:
                                if type4kad == 0:
                                    if type5kad == 0:
                                        if type6kad == 0:
                                            if type7kad == 1:
                                                if type8kad == 1:
                                                    if type9kad == 0:
                                                        if type10kad == 1:
                                                            if type11kad == 1:
                                                                if type12kad == 0:
                                                                    if type13kad == 0:
                                                                        bm_3kad.faces.new([fa78,fb78,fc78])
                                                                        bm_3kad.faces.new([fb78,fc78,fd78])
                                                                        bm_3kad.faces.new([fc78,fd78,fe78])
                                                                        bm_3kad.faces.new([fd78,fe78,ff78])
                                                                        bm_3kad.faces.new([fg78,fh78,fi78])
                                                                        bm_3kad.faces.new([fj78,fk78,fl78])
                                                                        bm_3kad.faces.new([fk78,fl78,fm78])

                    if type1kac == 1:
                        if type2kac == 1:
                            if type3kac == 0:
                                if type4kac == 0:
                                    if type5kac == 0:
                                        if type6kac == 1:
                                            if type7kac == 1:
                                                if type8kac == 0:
                                                    if type9kac == 0:
                                                        if type10kac == 0:
                                                            if type11kac == 0:
                                                                if type12kac == 0:
                                                                    if type13kac == 1:
                                                                        bm_3kac.faces.new([fa77,fb77,fc77])
                                                                        bm_3kac.faces.new([fb77,fc77,fd77])
                                                                        bm_3kac.faces.new([fc77,fd77,fe77])
                                                                        bm_3kac.faces.new([ff77,fg77,fh77])
                                                                        bm_3kac.faces.new([fg77,fh77,fi77])
                                                                        bm_3kac.faces.new([fh77,fi77,fj77])
                                                                        bm_3kac.faces.new([fi77,fj77,fk77])
                                                                        bm_3kac.faces.new([fj77,fk77,fl77])
                                                                        bm_3kac.faces.new([fj77,fl77,fm77])

                    if type1kab == 1:
                        if type2kab == 1:
                            if type3kab == 0:
                                if type4kab == 0:
                                    if type5kab == 0:
                                        if type6kab == 1:
                                            if type7kab == 1:
                                                if type8kab == 0:
                                                    if type9kab == 0:
                                                        if type10kab == 0:
                                                            if type11kab == 0:
                                                                if type12kab == 1:
                                                                    if type13kab == 1:
                                                                        bm_3kab.faces.new([fa76,fb76,fc76])
                                                                        bm_3kab.faces.new([fb76,fc76,fd76])
                                                                        bm_3kab.faces.new([fc76,fd76,fe76])
                                                                        bm_3kab.faces.new([ff76,fg76,fh76])
                                                                        bm_3kab.faces.new([fg76,fh76,fi76])
                                                                        bm_3kab.faces.new([fh76,fi76,fj76])
                                                                        bm_3kab.faces.new([fi76,fj76,fk76])
                                                                        bm_3kab.faces.new([fi76,fk76,fl76])
                                                                        bm_3kab.faces.new([fk76,fl76,fm76])

                    if type1kaa == 1:
                        if type2kaa == 1:
                            if type3kaa == 0:
                                if type4kaa == 0:
                                    if type5kaa == 0:
                                        if type6kaa == 1:
                                            if type7kaa == 1:
                                                if type8kaa == 0:
                                                    if type9kaa == 0:
                                                        if type10kaa == 0:
                                                            if type11kaa == 1:
                                                                if type12kaa == 1:
                                                                    if type13kaa == 0:
                                                                        bm_3kaa.faces.new([fa75,fb75,fc75])
                                                                        bm_3kaa.faces.new([fb75,fc75,fd75])
                                                                        bm_3kaa.faces.new([fc75,fd75,fe75])
                                                                        bm_3kaa.faces.new([ff75,fg75,fh75])
                                                                        bm_3kaa.faces.new([fg75,fh75,fi75])
                                                                        bm_3kaa.faces.new([fh75,fi75,fj75])
                                                                        bm_3kaa.faces.new([fk75,fl75,fm75])

                    if type1kz == 1:
                        if type2kz == 1:
                            if type3kz == 0:
                                if type4kz == 0:
                                    if type5kz == 0:
                                        if type6kz == 1:
                                            if type7kz == 1:
                                                if type8kz == 0:
                                                    if type9kz == 0:
                                                        if type10kz == 1:
                                                            if type11kz == 1:
                                                                if type12kz == 0:
                                                                    if type13kz == 0:
                                                                        bm_3kz.faces.new([fa74,fb74,fc74])
                                                                        bm_3kz.faces.new([fb74,fc74,fd74])
                                                                        bm_3kz.faces.new([fc74,fd74,fe74])
                                                                        bm_3kz.faces.new([ff74,fg74,fh74])
                                                                        bm_3kz.faces.new([fg74,fh74,fi74])
                                                                        bm_3kz.faces.new([fj74,fk74,fl74])
                                                                        bm_3kz.faces.new([fk74,fl74,fm74])

                    if type1ky == 1:
                        if type2ky == 1:
                            if type3ky == 0:
                                if type4ky == 0:
                                    if type5ky == 0:
                                        if type6ky == 1:
                                            if type7ky == 1:
                                                if type8ky == 0:
                                                    if type9ky == 1:
                                                        if type10ky == 1:
                                                            if type11ky == 0:
                                                                if type12ky == 0:
                                                                    if type13ky == 0:
                                                                        bm_3ky.faces.new([fa73,fb73,fc73])
                                                                        bm_3ky.faces.new([fb73,fc73,fd73])
                                                                        bm_3ky.faces.new([fc73,fd73,fe73])
                                                                        bm_3ky.faces.new([ff73,fg73,fh73])
                                                                        bm_3ky.faces.new([fi73,fj73,fk73])
                                                                        bm_3ky.faces.new([fj73,fk73,fl73])
                                                                        bm_3ky.faces.new([fk73,fl73,fm73])

                    if type1kx == 1:
                        if type2kx == 1:
                            if type3kx == 0:
                                if type4kx == 0:
                                    if type5kx == 1:
                                        if type6kx == 1:
                                            if type7kx == 0:
                                                if type8kx == 0:
                                                    if type9kx == 0:
                                                        if type10kx == 0:
                                                            if type11kx == 0:
                                                                if type12kx == 1:
                                                                    if type13kx == 1:
                                                                        bm_3kx.faces.new([fa72,fb72,fc72])
                                                                        bm_3kx.faces.new([fb72,fc72,fd72])
                                                                        bm_3kx.faces.new([fe72,ff72,fg72])
                                                                        bm_3kx.faces.new([ff72,fg72,fh72])
                                                                        bm_3kx.faces.new([fg72,fh72,fi72])
                                                                        bm_3kx.faces.new([fh72,fi72,fj72])
                                                                        bm_3kx.faces.new([fi72,fj72,fk72])
                                                                        bm_3kx.faces.new([fi72,fk72,fl72])
                                                                        bm_3kx.faces.new([fk72,fl72,fm72])

                    if type1kw == 1:
                        if type2kw == 1:
                            if type3kw == 0:
                                if type4kw == 0:
                                    if type5kw == 1:
                                        if type6kw == 1:
                                            if type7kw == 0:
                                                if type8kw == 0:
                                                    if type9kw == 0:
                                                        if type10kw == 0:
                                                            if type11kw == 1:
                                                                if type12kw == 1:
                                                                    if type13kw == 0:
                                                                        bm_3kw.faces.new([fa71,fb71,fc71])
                                                                        bm_3kw.faces.new([fb71,fc71,fd71])
                                                                        bm_3kw.faces.new([fe71,ff71,fg71])
                                                                        bm_3kw.faces.new([ff71,fg71,fh71])
                                                                        bm_3kw.faces.new([fg71,fh71,fi71])
                                                                        bm_3kw.faces.new([fj71,fk71,fl71])
                                                                        bm_3kw.faces.new([fk71,fl71,fm71])

                    if type1kv == 1:
                        if type2kv == 1:
                            if type3kv == 0:
                                if type4kv == 0:
                                    if type5kv == 0:
                                        if type6kv == 1:
                                            if type7kv == 1:
                                                if type8kv == 0:
                                                    if type9kv == 0:
                                                        if type10kv == 0:
                                                            if type11kv == 0:
                                                                if type12kv == 0:
                                                                    if type13kv == 0:
                                                                        bm_3kv.faces.new([fa70,fb70,fc70])
                                                                        bm_3kv.faces.new([fb70,fc70,fd70])
                                                                        bm_3kv.faces.new([fc70,fd70,fe70])
                                                                        bm_3kv.faces.new([ff70,fg70,fh70])
                                                                        bm_3kv.faces.new([fg70,fh70,fi70])
                                                                        bm_3kv.faces.new([fh70,fi70,fj70])
                                                                        bm_3kv.faces.new([fi70,fj70,fk70])
                                                                        bm_3kv.faces.new([fj70,fk70,fl70])
                                                                        bm_3kv.faces.new([fk70,fl70,fm70])

                    if type1ku == 1:
                        if type2ku == 1:
                            if type3ku == 0:
                                if type4ku == 0:
                                    if type5ku == 1:
                                        if type6ku == 1:
                                            if type7ku == 0:
                                                if type8ku == 0:
                                                    if type9ku == 0:
                                                        if type10ku == 0:
                                                            if type11ku == 0:
                                                                if type12ku == 0:
                                                                    if type13ku == 1:
                                                                        bm_3ku.faces.new([fa69,fb69,fc69])
                                                                        bm_3ku.faces.new([fb69,fc69,fd69])
                                                                        bm_3ku.faces.new([fe69,ff69,fg69])
                                                                        bm_3ku.faces.new([ff69,fg69,fh69])
                                                                        bm_3ku.faces.new([fg69,fh69,fi69])
                                                                        bm_3ku.faces.new([fh69,fi69,fj69])
                                                                        bm_3ku.faces.new([fi69,fj69,fk69])
                                                                        bm_3ku.faces.new([fj69,fk69,fl69])
                                                                        bm_3ku.faces.new([fj69,fl69,fm69])

                    if type1ko == 1:
                        if type2ko == 1:
                            if type3ko == 0:
                                if type4ko == 0:
                                    if type5ko == 1:
                                        if type6ko == 1:
                                            if type7ko == 0:
                                                if type8ko == 0:
                                                    if type9ko == 1:
                                                        if type10ko == 1:
                                                            if type11ko == 0:
                                                                if type12ko == 0:
                                                                    if type13ko == 0:
                                                                        bm_3ko.faces.new([fa63,fb63,fc63])
                                                                        bm_3ko.faces.new([fb63,fc63,fd63])
                                                                        bm_3ko.faces.new([fe63,ff63,fg63])
                                                                        bm_3ko.faces.new([ff63,fg63,fh63])
                                                                        bm_3ko.faces.new([fi63,fj63,fk63])
                                                                        bm_3ko.faces.new([fj63,fk63,fl63])
                                                                        bm_3ko.faces.new([fk63,fl63,fm63])

                    if type1kn == 1:
                        if type2kn == 1:
                            if type3kn == 0:
                                if type4kn == 0:
                                    if type5kn == 1:
                                        if type6kn == 1:
                                            if type7kn == 0:
                                                if type8kn == 0:
                                                    if type9kn == 0:
                                                        if type10kn == 1:
                                                            if type11kn == 1:
                                                                if type12kn == 0:
                                                                    if type13kn == 0:
                                                                        bm_3kn.faces.new([fa62,fb62,fc62])
                                                                        bm_3kn.faces.new([fb62,fc62,fd62])
                                                                        bm_3kn.faces.new([fe62,ff62,fg62])
                                                                        bm_3kn.faces.new([ff62,fg62,fh62])
                                                                        bm_3kn.faces.new([fg62,fh62,fi62])
                                                                        bm_3kn.faces.new([fj62,fk62,fl62])
                                                                        bm_3kn.faces.new([fk62,fl62,fm62])

                    if type1kt == 1:
                        if type2kt == 1:
                            if type3kt == 0:
                                if type4kt == 0:
                                    if type5kt == 1:
                                        if type6kt == 1:
                                            if type7kt == 0:
                                                if type8kt == 1:
                                                    if type9kt == 1:
                                                        if type10kt == 0:
                                                            if type11kt == 0:
                                                                if type12kt == 0:
                                                                    if type13kt == 0:
                                                                        bm_3kt.faces.new([fa68,fb68,fc68])
                                                                        bm_3kt.faces.new([fb68,fc68,fd68])
                                                                        bm_3kt.faces.new([fe68,ff68,fg68])
                                                                        bm_3kt.faces.new([fh68,fi68,fj68])
                                                                        bm_3kt.faces.new([fi68,fj68,fk68])
                                                                        bm_3kt.faces.new([fj68,fk68,fl68])
                                                                        bm_3kt.faces.new([fk68,fl68,fm68])

                    if type1ks == 1:
                        if type2ks == 1:
                            if type3ks == 0:
                                if type4ks == 1:
                                    if type5ks == 1:
                                        if type6ks == 0:
                                            if type7ks == 0:
                                                if type8ks == 0:
                                                    if type9ks == 0:
                                                        if type10ks == 0:
                                                            if type11ks == 0:
                                                                if type12ks == 0:
                                                                    if type13ks == 1:
                                                                        bm_3ks.faces.new([fa67,fb67,fc67])
                                                                        bm_3ks.faces.new([fd67,fe67,ff67])
                                                                        bm_3ks.faces.new([fe67,ff67,fg67])
                                                                        bm_3ks.faces.new([ff67,fg67,fh67])
                                                                        bm_3ks.faces.new([fg67,fh67,fi67])
                                                                        bm_3ks.faces.new([fh67,fi67,fj67])
                                                                        bm_3ks.faces.new([fi67,fj67,fk67])
                                                                        bm_3ks.faces.new([fj67,fk67,fl67])
                                                                        bm_3ks.faces.new([fj67,fl67,fm67])

                    if type1kr == 1:
                        if type2kr == 1:
                            if type3kr == 0:
                                if type4kr == 1:
                                    if type5kr == 1:
                                        if type6kr == 0:
                                            if type7kr == 0:
                                                if type8kr == 0:
                                                    if type9kr == 0:
                                                        if type10kr == 0:
                                                            if type11kr == 0:
                                                                if type12kr == 1:
                                                                    if type13kr == 1:
                                                                        bm_3kr.faces.new([fa66,fb66,fc66])
                                                                        bm_3kr.faces.new([fd66,fe66,ff66])
                                                                        bm_3kr.faces.new([fe66,ff66,fg66])
                                                                        bm_3kr.faces.new([ff66,fg66,fh66])
                                                                        bm_3kr.faces.new([fg66,fh66,fi66])
                                                                        bm_3kr.faces.new([fh66,fi66,fj66])
                                                                        bm_3kr.faces.new([fi66,fj66,fk66])
                                                                        bm_3kr.faces.new([fi66,fk66,fl66])
                                                                        bm_3kr.faces.new([fk66,fl66,fm66])

                    if type1kq == 1:
                        if type2kq == 1:
                            if type3kq == 0:
                                if type4kq == 1:
                                    if type5kq == 1:
                                        if type6kq == 0:
                                            if type7kq == 0:
                                                if type8kq == 0:
                                                    if type9kq == 0:
                                                        if type10kq == 0:
                                                            if type11kq == 1:
                                                                if type12kq == 1:
                                                                    if type13kq == 0:
                                                                        bm_3kq.faces.new([fa65,fb65,fc65])
                                                                        bm_3kq.faces.new([fd65,fe65,ff65])
                                                                        bm_3kq.faces.new([fe65,ff65,fg65])
                                                                        bm_3kq.faces.new([ff65,fg65,fh65])
                                                                        bm_3kq.faces.new([fg65,fh65,fi65])
                                                                        bm_3kq.faces.new([fh65,fi65,fj65])
                                                                        bm_3kq.faces.new([fk65,fl65,fm65])

                    if type1kp == 1:
                        if type2kp == 1:
                            if type3kp == 0:
                                if type4kp == 1:
                                    if type5kp == 1:
                                        if type6kp == 0:
                                            if type7kp == 0:
                                                if type8kp == 0:
                                                    if type9kp == 0:
                                                        if type10kp == 1:
                                                            if type11kp == 1:
                                                                if type12kp == 0:
                                                                    if type13kp == 0:
                                                                        bm_3kp.faces.new([fa64,fb64,fc64])
                                                                        bm_3kp.faces.new([fd64,fe64,ff64])
                                                                        bm_3kp.faces.new([fe64,ff64,fg64])
                                                                        bm_3kp.faces.new([ff64,fg64,fh64])
                                                                        bm_3kp.faces.new([fg64,fh64,fi64])
                                                                        bm_3kp.faces.new([fj64,fk64,fl64])
                                                                        bm_3kp.faces.new([fk64,fl64,fm64])

                    if type1km == 1:
                        if type2km == 1:
                            if type3km == 0:
                                if type4km == 1:
                                    if type5km == 1:
                                        if type6km == 0:
                                            if type7km == 0:
                                                if type8km == 0:
                                                    if type9km == 1:
                                                        if type10km == 1:
                                                            if type11km == 0:
                                                                if type12km == 0:
                                                                    if type13km == 0:
                                                                        bm_3km.faces.new([fa61,fb61,fc61])
                                                                        bm_3km.faces.new([fd61,fe61,ff61])
                                                                        bm_3km.faces.new([fe61,ff61,fg61])
                                                                        bm_3km.faces.new([ff61,fg61,fh61])
                                                                        bm_3km.faces.new([fi61,fj61,fk61])
                                                                        bm_3km.faces.new([fj61,fk61,fl61])
                                                                        bm_3km.faces.new([fk61,fl61,fm61])

                    if type1kl == 1:
                        if type2kl == 1:
                            if type3kl == 0:
                                if type4kl == 1:
                                    if type5kl == 1:
                                        if type6kl == 0:
                                            if type7kl == 0:
                                                if type8kl == 1:
                                                    if type9kl == 1:
                                                        if type10kl == 0:
                                                            if type11kl == 0:
                                                                if type12kl == 0:
                                                                    if type13kl == 0:
                                                                        bm_3kl.faces.new([fa60,fb60,fc60])
                                                                        bm_3kl.faces.new([fd60,fe60,ff60])
                                                                        bm_3kl.faces.new([fe60,ff60,fg60])
                                                                        bm_3kl.faces.new([fh60,fi60,fj60])
                                                                        bm_3kl.faces.new([fi60,fj60,fk60])
                                                                        bm_3kl.faces.new([fj60,fk60,fl60])
                                                                        bm_3kl.faces.new([fk60,fl60,fm60])

                    if type1kk == 1:
                        if type2kk == 1:
                            if type3kk == 0:
                                if type4kk == 1:
                                    if type5kk == 1:
                                        if type6kk == 0:
                                            if type7kk == 1:
                                                if type8kk == 1:
                                                    if type9kk == 0:
                                                        if type10kk == 0:
                                                            if type11kk == 0:
                                                                if type12kk == 0:
                                                                    if type13kk == 0:
                                                                        bm_3kk.faces.new([fa59,fb59,fc59])
                                                                        bm_3kk.faces.new([fd59,fe59,ff59])
                                                                        bm_3kk.faces.new([fg59,fh59,fi59])
                                                                        bm_3kk.faces.new([fh59,fi59,fj59])
                                                                        bm_3kk.faces.new([fi59,fj59,fk59])
                                                                        bm_3kk.faces.new([fj59,fk59,fl59])
                                                                        bm_3kk.faces.new([fk59,fl59,fm59])

                    if type1kj == 1:
                        if type2kj == 1:
                            if type3kj == 0:
                                if type4kj == 0:
                                    if type5kj == 0:
                                        if type6kj == 0:
                                            if type7kj == 0:
                                                if type8kj == 0:
                                                    if type9kj == 0:
                                                        if type10kj == 0:
                                                            if type11kj == 0:
                                                                if type12kj == 0:
                                                                    if type13kj == 1:
                                                                        bm_3kj.faces.new([fa58,fb58,fc58])
                                                                        bm_3kj.faces.new([fb58,fc58,fd58])
                                                                        bm_3kj.faces.new([fc58,fd58,fe58])
                                                                        bm_3kj.faces.new([fd58,fe58,ff58])
                                                                        bm_3kj.faces.new([fe58,ff58,fg58])
                                                                        bm_3kj.faces.new([ff58,fg58,fh58])
                                                                        bm_3kj.faces.new([fg58,fh58,fi58])
                                                                        bm_3kj.faces.new([fh58,fi58,fj58])
                                                                        bm_3kj.faces.new([fi58,fj58,fk58])
                                                                        bm_3kj.faces.new([fj58,fk58,fl58])
                                                                        bm_3kj.faces.new([fj58,fl58,fm58])

                    if type1ki == 1:
                        if type2ki == 1:
                            if type3ki == 0:
                                if type4ki == 0:
                                    if type5ki == 0:
                                        if type6ki == 0:
                                            if type7ki == 0:
                                                if type8ki == 0:
                                                    if type9ki == 0:
                                                        if type10ki == 0:
                                                            if type11ki == 0:
                                                                if type12ki == 1:
                                                                    if type13ki == 1:
                                                                        bm_3ki.faces.new([fa57,fb57,fc57])
                                                                        bm_3ki.faces.new([fb57,fc57,fd57])
                                                                        bm_3ki.faces.new([fc57,fd57,fe57])
                                                                        bm_3ki.faces.new([fd57,fe57,ff57])
                                                                        bm_3ki.faces.new([fe57,ff57,fg57])
                                                                        bm_3ki.faces.new([ff57,fg57,fh57])
                                                                        bm_3ki.faces.new([fg57,fh57,fi57])
                                                                        bm_3ki.faces.new([fh57,fi57,fj57])
                                                                        bm_3ki.faces.new([fi57,fj57,fk57])
                                                                        bm_3ki.faces.new([fi57,fk57,fl57])
                                                                        bm_3ki.faces.new([fk57,fl57,fm57])

                    if type1kh == 1:
                        if type2kh == 1:
                            if type3kh == 0:
                                if type4kh == 0:
                                    if type5kh == 0:
                                        if type6kh == 0:
                                            if type7kh == 0:
                                                if type8kh == 0:
                                                    if type9kh == 0:
                                                        if type10kh == 0:
                                                            if type11kh == 1:
                                                                if type12kh == 1:
                                                                    if type13kh == 0:
                                                                        bm_3kh.faces.new([fa56,fb56,fc56])
                                                                        bm_3kh.faces.new([fb56,fc56,fd56])
                                                                        bm_3kh.faces.new([fc56,fd56,fe56])
                                                                        bm_3kh.faces.new([fd56,fe56,ff56])
                                                                        bm_3kh.faces.new([fe56,ff56,fg56])
                                                                        bm_3kh.faces.new([ff56,fg56,fh56])
                                                                        bm_3kh.faces.new([fg56,fh56,fi56])
                                                                        bm_3kh.faces.new([fh56,fi56,fj56])
                                                                        bm_3kh.faces.new([fk56,fl56,fm56])

                    if type1kg == 1:
                        if type2kg == 1:
                            if type3kg == 0:
                                if type4kg == 0:
                                    if type5kg == 0:
                                        if type6kg == 0:
                                            if type7kg == 0:
                                                if type8kg == 0:
                                                    if type9kg == 0:
                                                        if type10kg == 1:
                                                            if type11kg == 1:
                                                                if type12kg == 0:
                                                                    if type13kg == 0:
                                                                        bm_3kg.faces.new([fa55,fb55,fc55])
                                                                        bm_3kg.faces.new([fb55,fc55,fd55])
                                                                        bm_3kg.faces.new([fc55,fd55,fe55])
                                                                        bm_3kg.faces.new([fd55,fe55,ff55])
                                                                        bm_3kg.faces.new([fe55,ff55,fg55])
                                                                        bm_3kg.faces.new([ff55,fg55,fh55])
                                                                        bm_3kg.faces.new([fg55,fh55,fi55])
                                                                        bm_3kg.faces.new([fj55,fk55,fl55])
                                                                        bm_3kg.faces.new([fk55,fl55,fm55])

                    if type1kf == 1:
                        if type2kf == 1:
                            if type3kf == 0:
                                if type4kf == 0:
                                    if type5kf == 0:
                                        if type6kf == 0:
                                            if type7kf == 0:
                                                if type8kf == 0:
                                                    if type9kf == 1:
                                                        if type10kf == 1:
                                                            if type11kf == 0:
                                                                if type12kf == 0:
                                                                    if type13kf == 0:
                                                                        bm_3kf.faces.new([fa54,fb54,fc54])
                                                                        bm_3kf.faces.new([fb54,fc54,fd54])
                                                                        bm_3kf.faces.new([fc54,fd54,fe54])
                                                                        bm_3kf.faces.new([fd54,fe54,ff54])
                                                                        bm_3kf.faces.new([fe54,ff54,fg54])
                                                                        bm_3kf.faces.new([ff54,fg54,fh54])
                                                                        bm_3kf.faces.new([fi54,fj54,fk54])
                                                                        bm_3kf.faces.new([fj54,fk54,fl54])
                                                                        bm_3kf.faces.new([fk54,fl54,fm54])

                    if type1ke == 1:
                        if type2ke == 1:
                            if type3ke == 0:
                                if type4ke == 0:
                                    if type5ke == 0:
                                        if type6ke == 0:
                                            if type7ke == 0:
                                                if type8ke == 1:
                                                    if type9ke == 1:
                                                        if type10ke == 0:
                                                            if type11ke == 0:
                                                                if type12ke == 0:
                                                                    if type13ke == 0:
                                                                        bm_3ke.faces.new([fa53,fb53,fc53])
                                                                        bm_3ke.faces.new([fb53,fc53,fd53])
                                                                        bm_3ke.faces.new([fc53,fd53,fe53])
                                                                        bm_3ke.faces.new([fd53,fe53,ff53])
                                                                        bm_3ke.faces.new([fe53,ff53,fg53])
                                                                        bm_3ke.faces.new([fh53,fi53,fj53])
                                                                        bm_3ke.faces.new([fi53,fj53,fk53])
                                                                        bm_3ke.faces.new([fj53,fk53,fl53])
                                                                        bm_3ke.faces.new([fk53,fl53,fm53])

                    if type1kd == 1:
                        if type2kd == 1:
                            if type3kd == 0:
                                if type4kd == 0:
                                    if type5kd == 0:
                                        if type6kd == 0:
                                            if type7kd == 1:
                                                if type8kd == 1:
                                                    if type9kd == 0:
                                                        if type10kd == 0:
                                                            if type11kd == 0:
                                                                if type12kd == 0:
                                                                    if type13kd == 0:
                                                                        bm_3kd.faces.new([fa52,fb52,fc52])
                                                                        bm_3kd.faces.new([fb52,fc52,fd52])
                                                                        bm_3kd.faces.new([fc52,fd52,fe52])
                                                                        bm_3kd.faces.new([fd52,fe52,ff52])
                                                                        bm_3kd.faces.new([fg52,fh52,fi52])
                                                                        bm_3kd.faces.new([fh52,fi52,fj52])
                                                                        bm_3kd.faces.new([fi52,fj52,fk52])
                                                                        bm_3kd.faces.new([fj52,fk52,fl52])
                                                                        bm_3kd.faces.new([fk52,fl52,fm52])

                    if type1kc == 1:
                        if type2kc == 1:
                            if type3kc == 0:
                                if type4kc == 0:
                                    if type5kc == 0:
                                        if type6kc == 1:
                                            if type7kc == 1:
                                                if type8kc == 0:
                                                    if type9kc == 0:
                                                        if type10kc == 0:
                                                            if type11kc == 0:
                                                                if type12kc == 0:
                                                                    if type13kc == 0:
                                                                        bm_3kc.faces.new([fa51,fb51,fc51])
                                                                        bm_3kc.faces.new([fb51,fc51,fd51])
                                                                        bm_3kc.faces.new([fc51,fd51,fe51])
                                                                        bm_3kc.faces.new([ff51,fg51,fh51])
                                                                        bm_3kc.faces.new([fg51,fh51,fi51])
                                                                        bm_3kc.faces.new([fh51,fi51,fj51])
                                                                        bm_3kc.faces.new([fi51,fj51,fk51])
                                                                        bm_3kc.faces.new([fj51,fk51,fl51])
                                                                        bm_3kc.faces.new([fk51,fl51,fm51])

                    if type1kb == 1:
                        if type2kb == 1:
                            if type3kb == 0:
                                if type4kb == 0:
                                    if type5kb == 1:
                                        if type6kb == 1:
                                            if type7kb == 0:
                                                if type8kb == 0:
                                                    if type9kb == 0:
                                                        if type10kb == 0:
                                                            if type11kb == 0:
                                                                if type12kb == 0:
                                                                    if type13kb == 0:
                                                                        bm_3kb.faces.new([fa50,fb50,fc50])
                                                                        bm_3kb.faces.new([fb50,fc50,fd50])
                                                                        bm_3kb.faces.new([fe50,ff50,fg50])
                                                                        bm_3kb.faces.new([ff50,fg50,fh50])
                                                                        bm_3kb.faces.new([fg50,fh50,fi50])
                                                                        bm_3kb.faces.new([fh50,fi50,fj50])
                                                                        bm_3kb.faces.new([fi50,fj50,fk50])
                                                                        bm_3kb.faces.new([fj50,fk50,fl50])
                                                                        bm_3kb.faces.new([fk50,fl50,fm50])

                    if type1ka == 1:
                        if type2ka == 1:
                            if type3ka == 0:
                                if type4ka == 1:
                                    if type5ka == 1:
                                        if type6ka == 0:
                                            if type7ka == 0:
                                                if type8ka == 0:
                                                    if type9ka == 0:
                                                        if type10ka == 0:
                                                            if type11ka == 0:
                                                                if type12ka == 0:
                                                                    if type13ka == 0:
                                                                        bm_3ka.faces.new([fa49,fb49,fc49])
                                                                        bm_3ka.faces.new([fd49,fe49,ff49])
                                                                        bm_3ka.faces.new([fe49,ff49,fg49])
                                                                        bm_3ka.faces.new([ff49,fg49,fh49])
                                                                        bm_3ka.faces.new([fg49,fh49,fi49])
                                                                        bm_3ka.faces.new([fh49,fi49,fj49])
                                                                        bm_3ka.faces.new([fi49,fj49,fk49])
                                                                        bm_3ka.faces.new([fj49,fk49,fl49])
                                                                        bm_3ka.faces.new([fk49,fl49,fm49])

                    if type1k == 1:
                        if type2k == 1:
                            if type3k == 0:
                                if type4k == 0:
                                    if type5k == 0:
                                        if type6k == 0:
                                            if type7k == 0:
                                                if type8k == 0:
                                                    if type9k == 0:
                                                        if type10k == 0:
                                                            if type11k == 0:
                                                                if type12k == 0:
                                                                    if type13k == 0:
                                                                        bm_3k.faces.new([fa48,fb48,fc48])
                                                                        bm_3k.faces.new([fb48,fc48,fd48])
                                                                        bm_3k.faces.new([fc48,fd48,fe48])
                                                                        bm_3k.faces.new([fd48,fe48,ff48])
                                                                        bm_3k.faces.new([fe48,ff48,fg48])
                                                                        bm_3k.faces.new([ff48,fg48,fh48])
                                                                        bm_3k.faces.new([fg48,fh48,fi48])
                                                                        bm_3k.faces.new([fh48,fi48,fj48])
                                                                        bm_3k.faces.new([fi48,fj48,fk48])
                                                                        bm_3k.faces.new([fj48,fk48,fl48])
                                                                        bm_3k.faces.new([fk48,fl48,fm48])

            elif vertexCount == 14:
                for i in range(vertexCount//14):
                    vx1l = unpack("<f", f.read(4))[0]
                    vy1l = unpack("<f", f.read(4))[0]
                    vz1l = unpack("<f", f.read(4))[0]
                    vw1l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2l = unpack("<f", f.read(4))[0]
                    vy2l = unpack("<f", f.read(4))[0]
                    vz2l = unpack("<f", f.read(4))[0]
                    vw2l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3l = unpack("<f", f.read(4))[0]
                    vy3l = unpack("<f", f.read(4))[0]
                    vz3l = unpack("<f", f.read(4))[0]
                    vw3l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4l = unpack("<f", f.read(4))[0]
                    vy4l = unpack("<f", f.read(4))[0]
                    vz4l = unpack("<f", f.read(4))[0]
                    vw4l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5l = unpack("<f", f.read(4))[0]
                    vy5l = unpack("<f", f.read(4))[0]
                    vz5l = unpack("<f", f.read(4))[0]
                    vw5l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6l = unpack("<f", f.read(4))[0]
                    vy6l = unpack("<f", f.read(4))[0]
                    vz6l = unpack("<f", f.read(4))[0]
                    vw6l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7l = unpack("<f", f.read(4))[0]
                    vy7l = unpack("<f", f.read(4))[0]
                    vz7l = unpack("<f", f.read(4))[0]
                    vw7l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8l = unpack("<f", f.read(4))[0]
                    vy8l = unpack("<f", f.read(4))[0]
                    vz8l = unpack("<f", f.read(4))[0]
                    vw8l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9l = unpack("<f", f.read(4))[0]
                    vy9l = unpack("<f", f.read(4))[0]
                    vz9l = unpack("<f", f.read(4))[0]
                    vw9l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10l = unpack("<f", f.read(4))[0]
                    vy10l = unpack("<f", f.read(4))[0]
                    vz10l = unpack("<f", f.read(4))[0]
                    vw10l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11l = unpack("<f", f.read(4))[0]
                    vy11l = unpack("<f", f.read(4))[0]
                    vz11l = unpack("<f", f.read(4))[0]
                    vw11l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12l = unpack("<f", f.read(4))[0]
                    vy12l = unpack("<f", f.read(4))[0]
                    vz12l = unpack("<f", f.read(4))[0]
                    vw12l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13l = unpack("<f", f.read(4))[0]
                    vy13l = unpack("<f", f.read(4))[0]
                    vz13l = unpack("<f", f.read(4))[0]
                    vw13l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13l = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14l = unpack("<f", f.read(4))[0]
                    vy14l = unpack("<f", f.read(4))[0]
                    vz14l = unpack("<f", f.read(4))[0]
                    vw14l = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14l = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1la = unpack("<f", f.read(4))[0]
                    vy1la = unpack("<f", f.read(4))[0]
                    vz1la = unpack("<f", f.read(4))[0]
                    vw1la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2la = unpack("<f", f.read(4))[0]
                    vy2la = unpack("<f", f.read(4))[0]
                    vz2la = unpack("<f", f.read(4))[0]
                    vw2la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3la = unpack("<f", f.read(4))[0]
                    vy3la = unpack("<f", f.read(4))[0]
                    vz3la = unpack("<f", f.read(4))[0]
                    vw3la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4la = unpack("<f", f.read(4))[0]
                    vy4la = unpack("<f", f.read(4))[0]
                    vz4la = unpack("<f", f.read(4))[0]
                    vw4la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5la = unpack("<f", f.read(4))[0]
                    vy5la = unpack("<f", f.read(4))[0]
                    vz5la = unpack("<f", f.read(4))[0]
                    vw5la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6la = unpack("<f", f.read(4))[0]
                    vy6la = unpack("<f", f.read(4))[0]
                    vz6la = unpack("<f", f.read(4))[0]
                    vw6la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7la = unpack("<f", f.read(4))[0]
                    vy7la = unpack("<f", f.read(4))[0]
                    vz7la = unpack("<f", f.read(4))[0]
                    vw7la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8la = unpack("<f", f.read(4))[0]
                    vy8la = unpack("<f", f.read(4))[0]
                    vz8la = unpack("<f", f.read(4))[0]
                    vw8la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9la = unpack("<f", f.read(4))[0]
                    vy9la = unpack("<f", f.read(4))[0]
                    vz9la = unpack("<f", f.read(4))[0]
                    vw9la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10la = unpack("<f", f.read(4))[0]
                    vy10la = unpack("<f", f.read(4))[0]
                    vz10la = unpack("<f", f.read(4))[0]
                    vw10la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11la = unpack("<f", f.read(4))[0]
                    vy11la = unpack("<f", f.read(4))[0]
                    vz11la = unpack("<f", f.read(4))[0]
                    vw11la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12la = unpack("<f", f.read(4))[0]
                    vy12la = unpack("<f", f.read(4))[0]
                    vz12la = unpack("<f", f.read(4))[0]
                    vw12la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13la = unpack("<f", f.read(4))[0]
                    vy13la = unpack("<f", f.read(4))[0]
                    vz13la = unpack("<f", f.read(4))[0]
                    vw13la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13la = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14la = unpack("<f", f.read(4))[0]
                    vy14la = unpack("<f", f.read(4))[0]
                    vz14la = unpack("<f", f.read(4))[0]
                    vw14la = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14la = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lb = unpack("<f", f.read(4))[0]
                    vy1lb = unpack("<f", f.read(4))[0]
                    vz1lb = unpack("<f", f.read(4))[0]
                    vw1lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lb = unpack("<f", f.read(4))[0]
                    vy2lb = unpack("<f", f.read(4))[0]
                    vz2lb = unpack("<f", f.read(4))[0]
                    vw2lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lb = unpack("<f", f.read(4))[0]
                    vy3lb = unpack("<f", f.read(4))[0]
                    vz3lb = unpack("<f", f.read(4))[0]
                    vw3lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lb = unpack("<f", f.read(4))[0]
                    vy4lb = unpack("<f", f.read(4))[0]
                    vz4lb = unpack("<f", f.read(4))[0]
                    vw4lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lb = unpack("<f", f.read(4))[0]
                    vy5lb = unpack("<f", f.read(4))[0]
                    vz5lb = unpack("<f", f.read(4))[0]
                    vw5lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lb = unpack("<f", f.read(4))[0]
                    vy6lb = unpack("<f", f.read(4))[0]
                    vz6lb = unpack("<f", f.read(4))[0]
                    vw6lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lb = unpack("<f", f.read(4))[0]
                    vy7lb = unpack("<f", f.read(4))[0]
                    vz7lb = unpack("<f", f.read(4))[0]
                    vw7lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lb = unpack("<f", f.read(4))[0]
                    vy8lb = unpack("<f", f.read(4))[0]
                    vz8lb = unpack("<f", f.read(4))[0]
                    vw8lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lb = unpack("<f", f.read(4))[0]
                    vy9lb = unpack("<f", f.read(4))[0]
                    vz9lb = unpack("<f", f.read(4))[0]
                    vw9lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lb = unpack("<f", f.read(4))[0]
                    vy10lb = unpack("<f", f.read(4))[0]
                    vz10lb = unpack("<f", f.read(4))[0]
                    vw10lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lb = unpack("<f", f.read(4))[0]
                    vy11lb = unpack("<f", f.read(4))[0]
                    vz11lb = unpack("<f", f.read(4))[0]
                    vw11lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lb = unpack("<f", f.read(4))[0]
                    vy12lb = unpack("<f", f.read(4))[0]
                    vz12lb = unpack("<f", f.read(4))[0]
                    vw12lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lb = unpack("<f", f.read(4))[0]
                    vy13lb = unpack("<f", f.read(4))[0]
                    vz13lb = unpack("<f", f.read(4))[0]
                    vw13lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lb = unpack("<f", f.read(4))[0]
                    vy14lb = unpack("<f", f.read(4))[0]
                    vz14lb = unpack("<f", f.read(4))[0]
                    vw14lb = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lb = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lc = unpack("<f", f.read(4))[0]
                    vy1lc = unpack("<f", f.read(4))[0]
                    vz1lc = unpack("<f", f.read(4))[0]
                    vw1lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lc = unpack("<f", f.read(4))[0]
                    vy2lc = unpack("<f", f.read(4))[0]
                    vz2lc = unpack("<f", f.read(4))[0]
                    vw2lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lc = unpack("<f", f.read(4))[0]
                    vy3lc = unpack("<f", f.read(4))[0]
                    vz3lc = unpack("<f", f.read(4))[0]
                    vw3lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lc = unpack("<f", f.read(4))[0]
                    vy4lc = unpack("<f", f.read(4))[0]
                    vz4lc = unpack("<f", f.read(4))[0]
                    vw4lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lc = unpack("<f", f.read(4))[0]
                    vy5lc = unpack("<f", f.read(4))[0]
                    vz5lc = unpack("<f", f.read(4))[0]
                    vw5lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lc = unpack("<f", f.read(4))[0]
                    vy6lc = unpack("<f", f.read(4))[0]
                    vz6lc = unpack("<f", f.read(4))[0]
                    vw6lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lc = unpack("<f", f.read(4))[0]
                    vy7lc = unpack("<f", f.read(4))[0]
                    vz7lc = unpack("<f", f.read(4))[0]
                    vw7lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lc = unpack("<f", f.read(4))[0]
                    vy8lc = unpack("<f", f.read(4))[0]
                    vz8lc = unpack("<f", f.read(4))[0]
                    vw8lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lc = unpack("<f", f.read(4))[0]
                    vy9lc = unpack("<f", f.read(4))[0]
                    vz9lc = unpack("<f", f.read(4))[0]
                    vw9lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lc = unpack("<f", f.read(4))[0]
                    vy10lc = unpack("<f", f.read(4))[0]
                    vz10lc = unpack("<f", f.read(4))[0]
                    vw10lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lc = unpack("<f", f.read(4))[0]
                    vy11lc = unpack("<f", f.read(4))[0]
                    vz11lc = unpack("<f", f.read(4))[0]
                    vw11lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lc = unpack("<f", f.read(4))[0]
                    vy12lc = unpack("<f", f.read(4))[0]
                    vz12lc = unpack("<f", f.read(4))[0]
                    vw12lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lc = unpack("<f", f.read(4))[0]
                    vy13lc = unpack("<f", f.read(4))[0]
                    vz13lc = unpack("<f", f.read(4))[0]
                    vw13lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lc = unpack("<f", f.read(4))[0]
                    vy14lc = unpack("<f", f.read(4))[0]
                    vz14lc = unpack("<f", f.read(4))[0]
                    vw14lc = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lc = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1ld = unpack("<f", f.read(4))[0]
                    vy1ld = unpack("<f", f.read(4))[0]
                    vz1ld = unpack("<f", f.read(4))[0]
                    vw1ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ld = unpack("<f", f.read(4))[0]
                    vy2ld = unpack("<f", f.read(4))[0]
                    vz2ld = unpack("<f", f.read(4))[0]
                    vw2ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ld = unpack("<f", f.read(4))[0]
                    vy3ld = unpack("<f", f.read(4))[0]
                    vz3ld = unpack("<f", f.read(4))[0]
                    vw3ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ld = unpack("<f", f.read(4))[0]
                    vy4ld = unpack("<f", f.read(4))[0]
                    vz4ld = unpack("<f", f.read(4))[0]
                    vw4ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ld = unpack("<f", f.read(4))[0]
                    vy5ld = unpack("<f", f.read(4))[0]
                    vz5ld = unpack("<f", f.read(4))[0]
                    vw5ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ld = unpack("<f", f.read(4))[0]
                    vy6ld = unpack("<f", f.read(4))[0]
                    vz6ld = unpack("<f", f.read(4))[0]
                    vw6ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ld = unpack("<f", f.read(4))[0]
                    vy7ld = unpack("<f", f.read(4))[0]
                    vz7ld = unpack("<f", f.read(4))[0]
                    vw7ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ld = unpack("<f", f.read(4))[0]
                    vy8ld = unpack("<f", f.read(4))[0]
                    vz8ld = unpack("<f", f.read(4))[0]
                    vw8ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ld = unpack("<f", f.read(4))[0]
                    vy9ld = unpack("<f", f.read(4))[0]
                    vz9ld = unpack("<f", f.read(4))[0]
                    vw9ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ld = unpack("<f", f.read(4))[0]
                    vy10ld = unpack("<f", f.read(4))[0]
                    vz10ld = unpack("<f", f.read(4))[0]
                    vw10ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ld = unpack("<f", f.read(4))[0]
                    vy11ld = unpack("<f", f.read(4))[0]
                    vz11ld = unpack("<f", f.read(4))[0]
                    vw11ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ld = unpack("<f", f.read(4))[0]
                    vy12ld = unpack("<f", f.read(4))[0]
                    vz12ld = unpack("<f", f.read(4))[0]
                    vw12ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ld = unpack("<f", f.read(4))[0]
                    vy13ld = unpack("<f", f.read(4))[0]
                    vz13ld = unpack("<f", f.read(4))[0]
                    vw13ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14ld = unpack("<f", f.read(4))[0]
                    vy14ld = unpack("<f", f.read(4))[0]
                    vz14ld = unpack("<f", f.read(4))[0]
                    vw14ld = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14ld = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1le = unpack("<f", f.read(4))[0]
                    vy1le = unpack("<f", f.read(4))[0]
                    vz1le = unpack("<f", f.read(4))[0]
                    vw1le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2le = unpack("<f", f.read(4))[0]
                    vy2le = unpack("<f", f.read(4))[0]
                    vz2le = unpack("<f", f.read(4))[0]
                    vw2le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3le = unpack("<f", f.read(4))[0]
                    vy3le = unpack("<f", f.read(4))[0]
                    vz3le = unpack("<f", f.read(4))[0]
                    vw3le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4le = unpack("<f", f.read(4))[0]
                    vy4le = unpack("<f", f.read(4))[0]
                    vz4le = unpack("<f", f.read(4))[0]
                    vw4le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5le = unpack("<f", f.read(4))[0]
                    vy5le = unpack("<f", f.read(4))[0]
                    vz5le = unpack("<f", f.read(4))[0]
                    vw5le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6le = unpack("<f", f.read(4))[0]
                    vy6le = unpack("<f", f.read(4))[0]
                    vz6le = unpack("<f", f.read(4))[0]
                    vw6le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7le = unpack("<f", f.read(4))[0]
                    vy7le = unpack("<f", f.read(4))[0]
                    vz7le = unpack("<f", f.read(4))[0]
                    vw7le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8le = unpack("<f", f.read(4))[0]
                    vy8le = unpack("<f", f.read(4))[0]
                    vz8le = unpack("<f", f.read(4))[0]
                    vw8le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9le = unpack("<f", f.read(4))[0]
                    vy9le = unpack("<f", f.read(4))[0]
                    vz9le = unpack("<f", f.read(4))[0]
                    vw9le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10le = unpack("<f", f.read(4))[0]
                    vy10le = unpack("<f", f.read(4))[0]
                    vz10le = unpack("<f", f.read(4))[0]
                    vw10le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11le = unpack("<f", f.read(4))[0]
                    vy11le = unpack("<f", f.read(4))[0]
                    vz11le = unpack("<f", f.read(4))[0]
                    vw11le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12le = unpack("<f", f.read(4))[0]
                    vy12le = unpack("<f", f.read(4))[0]
                    vz12le = unpack("<f", f.read(4))[0]
                    vw12le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13le = unpack("<f", f.read(4))[0]
                    vy13le = unpack("<f", f.read(4))[0]
                    vz13le = unpack("<f", f.read(4))[0]
                    vw13le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13le = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14le = unpack("<f", f.read(4))[0]
                    vy14le = unpack("<f", f.read(4))[0]
                    vz14le = unpack("<f", f.read(4))[0]
                    vw14le = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14le = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lf = unpack("<f", f.read(4))[0]
                    vy1lf = unpack("<f", f.read(4))[0]
                    vz1lf = unpack("<f", f.read(4))[0]
                    vw1lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lf = unpack("<f", f.read(4))[0]
                    vy2lf = unpack("<f", f.read(4))[0]
                    vz2lf = unpack("<f", f.read(4))[0]
                    vw2lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lf = unpack("<f", f.read(4))[0]
                    vy3lf = unpack("<f", f.read(4))[0]
                    vz3lf = unpack("<f", f.read(4))[0]
                    vw3lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lf = unpack("<f", f.read(4))[0]
                    vy4lf = unpack("<f", f.read(4))[0]
                    vz4lf = unpack("<f", f.read(4))[0]
                    vw4lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lf = unpack("<f", f.read(4))[0]
                    vy5lf = unpack("<f", f.read(4))[0]
                    vz5lf = unpack("<f", f.read(4))[0]
                    vw5lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lf = unpack("<f", f.read(4))[0]
                    vy6lf = unpack("<f", f.read(4))[0]
                    vz6lf = unpack("<f", f.read(4))[0]
                    vw6lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lf = unpack("<f", f.read(4))[0]
                    vy7lf = unpack("<f", f.read(4))[0]
                    vz7lf = unpack("<f", f.read(4))[0]
                    vw7lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lf = unpack("<f", f.read(4))[0]
                    vy8lf = unpack("<f", f.read(4))[0]
                    vz8lf = unpack("<f", f.read(4))[0]
                    vw8lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lf = unpack("<f", f.read(4))[0]
                    vy9lf = unpack("<f", f.read(4))[0]
                    vz9lf = unpack("<f", f.read(4))[0]
                    vw9lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lf = unpack("<f", f.read(4))[0]
                    vy10lf = unpack("<f", f.read(4))[0]
                    vz10lf = unpack("<f", f.read(4))[0]
                    vw10lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lf = unpack("<f", f.read(4))[0]
                    vy11lf = unpack("<f", f.read(4))[0]
                    vz11lf = unpack("<f", f.read(4))[0]
                    vw11lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lf = unpack("<f", f.read(4))[0]
                    vy12lf = unpack("<f", f.read(4))[0]
                    vz12lf = unpack("<f", f.read(4))[0]
                    vw12lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lf = unpack("<f", f.read(4))[0]
                    vy13lf = unpack("<f", f.read(4))[0]
                    vz13lf = unpack("<f", f.read(4))[0]
                    vw13lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lf = unpack("<f", f.read(4))[0]
                    vy14lf = unpack("<f", f.read(4))[0]
                    vz14lf = unpack("<f", f.read(4))[0]
                    vw14lf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lg = unpack("<f", f.read(4))[0]
                    vy1lg = unpack("<f", f.read(4))[0]
                    vz1lg = unpack("<f", f.read(4))[0]
                    vw1lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lg = unpack("<f", f.read(4))[0]
                    vy2lg = unpack("<f", f.read(4))[0]
                    vz2lg = unpack("<f", f.read(4))[0]
                    vw2lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lg = unpack("<f", f.read(4))[0]
                    vy3lg = unpack("<f", f.read(4))[0]
                    vz3lg = unpack("<f", f.read(4))[0]
                    vw3lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lg = unpack("<f", f.read(4))[0]
                    vy4lg = unpack("<f", f.read(4))[0]
                    vz4lg = unpack("<f", f.read(4))[0]
                    vw4lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lg = unpack("<f", f.read(4))[0]
                    vy5lg = unpack("<f", f.read(4))[0]
                    vz5lg = unpack("<f", f.read(4))[0]
                    vw5lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lg = unpack("<f", f.read(4))[0]
                    vy6lg = unpack("<f", f.read(4))[0]
                    vz6lg = unpack("<f", f.read(4))[0]
                    vw6lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lg = unpack("<f", f.read(4))[0]
                    vy7lg = unpack("<f", f.read(4))[0]
                    vz7lg = unpack("<f", f.read(4))[0]
                    vw7lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lg = unpack("<f", f.read(4))[0]
                    vy8lg = unpack("<f", f.read(4))[0]
                    vz8lg = unpack("<f", f.read(4))[0]
                    vw8lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lg = unpack("<f", f.read(4))[0]
                    vy9lg = unpack("<f", f.read(4))[0]
                    vz9lg = unpack("<f", f.read(4))[0]
                    vw9lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lg = unpack("<f", f.read(4))[0]
                    vy10lg = unpack("<f", f.read(4))[0]
                    vz10lg = unpack("<f", f.read(4))[0]
                    vw10lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lg = unpack("<f", f.read(4))[0]
                    vy11lg = unpack("<f", f.read(4))[0]
                    vz11lg = unpack("<f", f.read(4))[0]
                    vw11lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lg = unpack("<f", f.read(4))[0]
                    vy12lg = unpack("<f", f.read(4))[0]
                    vz12lg = unpack("<f", f.read(4))[0]
                    vw12lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lg = unpack("<f", f.read(4))[0]
                    vy13lg = unpack("<f", f.read(4))[0]
                    vz13lg = unpack("<f", f.read(4))[0]
                    vw13lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lg = unpack("<f", f.read(4))[0]
                    vy14lg = unpack("<f", f.read(4))[0]
                    vz14lg = unpack("<f", f.read(4))[0]
                    vw14lg = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lg = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lh = unpack("<f", f.read(4))[0]
                    vy1lh = unpack("<f", f.read(4))[0]
                    vz1lh = unpack("<f", f.read(4))[0]
                    vw1lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lh = unpack("<f", f.read(4))[0]
                    vy2lh = unpack("<f", f.read(4))[0]
                    vz2lh = unpack("<f", f.read(4))[0]
                    vw2lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lh = unpack("<f", f.read(4))[0]
                    vy3lh = unpack("<f", f.read(4))[0]
                    vz3lh = unpack("<f", f.read(4))[0]
                    vw3lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lh = unpack("<f", f.read(4))[0]
                    vy4lh = unpack("<f", f.read(4))[0]
                    vz4lh = unpack("<f", f.read(4))[0]
                    vw4lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lh = unpack("<f", f.read(4))[0]
                    vy5lh = unpack("<f", f.read(4))[0]
                    vz5lh = unpack("<f", f.read(4))[0]
                    vw5lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lh = unpack("<f", f.read(4))[0]
                    vy6lh = unpack("<f", f.read(4))[0]
                    vz6lh = unpack("<f", f.read(4))[0]
                    vw6lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lh = unpack("<f", f.read(4))[0]
                    vy7lh = unpack("<f", f.read(4))[0]
                    vz7lh = unpack("<f", f.read(4))[0]
                    vw7lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lh = unpack("<f", f.read(4))[0]
                    vy8lh = unpack("<f", f.read(4))[0]
                    vz8lh = unpack("<f", f.read(4))[0]
                    vw8lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lh = unpack("<f", f.read(4))[0]
                    vy9lh = unpack("<f", f.read(4))[0]
                    vz9lh = unpack("<f", f.read(4))[0]
                    vw9lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lh = unpack("<f", f.read(4))[0]
                    vy10lh = unpack("<f", f.read(4))[0]
                    vz10lh = unpack("<f", f.read(4))[0]
                    vw10lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lh = unpack("<f", f.read(4))[0]
                    vy11lh = unpack("<f", f.read(4))[0]
                    vz11lh = unpack("<f", f.read(4))[0]
                    vw11lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lh = unpack("<f", f.read(4))[0]
                    vy12lh = unpack("<f", f.read(4))[0]
                    vz12lh = unpack("<f", f.read(4))[0]
                    vw12lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lh = unpack("<f", f.read(4))[0]
                    vy13lh = unpack("<f", f.read(4))[0]
                    vz13lh = unpack("<f", f.read(4))[0]
                    vw13lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lh = unpack("<f", f.read(4))[0]
                    vy14lh = unpack("<f", f.read(4))[0]
                    vz14lh = unpack("<f", f.read(4))[0]
                    vw14lh = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lh = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1li = unpack("<f", f.read(4))[0]
                    vy1li = unpack("<f", f.read(4))[0]
                    vz1li = unpack("<f", f.read(4))[0]
                    vw1li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2li = unpack("<f", f.read(4))[0]
                    vy2li = unpack("<f", f.read(4))[0]
                    vz2li = unpack("<f", f.read(4))[0]
                    vw2li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3li = unpack("<f", f.read(4))[0]
                    vy3li = unpack("<f", f.read(4))[0]
                    vz3li = unpack("<f", f.read(4))[0]
                    vw3li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4li = unpack("<f", f.read(4))[0]
                    vy4li = unpack("<f", f.read(4))[0]
                    vz4li = unpack("<f", f.read(4))[0]
                    vw4li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5li = unpack("<f", f.read(4))[0]
                    vy5li = unpack("<f", f.read(4))[0]
                    vz5li = unpack("<f", f.read(4))[0]
                    vw5li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6li = unpack("<f", f.read(4))[0]
                    vy6li = unpack("<f", f.read(4))[0]
                    vz6li = unpack("<f", f.read(4))[0]
                    vw6li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7li = unpack("<f", f.read(4))[0]
                    vy7li = unpack("<f", f.read(4))[0]
                    vz7li = unpack("<f", f.read(4))[0]
                    vw7li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8li = unpack("<f", f.read(4))[0]
                    vy8li = unpack("<f", f.read(4))[0]
                    vz8li = unpack("<f", f.read(4))[0]
                    vw8li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9li = unpack("<f", f.read(4))[0]
                    vy9li = unpack("<f", f.read(4))[0]
                    vz9li = unpack("<f", f.read(4))[0]
                    vw9li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10li = unpack("<f", f.read(4))[0]
                    vy10li = unpack("<f", f.read(4))[0]
                    vz10li = unpack("<f", f.read(4))[0]
                    vw10li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11li = unpack("<f", f.read(4))[0]
                    vy11li = unpack("<f", f.read(4))[0]
                    vz11li = unpack("<f", f.read(4))[0]
                    vw11li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12li = unpack("<f", f.read(4))[0]
                    vy12li = unpack("<f", f.read(4))[0]
                    vz12li = unpack("<f", f.read(4))[0]
                    vw12li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13li = unpack("<f", f.read(4))[0]
                    vy13li = unpack("<f", f.read(4))[0]
                    vz13li = unpack("<f", f.read(4))[0]
                    vw13li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13li = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14li = unpack("<f", f.read(4))[0]
                    vy14li = unpack("<f", f.read(4))[0]
                    vz14li = unpack("<f", f.read(4))[0]
                    vw14li = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14li = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lj = unpack("<f", f.read(4))[0]
                    vy1lj = unpack("<f", f.read(4))[0]
                    vz1lj = unpack("<f", f.read(4))[0]
                    vw1lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lj = unpack("<f", f.read(4))[0]
                    vy2lj = unpack("<f", f.read(4))[0]
                    vz2lj = unpack("<f", f.read(4))[0]
                    vw2lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lj = unpack("<f", f.read(4))[0]
                    vy3lj = unpack("<f", f.read(4))[0]
                    vz3lj = unpack("<f", f.read(4))[0]
                    vw3lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lj = unpack("<f", f.read(4))[0]
                    vy4lj = unpack("<f", f.read(4))[0]
                    vz4lj = unpack("<f", f.read(4))[0]
                    vw4lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lj = unpack("<f", f.read(4))[0]
                    vy5lj = unpack("<f", f.read(4))[0]
                    vz5lj = unpack("<f", f.read(4))[0]
                    vw5lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lj = unpack("<f", f.read(4))[0]
                    vy6lj = unpack("<f", f.read(4))[0]
                    vz6lj = unpack("<f", f.read(4))[0]
                    vw6lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lj = unpack("<f", f.read(4))[0]
                    vy7lj = unpack("<f", f.read(4))[0]
                    vz7lj = unpack("<f", f.read(4))[0]
                    vw7lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lj = unpack("<f", f.read(4))[0]
                    vy8lj = unpack("<f", f.read(4))[0]
                    vz8lj = unpack("<f", f.read(4))[0]
                    vw8lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lj = unpack("<f", f.read(4))[0]
                    vy9lj = unpack("<f", f.read(4))[0]
                    vz9lj = unpack("<f", f.read(4))[0]
                    vw9lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lj = unpack("<f", f.read(4))[0]
                    vy10lj = unpack("<f", f.read(4))[0]
                    vz10lj = unpack("<f", f.read(4))[0]
                    vw10lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lj = unpack("<f", f.read(4))[0]
                    vy11lj = unpack("<f", f.read(4))[0]
                    vz11lj = unpack("<f", f.read(4))[0]
                    vw11lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lj = unpack("<f", f.read(4))[0]
                    vy12lj = unpack("<f", f.read(4))[0]
                    vz12lj = unpack("<f", f.read(4))[0]
                    vw12lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lj = unpack("<f", f.read(4))[0]
                    vy13lj = unpack("<f", f.read(4))[0]
                    vz13lj = unpack("<f", f.read(4))[0]
                    vw13lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lj = unpack("<f", f.read(4))[0]
                    vy14lj = unpack("<f", f.read(4))[0]
                    vz14lj = unpack("<f", f.read(4))[0]
                    vw14lj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lj = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lk = unpack("<f", f.read(4))[0]
                    vy1lk = unpack("<f", f.read(4))[0]
                    vz1lk = unpack("<f", f.read(4))[0]
                    vw1lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lk = unpack("<f", f.read(4))[0]
                    vy2lk = unpack("<f", f.read(4))[0]
                    vz2lk = unpack("<f", f.read(4))[0]
                    vw2lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lk = unpack("<f", f.read(4))[0]
                    vy3lk = unpack("<f", f.read(4))[0]
                    vz3lk = unpack("<f", f.read(4))[0]
                    vw3lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lk = unpack("<f", f.read(4))[0]
                    vy4lk = unpack("<f", f.read(4))[0]
                    vz4lk = unpack("<f", f.read(4))[0]
                    vw4lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lk = unpack("<f", f.read(4))[0]
                    vy5lk = unpack("<f", f.read(4))[0]
                    vz5lk = unpack("<f", f.read(4))[0]
                    vw5lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lk = unpack("<f", f.read(4))[0]
                    vy6lk = unpack("<f", f.read(4))[0]
                    vz6lk = unpack("<f", f.read(4))[0]
                    vw6lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lk = unpack("<f", f.read(4))[0]
                    vy7lk = unpack("<f", f.read(4))[0]
                    vz7lk = unpack("<f", f.read(4))[0]
                    vw7lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lk = unpack("<f", f.read(4))[0]
                    vy8lk = unpack("<f", f.read(4))[0]
                    vz8lk = unpack("<f", f.read(4))[0]
                    vw8lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lk = unpack("<f", f.read(4))[0]
                    vy9lk = unpack("<f", f.read(4))[0]
                    vz9lk = unpack("<f", f.read(4))[0]
                    vw9lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lk = unpack("<f", f.read(4))[0]
                    vy10lk = unpack("<f", f.read(4))[0]
                    vz10lk = unpack("<f", f.read(4))[0]
                    vw10lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lk = unpack("<f", f.read(4))[0]
                    vy11lk = unpack("<f", f.read(4))[0]
                    vz11lk = unpack("<f", f.read(4))[0]
                    vw11lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lk = unpack("<f", f.read(4))[0]
                    vy12lk = unpack("<f", f.read(4))[0]
                    vz12lk = unpack("<f", f.read(4))[0]
                    vw12lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lk = unpack("<f", f.read(4))[0]
                    vy13lk = unpack("<f", f.read(4))[0]
                    vz13lk = unpack("<f", f.read(4))[0]
                    vw13lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lk = unpack("<f", f.read(4))[0]
                    vy14lk = unpack("<f", f.read(4))[0]
                    vz14lk = unpack("<f", f.read(4))[0]
                    vw14lk = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lk = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1ll = unpack("<f", f.read(4))[0]
                    vy1ll = unpack("<f", f.read(4))[0]
                    vz1ll = unpack("<f", f.read(4))[0]
                    vw1ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ll = unpack("<f", f.read(4))[0]
                    vy2ll = unpack("<f", f.read(4))[0]
                    vz2ll = unpack("<f", f.read(4))[0]
                    vw2ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ll = unpack("<f", f.read(4))[0]
                    vy3ll = unpack("<f", f.read(4))[0]
                    vz3ll = unpack("<f", f.read(4))[0]
                    vw3ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ll = unpack("<f", f.read(4))[0]
                    vy4ll = unpack("<f", f.read(4))[0]
                    vz4ll = unpack("<f", f.read(4))[0]
                    vw4ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ll = unpack("<f", f.read(4))[0]
                    vy5ll = unpack("<f", f.read(4))[0]
                    vz5ll = unpack("<f", f.read(4))[0]
                    vw5ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ll = unpack("<f", f.read(4))[0]
                    vy6ll = unpack("<f", f.read(4))[0]
                    vz6ll = unpack("<f", f.read(4))[0]
                    vw6ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ll = unpack("<f", f.read(4))[0]
                    vy7ll = unpack("<f", f.read(4))[0]
                    vz7ll = unpack("<f", f.read(4))[0]
                    vw7ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ll = unpack("<f", f.read(4))[0]
                    vy8ll = unpack("<f", f.read(4))[0]
                    vz8ll = unpack("<f", f.read(4))[0]
                    vw8ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ll = unpack("<f", f.read(4))[0]
                    vy9ll = unpack("<f", f.read(4))[0]
                    vz9ll = unpack("<f", f.read(4))[0]
                    vw9ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ll = unpack("<f", f.read(4))[0]
                    vy10ll = unpack("<f", f.read(4))[0]
                    vz10ll = unpack("<f", f.read(4))[0]
                    vw10ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ll = unpack("<f", f.read(4))[0]
                    vy11ll = unpack("<f", f.read(4))[0]
                    vz11ll = unpack("<f", f.read(4))[0]
                    vw11ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ll = unpack("<f", f.read(4))[0]
                    vy12ll = unpack("<f", f.read(4))[0]
                    vz12ll = unpack("<f", f.read(4))[0]
                    vw12ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ll = unpack("<f", f.read(4))[0]
                    vy13ll = unpack("<f", f.read(4))[0]
                    vz13ll = unpack("<f", f.read(4))[0]
                    vw13ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14ll = unpack("<f", f.read(4))[0]
                    vy14ll = unpack("<f", f.read(4))[0]
                    vz14ll = unpack("<f", f.read(4))[0]
                    vw14ll = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14ll = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lm = unpack("<f", f.read(4))[0]
                    vy1lm = unpack("<f", f.read(4))[0]
                    vz1lm = unpack("<f", f.read(4))[0]
                    vw1lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lm = unpack("<f", f.read(4))[0]
                    vy2lm = unpack("<f", f.read(4))[0]
                    vz2lm = unpack("<f", f.read(4))[0]
                    vw2lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lm = unpack("<f", f.read(4))[0]
                    vy3lm = unpack("<f", f.read(4))[0]
                    vz3lm = unpack("<f", f.read(4))[0]
                    vw3lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lm = unpack("<f", f.read(4))[0]
                    vy4lm = unpack("<f", f.read(4))[0]
                    vz4lm = unpack("<f", f.read(4))[0]
                    vw4lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lm = unpack("<f", f.read(4))[0]
                    vy5lm = unpack("<f", f.read(4))[0]
                    vz5lm = unpack("<f", f.read(4))[0]
                    vw5lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lm = unpack("<f", f.read(4))[0]
                    vy6lm = unpack("<f", f.read(4))[0]
                    vz6lm = unpack("<f", f.read(4))[0]
                    vw6lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lm = unpack("<f", f.read(4))[0]
                    vy7lm = unpack("<f", f.read(4))[0]
                    vz7lm = unpack("<f", f.read(4))[0]
                    vw7lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lm = unpack("<f", f.read(4))[0]
                    vy8lm = unpack("<f", f.read(4))[0]
                    vz8lm = unpack("<f", f.read(4))[0]
                    vw8lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lm = unpack("<f", f.read(4))[0]
                    vy9lm = unpack("<f", f.read(4))[0]
                    vz9lm = unpack("<f", f.read(4))[0]
                    vw9lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lm = unpack("<f", f.read(4))[0]
                    vy10lm = unpack("<f", f.read(4))[0]
                    vz10lm = unpack("<f", f.read(4))[0]
                    vw10lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lm = unpack("<f", f.read(4))[0]
                    vy11lm = unpack("<f", f.read(4))[0]
                    vz11lm = unpack("<f", f.read(4))[0]
                    vw11lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lm = unpack("<f", f.read(4))[0]
                    vy12lm = unpack("<f", f.read(4))[0]
                    vz12lm = unpack("<f", f.read(4))[0]
                    vw12lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lm = unpack("<f", f.read(4))[0]
                    vy13lm = unpack("<f", f.read(4))[0]
                    vz13lm = unpack("<f", f.read(4))[0]
                    vw13lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lm = unpack("<f", f.read(4))[0]
                    vy14lm = unpack("<f", f.read(4))[0]
                    vz14lm = unpack("<f", f.read(4))[0]
                    vw14lm = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lm = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1ln = unpack("<f", f.read(4))[0]
                    vy1ln = unpack("<f", f.read(4))[0]
                    vz1ln = unpack("<f", f.read(4))[0]
                    vw1ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ln = unpack("<f", f.read(4))[0]
                    vy2ln = unpack("<f", f.read(4))[0]
                    vz2ln = unpack("<f", f.read(4))[0]
                    vw2ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ln = unpack("<f", f.read(4))[0]
                    vy3ln = unpack("<f", f.read(4))[0]
                    vz3ln = unpack("<f", f.read(4))[0]
                    vw3ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ln = unpack("<f", f.read(4))[0]
                    vy4ln = unpack("<f", f.read(4))[0]
                    vz4ln = unpack("<f", f.read(4))[0]
                    vw4ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ln = unpack("<f", f.read(4))[0]
                    vy5ln = unpack("<f", f.read(4))[0]
                    vz5ln = unpack("<f", f.read(4))[0]
                    vw5ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ln = unpack("<f", f.read(4))[0]
                    vy6ln = unpack("<f", f.read(4))[0]
                    vz6ln = unpack("<f", f.read(4))[0]
                    vw6ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ln = unpack("<f", f.read(4))[0]
                    vy7ln = unpack("<f", f.read(4))[0]
                    vz7ln = unpack("<f", f.read(4))[0]
                    vw7ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ln = unpack("<f", f.read(4))[0]
                    vy8ln = unpack("<f", f.read(4))[0]
                    vz8ln = unpack("<f", f.read(4))[0]
                    vw8ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ln = unpack("<f", f.read(4))[0]
                    vy9ln = unpack("<f", f.read(4))[0]
                    vz9ln = unpack("<f", f.read(4))[0]
                    vw9ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ln = unpack("<f", f.read(4))[0]
                    vy10ln = unpack("<f", f.read(4))[0]
                    vz10ln = unpack("<f", f.read(4))[0]
                    vw10ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ln = unpack("<f", f.read(4))[0]
                    vy11ln = unpack("<f", f.read(4))[0]
                    vz11ln = unpack("<f", f.read(4))[0]
                    vw11ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ln = unpack("<f", f.read(4))[0]
                    vy12ln = unpack("<f", f.read(4))[0]
                    vz12ln = unpack("<f", f.read(4))[0]
                    vw12ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ln = unpack("<f", f.read(4))[0]
                    vy13ln = unpack("<f", f.read(4))[0]
                    vz13ln = unpack("<f", f.read(4))[0]
                    vw13ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14ln = unpack("<f", f.read(4))[0]
                    vy14ln = unpack("<f", f.read(4))[0]
                    vz14ln = unpack("<f", f.read(4))[0]
                    vw14ln = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14ln = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lo = unpack("<f", f.read(4))[0]
                    vy1lo = unpack("<f", f.read(4))[0]
                    vz1lo = unpack("<f", f.read(4))[0]
                    vw1lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lo = unpack("<f", f.read(4))[0]
                    vy2lo = unpack("<f", f.read(4))[0]
                    vz2lo = unpack("<f", f.read(4))[0]
                    vw2lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lo = unpack("<f", f.read(4))[0]
                    vy3lo = unpack("<f", f.read(4))[0]
                    vz3lo = unpack("<f", f.read(4))[0]
                    vw3lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lo = unpack("<f", f.read(4))[0]
                    vy4lo = unpack("<f", f.read(4))[0]
                    vz4lo = unpack("<f", f.read(4))[0]
                    vw4lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lo = unpack("<f", f.read(4))[0]
                    vy5lo = unpack("<f", f.read(4))[0]
                    vz5lo = unpack("<f", f.read(4))[0]
                    vw5lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lo = unpack("<f", f.read(4))[0]
                    vy6lo = unpack("<f", f.read(4))[0]
                    vz6lo = unpack("<f", f.read(4))[0]
                    vw6lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lo = unpack("<f", f.read(4))[0]
                    vy7lo = unpack("<f", f.read(4))[0]
                    vz7lo = unpack("<f", f.read(4))[0]
                    vw7lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lo = unpack("<f", f.read(4))[0]
                    vy8lo = unpack("<f", f.read(4))[0]
                    vz8lo = unpack("<f", f.read(4))[0]
                    vw8lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lo = unpack("<f", f.read(4))[0]
                    vy9lo = unpack("<f", f.read(4))[0]
                    vz9lo = unpack("<f", f.read(4))[0]
                    vw9lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lo = unpack("<f", f.read(4))[0]
                    vy10lo = unpack("<f", f.read(4))[0]
                    vz10lo = unpack("<f", f.read(4))[0]
                    vw10lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lo = unpack("<f", f.read(4))[0]
                    vy11lo = unpack("<f", f.read(4))[0]
                    vz11lo = unpack("<f", f.read(4))[0]
                    vw11lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lo = unpack("<f", f.read(4))[0]
                    vy12lo = unpack("<f", f.read(4))[0]
                    vz12lo = unpack("<f", f.read(4))[0]
                    vw12lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lo = unpack("<f", f.read(4))[0]
                    vy13lo = unpack("<f", f.read(4))[0]
                    vz13lo = unpack("<f", f.read(4))[0]
                    vw13lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lo = unpack("<f", f.read(4))[0]
                    vy14lo = unpack("<f", f.read(4))[0]
                    vz14lo = unpack("<f", f.read(4))[0]
                    vw14lo = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lo = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lp = unpack("<f", f.read(4))[0]
                    vy1lp = unpack("<f", f.read(4))[0]
                    vz1lp = unpack("<f", f.read(4))[0]
                    vw1lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lp = unpack("<f", f.read(4))[0]
                    vy2lp = unpack("<f", f.read(4))[0]
                    vz2lp = unpack("<f", f.read(4))[0]
                    vw2lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lp = unpack("<f", f.read(4))[0]
                    vy3lp = unpack("<f", f.read(4))[0]
                    vz3lp = unpack("<f", f.read(4))[0]
                    vw3lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lp = unpack("<f", f.read(4))[0]
                    vy4lp = unpack("<f", f.read(4))[0]
                    vz4lp = unpack("<f", f.read(4))[0]
                    vw4lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lp = unpack("<f", f.read(4))[0]
                    vy5lp = unpack("<f", f.read(4))[0]
                    vz5lp = unpack("<f", f.read(4))[0]
                    vw5lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lp = unpack("<f", f.read(4))[0]
                    vy6lp = unpack("<f", f.read(4))[0]
                    vz6lp = unpack("<f", f.read(4))[0]
                    vw6lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lp = unpack("<f", f.read(4))[0]
                    vy7lp = unpack("<f", f.read(4))[0]
                    vz7lp = unpack("<f", f.read(4))[0]
                    vw7lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lp = unpack("<f", f.read(4))[0]
                    vy8lp = unpack("<f", f.read(4))[0]
                    vz8lp = unpack("<f", f.read(4))[0]
                    vw8lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lp = unpack("<f", f.read(4))[0]
                    vy9lp = unpack("<f", f.read(4))[0]
                    vz9lp = unpack("<f", f.read(4))[0]
                    vw9lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lp = unpack("<f", f.read(4))[0]
                    vy10lp = unpack("<f", f.read(4))[0]
                    vz10lp = unpack("<f", f.read(4))[0]
                    vw10lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lp = unpack("<f", f.read(4))[0]
                    vy11lp = unpack("<f", f.read(4))[0]
                    vz11lp = unpack("<f", f.read(4))[0]
                    vw11lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lp = unpack("<f", f.read(4))[0]
                    vy12lp = unpack("<f", f.read(4))[0]
                    vz12lp = unpack("<f", f.read(4))[0]
                    vw12lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lp = unpack("<f", f.read(4))[0]
                    vy13lp = unpack("<f", f.read(4))[0]
                    vz13lp = unpack("<f", f.read(4))[0]
                    vw13lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lp = unpack("<f", f.read(4))[0]
                    vy14lp = unpack("<f", f.read(4))[0]
                    vz14lp = unpack("<f", f.read(4))[0]
                    vw14lp = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lp = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lq = unpack("<f", f.read(4))[0]
                    vy1lq = unpack("<f", f.read(4))[0]
                    vz1lq = unpack("<f", f.read(4))[0]
                    vw1lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lq = unpack("<f", f.read(4))[0]
                    vy2lq = unpack("<f", f.read(4))[0]
                    vz2lq = unpack("<f", f.read(4))[0]
                    vw2lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lq = unpack("<f", f.read(4))[0]
                    vy3lq = unpack("<f", f.read(4))[0]
                    vz3lq = unpack("<f", f.read(4))[0]
                    vw3lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lq = unpack("<f", f.read(4))[0]
                    vy4lq = unpack("<f", f.read(4))[0]
                    vz4lq = unpack("<f", f.read(4))[0]
                    vw4lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lq = unpack("<f", f.read(4))[0]
                    vy5lq = unpack("<f", f.read(4))[0]
                    vz5lq = unpack("<f", f.read(4))[0]
                    vw5lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lq = unpack("<f", f.read(4))[0]
                    vy6lq = unpack("<f", f.read(4))[0]
                    vz6lq = unpack("<f", f.read(4))[0]
                    vw6lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lq = unpack("<f", f.read(4))[0]
                    vy7lq = unpack("<f", f.read(4))[0]
                    vz7lq = unpack("<f", f.read(4))[0]
                    vw7lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lq = unpack("<f", f.read(4))[0]
                    vy8lq = unpack("<f", f.read(4))[0]
                    vz8lq = unpack("<f", f.read(4))[0]
                    vw8lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lq = unpack("<f", f.read(4))[0]
                    vy9lq = unpack("<f", f.read(4))[0]
                    vz9lq = unpack("<f", f.read(4))[0]
                    vw9lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lq = unpack("<f", f.read(4))[0]
                    vy10lq = unpack("<f", f.read(4))[0]
                    vz10lq = unpack("<f", f.read(4))[0]
                    vw10lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lq = unpack("<f", f.read(4))[0]
                    vy11lq = unpack("<f", f.read(4))[0]
                    vz11lq = unpack("<f", f.read(4))[0]
                    vw11lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lq = unpack("<f", f.read(4))[0]
                    vy12lq = unpack("<f", f.read(4))[0]
                    vz12lq = unpack("<f", f.read(4))[0]
                    vw12lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lq = unpack("<f", f.read(4))[0]
                    vy13lq = unpack("<f", f.read(4))[0]
                    vz13lq = unpack("<f", f.read(4))[0]
                    vw13lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lq = unpack("<f", f.read(4))[0]
                    vy14lq = unpack("<f", f.read(4))[0]
                    vz14lq = unpack("<f", f.read(4))[0]
                    vw14lq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lq = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lr = unpack("<f", f.read(4))[0]
                    vy1lr = unpack("<f", f.read(4))[0]
                    vz1lr = unpack("<f", f.read(4))[0]
                    vw1lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lr = unpack("<f", f.read(4))[0]
                    vy2lr = unpack("<f", f.read(4))[0]
                    vz2lr = unpack("<f", f.read(4))[0]
                    vw2lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lr = unpack("<f", f.read(4))[0]
                    vy3lr = unpack("<f", f.read(4))[0]
                    vz3lr = unpack("<f", f.read(4))[0]
                    vw3lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lr = unpack("<f", f.read(4))[0]
                    vy4lr = unpack("<f", f.read(4))[0]
                    vz4lr = unpack("<f", f.read(4))[0]
                    vw4lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lr = unpack("<f", f.read(4))[0]
                    vy5lr = unpack("<f", f.read(4))[0]
                    vz5lr = unpack("<f", f.read(4))[0]
                    vw5lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lr = unpack("<f", f.read(4))[0]
                    vy6lr = unpack("<f", f.read(4))[0]
                    vz6lr = unpack("<f", f.read(4))[0]
                    vw6lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lr = unpack("<f", f.read(4))[0]
                    vy7lr = unpack("<f", f.read(4))[0]
                    vz7lr = unpack("<f", f.read(4))[0]
                    vw7lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lr = unpack("<f", f.read(4))[0]
                    vy8lr = unpack("<f", f.read(4))[0]
                    vz8lr = unpack("<f", f.read(4))[0]
                    vw8lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lr = unpack("<f", f.read(4))[0]
                    vy9lr = unpack("<f", f.read(4))[0]
                    vz9lr = unpack("<f", f.read(4))[0]
                    vw9lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lr = unpack("<f", f.read(4))[0]
                    vy10lr = unpack("<f", f.read(4))[0]
                    vz10lr = unpack("<f", f.read(4))[0]
                    vw10lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lr = unpack("<f", f.read(4))[0]
                    vy11lr = unpack("<f", f.read(4))[0]
                    vz11lr = unpack("<f", f.read(4))[0]
                    vw11lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lr = unpack("<f", f.read(4))[0]
                    vy12lr = unpack("<f", f.read(4))[0]
                    vz12lr = unpack("<f", f.read(4))[0]
                    vw12lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lr = unpack("<f", f.read(4))[0]
                    vy13lr = unpack("<f", f.read(4))[0]
                    vz13lr = unpack("<f", f.read(4))[0]
                    vw13lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lr = unpack("<f", f.read(4))[0]
                    vy14lr = unpack("<f", f.read(4))[0]
                    vz14lr = unpack("<f", f.read(4))[0]
                    vw14lr = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lr = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1ls = unpack("<f", f.read(4))[0]
                    vy1ls = unpack("<f", f.read(4))[0]
                    vz1ls = unpack("<f", f.read(4))[0]
                    vw1ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ls = unpack("<f", f.read(4))[0]
                    vy2ls = unpack("<f", f.read(4))[0]
                    vz2ls = unpack("<f", f.read(4))[0]
                    vw2ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ls = unpack("<f", f.read(4))[0]
                    vy3ls = unpack("<f", f.read(4))[0]
                    vz3ls = unpack("<f", f.read(4))[0]
                    vw3ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ls = unpack("<f", f.read(4))[0]
                    vy4ls = unpack("<f", f.read(4))[0]
                    vz4ls = unpack("<f", f.read(4))[0]
                    vw4ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ls = unpack("<f", f.read(4))[0]
                    vy5ls = unpack("<f", f.read(4))[0]
                    vz5ls = unpack("<f", f.read(4))[0]
                    vw5ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ls = unpack("<f", f.read(4))[0]
                    vy6ls = unpack("<f", f.read(4))[0]
                    vz6ls = unpack("<f", f.read(4))[0]
                    vw6ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ls = unpack("<f", f.read(4))[0]
                    vy7ls = unpack("<f", f.read(4))[0]
                    vz7ls = unpack("<f", f.read(4))[0]
                    vw7ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ls = unpack("<f", f.read(4))[0]
                    vy8ls = unpack("<f", f.read(4))[0]
                    vz8ls = unpack("<f", f.read(4))[0]
                    vw8ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ls = unpack("<f", f.read(4))[0]
                    vy9ls = unpack("<f", f.read(4))[0]
                    vz9ls = unpack("<f", f.read(4))[0]
                    vw9ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ls = unpack("<f", f.read(4))[0]
                    vy10ls = unpack("<f", f.read(4))[0]
                    vz10ls = unpack("<f", f.read(4))[0]
                    vw10ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ls = unpack("<f", f.read(4))[0]
                    vy11ls = unpack("<f", f.read(4))[0]
                    vz11ls = unpack("<f", f.read(4))[0]
                    vw11ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ls = unpack("<f", f.read(4))[0]
                    vy12ls = unpack("<f", f.read(4))[0]
                    vz12ls = unpack("<f", f.read(4))[0]
                    vw12ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ls = unpack("<f", f.read(4))[0]
                    vy13ls = unpack("<f", f.read(4))[0]
                    vz13ls = unpack("<f", f.read(4))[0]
                    vw13ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14ls = unpack("<f", f.read(4))[0]
                    vy14ls = unpack("<f", f.read(4))[0]
                    vz14ls = unpack("<f", f.read(4))[0]
                    vw14ls = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14ls = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lt = unpack("<f", f.read(4))[0]
                    vy1lt = unpack("<f", f.read(4))[0]
                    vz1lt = unpack("<f", f.read(4))[0]
                    vw1lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lt = unpack("<f", f.read(4))[0]
                    vy2lt = unpack("<f", f.read(4))[0]
                    vz2lt = unpack("<f", f.read(4))[0]
                    vw2lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lt = unpack("<f", f.read(4))[0]
                    vy3lt = unpack("<f", f.read(4))[0]
                    vz3lt = unpack("<f", f.read(4))[0]
                    vw3lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lt = unpack("<f", f.read(4))[0]
                    vy4lt = unpack("<f", f.read(4))[0]
                    vz4lt = unpack("<f", f.read(4))[0]
                    vw4lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lt = unpack("<f", f.read(4))[0]
                    vy5lt = unpack("<f", f.read(4))[0]
                    vz5lt = unpack("<f", f.read(4))[0]
                    vw5lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lt = unpack("<f", f.read(4))[0]
                    vy6lt = unpack("<f", f.read(4))[0]
                    vz6lt = unpack("<f", f.read(4))[0]
                    vw6lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lt = unpack("<f", f.read(4))[0]
                    vy7lt = unpack("<f", f.read(4))[0]
                    vz7lt = unpack("<f", f.read(4))[0]
                    vw7lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lt = unpack("<f", f.read(4))[0]
                    vy8lt = unpack("<f", f.read(4))[0]
                    vz8lt = unpack("<f", f.read(4))[0]
                    vw8lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lt = unpack("<f", f.read(4))[0]
                    vy9lt = unpack("<f", f.read(4))[0]
                    vz9lt = unpack("<f", f.read(4))[0]
                    vw9lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lt = unpack("<f", f.read(4))[0]
                    vy10lt = unpack("<f", f.read(4))[0]
                    vz10lt = unpack("<f", f.read(4))[0]
                    vw10lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lt = unpack("<f", f.read(4))[0]
                    vy11lt = unpack("<f", f.read(4))[0]
                    vz11lt = unpack("<f", f.read(4))[0]
                    vw11lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lt = unpack("<f", f.read(4))[0]
                    vy12lt = unpack("<f", f.read(4))[0]
                    vz12lt = unpack("<f", f.read(4))[0]
                    vw12lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lt = unpack("<f", f.read(4))[0]
                    vy13lt = unpack("<f", f.read(4))[0]
                    vz13lt = unpack("<f", f.read(4))[0]
                    vw13lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lt = unpack("<f", f.read(4))[0]
                    vy14lt = unpack("<f", f.read(4))[0]
                    vz14lt = unpack("<f", f.read(4))[0]
                    vw14lt = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lt = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lu = unpack("<f", f.read(4))[0]
                    vy1lu = unpack("<f", f.read(4))[0]
                    vz1lu = unpack("<f", f.read(4))[0]
                    vw1lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lu = unpack("<f", f.read(4))[0]
                    vy2lu = unpack("<f", f.read(4))[0]
                    vz2lu = unpack("<f", f.read(4))[0]
                    vw2lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lu = unpack("<f", f.read(4))[0]
                    vy3lu = unpack("<f", f.read(4))[0]
                    vz3lu = unpack("<f", f.read(4))[0]
                    vw3lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lu = unpack("<f", f.read(4))[0]
                    vy4lu = unpack("<f", f.read(4))[0]
                    vz4lu = unpack("<f", f.read(4))[0]
                    vw4lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lu = unpack("<f", f.read(4))[0]
                    vy5lu = unpack("<f", f.read(4))[0]
                    vz5lu = unpack("<f", f.read(4))[0]
                    vw5lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lu = unpack("<f", f.read(4))[0]
                    vy6lu = unpack("<f", f.read(4))[0]
                    vz6lu = unpack("<f", f.read(4))[0]
                    vw6lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lu = unpack("<f", f.read(4))[0]
                    vy7lu = unpack("<f", f.read(4))[0]
                    vz7lu = unpack("<f", f.read(4))[0]
                    vw7lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lu = unpack("<f", f.read(4))[0]
                    vy8lu = unpack("<f", f.read(4))[0]
                    vz8lu = unpack("<f", f.read(4))[0]
                    vw8lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lu = unpack("<f", f.read(4))[0]
                    vy9lu = unpack("<f", f.read(4))[0]
                    vz9lu = unpack("<f", f.read(4))[0]
                    vw9lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lu = unpack("<f", f.read(4))[0]
                    vy10lu = unpack("<f", f.read(4))[0]
                    vz10lu = unpack("<f", f.read(4))[0]
                    vw10lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lu = unpack("<f", f.read(4))[0]
                    vy11lu = unpack("<f", f.read(4))[0]
                    vz11lu = unpack("<f", f.read(4))[0]
                    vw11lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lu = unpack("<f", f.read(4))[0]
                    vy12lu = unpack("<f", f.read(4))[0]
                    vz12lu = unpack("<f", f.read(4))[0]
                    vw12lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lu = unpack("<f", f.read(4))[0]
                    vy13lu = unpack("<f", f.read(4))[0]
                    vz13lu = unpack("<f", f.read(4))[0]
                    vw13lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lu = unpack("<f", f.read(4))[0]
                    vy14lu = unpack("<f", f.read(4))[0]
                    vz14lu = unpack("<f", f.read(4))[0]
                    vw14lu = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lu = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lv = unpack("<f", f.read(4))[0]
                    vy1lv = unpack("<f", f.read(4))[0]
                    vz1lv = unpack("<f", f.read(4))[0]
                    vw1lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lv = unpack("<f", f.read(4))[0]
                    vy2lv = unpack("<f", f.read(4))[0]
                    vz2lv = unpack("<f", f.read(4))[0]
                    vw2lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lv = unpack("<f", f.read(4))[0]
                    vy3lv = unpack("<f", f.read(4))[0]
                    vz3lv = unpack("<f", f.read(4))[0]
                    vw3lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lv = unpack("<f", f.read(4))[0]
                    vy4lv = unpack("<f", f.read(4))[0]
                    vz4lv = unpack("<f", f.read(4))[0]
                    vw4lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lv = unpack("<f", f.read(4))[0]
                    vy5lv = unpack("<f", f.read(4))[0]
                    vz5lv = unpack("<f", f.read(4))[0]
                    vw5lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lv = unpack("<f", f.read(4))[0]
                    vy6lv = unpack("<f", f.read(4))[0]
                    vz6lv = unpack("<f", f.read(4))[0]
                    vw6lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lv = unpack("<f", f.read(4))[0]
                    vy7lv = unpack("<f", f.read(4))[0]
                    vz7lv = unpack("<f", f.read(4))[0]
                    vw7lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lv = unpack("<f", f.read(4))[0]
                    vy8lv = unpack("<f", f.read(4))[0]
                    vz8lv = unpack("<f", f.read(4))[0]
                    vw8lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lv = unpack("<f", f.read(4))[0]
                    vy9lv = unpack("<f", f.read(4))[0]
                    vz9lv = unpack("<f", f.read(4))[0]
                    vw9lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lv = unpack("<f", f.read(4))[0]
                    vy10lv = unpack("<f", f.read(4))[0]
                    vz10lv = unpack("<f", f.read(4))[0]
                    vw10lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lv = unpack("<f", f.read(4))[0]
                    vy11lv = unpack("<f", f.read(4))[0]
                    vz11lv = unpack("<f", f.read(4))[0]
                    vw11lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lv = unpack("<f", f.read(4))[0]
                    vy12lv = unpack("<f", f.read(4))[0]
                    vz12lv = unpack("<f", f.read(4))[0]
                    vw12lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lv = unpack("<f", f.read(4))[0]
                    vy13lv = unpack("<f", f.read(4))[0]
                    vz13lv = unpack("<f", f.read(4))[0]
                    vw13lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lv = unpack("<f", f.read(4))[0]
                    vy14lv = unpack("<f", f.read(4))[0]
                    vz14lv = unpack("<f", f.read(4))[0]
                    vw14lv = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lv = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lw = unpack("<f", f.read(4))[0]
                    vy1lw = unpack("<f", f.read(4))[0]
                    vz1lw = unpack("<f", f.read(4))[0]
                    vw1lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lw = unpack("<f", f.read(4))[0]
                    vy2lw = unpack("<f", f.read(4))[0]
                    vz2lw = unpack("<f", f.read(4))[0]
                    vw2lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lw = unpack("<f", f.read(4))[0]
                    vy3lw = unpack("<f", f.read(4))[0]
                    vz3lw = unpack("<f", f.read(4))[0]
                    vw3lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lw = unpack("<f", f.read(4))[0]
                    vy4lw = unpack("<f", f.read(4))[0]
                    vz4lw = unpack("<f", f.read(4))[0]
                    vw4lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lw = unpack("<f", f.read(4))[0]
                    vy5lw = unpack("<f", f.read(4))[0]
                    vz5lw = unpack("<f", f.read(4))[0]
                    vw5lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lw = unpack("<f", f.read(4))[0]
                    vy6lw = unpack("<f", f.read(4))[0]
                    vz6lw = unpack("<f", f.read(4))[0]
                    vw6lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lw = unpack("<f", f.read(4))[0]
                    vy7lw = unpack("<f", f.read(4))[0]
                    vz7lw = unpack("<f", f.read(4))[0]
                    vw7lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lw = unpack("<f", f.read(4))[0]
                    vy8lw = unpack("<f", f.read(4))[0]
                    vz8lw = unpack("<f", f.read(4))[0]
                    vw8lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lw = unpack("<f", f.read(4))[0]
                    vy9lw = unpack("<f", f.read(4))[0]
                    vz9lw = unpack("<f", f.read(4))[0]
                    vw9lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lw = unpack("<f", f.read(4))[0]
                    vy10lw = unpack("<f", f.read(4))[0]
                    vz10lw = unpack("<f", f.read(4))[0]
                    vw10lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lw = unpack("<f", f.read(4))[0]
                    vy11lw = unpack("<f", f.read(4))[0]
                    vz11lw = unpack("<f", f.read(4))[0]
                    vw11lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lw = unpack("<f", f.read(4))[0]
                    vy12lw = unpack("<f", f.read(4))[0]
                    vz12lw = unpack("<f", f.read(4))[0]
                    vw12lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lw = unpack("<f", f.read(4))[0]
                    vy13lw = unpack("<f", f.read(4))[0]
                    vz13lw = unpack("<f", f.read(4))[0]
                    vw13lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lw = unpack("<f", f.read(4))[0]
                    vy14lw = unpack("<f", f.read(4))[0]
                    vz14lw = unpack("<f", f.read(4))[0]
                    vw14lw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lw = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lx = unpack("<f", f.read(4))[0]
                    vy1lx = unpack("<f", f.read(4))[0]
                    vz1lx = unpack("<f", f.read(4))[0]
                    vw1lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lx = unpack("<f", f.read(4))[0]
                    vy2lx = unpack("<f", f.read(4))[0]
                    vz2lx = unpack("<f", f.read(4))[0]
                    vw2lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lx = unpack("<f", f.read(4))[0]
                    vy3lx = unpack("<f", f.read(4))[0]
                    vz3lx = unpack("<f", f.read(4))[0]
                    vw3lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lx = unpack("<f", f.read(4))[0]
                    vy4lx = unpack("<f", f.read(4))[0]
                    vz4lx = unpack("<f", f.read(4))[0]
                    vw4lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lx = unpack("<f", f.read(4))[0]
                    vy5lx = unpack("<f", f.read(4))[0]
                    vz5lx = unpack("<f", f.read(4))[0]
                    vw5lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lx = unpack("<f", f.read(4))[0]
                    vy6lx = unpack("<f", f.read(4))[0]
                    vz6lx = unpack("<f", f.read(4))[0]
                    vw6lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lx = unpack("<f", f.read(4))[0]
                    vy7lx = unpack("<f", f.read(4))[0]
                    vz7lx = unpack("<f", f.read(4))[0]
                    vw7lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lx = unpack("<f", f.read(4))[0]
                    vy8lx = unpack("<f", f.read(4))[0]
                    vz8lx = unpack("<f", f.read(4))[0]
                    vw8lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lx = unpack("<f", f.read(4))[0]
                    vy9lx = unpack("<f", f.read(4))[0]
                    vz9lx = unpack("<f", f.read(4))[0]
                    vw9lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lx = unpack("<f", f.read(4))[0]
                    vy10lx = unpack("<f", f.read(4))[0]
                    vz10lx = unpack("<f", f.read(4))[0]
                    vw10lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lx = unpack("<f", f.read(4))[0]
                    vy11lx = unpack("<f", f.read(4))[0]
                    vz11lx = unpack("<f", f.read(4))[0]
                    vw11lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lx = unpack("<f", f.read(4))[0]
                    vy12lx = unpack("<f", f.read(4))[0]
                    vz12lx = unpack("<f", f.read(4))[0]
                    vw12lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lx = unpack("<f", f.read(4))[0]
                    vy13lx = unpack("<f", f.read(4))[0]
                    vz13lx = unpack("<f", f.read(4))[0]
                    vw13lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lx = unpack("<f", f.read(4))[0]
                    vy14lx = unpack("<f", f.read(4))[0]
                    vz14lx = unpack("<f", f.read(4))[0]
                    vw14lx = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lx = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1ly = unpack("<f", f.read(4))[0]
                    vy1ly = unpack("<f", f.read(4))[0]
                    vz1ly = unpack("<f", f.read(4))[0]
                    vw1ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ly = unpack("<f", f.read(4))[0]
                    vy2ly = unpack("<f", f.read(4))[0]
                    vz2ly = unpack("<f", f.read(4))[0]
                    vw2ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ly = unpack("<f", f.read(4))[0]
                    vy3ly = unpack("<f", f.read(4))[0]
                    vz3ly = unpack("<f", f.read(4))[0]
                    vw3ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ly = unpack("<f", f.read(4))[0]
                    vy4ly = unpack("<f", f.read(4))[0]
                    vz4ly = unpack("<f", f.read(4))[0]
                    vw4ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ly = unpack("<f", f.read(4))[0]
                    vy5ly = unpack("<f", f.read(4))[0]
                    vz5ly = unpack("<f", f.read(4))[0]
                    vw5ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ly = unpack("<f", f.read(4))[0]
                    vy6ly = unpack("<f", f.read(4))[0]
                    vz6ly = unpack("<f", f.read(4))[0]
                    vw6ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ly = unpack("<f", f.read(4))[0]
                    vy7ly = unpack("<f", f.read(4))[0]
                    vz7ly = unpack("<f", f.read(4))[0]
                    vw7ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ly = unpack("<f", f.read(4))[0]
                    vy8ly = unpack("<f", f.read(4))[0]
                    vz8ly = unpack("<f", f.read(4))[0]
                    vw8ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ly = unpack("<f", f.read(4))[0]
                    vy9ly = unpack("<f", f.read(4))[0]
                    vz9ly = unpack("<f", f.read(4))[0]
                    vw9ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ly = unpack("<f", f.read(4))[0]
                    vy10ly = unpack("<f", f.read(4))[0]
                    vz10ly = unpack("<f", f.read(4))[0]
                    vw10ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ly = unpack("<f", f.read(4))[0]
                    vy11ly = unpack("<f", f.read(4))[0]
                    vz11ly = unpack("<f", f.read(4))[0]
                    vw11ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ly = unpack("<f", f.read(4))[0]
                    vy12ly = unpack("<f", f.read(4))[0]
                    vz12ly = unpack("<f", f.read(4))[0]
                    vw12ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ly = unpack("<f", f.read(4))[0]
                    vy13ly = unpack("<f", f.read(4))[0]
                    vz13ly = unpack("<f", f.read(4))[0]
                    vw13ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14ly = unpack("<f", f.read(4))[0]
                    vy14ly = unpack("<f", f.read(4))[0]
                    vz14ly = unpack("<f", f.read(4))[0]
                    vw14ly = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14ly = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lz = unpack("<f", f.read(4))[0]
                    vy1lz = unpack("<f", f.read(4))[0]
                    vz1lz = unpack("<f", f.read(4))[0]
                    vw1lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lz = unpack("<f", f.read(4))[0]
                    vy2lz = unpack("<f", f.read(4))[0]
                    vz2lz = unpack("<f", f.read(4))[0]
                    vw2lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lz = unpack("<f", f.read(4))[0]
                    vy3lz = unpack("<f", f.read(4))[0]
                    vz3lz = unpack("<f", f.read(4))[0]
                    vw3lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lz = unpack("<f", f.read(4))[0]
                    vy4lz = unpack("<f", f.read(4))[0]
                    vz4lz = unpack("<f", f.read(4))[0]
                    vw4lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lz = unpack("<f", f.read(4))[0]
                    vy5lz = unpack("<f", f.read(4))[0]
                    vz5lz = unpack("<f", f.read(4))[0]
                    vw5lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lz = unpack("<f", f.read(4))[0]
                    vy6lz = unpack("<f", f.read(4))[0]
                    vz6lz = unpack("<f", f.read(4))[0]
                    vw6lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lz = unpack("<f", f.read(4))[0]
                    vy7lz = unpack("<f", f.read(4))[0]
                    vz7lz = unpack("<f", f.read(4))[0]
                    vw7lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lz = unpack("<f", f.read(4))[0]
                    vy8lz = unpack("<f", f.read(4))[0]
                    vz8lz = unpack("<f", f.read(4))[0]
                    vw8lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lz = unpack("<f", f.read(4))[0]
                    vy9lz = unpack("<f", f.read(4))[0]
                    vz9lz = unpack("<f", f.read(4))[0]
                    vw9lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lz = unpack("<f", f.read(4))[0]
                    vy10lz = unpack("<f", f.read(4))[0]
                    vz10lz = unpack("<f", f.read(4))[0]
                    vw10lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lz = unpack("<f", f.read(4))[0]
                    vy11lz = unpack("<f", f.read(4))[0]
                    vz11lz = unpack("<f", f.read(4))[0]
                    vw11lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lz = unpack("<f", f.read(4))[0]
                    vy12lz = unpack("<f", f.read(4))[0]
                    vz12lz = unpack("<f", f.read(4))[0]
                    vw12lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lz = unpack("<f", f.read(4))[0]
                    vy13lz = unpack("<f", f.read(4))[0]
                    vz13lz = unpack("<f", f.read(4))[0]
                    vw13lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lz = unpack("<f", f.read(4))[0]
                    vy14lz = unpack("<f", f.read(4))[0]
                    vz14lz = unpack("<f", f.read(4))[0]
                    vw14lz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lz = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laa = unpack("<f", f.read(4))[0]
                    vy1laa = unpack("<f", f.read(4))[0]
                    vz1laa = unpack("<f", f.read(4))[0]
                    vw1laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laa = unpack("<f", f.read(4))[0]
                    vy2laa = unpack("<f", f.read(4))[0]
                    vz2laa = unpack("<f", f.read(4))[0]
                    vw2laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laa = unpack("<f", f.read(4))[0]
                    vy3laa = unpack("<f", f.read(4))[0]
                    vz3laa = unpack("<f", f.read(4))[0]
                    vw3laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laa = unpack("<f", f.read(4))[0]
                    vy4laa = unpack("<f", f.read(4))[0]
                    vz4laa = unpack("<f", f.read(4))[0]
                    vw4laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laa = unpack("<f", f.read(4))[0]
                    vy5laa = unpack("<f", f.read(4))[0]
                    vz5laa = unpack("<f", f.read(4))[0]
                    vw5laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laa = unpack("<f", f.read(4))[0]
                    vy6laa = unpack("<f", f.read(4))[0]
                    vz6laa = unpack("<f", f.read(4))[0]
                    vw6laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laa = unpack("<f", f.read(4))[0]
                    vy7laa = unpack("<f", f.read(4))[0]
                    vz7laa = unpack("<f", f.read(4))[0]
                    vw7laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laa = unpack("<f", f.read(4))[0]
                    vy8laa = unpack("<f", f.read(4))[0]
                    vz8laa = unpack("<f", f.read(4))[0]
                    vw8laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laa = unpack("<f", f.read(4))[0]
                    vy9laa = unpack("<f", f.read(4))[0]
                    vz9laa = unpack("<f", f.read(4))[0]
                    vw9laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laa = unpack("<f", f.read(4))[0]
                    vy10laa = unpack("<f", f.read(4))[0]
                    vz10laa = unpack("<f", f.read(4))[0]
                    vw10laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laa = unpack("<f", f.read(4))[0]
                    vy11laa = unpack("<f", f.read(4))[0]
                    vz11laa = unpack("<f", f.read(4))[0]
                    vw11laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laa = unpack("<f", f.read(4))[0]
                    vy12laa = unpack("<f", f.read(4))[0]
                    vz12laa = unpack("<f", f.read(4))[0]
                    vw12laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laa = unpack("<f", f.read(4))[0]
                    vy13laa = unpack("<f", f.read(4))[0]
                    vz13laa = unpack("<f", f.read(4))[0]
                    vw13laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laa = unpack("<f", f.read(4))[0]
                    vy14laa = unpack("<f", f.read(4))[0]
                    vz14laa = unpack("<f", f.read(4))[0]
                    vw14laa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laa = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lab = unpack("<f", f.read(4))[0]
                    vy1lab = unpack("<f", f.read(4))[0]
                    vz1lab = unpack("<f", f.read(4))[0]
                    vw1lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lab = unpack("<f", f.read(4))[0]
                    vy2lab = unpack("<f", f.read(4))[0]
                    vz2lab = unpack("<f", f.read(4))[0]
                    vw2lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lab = unpack("<f", f.read(4))[0]
                    vy3lab = unpack("<f", f.read(4))[0]
                    vz3lab = unpack("<f", f.read(4))[0]
                    vw3lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lab = unpack("<f", f.read(4))[0]
                    vy4lab = unpack("<f", f.read(4))[0]
                    vz4lab = unpack("<f", f.read(4))[0]
                    vw4lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lab = unpack("<f", f.read(4))[0]
                    vy5lab = unpack("<f", f.read(4))[0]
                    vz5lab = unpack("<f", f.read(4))[0]
                    vw5lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lab = unpack("<f", f.read(4))[0]
                    vy6lab = unpack("<f", f.read(4))[0]
                    vz6lab = unpack("<f", f.read(4))[0]
                    vw6lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lab = unpack("<f", f.read(4))[0]
                    vy7lab = unpack("<f", f.read(4))[0]
                    vz7lab = unpack("<f", f.read(4))[0]
                    vw7lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lab = unpack("<f", f.read(4))[0]
                    vy8lab = unpack("<f", f.read(4))[0]
                    vz8lab = unpack("<f", f.read(4))[0]
                    vw8lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lab = unpack("<f", f.read(4))[0]
                    vy9lab = unpack("<f", f.read(4))[0]
                    vz9lab = unpack("<f", f.read(4))[0]
                    vw9lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lab = unpack("<f", f.read(4))[0]
                    vy10lab = unpack("<f", f.read(4))[0]
                    vz10lab = unpack("<f", f.read(4))[0]
                    vw10lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lab = unpack("<f", f.read(4))[0]
                    vy11lab = unpack("<f", f.read(4))[0]
                    vz11lab = unpack("<f", f.read(4))[0]
                    vw11lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lab = unpack("<f", f.read(4))[0]
                    vy12lab = unpack("<f", f.read(4))[0]
                    vz12lab = unpack("<f", f.read(4))[0]
                    vw12lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lab = unpack("<f", f.read(4))[0]
                    vy13lab = unpack("<f", f.read(4))[0]
                    vz13lab = unpack("<f", f.read(4))[0]
                    vw13lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lab = unpack("<f", f.read(4))[0]
                    vy14lab = unpack("<f", f.read(4))[0]
                    vz14lab = unpack("<f", f.read(4))[0]
                    vw14lab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lab = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lac = unpack("<f", f.read(4))[0]
                    vy1lac = unpack("<f", f.read(4))[0]
                    vz1lac = unpack("<f", f.read(4))[0]
                    vw1lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lac = unpack("<f", f.read(4))[0]
                    vy2lac = unpack("<f", f.read(4))[0]
                    vz2lac = unpack("<f", f.read(4))[0]
                    vw2lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lac = unpack("<f", f.read(4))[0]
                    vy3lac = unpack("<f", f.read(4))[0]
                    vz3lac = unpack("<f", f.read(4))[0]
                    vw3lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lac = unpack("<f", f.read(4))[0]
                    vy4lac = unpack("<f", f.read(4))[0]
                    vz4lac = unpack("<f", f.read(4))[0]
                    vw4lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lac = unpack("<f", f.read(4))[0]
                    vy5lac = unpack("<f", f.read(4))[0]
                    vz5lac = unpack("<f", f.read(4))[0]
                    vw5lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lac = unpack("<f", f.read(4))[0]
                    vy6lac = unpack("<f", f.read(4))[0]
                    vz6lac = unpack("<f", f.read(4))[0]
                    vw6lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lac = unpack("<f", f.read(4))[0]
                    vy7lac = unpack("<f", f.read(4))[0]
                    vz7lac = unpack("<f", f.read(4))[0]
                    vw7lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lac = unpack("<f", f.read(4))[0]
                    vy8lac = unpack("<f", f.read(4))[0]
                    vz8lac = unpack("<f", f.read(4))[0]
                    vw8lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lac = unpack("<f", f.read(4))[0]
                    vy9lac = unpack("<f", f.read(4))[0]
                    vz9lac = unpack("<f", f.read(4))[0]
                    vw9lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lac = unpack("<f", f.read(4))[0]
                    vy10lac = unpack("<f", f.read(4))[0]
                    vz10lac = unpack("<f", f.read(4))[0]
                    vw10lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lac = unpack("<f", f.read(4))[0]
                    vy11lac = unpack("<f", f.read(4))[0]
                    vz11lac = unpack("<f", f.read(4))[0]
                    vw11lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lac = unpack("<f", f.read(4))[0]
                    vy12lac = unpack("<f", f.read(4))[0]
                    vz12lac = unpack("<f", f.read(4))[0]
                    vw12lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lac = unpack("<f", f.read(4))[0]
                    vy13lac = unpack("<f", f.read(4))[0]
                    vz13lac = unpack("<f", f.read(4))[0]
                    vw13lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lac = unpack("<f", f.read(4))[0]
                    vy14lac = unpack("<f", f.read(4))[0]
                    vz14lac = unpack("<f", f.read(4))[0]
                    vw14lac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lac = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lad = unpack("<f", f.read(4))[0]
                    vy1lad = unpack("<f", f.read(4))[0]
                    vz1lad = unpack("<f", f.read(4))[0]
                    vw1lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lad = unpack("<f", f.read(4))[0]
                    vy2lad = unpack("<f", f.read(4))[0]
                    vz2lad = unpack("<f", f.read(4))[0]
                    vw2lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lad = unpack("<f", f.read(4))[0]
                    vy3lad = unpack("<f", f.read(4))[0]
                    vz3lad = unpack("<f", f.read(4))[0]
                    vw3lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lad = unpack("<f", f.read(4))[0]
                    vy4lad = unpack("<f", f.read(4))[0]
                    vz4lad = unpack("<f", f.read(4))[0]
                    vw4lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lad = unpack("<f", f.read(4))[0]
                    vy5lad = unpack("<f", f.read(4))[0]
                    vz5lad = unpack("<f", f.read(4))[0]
                    vw5lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lad = unpack("<f", f.read(4))[0]
                    vy6lad = unpack("<f", f.read(4))[0]
                    vz6lad = unpack("<f", f.read(4))[0]
                    vw6lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lad = unpack("<f", f.read(4))[0]
                    vy7lad = unpack("<f", f.read(4))[0]
                    vz7lad = unpack("<f", f.read(4))[0]
                    vw7lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lad = unpack("<f", f.read(4))[0]
                    vy8lad = unpack("<f", f.read(4))[0]
                    vz8lad = unpack("<f", f.read(4))[0]
                    vw8lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lad = unpack("<f", f.read(4))[0]
                    vy9lad = unpack("<f", f.read(4))[0]
                    vz9lad = unpack("<f", f.read(4))[0]
                    vw9lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lad = unpack("<f", f.read(4))[0]
                    vy10lad = unpack("<f", f.read(4))[0]
                    vz10lad = unpack("<f", f.read(4))[0]
                    vw10lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lad = unpack("<f", f.read(4))[0]
                    vy11lad = unpack("<f", f.read(4))[0]
                    vz11lad = unpack("<f", f.read(4))[0]
                    vw11lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lad = unpack("<f", f.read(4))[0]
                    vy12lad = unpack("<f", f.read(4))[0]
                    vz12lad = unpack("<f", f.read(4))[0]
                    vw12lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lad = unpack("<f", f.read(4))[0]
                    vy13lad = unpack("<f", f.read(4))[0]
                    vz13lad = unpack("<f", f.read(4))[0]
                    vw13lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lad = unpack("<f", f.read(4))[0]
                    vy14lad = unpack("<f", f.read(4))[0]
                    vz14lad = unpack("<f", f.read(4))[0]
                    vw14lad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lad = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lae = unpack("<f", f.read(4))[0]
                    vy1lae = unpack("<f", f.read(4))[0]
                    vz1lae = unpack("<f", f.read(4))[0]
                    vw1lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lae = unpack("<f", f.read(4))[0]
                    vy2lae = unpack("<f", f.read(4))[0]
                    vz2lae = unpack("<f", f.read(4))[0]
                    vw2lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lae = unpack("<f", f.read(4))[0]
                    vy3lae = unpack("<f", f.read(4))[0]
                    vz3lae = unpack("<f", f.read(4))[0]
                    vw3lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lae = unpack("<f", f.read(4))[0]
                    vy4lae = unpack("<f", f.read(4))[0]
                    vz4lae = unpack("<f", f.read(4))[0]
                    vw4lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lae = unpack("<f", f.read(4))[0]
                    vy5lae = unpack("<f", f.read(4))[0]
                    vz5lae = unpack("<f", f.read(4))[0]
                    vw5lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lae = unpack("<f", f.read(4))[0]
                    vy6lae = unpack("<f", f.read(4))[0]
                    vz6lae = unpack("<f", f.read(4))[0]
                    vw6lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lae = unpack("<f", f.read(4))[0]
                    vy7lae = unpack("<f", f.read(4))[0]
                    vz7lae = unpack("<f", f.read(4))[0]
                    vw7lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lae = unpack("<f", f.read(4))[0]
                    vy8lae = unpack("<f", f.read(4))[0]
                    vz8lae = unpack("<f", f.read(4))[0]
                    vw8lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lae = unpack("<f", f.read(4))[0]
                    vy9lae = unpack("<f", f.read(4))[0]
                    vz9lae = unpack("<f", f.read(4))[0]
                    vw9lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lae = unpack("<f", f.read(4))[0]
                    vy10lae = unpack("<f", f.read(4))[0]
                    vz10lae = unpack("<f", f.read(4))[0]
                    vw10lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lae = unpack("<f", f.read(4))[0]
                    vy11lae = unpack("<f", f.read(4))[0]
                    vz11lae = unpack("<f", f.read(4))[0]
                    vw11lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lae = unpack("<f", f.read(4))[0]
                    vy12lae = unpack("<f", f.read(4))[0]
                    vz12lae = unpack("<f", f.read(4))[0]
                    vw12lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lae = unpack("<f", f.read(4))[0]
                    vy13lae = unpack("<f", f.read(4))[0]
                    vz13lae = unpack("<f", f.read(4))[0]
                    vw13lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lae = unpack("<f", f.read(4))[0]
                    vy14lae = unpack("<f", f.read(4))[0]
                    vz14lae = unpack("<f", f.read(4))[0]
                    vw14lae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lae = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laf = unpack("<f", f.read(4))[0]
                    vy1laf = unpack("<f", f.read(4))[0]
                    vz1laf = unpack("<f", f.read(4))[0]
                    vw1laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laf = unpack("<f", f.read(4))[0]
                    vy2laf = unpack("<f", f.read(4))[0]
                    vz2laf = unpack("<f", f.read(4))[0]
                    vw2laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laf = unpack("<f", f.read(4))[0]
                    vy3laf = unpack("<f", f.read(4))[0]
                    vz3laf = unpack("<f", f.read(4))[0]
                    vw3laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laf = unpack("<f", f.read(4))[0]
                    vy4laf = unpack("<f", f.read(4))[0]
                    vz4laf = unpack("<f", f.read(4))[0]
                    vw4laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laf = unpack("<f", f.read(4))[0]
                    vy5laf = unpack("<f", f.read(4))[0]
                    vz5laf = unpack("<f", f.read(4))[0]
                    vw5laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laf = unpack("<f", f.read(4))[0]
                    vy6laf = unpack("<f", f.read(4))[0]
                    vz6laf = unpack("<f", f.read(4))[0]
                    vw6laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laf = unpack("<f", f.read(4))[0]
                    vy7laf = unpack("<f", f.read(4))[0]
                    vz7laf = unpack("<f", f.read(4))[0]
                    vw7laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laf = unpack("<f", f.read(4))[0]
                    vy8laf = unpack("<f", f.read(4))[0]
                    vz8laf = unpack("<f", f.read(4))[0]
                    vw8laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laf = unpack("<f", f.read(4))[0]
                    vy9laf = unpack("<f", f.read(4))[0]
                    vz9laf = unpack("<f", f.read(4))[0]
                    vw9laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laf = unpack("<f", f.read(4))[0]
                    vy10laf = unpack("<f", f.read(4))[0]
                    vz10laf = unpack("<f", f.read(4))[0]
                    vw10laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laf = unpack("<f", f.read(4))[0]
                    vy11laf = unpack("<f", f.read(4))[0]
                    vz11laf = unpack("<f", f.read(4))[0]
                    vw11laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laf = unpack("<f", f.read(4))[0]
                    vy12laf = unpack("<f", f.read(4))[0]
                    vz12laf = unpack("<f", f.read(4))[0]
                    vw12laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laf = unpack("<f", f.read(4))[0]
                    vy13laf = unpack("<f", f.read(4))[0]
                    vz13laf = unpack("<f", f.read(4))[0]
                    vw13laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laf = unpack("<f", f.read(4))[0]
                    vy14laf = unpack("<f", f.read(4))[0]
                    vz14laf = unpack("<f", f.read(4))[0]
                    vw14laf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lag = unpack("<f", f.read(4))[0]
                    vy1lag = unpack("<f", f.read(4))[0]
                    vz1lag = unpack("<f", f.read(4))[0]
                    vw1lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lag = unpack("<f", f.read(4))[0]
                    vy2lag = unpack("<f", f.read(4))[0]
                    vz2lag = unpack("<f", f.read(4))[0]
                    vw2lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lag = unpack("<f", f.read(4))[0]
                    vy3lag = unpack("<f", f.read(4))[0]
                    vz3lag = unpack("<f", f.read(4))[0]
                    vw3lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lag = unpack("<f", f.read(4))[0]
                    vy4lag = unpack("<f", f.read(4))[0]
                    vz4lag = unpack("<f", f.read(4))[0]
                    vw4lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lag = unpack("<f", f.read(4))[0]
                    vy5lag = unpack("<f", f.read(4))[0]
                    vz5lag = unpack("<f", f.read(4))[0]
                    vw5lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lag = unpack("<f", f.read(4))[0]
                    vy6lag = unpack("<f", f.read(4))[0]
                    vz6lag = unpack("<f", f.read(4))[0]
                    vw6lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lag = unpack("<f", f.read(4))[0]
                    vy7lag = unpack("<f", f.read(4))[0]
                    vz7lag = unpack("<f", f.read(4))[0]
                    vw7lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lag = unpack("<f", f.read(4))[0]
                    vy8lag = unpack("<f", f.read(4))[0]
                    vz8lag = unpack("<f", f.read(4))[0]
                    vw8lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lag = unpack("<f", f.read(4))[0]
                    vy9lag = unpack("<f", f.read(4))[0]
                    vz9lag = unpack("<f", f.read(4))[0]
                    vw9lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lag = unpack("<f", f.read(4))[0]
                    vy10lag = unpack("<f", f.read(4))[0]
                    vz10lag = unpack("<f", f.read(4))[0]
                    vw10lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lag = unpack("<f", f.read(4))[0]
                    vy11lag = unpack("<f", f.read(4))[0]
                    vz11lag = unpack("<f", f.read(4))[0]
                    vw11lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lag = unpack("<f", f.read(4))[0]
                    vy12lag = unpack("<f", f.read(4))[0]
                    vz12lag = unpack("<f", f.read(4))[0]
                    vw12lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lag = unpack("<f", f.read(4))[0]
                    vy13lag = unpack("<f", f.read(4))[0]
                    vz13lag = unpack("<f", f.read(4))[0]
                    vw13lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lag = unpack("<f", f.read(4))[0]
                    vy14lag = unpack("<f", f.read(4))[0]
                    vz14lag = unpack("<f", f.read(4))[0]
                    vw14lag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lag = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lah = unpack("<f", f.read(4))[0]
                    vy1lah = unpack("<f", f.read(4))[0]
                    vz1lah = unpack("<f", f.read(4))[0]
                    vw1lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lah = unpack("<f", f.read(4))[0]
                    vy2lah = unpack("<f", f.read(4))[0]
                    vz2lah = unpack("<f", f.read(4))[0]
                    vw2lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lah = unpack("<f", f.read(4))[0]
                    vy3lah = unpack("<f", f.read(4))[0]
                    vz3lah = unpack("<f", f.read(4))[0]
                    vw3lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lah = unpack("<f", f.read(4))[0]
                    vy4lah = unpack("<f", f.read(4))[0]
                    vz4lah = unpack("<f", f.read(4))[0]
                    vw4lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lah = unpack("<f", f.read(4))[0]
                    vy5lah = unpack("<f", f.read(4))[0]
                    vz5lah = unpack("<f", f.read(4))[0]
                    vw5lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lah = unpack("<f", f.read(4))[0]
                    vy6lah = unpack("<f", f.read(4))[0]
                    vz6lah = unpack("<f", f.read(4))[0]
                    vw6lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lah = unpack("<f", f.read(4))[0]
                    vy7lah = unpack("<f", f.read(4))[0]
                    vz7lah = unpack("<f", f.read(4))[0]
                    vw7lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lah = unpack("<f", f.read(4))[0]
                    vy8lah = unpack("<f", f.read(4))[0]
                    vz8lah = unpack("<f", f.read(4))[0]
                    vw8lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lah = unpack("<f", f.read(4))[0]
                    vy9lah = unpack("<f", f.read(4))[0]
                    vz9lah = unpack("<f", f.read(4))[0]
                    vw9lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lah = unpack("<f", f.read(4))[0]
                    vy10lah = unpack("<f", f.read(4))[0]
                    vz10lah = unpack("<f", f.read(4))[0]
                    vw10lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lah = unpack("<f", f.read(4))[0]
                    vy11lah = unpack("<f", f.read(4))[0]
                    vz11lah = unpack("<f", f.read(4))[0]
                    vw11lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lah = unpack("<f", f.read(4))[0]
                    vy12lah = unpack("<f", f.read(4))[0]
                    vz12lah = unpack("<f", f.read(4))[0]
                    vw12lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lah = unpack("<f", f.read(4))[0]
                    vy13lah = unpack("<f", f.read(4))[0]
                    vz13lah = unpack("<f", f.read(4))[0]
                    vw13lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lah = unpack("<f", f.read(4))[0]
                    vy14lah = unpack("<f", f.read(4))[0]
                    vz14lah = unpack("<f", f.read(4))[0]
                    vw14lah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lah = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lai = unpack("<f", f.read(4))[0]
                    vy1lai = unpack("<f", f.read(4))[0]
                    vz1lai = unpack("<f", f.read(4))[0]
                    vw1lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lai = unpack("<f", f.read(4))[0]
                    vy2lai = unpack("<f", f.read(4))[0]
                    vz2lai = unpack("<f", f.read(4))[0]
                    vw2lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lai = unpack("<f", f.read(4))[0]
                    vy3lai = unpack("<f", f.read(4))[0]
                    vz3lai = unpack("<f", f.read(4))[0]
                    vw3lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lai = unpack("<f", f.read(4))[0]
                    vy4lai = unpack("<f", f.read(4))[0]
                    vz4lai = unpack("<f", f.read(4))[0]
                    vw4lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lai = unpack("<f", f.read(4))[0]
                    vy5lai = unpack("<f", f.read(4))[0]
                    vz5lai = unpack("<f", f.read(4))[0]
                    vw5lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lai = unpack("<f", f.read(4))[0]
                    vy6lai = unpack("<f", f.read(4))[0]
                    vz6lai = unpack("<f", f.read(4))[0]
                    vw6lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lai = unpack("<f", f.read(4))[0]
                    vy7lai = unpack("<f", f.read(4))[0]
                    vz7lai = unpack("<f", f.read(4))[0]
                    vw7lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lai = unpack("<f", f.read(4))[0]
                    vy8lai = unpack("<f", f.read(4))[0]
                    vz8lai = unpack("<f", f.read(4))[0]
                    vw8lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lai = unpack("<f", f.read(4))[0]
                    vy9lai = unpack("<f", f.read(4))[0]
                    vz9lai = unpack("<f", f.read(4))[0]
                    vw9lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lai = unpack("<f", f.read(4))[0]
                    vy10lai = unpack("<f", f.read(4))[0]
                    vz10lai = unpack("<f", f.read(4))[0]
                    vw10lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lai = unpack("<f", f.read(4))[0]
                    vy11lai = unpack("<f", f.read(4))[0]
                    vz11lai = unpack("<f", f.read(4))[0]
                    vw11lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lai = unpack("<f", f.read(4))[0]
                    vy12lai = unpack("<f", f.read(4))[0]
                    vz12lai = unpack("<f", f.read(4))[0]
                    vw12lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lai = unpack("<f", f.read(4))[0]
                    vy13lai = unpack("<f", f.read(4))[0]
                    vz13lai = unpack("<f", f.read(4))[0]
                    vw13lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lai = unpack("<f", f.read(4))[0]
                    vy14lai = unpack("<f", f.read(4))[0]
                    vz14lai = unpack("<f", f.read(4))[0]
                    vw14lai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lai = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laj = unpack("<f", f.read(4))[0]
                    vy1laj = unpack("<f", f.read(4))[0]
                    vz1laj = unpack("<f", f.read(4))[0]
                    vw1laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laj = unpack("<f", f.read(4))[0]
                    vy2laj = unpack("<f", f.read(4))[0]
                    vz2laj = unpack("<f", f.read(4))[0]
                    vw2laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laj = unpack("<f", f.read(4))[0]
                    vy3laj = unpack("<f", f.read(4))[0]
                    vz3laj = unpack("<f", f.read(4))[0]
                    vw3laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laj = unpack("<f", f.read(4))[0]
                    vy4laj = unpack("<f", f.read(4))[0]
                    vz4laj = unpack("<f", f.read(4))[0]
                    vw4laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laj = unpack("<f", f.read(4))[0]
                    vy5laj = unpack("<f", f.read(4))[0]
                    vz5laj = unpack("<f", f.read(4))[0]
                    vw5laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laj = unpack("<f", f.read(4))[0]
                    vy6laj = unpack("<f", f.read(4))[0]
                    vz6laj = unpack("<f", f.read(4))[0]
                    vw6laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laj = unpack("<f", f.read(4))[0]
                    vy7laj = unpack("<f", f.read(4))[0]
                    vz7laj = unpack("<f", f.read(4))[0]
                    vw7laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laj = unpack("<f", f.read(4))[0]
                    vy8laj = unpack("<f", f.read(4))[0]
                    vz8laj = unpack("<f", f.read(4))[0]
                    vw8laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laj = unpack("<f", f.read(4))[0]
                    vy9laj = unpack("<f", f.read(4))[0]
                    vz9laj = unpack("<f", f.read(4))[0]
                    vw9laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laj = unpack("<f", f.read(4))[0]
                    vy10laj = unpack("<f", f.read(4))[0]
                    vz10laj = unpack("<f", f.read(4))[0]
                    vw10laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laj = unpack("<f", f.read(4))[0]
                    vy11laj = unpack("<f", f.read(4))[0]
                    vz11laj = unpack("<f", f.read(4))[0]
                    vw11laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laj = unpack("<f", f.read(4))[0]
                    vy12laj = unpack("<f", f.read(4))[0]
                    vz12laj = unpack("<f", f.read(4))[0]
                    vw12laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laj = unpack("<f", f.read(4))[0]
                    vy13laj = unpack("<f", f.read(4))[0]
                    vz13laj = unpack("<f", f.read(4))[0]
                    vw13laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laj = unpack("<f", f.read(4))[0]
                    vy14laj = unpack("<f", f.read(4))[0]
                    vz14laj = unpack("<f", f.read(4))[0]
                    vw14laj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laj = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lak = unpack("<f", f.read(4))[0]
                    vy1lak = unpack("<f", f.read(4))[0]
                    vz1lak = unpack("<f", f.read(4))[0]
                    vw1lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lak = unpack("<f", f.read(4))[0]
                    vy2lak = unpack("<f", f.read(4))[0]
                    vz2lak = unpack("<f", f.read(4))[0]
                    vw2lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lak = unpack("<f", f.read(4))[0]
                    vy3lak = unpack("<f", f.read(4))[0]
                    vz3lak = unpack("<f", f.read(4))[0]
                    vw3lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lak = unpack("<f", f.read(4))[0]
                    vy4lak = unpack("<f", f.read(4))[0]
                    vz4lak = unpack("<f", f.read(4))[0]
                    vw4lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lak = unpack("<f", f.read(4))[0]
                    vy5lak = unpack("<f", f.read(4))[0]
                    vz5lak = unpack("<f", f.read(4))[0]
                    vw5lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lak = unpack("<f", f.read(4))[0]
                    vy6lak = unpack("<f", f.read(4))[0]
                    vz6lak = unpack("<f", f.read(4))[0]
                    vw6lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lak = unpack("<f", f.read(4))[0]
                    vy7lak = unpack("<f", f.read(4))[0]
                    vz7lak = unpack("<f", f.read(4))[0]
                    vw7lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lak = unpack("<f", f.read(4))[0]
                    vy8lak = unpack("<f", f.read(4))[0]
                    vz8lak = unpack("<f", f.read(4))[0]
                    vw8lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lak = unpack("<f", f.read(4))[0]
                    vy9lak = unpack("<f", f.read(4))[0]
                    vz9lak = unpack("<f", f.read(4))[0]
                    vw9lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lak = unpack("<f", f.read(4))[0]
                    vy10lak = unpack("<f", f.read(4))[0]
                    vz10lak = unpack("<f", f.read(4))[0]
                    vw10lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lak = unpack("<f", f.read(4))[0]
                    vy11lak = unpack("<f", f.read(4))[0]
                    vz11lak = unpack("<f", f.read(4))[0]
                    vw11lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lak = unpack("<f", f.read(4))[0]
                    vy12lak = unpack("<f", f.read(4))[0]
                    vz12lak = unpack("<f", f.read(4))[0]
                    vw12lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lak = unpack("<f", f.read(4))[0]
                    vy13lak = unpack("<f", f.read(4))[0]
                    vz13lak = unpack("<f", f.read(4))[0]
                    vw13lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lak = unpack("<f", f.read(4))[0]
                    vy14lak = unpack("<f", f.read(4))[0]
                    vz14lak = unpack("<f", f.read(4))[0]
                    vw14lak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lak = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lal = unpack("<f", f.read(4))[0]
                    vy1lal = unpack("<f", f.read(4))[0]
                    vz1lal = unpack("<f", f.read(4))[0]
                    vw1lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lal = unpack("<f", f.read(4))[0]
                    vy2lal = unpack("<f", f.read(4))[0]
                    vz2lal = unpack("<f", f.read(4))[0]
                    vw2lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lal = unpack("<f", f.read(4))[0]
                    vy3lal = unpack("<f", f.read(4))[0]
                    vz3lal = unpack("<f", f.read(4))[0]
                    vw3lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lal = unpack("<f", f.read(4))[0]
                    vy4lal = unpack("<f", f.read(4))[0]
                    vz4lal = unpack("<f", f.read(4))[0]
                    vw4lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lal = unpack("<f", f.read(4))[0]
                    vy5lal = unpack("<f", f.read(4))[0]
                    vz5lal = unpack("<f", f.read(4))[0]
                    vw5lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lal = unpack("<f", f.read(4))[0]
                    vy6lal = unpack("<f", f.read(4))[0]
                    vz6lal = unpack("<f", f.read(4))[0]
                    vw6lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lal = unpack("<f", f.read(4))[0]
                    vy7lal = unpack("<f", f.read(4))[0]
                    vz7lal = unpack("<f", f.read(4))[0]
                    vw7lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lal = unpack("<f", f.read(4))[0]
                    vy8lal = unpack("<f", f.read(4))[0]
                    vz8lal = unpack("<f", f.read(4))[0]
                    vw8lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lal = unpack("<f", f.read(4))[0]
                    vy9lal = unpack("<f", f.read(4))[0]
                    vz9lal = unpack("<f", f.read(4))[0]
                    vw9lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lal = unpack("<f", f.read(4))[0]
                    vy10lal = unpack("<f", f.read(4))[0]
                    vz10lal = unpack("<f", f.read(4))[0]
                    vw10lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lal = unpack("<f", f.read(4))[0]
                    vy11lal = unpack("<f", f.read(4))[0]
                    vz11lal = unpack("<f", f.read(4))[0]
                    vw11lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lal = unpack("<f", f.read(4))[0]
                    vy12lal = unpack("<f", f.read(4))[0]
                    vz12lal = unpack("<f", f.read(4))[0]
                    vw12lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lal = unpack("<f", f.read(4))[0]
                    vy13lal = unpack("<f", f.read(4))[0]
                    vz13lal = unpack("<f", f.read(4))[0]
                    vw13lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lal = unpack("<f", f.read(4))[0]
                    vy14lal = unpack("<f", f.read(4))[0]
                    vz14lal = unpack("<f", f.read(4))[0]
                    vw14lal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lal = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lam = unpack("<f", f.read(4))[0]
                    vy1lam = unpack("<f", f.read(4))[0]
                    vz1lam = unpack("<f", f.read(4))[0]
                    vw1lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lam = unpack("<f", f.read(4))[0]
                    vy2lam = unpack("<f", f.read(4))[0]
                    vz2lam = unpack("<f", f.read(4))[0]
                    vw2lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lam = unpack("<f", f.read(4))[0]
                    vy3lam = unpack("<f", f.read(4))[0]
                    vz3lam = unpack("<f", f.read(4))[0]
                    vw3lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lam = unpack("<f", f.read(4))[0]
                    vy4lam = unpack("<f", f.read(4))[0]
                    vz4lam = unpack("<f", f.read(4))[0]
                    vw4lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lam = unpack("<f", f.read(4))[0]
                    vy5lam = unpack("<f", f.read(4))[0]
                    vz5lam = unpack("<f", f.read(4))[0]
                    vw5lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lam = unpack("<f", f.read(4))[0]
                    vy6lam = unpack("<f", f.read(4))[0]
                    vz6lam = unpack("<f", f.read(4))[0]
                    vw6lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lam = unpack("<f", f.read(4))[0]
                    vy7lam = unpack("<f", f.read(4))[0]
                    vz7lam = unpack("<f", f.read(4))[0]
                    vw7lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lam = unpack("<f", f.read(4))[0]
                    vy8lam = unpack("<f", f.read(4))[0]
                    vz8lam = unpack("<f", f.read(4))[0]
                    vw8lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lam = unpack("<f", f.read(4))[0]
                    vy9lam = unpack("<f", f.read(4))[0]
                    vz9lam = unpack("<f", f.read(4))[0]
                    vw9lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lam = unpack("<f", f.read(4))[0]
                    vy10lam = unpack("<f", f.read(4))[0]
                    vz10lam = unpack("<f", f.read(4))[0]
                    vw10lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lam = unpack("<f", f.read(4))[0]
                    vy11lam = unpack("<f", f.read(4))[0]
                    vz11lam = unpack("<f", f.read(4))[0]
                    vw11lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lam = unpack("<f", f.read(4))[0]
                    vy12lam = unpack("<f", f.read(4))[0]
                    vz12lam = unpack("<f", f.read(4))[0]
                    vw12lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lam = unpack("<f", f.read(4))[0]
                    vy13lam = unpack("<f", f.read(4))[0]
                    vz13lam = unpack("<f", f.read(4))[0]
                    vw13lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lam = unpack("<f", f.read(4))[0]
                    vy14lam = unpack("<f", f.read(4))[0]
                    vz14lam = unpack("<f", f.read(4))[0]
                    vw14lam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lam = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lan = unpack("<f", f.read(4))[0]
                    vy1lan = unpack("<f", f.read(4))[0]
                    vz1lan = unpack("<f", f.read(4))[0]
                    vw1lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lan = unpack("<f", f.read(4))[0]
                    vy2lan = unpack("<f", f.read(4))[0]
                    vz2lan = unpack("<f", f.read(4))[0]
                    vw2lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lan = unpack("<f", f.read(4))[0]
                    vy3lan = unpack("<f", f.read(4))[0]
                    vz3lan = unpack("<f", f.read(4))[0]
                    vw3lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lan = unpack("<f", f.read(4))[0]
                    vy4lan = unpack("<f", f.read(4))[0]
                    vz4lan = unpack("<f", f.read(4))[0]
                    vw4lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lan = unpack("<f", f.read(4))[0]
                    vy5lan = unpack("<f", f.read(4))[0]
                    vz5lan = unpack("<f", f.read(4))[0]
                    vw5lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lan = unpack("<f", f.read(4))[0]
                    vy6lan = unpack("<f", f.read(4))[0]
                    vz6lan = unpack("<f", f.read(4))[0]
                    vw6lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lan = unpack("<f", f.read(4))[0]
                    vy7lan = unpack("<f", f.read(4))[0]
                    vz7lan = unpack("<f", f.read(4))[0]
                    vw7lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lan = unpack("<f", f.read(4))[0]
                    vy8lan = unpack("<f", f.read(4))[0]
                    vz8lan = unpack("<f", f.read(4))[0]
                    vw8lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lan = unpack("<f", f.read(4))[0]
                    vy9lan = unpack("<f", f.read(4))[0]
                    vz9lan = unpack("<f", f.read(4))[0]
                    vw9lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lan = unpack("<f", f.read(4))[0]
                    vy10lan = unpack("<f", f.read(4))[0]
                    vz10lan = unpack("<f", f.read(4))[0]
                    vw10lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lan = unpack("<f", f.read(4))[0]
                    vy11lan = unpack("<f", f.read(4))[0]
                    vz11lan = unpack("<f", f.read(4))[0]
                    vw11lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lan = unpack("<f", f.read(4))[0]
                    vy12lan = unpack("<f", f.read(4))[0]
                    vz12lan = unpack("<f", f.read(4))[0]
                    vw12lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lan = unpack("<f", f.read(4))[0]
                    vy13lan = unpack("<f", f.read(4))[0]
                    vz13lan = unpack("<f", f.read(4))[0]
                    vw13lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lan = unpack("<f", f.read(4))[0]
                    vy14lan = unpack("<f", f.read(4))[0]
                    vz14lan = unpack("<f", f.read(4))[0]
                    vw14lan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lan = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lao = unpack("<f", f.read(4))[0]
                    vy1lao = unpack("<f", f.read(4))[0]
                    vz1lao = unpack("<f", f.read(4))[0]
                    vw1lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lao = unpack("<f", f.read(4))[0]
                    vy2lao = unpack("<f", f.read(4))[0]
                    vz2lao = unpack("<f", f.read(4))[0]
                    vw2lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lao = unpack("<f", f.read(4))[0]
                    vy3lao = unpack("<f", f.read(4))[0]
                    vz3lao = unpack("<f", f.read(4))[0]
                    vw3lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lao = unpack("<f", f.read(4))[0]
                    vy4lao = unpack("<f", f.read(4))[0]
                    vz4lao = unpack("<f", f.read(4))[0]
                    vw4lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lao = unpack("<f", f.read(4))[0]
                    vy5lao = unpack("<f", f.read(4))[0]
                    vz5lao = unpack("<f", f.read(4))[0]
                    vw5lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lao = unpack("<f", f.read(4))[0]
                    vy6lao = unpack("<f", f.read(4))[0]
                    vz6lao = unpack("<f", f.read(4))[0]
                    vw6lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lao = unpack("<f", f.read(4))[0]
                    vy7lao = unpack("<f", f.read(4))[0]
                    vz7lao = unpack("<f", f.read(4))[0]
                    vw7lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lao = unpack("<f", f.read(4))[0]
                    vy8lao = unpack("<f", f.read(4))[0]
                    vz8lao = unpack("<f", f.read(4))[0]
                    vw8lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lao = unpack("<f", f.read(4))[0]
                    vy9lao = unpack("<f", f.read(4))[0]
                    vz9lao = unpack("<f", f.read(4))[0]
                    vw9lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lao = unpack("<f", f.read(4))[0]
                    vy10lao = unpack("<f", f.read(4))[0]
                    vz10lao = unpack("<f", f.read(4))[0]
                    vw10lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lao = unpack("<f", f.read(4))[0]
                    vy11lao = unpack("<f", f.read(4))[0]
                    vz11lao = unpack("<f", f.read(4))[0]
                    vw11lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lao = unpack("<f", f.read(4))[0]
                    vy12lao = unpack("<f", f.read(4))[0]
                    vz12lao = unpack("<f", f.read(4))[0]
                    vw12lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lao = unpack("<f", f.read(4))[0]
                    vy13lao = unpack("<f", f.read(4))[0]
                    vz13lao = unpack("<f", f.read(4))[0]
                    vw13lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lao = unpack("<f", f.read(4))[0]
                    vy14lao = unpack("<f", f.read(4))[0]
                    vz14lao = unpack("<f", f.read(4))[0]
                    vw14lao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lao = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lap = unpack("<f", f.read(4))[0]
                    vy1lap = unpack("<f", f.read(4))[0]
                    vz1lap = unpack("<f", f.read(4))[0]
                    vw1lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lap = unpack("<f", f.read(4))[0]
                    vy2lap = unpack("<f", f.read(4))[0]
                    vz2lap = unpack("<f", f.read(4))[0]
                    vw2lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lap = unpack("<f", f.read(4))[0]
                    vy3lap = unpack("<f", f.read(4))[0]
                    vz3lap = unpack("<f", f.read(4))[0]
                    vw3lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lap = unpack("<f", f.read(4))[0]
                    vy4lap = unpack("<f", f.read(4))[0]
                    vz4lap = unpack("<f", f.read(4))[0]
                    vw4lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lap = unpack("<f", f.read(4))[0]
                    vy5lap = unpack("<f", f.read(4))[0]
                    vz5lap = unpack("<f", f.read(4))[0]
                    vw5lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lap = unpack("<f", f.read(4))[0]
                    vy6lap = unpack("<f", f.read(4))[0]
                    vz6lap = unpack("<f", f.read(4))[0]
                    vw6lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lap = unpack("<f", f.read(4))[0]
                    vy7lap = unpack("<f", f.read(4))[0]
                    vz7lap = unpack("<f", f.read(4))[0]
                    vw7lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lap = unpack("<f", f.read(4))[0]
                    vy8lap = unpack("<f", f.read(4))[0]
                    vz8lap = unpack("<f", f.read(4))[0]
                    vw8lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lap = unpack("<f", f.read(4))[0]
                    vy9lap = unpack("<f", f.read(4))[0]
                    vz9lap = unpack("<f", f.read(4))[0]
                    vw9lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lap = unpack("<f", f.read(4))[0]
                    vy10lap = unpack("<f", f.read(4))[0]
                    vz10lap = unpack("<f", f.read(4))[0]
                    vw10lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lap = unpack("<f", f.read(4))[0]
                    vy11lap = unpack("<f", f.read(4))[0]
                    vz11lap = unpack("<f", f.read(4))[0]
                    vw11lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lap = unpack("<f", f.read(4))[0]
                    vy12lap = unpack("<f", f.read(4))[0]
                    vz12lap = unpack("<f", f.read(4))[0]
                    vw12lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lap = unpack("<f", f.read(4))[0]
                    vy13lap = unpack("<f", f.read(4))[0]
                    vz13lap = unpack("<f", f.read(4))[0]
                    vw13lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lap = unpack("<f", f.read(4))[0]
                    vy14lap = unpack("<f", f.read(4))[0]
                    vz14lap = unpack("<f", f.read(4))[0]
                    vw14lap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lap = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laq = unpack("<f", f.read(4))[0]
                    vy1laq = unpack("<f", f.read(4))[0]
                    vz1laq = unpack("<f", f.read(4))[0]
                    vw1laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laq = unpack("<f", f.read(4))[0]
                    vy2laq = unpack("<f", f.read(4))[0]
                    vz2laq = unpack("<f", f.read(4))[0]
                    vw2laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laq = unpack("<f", f.read(4))[0]
                    vy3laq = unpack("<f", f.read(4))[0]
                    vz3laq = unpack("<f", f.read(4))[0]
                    vw3laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laq = unpack("<f", f.read(4))[0]
                    vy4laq = unpack("<f", f.read(4))[0]
                    vz4laq = unpack("<f", f.read(4))[0]
                    vw4laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laq = unpack("<f", f.read(4))[0]
                    vy5laq = unpack("<f", f.read(4))[0]
                    vz5laq = unpack("<f", f.read(4))[0]
                    vw5laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laq = unpack("<f", f.read(4))[0]
                    vy6laq = unpack("<f", f.read(4))[0]
                    vz6laq = unpack("<f", f.read(4))[0]
                    vw6laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laq = unpack("<f", f.read(4))[0]
                    vy7laq = unpack("<f", f.read(4))[0]
                    vz7laq = unpack("<f", f.read(4))[0]
                    vw7laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laq = unpack("<f", f.read(4))[0]
                    vy8laq = unpack("<f", f.read(4))[0]
                    vz8laq = unpack("<f", f.read(4))[0]
                    vw8laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laq = unpack("<f", f.read(4))[0]
                    vy9laq = unpack("<f", f.read(4))[0]
                    vz9laq = unpack("<f", f.read(4))[0]
                    vw9laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laq = unpack("<f", f.read(4))[0]
                    vy10laq = unpack("<f", f.read(4))[0]
                    vz10laq = unpack("<f", f.read(4))[0]
                    vw10laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laq = unpack("<f", f.read(4))[0]
                    vy11laq = unpack("<f", f.read(4))[0]
                    vz11laq = unpack("<f", f.read(4))[0]
                    vw11laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laq = unpack("<f", f.read(4))[0]
                    vy12laq = unpack("<f", f.read(4))[0]
                    vz12laq = unpack("<f", f.read(4))[0]
                    vw12laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laq = unpack("<f", f.read(4))[0]
                    vy13laq = unpack("<f", f.read(4))[0]
                    vz13laq = unpack("<f", f.read(4))[0]
                    vw13laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laq = unpack("<f", f.read(4))[0]
                    vy14laq = unpack("<f", f.read(4))[0]
                    vz14laq = unpack("<f", f.read(4))[0]
                    vw14laq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laq = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lar = unpack("<f", f.read(4))[0]
                    vy1lar = unpack("<f", f.read(4))[0]
                    vz1lar = unpack("<f", f.read(4))[0]
                    vw1lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lar = unpack("<f", f.read(4))[0]
                    vy2lar = unpack("<f", f.read(4))[0]
                    vz2lar = unpack("<f", f.read(4))[0]
                    vw2lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lar = unpack("<f", f.read(4))[0]
                    vy3lar = unpack("<f", f.read(4))[0]
                    vz3lar = unpack("<f", f.read(4))[0]
                    vw3lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lar = unpack("<f", f.read(4))[0]
                    vy4lar = unpack("<f", f.read(4))[0]
                    vz4lar = unpack("<f", f.read(4))[0]
                    vw4lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lar = unpack("<f", f.read(4))[0]
                    vy5lar = unpack("<f", f.read(4))[0]
                    vz5lar = unpack("<f", f.read(4))[0]
                    vw5lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lar = unpack("<f", f.read(4))[0]
                    vy6lar = unpack("<f", f.read(4))[0]
                    vz6lar = unpack("<f", f.read(4))[0]
                    vw6lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lar = unpack("<f", f.read(4))[0]
                    vy7lar = unpack("<f", f.read(4))[0]
                    vz7lar = unpack("<f", f.read(4))[0]
                    vw7lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lar = unpack("<f", f.read(4))[0]
                    vy8lar = unpack("<f", f.read(4))[0]
                    vz8lar = unpack("<f", f.read(4))[0]
                    vw8lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lar = unpack("<f", f.read(4))[0]
                    vy9lar = unpack("<f", f.read(4))[0]
                    vz9lar = unpack("<f", f.read(4))[0]
                    vw9lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lar = unpack("<f", f.read(4))[0]
                    vy10lar = unpack("<f", f.read(4))[0]
                    vz10lar = unpack("<f", f.read(4))[0]
                    vw10lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lar = unpack("<f", f.read(4))[0]
                    vy11lar = unpack("<f", f.read(4))[0]
                    vz11lar = unpack("<f", f.read(4))[0]
                    vw11lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lar = unpack("<f", f.read(4))[0]
                    vy12lar = unpack("<f", f.read(4))[0]
                    vz12lar = unpack("<f", f.read(4))[0]
                    vw12lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lar = unpack("<f", f.read(4))[0]
                    vy13lar = unpack("<f", f.read(4))[0]
                    vz13lar = unpack("<f", f.read(4))[0]
                    vw13lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lar = unpack("<f", f.read(4))[0]
                    vy14lar = unpack("<f", f.read(4))[0]
                    vz14lar = unpack("<f", f.read(4))[0]
                    vw14lar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lar = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1las = unpack("<f", f.read(4))[0]
                    vy1las = unpack("<f", f.read(4))[0]
                    vz1las = unpack("<f", f.read(4))[0]
                    vw1las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2las = unpack("<f", f.read(4))[0]
                    vy2las = unpack("<f", f.read(4))[0]
                    vz2las = unpack("<f", f.read(4))[0]
                    vw2las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3las = unpack("<f", f.read(4))[0]
                    vy3las = unpack("<f", f.read(4))[0]
                    vz3las = unpack("<f", f.read(4))[0]
                    vw3las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4las = unpack("<f", f.read(4))[0]
                    vy4las = unpack("<f", f.read(4))[0]
                    vz4las = unpack("<f", f.read(4))[0]
                    vw4las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5las = unpack("<f", f.read(4))[0]
                    vy5las = unpack("<f", f.read(4))[0]
                    vz5las = unpack("<f", f.read(4))[0]
                    vw5las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6las = unpack("<f", f.read(4))[0]
                    vy6las = unpack("<f", f.read(4))[0]
                    vz6las = unpack("<f", f.read(4))[0]
                    vw6las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7las = unpack("<f", f.read(4))[0]
                    vy7las = unpack("<f", f.read(4))[0]
                    vz7las = unpack("<f", f.read(4))[0]
                    vw7las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8las = unpack("<f", f.read(4))[0]
                    vy8las = unpack("<f", f.read(4))[0]
                    vz8las = unpack("<f", f.read(4))[0]
                    vw8las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9las = unpack("<f", f.read(4))[0]
                    vy9las = unpack("<f", f.read(4))[0]
                    vz9las = unpack("<f", f.read(4))[0]
                    vw9las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10las = unpack("<f", f.read(4))[0]
                    vy10las = unpack("<f", f.read(4))[0]
                    vz10las = unpack("<f", f.read(4))[0]
                    vw10las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11las = unpack("<f", f.read(4))[0]
                    vy11las = unpack("<f", f.read(4))[0]
                    vz11las = unpack("<f", f.read(4))[0]
                    vw11las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12las = unpack("<f", f.read(4))[0]
                    vy12las = unpack("<f", f.read(4))[0]
                    vz12las = unpack("<f", f.read(4))[0]
                    vw12las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13las = unpack("<f", f.read(4))[0]
                    vy13las = unpack("<f", f.read(4))[0]
                    vz13las = unpack("<f", f.read(4))[0]
                    vw13las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13las = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14las = unpack("<f", f.read(4))[0]
                    vy14las = unpack("<f", f.read(4))[0]
                    vz14las = unpack("<f", f.read(4))[0]
                    vw14las = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14las = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lat = unpack("<f", f.read(4))[0]
                    vy1lat = unpack("<f", f.read(4))[0]
                    vz1lat = unpack("<f", f.read(4))[0]
                    vw1lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lat = unpack("<f", f.read(4))[0]
                    vy2lat = unpack("<f", f.read(4))[0]
                    vz2lat = unpack("<f", f.read(4))[0]
                    vw2lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lat = unpack("<f", f.read(4))[0]
                    vy3lat = unpack("<f", f.read(4))[0]
                    vz3lat = unpack("<f", f.read(4))[0]
                    vw3lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lat = unpack("<f", f.read(4))[0]
                    vy4lat = unpack("<f", f.read(4))[0]
                    vz4lat = unpack("<f", f.read(4))[0]
                    vw4lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lat = unpack("<f", f.read(4))[0]
                    vy5lat = unpack("<f", f.read(4))[0]
                    vz5lat = unpack("<f", f.read(4))[0]
                    vw5lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lat = unpack("<f", f.read(4))[0]
                    vy6lat = unpack("<f", f.read(4))[0]
                    vz6lat = unpack("<f", f.read(4))[0]
                    vw6lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lat = unpack("<f", f.read(4))[0]
                    vy7lat = unpack("<f", f.read(4))[0]
                    vz7lat = unpack("<f", f.read(4))[0]
                    vw7lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lat = unpack("<f", f.read(4))[0]
                    vy8lat = unpack("<f", f.read(4))[0]
                    vz8lat = unpack("<f", f.read(4))[0]
                    vw8lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lat = unpack("<f", f.read(4))[0]
                    vy9lat = unpack("<f", f.read(4))[0]
                    vz9lat = unpack("<f", f.read(4))[0]
                    vw9lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lat = unpack("<f", f.read(4))[0]
                    vy10lat = unpack("<f", f.read(4))[0]
                    vz10lat = unpack("<f", f.read(4))[0]
                    vw10lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lat = unpack("<f", f.read(4))[0]
                    vy11lat = unpack("<f", f.read(4))[0]
                    vz11lat = unpack("<f", f.read(4))[0]
                    vw11lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lat = unpack("<f", f.read(4))[0]
                    vy12lat = unpack("<f", f.read(4))[0]
                    vz12lat = unpack("<f", f.read(4))[0]
                    vw12lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lat = unpack("<f", f.read(4))[0]
                    vy13lat = unpack("<f", f.read(4))[0]
                    vz13lat = unpack("<f", f.read(4))[0]
                    vw13lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lat = unpack("<f", f.read(4))[0]
                    vy14lat = unpack("<f", f.read(4))[0]
                    vz14lat = unpack("<f", f.read(4))[0]
                    vw14lat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lat = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lau = unpack("<f", f.read(4))[0]
                    vy1lau = unpack("<f", f.read(4))[0]
                    vz1lau = unpack("<f", f.read(4))[0]
                    vw1lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lau = unpack("<f", f.read(4))[0]
                    vy2lau = unpack("<f", f.read(4))[0]
                    vz2lau = unpack("<f", f.read(4))[0]
                    vw2lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lau = unpack("<f", f.read(4))[0]
                    vy3lau = unpack("<f", f.read(4))[0]
                    vz3lau = unpack("<f", f.read(4))[0]
                    vw3lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lau = unpack("<f", f.read(4))[0]
                    vy4lau = unpack("<f", f.read(4))[0]
                    vz4lau = unpack("<f", f.read(4))[0]
                    vw4lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lau = unpack("<f", f.read(4))[0]
                    vy5lau = unpack("<f", f.read(4))[0]
                    vz5lau = unpack("<f", f.read(4))[0]
                    vw5lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lau = unpack("<f", f.read(4))[0]
                    vy6lau = unpack("<f", f.read(4))[0]
                    vz6lau = unpack("<f", f.read(4))[0]
                    vw6lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lau = unpack("<f", f.read(4))[0]
                    vy7lau = unpack("<f", f.read(4))[0]
                    vz7lau = unpack("<f", f.read(4))[0]
                    vw7lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lau = unpack("<f", f.read(4))[0]
                    vy8lau = unpack("<f", f.read(4))[0]
                    vz8lau = unpack("<f", f.read(4))[0]
                    vw8lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lau = unpack("<f", f.read(4))[0]
                    vy9lau = unpack("<f", f.read(4))[0]
                    vz9lau = unpack("<f", f.read(4))[0]
                    vw9lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lau = unpack("<f", f.read(4))[0]
                    vy10lau = unpack("<f", f.read(4))[0]
                    vz10lau = unpack("<f", f.read(4))[0]
                    vw10lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lau = unpack("<f", f.read(4))[0]
                    vy11lau = unpack("<f", f.read(4))[0]
                    vz11lau = unpack("<f", f.read(4))[0]
                    vw11lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lau = unpack("<f", f.read(4))[0]
                    vy12lau = unpack("<f", f.read(4))[0]
                    vz12lau = unpack("<f", f.read(4))[0]
                    vw12lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lau = unpack("<f", f.read(4))[0]
                    vy13lau = unpack("<f", f.read(4))[0]
                    vz13lau = unpack("<f", f.read(4))[0]
                    vw13lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lau = unpack("<f", f.read(4))[0]
                    vy14lau = unpack("<f", f.read(4))[0]
                    vz14lau = unpack("<f", f.read(4))[0]
                    vw14lau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lau = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lav = unpack("<f", f.read(4))[0]
                    vy1lav = unpack("<f", f.read(4))[0]
                    vz1lav = unpack("<f", f.read(4))[0]
                    vw1lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lav = unpack("<f", f.read(4))[0]
                    vy2lav = unpack("<f", f.read(4))[0]
                    vz2lav = unpack("<f", f.read(4))[0]
                    vw2lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lav = unpack("<f", f.read(4))[0]
                    vy3lav = unpack("<f", f.read(4))[0]
                    vz3lav = unpack("<f", f.read(4))[0]
                    vw3lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lav = unpack("<f", f.read(4))[0]
                    vy4lav = unpack("<f", f.read(4))[0]
                    vz4lav = unpack("<f", f.read(4))[0]
                    vw4lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lav = unpack("<f", f.read(4))[0]
                    vy5lav = unpack("<f", f.read(4))[0]
                    vz5lav = unpack("<f", f.read(4))[0]
                    vw5lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lav = unpack("<f", f.read(4))[0]
                    vy6lav = unpack("<f", f.read(4))[0]
                    vz6lav = unpack("<f", f.read(4))[0]
                    vw6lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lav = unpack("<f", f.read(4))[0]
                    vy7lav = unpack("<f", f.read(4))[0]
                    vz7lav = unpack("<f", f.read(4))[0]
                    vw7lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lav = unpack("<f", f.read(4))[0]
                    vy8lav = unpack("<f", f.read(4))[0]
                    vz8lav = unpack("<f", f.read(4))[0]
                    vw8lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lav = unpack("<f", f.read(4))[0]
                    vy9lav = unpack("<f", f.read(4))[0]
                    vz9lav = unpack("<f", f.read(4))[0]
                    vw9lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lav = unpack("<f", f.read(4))[0]
                    vy10lav = unpack("<f", f.read(4))[0]
                    vz10lav = unpack("<f", f.read(4))[0]
                    vw10lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lav = unpack("<f", f.read(4))[0]
                    vy11lav = unpack("<f", f.read(4))[0]
                    vz11lav = unpack("<f", f.read(4))[0]
                    vw11lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lav = unpack("<f", f.read(4))[0]
                    vy12lav = unpack("<f", f.read(4))[0]
                    vz12lav = unpack("<f", f.read(4))[0]
                    vw12lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lav = unpack("<f", f.read(4))[0]
                    vy13lav = unpack("<f", f.read(4))[0]
                    vz13lav = unpack("<f", f.read(4))[0]
                    vw13lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lav = unpack("<f", f.read(4))[0]
                    vy14lav = unpack("<f", f.read(4))[0]
                    vz14lav = unpack("<f", f.read(4))[0]
                    vw14lav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lav = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1law = unpack("<f", f.read(4))[0]
                    vy1law = unpack("<f", f.read(4))[0]
                    vz1law = unpack("<f", f.read(4))[0]
                    vw1law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2law = unpack("<f", f.read(4))[0]
                    vy2law = unpack("<f", f.read(4))[0]
                    vz2law = unpack("<f", f.read(4))[0]
                    vw2law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3law = unpack("<f", f.read(4))[0]
                    vy3law = unpack("<f", f.read(4))[0]
                    vz3law = unpack("<f", f.read(4))[0]
                    vw3law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4law = unpack("<f", f.read(4))[0]
                    vy4law = unpack("<f", f.read(4))[0]
                    vz4law = unpack("<f", f.read(4))[0]
                    vw4law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5law = unpack("<f", f.read(4))[0]
                    vy5law = unpack("<f", f.read(4))[0]
                    vz5law = unpack("<f", f.read(4))[0]
                    vw5law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6law = unpack("<f", f.read(4))[0]
                    vy6law = unpack("<f", f.read(4))[0]
                    vz6law = unpack("<f", f.read(4))[0]
                    vw6law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7law = unpack("<f", f.read(4))[0]
                    vy7law = unpack("<f", f.read(4))[0]
                    vz7law = unpack("<f", f.read(4))[0]
                    vw7law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8law = unpack("<f", f.read(4))[0]
                    vy8law = unpack("<f", f.read(4))[0]
                    vz8law = unpack("<f", f.read(4))[0]
                    vw8law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9law = unpack("<f", f.read(4))[0]
                    vy9law = unpack("<f", f.read(4))[0]
                    vz9law = unpack("<f", f.read(4))[0]
                    vw9law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10law = unpack("<f", f.read(4))[0]
                    vy10law = unpack("<f", f.read(4))[0]
                    vz10law = unpack("<f", f.read(4))[0]
                    vw10law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11law = unpack("<f", f.read(4))[0]
                    vy11law = unpack("<f", f.read(4))[0]
                    vz11law = unpack("<f", f.read(4))[0]
                    vw11law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12law = unpack("<f", f.read(4))[0]
                    vy12law = unpack("<f", f.read(4))[0]
                    vz12law = unpack("<f", f.read(4))[0]
                    vw12law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13law = unpack("<f", f.read(4))[0]
                    vy13law = unpack("<f", f.read(4))[0]
                    vz13law = unpack("<f", f.read(4))[0]
                    vw13law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13law = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14law = unpack("<f", f.read(4))[0]
                    vy14law = unpack("<f", f.read(4))[0]
                    vz14law = unpack("<f", f.read(4))[0]
                    vw14law = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14law = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lax = unpack("<f", f.read(4))[0]
                    vy1lax = unpack("<f", f.read(4))[0]
                    vz1lax = unpack("<f", f.read(4))[0]
                    vw1lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lax = unpack("<f", f.read(4))[0]
                    vy2lax = unpack("<f", f.read(4))[0]
                    vz2lax = unpack("<f", f.read(4))[0]
                    vw2lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lax = unpack("<f", f.read(4))[0]
                    vy3lax = unpack("<f", f.read(4))[0]
                    vz3lax = unpack("<f", f.read(4))[0]
                    vw3lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lax = unpack("<f", f.read(4))[0]
                    vy4lax = unpack("<f", f.read(4))[0]
                    vz4lax = unpack("<f", f.read(4))[0]
                    vw4lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lax = unpack("<f", f.read(4))[0]
                    vy5lax = unpack("<f", f.read(4))[0]
                    vz5lax = unpack("<f", f.read(4))[0]
                    vw5lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lax = unpack("<f", f.read(4))[0]
                    vy6lax = unpack("<f", f.read(4))[0]
                    vz6lax = unpack("<f", f.read(4))[0]
                    vw6lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lax = unpack("<f", f.read(4))[0]
                    vy7lax = unpack("<f", f.read(4))[0]
                    vz7lax = unpack("<f", f.read(4))[0]
                    vw7lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lax = unpack("<f", f.read(4))[0]
                    vy8lax = unpack("<f", f.read(4))[0]
                    vz8lax = unpack("<f", f.read(4))[0]
                    vw8lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lax = unpack("<f", f.read(4))[0]
                    vy9lax = unpack("<f", f.read(4))[0]
                    vz9lax = unpack("<f", f.read(4))[0]
                    vw9lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lax = unpack("<f", f.read(4))[0]
                    vy10lax = unpack("<f", f.read(4))[0]
                    vz10lax = unpack("<f", f.read(4))[0]
                    vw10lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lax = unpack("<f", f.read(4))[0]
                    vy11lax = unpack("<f", f.read(4))[0]
                    vz11lax = unpack("<f", f.read(4))[0]
                    vw11lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lax = unpack("<f", f.read(4))[0]
                    vy12lax = unpack("<f", f.read(4))[0]
                    vz12lax = unpack("<f", f.read(4))[0]
                    vw12lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lax = unpack("<f", f.read(4))[0]
                    vy13lax = unpack("<f", f.read(4))[0]
                    vz13lax = unpack("<f", f.read(4))[0]
                    vw13lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lax = unpack("<f", f.read(4))[0]
                    vy14lax = unpack("<f", f.read(4))[0]
                    vz14lax = unpack("<f", f.read(4))[0]
                    vw14lax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lax = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1lay = unpack("<f", f.read(4))[0]
                    vy1lay = unpack("<f", f.read(4))[0]
                    vz1lay = unpack("<f", f.read(4))[0]
                    vw1lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2lay = unpack("<f", f.read(4))[0]
                    vy2lay = unpack("<f", f.read(4))[0]
                    vz2lay = unpack("<f", f.read(4))[0]
                    vw2lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3lay = unpack("<f", f.read(4))[0]
                    vy3lay = unpack("<f", f.read(4))[0]
                    vz3lay = unpack("<f", f.read(4))[0]
                    vw3lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4lay = unpack("<f", f.read(4))[0]
                    vy4lay = unpack("<f", f.read(4))[0]
                    vz4lay = unpack("<f", f.read(4))[0]
                    vw4lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5lay = unpack("<f", f.read(4))[0]
                    vy5lay = unpack("<f", f.read(4))[0]
                    vz5lay = unpack("<f", f.read(4))[0]
                    vw5lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6lay = unpack("<f", f.read(4))[0]
                    vy6lay = unpack("<f", f.read(4))[0]
                    vz6lay = unpack("<f", f.read(4))[0]
                    vw6lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7lay = unpack("<f", f.read(4))[0]
                    vy7lay = unpack("<f", f.read(4))[0]
                    vz7lay = unpack("<f", f.read(4))[0]
                    vw7lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8lay = unpack("<f", f.read(4))[0]
                    vy8lay = unpack("<f", f.read(4))[0]
                    vz8lay = unpack("<f", f.read(4))[0]
                    vw8lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9lay = unpack("<f", f.read(4))[0]
                    vy9lay = unpack("<f", f.read(4))[0]
                    vz9lay = unpack("<f", f.read(4))[0]
                    vw9lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10lay = unpack("<f", f.read(4))[0]
                    vy10lay = unpack("<f", f.read(4))[0]
                    vz10lay = unpack("<f", f.read(4))[0]
                    vw10lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11lay = unpack("<f", f.read(4))[0]
                    vy11lay = unpack("<f", f.read(4))[0]
                    vz11lay = unpack("<f", f.read(4))[0]
                    vw11lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12lay = unpack("<f", f.read(4))[0]
                    vy12lay = unpack("<f", f.read(4))[0]
                    vz12lay = unpack("<f", f.read(4))[0]
                    vw12lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13lay = unpack("<f", f.read(4))[0]
                    vy13lay = unpack("<f", f.read(4))[0]
                    vz13lay = unpack("<f", f.read(4))[0]
                    vw13lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14lay = unpack("<f", f.read(4))[0]
                    vy14lay = unpack("<f", f.read(4))[0]
                    vz14lay = unpack("<f", f.read(4))[0]
                    vw14lay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14lay = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laz = unpack("<f", f.read(4))[0]
                    vy1laz = unpack("<f", f.read(4))[0]
                    vz1laz = unpack("<f", f.read(4))[0]
                    vw1laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laz = unpack("<f", f.read(4))[0]
                    vy2laz = unpack("<f", f.read(4))[0]
                    vz2laz = unpack("<f", f.read(4))[0]
                    vw2laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laz = unpack("<f", f.read(4))[0]
                    vy3laz = unpack("<f", f.read(4))[0]
                    vz3laz = unpack("<f", f.read(4))[0]
                    vw3laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laz = unpack("<f", f.read(4))[0]
                    vy4laz = unpack("<f", f.read(4))[0]
                    vz4laz = unpack("<f", f.read(4))[0]
                    vw4laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laz = unpack("<f", f.read(4))[0]
                    vy5laz = unpack("<f", f.read(4))[0]
                    vz5laz = unpack("<f", f.read(4))[0]
                    vw5laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laz = unpack("<f", f.read(4))[0]
                    vy6laz = unpack("<f", f.read(4))[0]
                    vz6laz = unpack("<f", f.read(4))[0]
                    vw6laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laz = unpack("<f", f.read(4))[0]
                    vy7laz = unpack("<f", f.read(4))[0]
                    vz7laz = unpack("<f", f.read(4))[0]
                    vw7laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laz = unpack("<f", f.read(4))[0]
                    vy8laz = unpack("<f", f.read(4))[0]
                    vz8laz = unpack("<f", f.read(4))[0]
                    vw8laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laz = unpack("<f", f.read(4))[0]
                    vy9laz = unpack("<f", f.read(4))[0]
                    vz9laz = unpack("<f", f.read(4))[0]
                    vw9laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laz = unpack("<f", f.read(4))[0]
                    vy10laz = unpack("<f", f.read(4))[0]
                    vz10laz = unpack("<f", f.read(4))[0]
                    vw10laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laz = unpack("<f", f.read(4))[0]
                    vy11laz = unpack("<f", f.read(4))[0]
                    vz11laz = unpack("<f", f.read(4))[0]
                    vw11laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laz = unpack("<f", f.read(4))[0]
                    vy12laz = unpack("<f", f.read(4))[0]
                    vz12laz = unpack("<f", f.read(4))[0]
                    vw12laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laz = unpack("<f", f.read(4))[0]
                    vy13laz = unpack("<f", f.read(4))[0]
                    vz13laz = unpack("<f", f.read(4))[0]
                    vw13laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laz = unpack("<f", f.read(4))[0]
                    vy14laz = unpack("<f", f.read(4))[0]
                    vz14laz = unpack("<f", f.read(4))[0]
                    vw14laz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laz = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaa = unpack("<f", f.read(4))[0]
                    vy1laaa = unpack("<f", f.read(4))[0]
                    vz1laaa = unpack("<f", f.read(4))[0]
                    vw1laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaa = unpack("<f", f.read(4))[0]
                    vy2laaa = unpack("<f", f.read(4))[0]
                    vz2laaa = unpack("<f", f.read(4))[0]
                    vw2laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaa = unpack("<f", f.read(4))[0]
                    vy3laaa = unpack("<f", f.read(4))[0]
                    vz3laaa = unpack("<f", f.read(4))[0]
                    vw3laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaa = unpack("<f", f.read(4))[0]
                    vy4laaa = unpack("<f", f.read(4))[0]
                    vz4laaa = unpack("<f", f.read(4))[0]
                    vw4laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaa = unpack("<f", f.read(4))[0]
                    vy5laaa = unpack("<f", f.read(4))[0]
                    vz5laaa = unpack("<f", f.read(4))[0]
                    vw5laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaa = unpack("<f", f.read(4))[0]
                    vy6laaa = unpack("<f", f.read(4))[0]
                    vz6laaa = unpack("<f", f.read(4))[0]
                    vw6laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaa = unpack("<f", f.read(4))[0]
                    vy7laaa = unpack("<f", f.read(4))[0]
                    vz7laaa = unpack("<f", f.read(4))[0]
                    vw7laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaa = unpack("<f", f.read(4))[0]
                    vy8laaa = unpack("<f", f.read(4))[0]
                    vz8laaa = unpack("<f", f.read(4))[0]
                    vw8laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaa = unpack("<f", f.read(4))[0]
                    vy9laaa = unpack("<f", f.read(4))[0]
                    vz9laaa = unpack("<f", f.read(4))[0]
                    vw9laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaa = unpack("<f", f.read(4))[0]
                    vy10laaa = unpack("<f", f.read(4))[0]
                    vz10laaa = unpack("<f", f.read(4))[0]
                    vw10laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaa = unpack("<f", f.read(4))[0]
                    vy11laaa = unpack("<f", f.read(4))[0]
                    vz11laaa = unpack("<f", f.read(4))[0]
                    vw11laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaa = unpack("<f", f.read(4))[0]
                    vy12laaa = unpack("<f", f.read(4))[0]
                    vz12laaa = unpack("<f", f.read(4))[0]
                    vw12laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaa = unpack("<f", f.read(4))[0]
                    vy13laaa = unpack("<f", f.read(4))[0]
                    vz13laaa = unpack("<f", f.read(4))[0]
                    vw13laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaa = unpack("<f", f.read(4))[0]
                    vy14laaa = unpack("<f", f.read(4))[0]
                    vz14laaa = unpack("<f", f.read(4))[0]
                    vw14laaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laab = unpack("<f", f.read(4))[0]
                    vy1laab = unpack("<f", f.read(4))[0]
                    vz1laab = unpack("<f", f.read(4))[0]
                    vw1laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laab = unpack("<f", f.read(4))[0]
                    vy2laab = unpack("<f", f.read(4))[0]
                    vz2laab = unpack("<f", f.read(4))[0]
                    vw2laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laab = unpack("<f", f.read(4))[0]
                    vy3laab = unpack("<f", f.read(4))[0]
                    vz3laab = unpack("<f", f.read(4))[0]
                    vw3laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laab = unpack("<f", f.read(4))[0]
                    vy4laab = unpack("<f", f.read(4))[0]
                    vz4laab = unpack("<f", f.read(4))[0]
                    vw4laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laab = unpack("<f", f.read(4))[0]
                    vy5laab = unpack("<f", f.read(4))[0]
                    vz5laab = unpack("<f", f.read(4))[0]
                    vw5laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laab = unpack("<f", f.read(4))[0]
                    vy6laab = unpack("<f", f.read(4))[0]
                    vz6laab = unpack("<f", f.read(4))[0]
                    vw6laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laab = unpack("<f", f.read(4))[0]
                    vy7laab = unpack("<f", f.read(4))[0]
                    vz7laab = unpack("<f", f.read(4))[0]
                    vw7laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laab = unpack("<f", f.read(4))[0]
                    vy8laab = unpack("<f", f.read(4))[0]
                    vz8laab = unpack("<f", f.read(4))[0]
                    vw8laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laab = unpack("<f", f.read(4))[0]
                    vy9laab = unpack("<f", f.read(4))[0]
                    vz9laab = unpack("<f", f.read(4))[0]
                    vw9laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laab = unpack("<f", f.read(4))[0]
                    vy10laab = unpack("<f", f.read(4))[0]
                    vz10laab = unpack("<f", f.read(4))[0]
                    vw10laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laab = unpack("<f", f.read(4))[0]
                    vy11laab = unpack("<f", f.read(4))[0]
                    vz11laab = unpack("<f", f.read(4))[0]
                    vw11laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laab = unpack("<f", f.read(4))[0]
                    vy12laab = unpack("<f", f.read(4))[0]
                    vz12laab = unpack("<f", f.read(4))[0]
                    vw12laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laab = unpack("<f", f.read(4))[0]
                    vy13laab = unpack("<f", f.read(4))[0]
                    vz13laab = unpack("<f", f.read(4))[0]
                    vw13laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laab = unpack("<f", f.read(4))[0]
                    vy14laab = unpack("<f", f.read(4))[0]
                    vz14laab = unpack("<f", f.read(4))[0]
                    vw14laab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laab = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laac = unpack("<f", f.read(4))[0]
                    vy1laac = unpack("<f", f.read(4))[0]
                    vz1laac = unpack("<f", f.read(4))[0]
                    vw1laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laac = unpack("<f", f.read(4))[0]
                    vy2laac = unpack("<f", f.read(4))[0]
                    vz2laac = unpack("<f", f.read(4))[0]
                    vw2laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laac = unpack("<f", f.read(4))[0]
                    vy3laac = unpack("<f", f.read(4))[0]
                    vz3laac = unpack("<f", f.read(4))[0]
                    vw3laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laac = unpack("<f", f.read(4))[0]
                    vy4laac = unpack("<f", f.read(4))[0]
                    vz4laac = unpack("<f", f.read(4))[0]
                    vw4laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laac = unpack("<f", f.read(4))[0]
                    vy5laac = unpack("<f", f.read(4))[0]
                    vz5laac = unpack("<f", f.read(4))[0]
                    vw5laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laac = unpack("<f", f.read(4))[0]
                    vy6laac = unpack("<f", f.read(4))[0]
                    vz6laac = unpack("<f", f.read(4))[0]
                    vw6laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laac = unpack("<f", f.read(4))[0]
                    vy7laac = unpack("<f", f.read(4))[0]
                    vz7laac = unpack("<f", f.read(4))[0]
                    vw7laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laac = unpack("<f", f.read(4))[0]
                    vy8laac = unpack("<f", f.read(4))[0]
                    vz8laac = unpack("<f", f.read(4))[0]
                    vw8laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laac = unpack("<f", f.read(4))[0]
                    vy9laac = unpack("<f", f.read(4))[0]
                    vz9laac = unpack("<f", f.read(4))[0]
                    vw9laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laac = unpack("<f", f.read(4))[0]
                    vy10laac = unpack("<f", f.read(4))[0]
                    vz10laac = unpack("<f", f.read(4))[0]
                    vw10laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laac = unpack("<f", f.read(4))[0]
                    vy11laac = unpack("<f", f.read(4))[0]
                    vz11laac = unpack("<f", f.read(4))[0]
                    vw11laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laac = unpack("<f", f.read(4))[0]
                    vy12laac = unpack("<f", f.read(4))[0]
                    vz12laac = unpack("<f", f.read(4))[0]
                    vw12laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laac = unpack("<f", f.read(4))[0]
                    vy13laac = unpack("<f", f.read(4))[0]
                    vz13laac = unpack("<f", f.read(4))[0]
                    vw13laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laac = unpack("<f", f.read(4))[0]
                    vy14laac = unpack("<f", f.read(4))[0]
                    vz14laac = unpack("<f", f.read(4))[0]
                    vw14laac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laac = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laad = unpack("<f", f.read(4))[0]
                    vy1laad = unpack("<f", f.read(4))[0]
                    vz1laad = unpack("<f", f.read(4))[0]
                    vw1laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laad = unpack("<f", f.read(4))[0]
                    vy2laad = unpack("<f", f.read(4))[0]
                    vz2laad = unpack("<f", f.read(4))[0]
                    vw2laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laad = unpack("<f", f.read(4))[0]
                    vy3laad = unpack("<f", f.read(4))[0]
                    vz3laad = unpack("<f", f.read(4))[0]
                    vw3laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laad = unpack("<f", f.read(4))[0]
                    vy4laad = unpack("<f", f.read(4))[0]
                    vz4laad = unpack("<f", f.read(4))[0]
                    vw4laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laad = unpack("<f", f.read(4))[0]
                    vy5laad = unpack("<f", f.read(4))[0]
                    vz5laad = unpack("<f", f.read(4))[0]
                    vw5laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laad = unpack("<f", f.read(4))[0]
                    vy6laad = unpack("<f", f.read(4))[0]
                    vz6laad = unpack("<f", f.read(4))[0]
                    vw6laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laad = unpack("<f", f.read(4))[0]
                    vy7laad = unpack("<f", f.read(4))[0]
                    vz7laad = unpack("<f", f.read(4))[0]
                    vw7laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laad = unpack("<f", f.read(4))[0]
                    vy8laad = unpack("<f", f.read(4))[0]
                    vz8laad = unpack("<f", f.read(4))[0]
                    vw8laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laad = unpack("<f", f.read(4))[0]
                    vy9laad = unpack("<f", f.read(4))[0]
                    vz9laad = unpack("<f", f.read(4))[0]
                    vw9laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laad = unpack("<f", f.read(4))[0]
                    vy10laad = unpack("<f", f.read(4))[0]
                    vz10laad = unpack("<f", f.read(4))[0]
                    vw10laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laad = unpack("<f", f.read(4))[0]
                    vy11laad = unpack("<f", f.read(4))[0]
                    vz11laad = unpack("<f", f.read(4))[0]
                    vw11laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laad = unpack("<f", f.read(4))[0]
                    vy12laad = unpack("<f", f.read(4))[0]
                    vz12laad = unpack("<f", f.read(4))[0]
                    vw12laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laad = unpack("<f", f.read(4))[0]
                    vy13laad = unpack("<f", f.read(4))[0]
                    vz13laad = unpack("<f", f.read(4))[0]
                    vw13laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laad = unpack("<f", f.read(4))[0]
                    vy14laad = unpack("<f", f.read(4))[0]
                    vz14laad = unpack("<f", f.read(4))[0]
                    vw14laad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laad = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laae = unpack("<f", f.read(4))[0]
                    vy1laae = unpack("<f", f.read(4))[0]
                    vz1laae = unpack("<f", f.read(4))[0]
                    vw1laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laae = unpack("<f", f.read(4))[0]
                    vy2laae = unpack("<f", f.read(4))[0]
                    vz2laae = unpack("<f", f.read(4))[0]
                    vw2laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laae = unpack("<f", f.read(4))[0]
                    vy3laae = unpack("<f", f.read(4))[0]
                    vz3laae = unpack("<f", f.read(4))[0]
                    vw3laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laae = unpack("<f", f.read(4))[0]
                    vy4laae = unpack("<f", f.read(4))[0]
                    vz4laae = unpack("<f", f.read(4))[0]
                    vw4laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laae = unpack("<f", f.read(4))[0]
                    vy5laae = unpack("<f", f.read(4))[0]
                    vz5laae = unpack("<f", f.read(4))[0]
                    vw5laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laae = unpack("<f", f.read(4))[0]
                    vy6laae = unpack("<f", f.read(4))[0]
                    vz6laae = unpack("<f", f.read(4))[0]
                    vw6laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laae = unpack("<f", f.read(4))[0]
                    vy7laae = unpack("<f", f.read(4))[0]
                    vz7laae = unpack("<f", f.read(4))[0]
                    vw7laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laae = unpack("<f", f.read(4))[0]
                    vy8laae = unpack("<f", f.read(4))[0]
                    vz8laae = unpack("<f", f.read(4))[0]
                    vw8laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laae = unpack("<f", f.read(4))[0]
                    vy9laae = unpack("<f", f.read(4))[0]
                    vz9laae = unpack("<f", f.read(4))[0]
                    vw9laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laae = unpack("<f", f.read(4))[0]
                    vy10laae = unpack("<f", f.read(4))[0]
                    vz10laae = unpack("<f", f.read(4))[0]
                    vw10laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laae = unpack("<f", f.read(4))[0]
                    vy11laae = unpack("<f", f.read(4))[0]
                    vz11laae = unpack("<f", f.read(4))[0]
                    vw11laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laae = unpack("<f", f.read(4))[0]
                    vy12laae = unpack("<f", f.read(4))[0]
                    vz12laae = unpack("<f", f.read(4))[0]
                    vw12laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laae = unpack("<f", f.read(4))[0]
                    vy13laae = unpack("<f", f.read(4))[0]
                    vz13laae = unpack("<f", f.read(4))[0]
                    vw13laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laae = unpack("<f", f.read(4))[0]
                    vy14laae = unpack("<f", f.read(4))[0]
                    vz14laae = unpack("<f", f.read(4))[0]
                    vw14laae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laae = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaf = unpack("<f", f.read(4))[0]
                    vy1laaf = unpack("<f", f.read(4))[0]
                    vz1laaf = unpack("<f", f.read(4))[0]
                    vw1laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaf = unpack("<f", f.read(4))[0]
                    vy2laaf = unpack("<f", f.read(4))[0]
                    vz2laaf = unpack("<f", f.read(4))[0]
                    vw2laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaf = unpack("<f", f.read(4))[0]
                    vy3laaf = unpack("<f", f.read(4))[0]
                    vz3laaf = unpack("<f", f.read(4))[0]
                    vw3laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaf = unpack("<f", f.read(4))[0]
                    vy4laaf = unpack("<f", f.read(4))[0]
                    vz4laaf = unpack("<f", f.read(4))[0]
                    vw4laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaf = unpack("<f", f.read(4))[0]
                    vy5laaf = unpack("<f", f.read(4))[0]
                    vz5laaf = unpack("<f", f.read(4))[0]
                    vw5laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaf = unpack("<f", f.read(4))[0]
                    vy6laaf = unpack("<f", f.read(4))[0]
                    vz6laaf = unpack("<f", f.read(4))[0]
                    vw6laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaf = unpack("<f", f.read(4))[0]
                    vy7laaf = unpack("<f", f.read(4))[0]
                    vz7laaf = unpack("<f", f.read(4))[0]
                    vw7laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaf = unpack("<f", f.read(4))[0]
                    vy8laaf = unpack("<f", f.read(4))[0]
                    vz8laaf = unpack("<f", f.read(4))[0]
                    vw8laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaf = unpack("<f", f.read(4))[0]
                    vy9laaf = unpack("<f", f.read(4))[0]
                    vz9laaf = unpack("<f", f.read(4))[0]
                    vw9laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaf = unpack("<f", f.read(4))[0]
                    vy10laaf = unpack("<f", f.read(4))[0]
                    vz10laaf = unpack("<f", f.read(4))[0]
                    vw10laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaf = unpack("<f", f.read(4))[0]
                    vy11laaf = unpack("<f", f.read(4))[0]
                    vz11laaf = unpack("<f", f.read(4))[0]
                    vw11laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaf = unpack("<f", f.read(4))[0]
                    vy12laaf = unpack("<f", f.read(4))[0]
                    vz12laaf = unpack("<f", f.read(4))[0]
                    vw12laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaf = unpack("<f", f.read(4))[0]
                    vy13laaf = unpack("<f", f.read(4))[0]
                    vz13laaf = unpack("<f", f.read(4))[0]
                    vw13laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaf = unpack("<f", f.read(4))[0]
                    vy14laaf = unpack("<f", f.read(4))[0]
                    vz14laaf = unpack("<f", f.read(4))[0]
                    vw14laaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laag = unpack("<f", f.read(4))[0]
                    vy1laag = unpack("<f", f.read(4))[0]
                    vz1laag = unpack("<f", f.read(4))[0]
                    vw1laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laag = unpack("<f", f.read(4))[0]
                    vy2laag = unpack("<f", f.read(4))[0]
                    vz2laag = unpack("<f", f.read(4))[0]
                    vw2laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laag = unpack("<f", f.read(4))[0]
                    vy3laag = unpack("<f", f.read(4))[0]
                    vz3laag = unpack("<f", f.read(4))[0]
                    vw3laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laag = unpack("<f", f.read(4))[0]
                    vy4laag = unpack("<f", f.read(4))[0]
                    vz4laag = unpack("<f", f.read(4))[0]
                    vw4laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laag = unpack("<f", f.read(4))[0]
                    vy5laag = unpack("<f", f.read(4))[0]
                    vz5laag = unpack("<f", f.read(4))[0]
                    vw5laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laag = unpack("<f", f.read(4))[0]
                    vy6laag = unpack("<f", f.read(4))[0]
                    vz6laag = unpack("<f", f.read(4))[0]
                    vw6laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laag = unpack("<f", f.read(4))[0]
                    vy7laag = unpack("<f", f.read(4))[0]
                    vz7laag = unpack("<f", f.read(4))[0]
                    vw7laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laag = unpack("<f", f.read(4))[0]
                    vy8laag = unpack("<f", f.read(4))[0]
                    vz8laag = unpack("<f", f.read(4))[0]
                    vw8laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laag = unpack("<f", f.read(4))[0]
                    vy9laag = unpack("<f", f.read(4))[0]
                    vz9laag = unpack("<f", f.read(4))[0]
                    vw9laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laag = unpack("<f", f.read(4))[0]
                    vy10laag = unpack("<f", f.read(4))[0]
                    vz10laag = unpack("<f", f.read(4))[0]
                    vw10laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laag = unpack("<f", f.read(4))[0]
                    vy11laag = unpack("<f", f.read(4))[0]
                    vz11laag = unpack("<f", f.read(4))[0]
                    vw11laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laag = unpack("<f", f.read(4))[0]
                    vy12laag = unpack("<f", f.read(4))[0]
                    vz12laag = unpack("<f", f.read(4))[0]
                    vw12laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laag = unpack("<f", f.read(4))[0]
                    vy13laag = unpack("<f", f.read(4))[0]
                    vz13laag = unpack("<f", f.read(4))[0]
                    vw13laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laag = unpack("<f", f.read(4))[0]
                    vy14laag = unpack("<f", f.read(4))[0]
                    vz14laag = unpack("<f", f.read(4))[0]
                    vw14laag = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laag = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laah = unpack("<f", f.read(4))[0]
                    vy1laah = unpack("<f", f.read(4))[0]
                    vz1laah = unpack("<f", f.read(4))[0]
                    vw1laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laah = unpack("<f", f.read(4))[0]
                    vy2laah = unpack("<f", f.read(4))[0]
                    vz2laah = unpack("<f", f.read(4))[0]
                    vw2laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laah = unpack("<f", f.read(4))[0]
                    vy3laah = unpack("<f", f.read(4))[0]
                    vz3laah = unpack("<f", f.read(4))[0]
                    vw3laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laah = unpack("<f", f.read(4))[0]
                    vy4laah = unpack("<f", f.read(4))[0]
                    vz4laah = unpack("<f", f.read(4))[0]
                    vw4laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laah = unpack("<f", f.read(4))[0]
                    vy5laah = unpack("<f", f.read(4))[0]
                    vz5laah = unpack("<f", f.read(4))[0]
                    vw5laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laah = unpack("<f", f.read(4))[0]
                    vy6laah = unpack("<f", f.read(4))[0]
                    vz6laah = unpack("<f", f.read(4))[0]
                    vw6laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laah = unpack("<f", f.read(4))[0]
                    vy7laah = unpack("<f", f.read(4))[0]
                    vz7laah = unpack("<f", f.read(4))[0]
                    vw7laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laah = unpack("<f", f.read(4))[0]
                    vy8laah = unpack("<f", f.read(4))[0]
                    vz8laah = unpack("<f", f.read(4))[0]
                    vw8laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laah = unpack("<f", f.read(4))[0]
                    vy9laah = unpack("<f", f.read(4))[0]
                    vz9laah = unpack("<f", f.read(4))[0]
                    vw9laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laah = unpack("<f", f.read(4))[0]
                    vy10laah = unpack("<f", f.read(4))[0]
                    vz10laah = unpack("<f", f.read(4))[0]
                    vw10laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laah = unpack("<f", f.read(4))[0]
                    vy11laah = unpack("<f", f.read(4))[0]
                    vz11laah = unpack("<f", f.read(4))[0]
                    vw11laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laah = unpack("<f", f.read(4))[0]
                    vy12laah = unpack("<f", f.read(4))[0]
                    vz12laah = unpack("<f", f.read(4))[0]
                    vw12laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laah = unpack("<f", f.read(4))[0]
                    vy13laah = unpack("<f", f.read(4))[0]
                    vz13laah = unpack("<f", f.read(4))[0]
                    vw13laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laah = unpack("<f", f.read(4))[0]
                    vy14laah = unpack("<f", f.read(4))[0]
                    vz14laah = unpack("<f", f.read(4))[0]
                    vw14laah = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laah = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laai = unpack("<f", f.read(4))[0]
                    vy1laai = unpack("<f", f.read(4))[0]
                    vz1laai = unpack("<f", f.read(4))[0]
                    vw1laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laai = unpack("<f", f.read(4))[0]
                    vy2laai = unpack("<f", f.read(4))[0]
                    vz2laai = unpack("<f", f.read(4))[0]
                    vw2laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laai = unpack("<f", f.read(4))[0]
                    vy3laai = unpack("<f", f.read(4))[0]
                    vz3laai = unpack("<f", f.read(4))[0]
                    vw3laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laai = unpack("<f", f.read(4))[0]
                    vy4laai = unpack("<f", f.read(4))[0]
                    vz4laai = unpack("<f", f.read(4))[0]
                    vw4laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laai = unpack("<f", f.read(4))[0]
                    vy5laai = unpack("<f", f.read(4))[0]
                    vz5laai = unpack("<f", f.read(4))[0]
                    vw5laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laai = unpack("<f", f.read(4))[0]
                    vy6laai = unpack("<f", f.read(4))[0]
                    vz6laai = unpack("<f", f.read(4))[0]
                    vw6laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laai = unpack("<f", f.read(4))[0]
                    vy7laai = unpack("<f", f.read(4))[0]
                    vz7laai = unpack("<f", f.read(4))[0]
                    vw7laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laai = unpack("<f", f.read(4))[0]
                    vy8laai = unpack("<f", f.read(4))[0]
                    vz8laai = unpack("<f", f.read(4))[0]
                    vw8laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laai = unpack("<f", f.read(4))[0]
                    vy9laai = unpack("<f", f.read(4))[0]
                    vz9laai = unpack("<f", f.read(4))[0]
                    vw9laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laai = unpack("<f", f.read(4))[0]
                    vy10laai = unpack("<f", f.read(4))[0]
                    vz10laai = unpack("<f", f.read(4))[0]
                    vw10laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laai = unpack("<f", f.read(4))[0]
                    vy11laai = unpack("<f", f.read(4))[0]
                    vz11laai = unpack("<f", f.read(4))[0]
                    vw11laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laai = unpack("<f", f.read(4))[0]
                    vy12laai = unpack("<f", f.read(4))[0]
                    vz12laai = unpack("<f", f.read(4))[0]
                    vw12laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laai = unpack("<f", f.read(4))[0]
                    vy13laai = unpack("<f", f.read(4))[0]
                    vz13laai = unpack("<f", f.read(4))[0]
                    vw13laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laai = unpack("<f", f.read(4))[0]
                    vy14laai = unpack("<f", f.read(4))[0]
                    vz14laai = unpack("<f", f.read(4))[0]
                    vw14laai = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laai = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaj = unpack("<f", f.read(4))[0]
                    vy1laaj = unpack("<f", f.read(4))[0]
                    vz1laaj = unpack("<f", f.read(4))[0]
                    vw1laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaj = unpack("<f", f.read(4))[0]
                    vy2laaj = unpack("<f", f.read(4))[0]
                    vz2laaj = unpack("<f", f.read(4))[0]
                    vw2laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaj = unpack("<f", f.read(4))[0]
                    vy3laaj = unpack("<f", f.read(4))[0]
                    vz3laaj = unpack("<f", f.read(4))[0]
                    vw3laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaj = unpack("<f", f.read(4))[0]
                    vy4laaj = unpack("<f", f.read(4))[0]
                    vz4laaj = unpack("<f", f.read(4))[0]
                    vw4laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaj = unpack("<f", f.read(4))[0]
                    vy5laaj = unpack("<f", f.read(4))[0]
                    vz5laaj = unpack("<f", f.read(4))[0]
                    vw5laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaj = unpack("<f", f.read(4))[0]
                    vy6laaj = unpack("<f", f.read(4))[0]
                    vz6laaj = unpack("<f", f.read(4))[0]
                    vw6laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaj = unpack("<f", f.read(4))[0]
                    vy7laaj = unpack("<f", f.read(4))[0]
                    vz7laaj = unpack("<f", f.read(4))[0]
                    vw7laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaj = unpack("<f", f.read(4))[0]
                    vy8laaj = unpack("<f", f.read(4))[0]
                    vz8laaj = unpack("<f", f.read(4))[0]
                    vw8laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaj = unpack("<f", f.read(4))[0]
                    vy9laaj = unpack("<f", f.read(4))[0]
                    vz9laaj = unpack("<f", f.read(4))[0]
                    vw9laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaj = unpack("<f", f.read(4))[0]
                    vy10laaj = unpack("<f", f.read(4))[0]
                    vz10laaj = unpack("<f", f.read(4))[0]
                    vw10laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaj = unpack("<f", f.read(4))[0]
                    vy11laaj = unpack("<f", f.read(4))[0]
                    vz11laaj = unpack("<f", f.read(4))[0]
                    vw11laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaj = unpack("<f", f.read(4))[0]
                    vy12laaj = unpack("<f", f.read(4))[0]
                    vz12laaj = unpack("<f", f.read(4))[0]
                    vw12laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaj = unpack("<f", f.read(4))[0]
                    vy13laaj = unpack("<f", f.read(4))[0]
                    vz13laaj = unpack("<f", f.read(4))[0]
                    vw13laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaj = unpack("<f", f.read(4))[0]
                    vy14laaj = unpack("<f", f.read(4))[0]
                    vz14laaj = unpack("<f", f.read(4))[0]
                    vw14laaj = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaj = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laak = unpack("<f", f.read(4))[0]
                    vy1laak = unpack("<f", f.read(4))[0]
                    vz1laak = unpack("<f", f.read(4))[0]
                    vw1laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laak = unpack("<f", f.read(4))[0]
                    vy2laak = unpack("<f", f.read(4))[0]
                    vz2laak = unpack("<f", f.read(4))[0]
                    vw2laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laak = unpack("<f", f.read(4))[0]
                    vy3laak = unpack("<f", f.read(4))[0]
                    vz3laak = unpack("<f", f.read(4))[0]
                    vw3laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laak = unpack("<f", f.read(4))[0]
                    vy4laak = unpack("<f", f.read(4))[0]
                    vz4laak = unpack("<f", f.read(4))[0]
                    vw4laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laak = unpack("<f", f.read(4))[0]
                    vy5laak = unpack("<f", f.read(4))[0]
                    vz5laak = unpack("<f", f.read(4))[0]
                    vw5laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laak = unpack("<f", f.read(4))[0]
                    vy6laak = unpack("<f", f.read(4))[0]
                    vz6laak = unpack("<f", f.read(4))[0]
                    vw6laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laak = unpack("<f", f.read(4))[0]
                    vy7laak = unpack("<f", f.read(4))[0]
                    vz7laak = unpack("<f", f.read(4))[0]
                    vw7laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laak = unpack("<f", f.read(4))[0]
                    vy8laak = unpack("<f", f.read(4))[0]
                    vz8laak = unpack("<f", f.read(4))[0]
                    vw8laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laak = unpack("<f", f.read(4))[0]
                    vy9laak = unpack("<f", f.read(4))[0]
                    vz9laak = unpack("<f", f.read(4))[0]
                    vw9laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laak = unpack("<f", f.read(4))[0]
                    vy10laak = unpack("<f", f.read(4))[0]
                    vz10laak = unpack("<f", f.read(4))[0]
                    vw10laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laak = unpack("<f", f.read(4))[0]
                    vy11laak = unpack("<f", f.read(4))[0]
                    vz11laak = unpack("<f", f.read(4))[0]
                    vw11laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laak = unpack("<f", f.read(4))[0]
                    vy12laak = unpack("<f", f.read(4))[0]
                    vz12laak = unpack("<f", f.read(4))[0]
                    vw12laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laak = unpack("<f", f.read(4))[0]
                    vy13laak = unpack("<f", f.read(4))[0]
                    vz13laak = unpack("<f", f.read(4))[0]
                    vw13laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laak = unpack("<f", f.read(4))[0]
                    vy14laak = unpack("<f", f.read(4))[0]
                    vz14laak = unpack("<f", f.read(4))[0]
                    vw14laak = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laak = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laal = unpack("<f", f.read(4))[0]
                    vy1laal = unpack("<f", f.read(4))[0]
                    vz1laal = unpack("<f", f.read(4))[0]
                    vw1laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laal = unpack("<f", f.read(4))[0]
                    vy2laal = unpack("<f", f.read(4))[0]
                    vz2laal = unpack("<f", f.read(4))[0]
                    vw2laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laal = unpack("<f", f.read(4))[0]
                    vy3laal = unpack("<f", f.read(4))[0]
                    vz3laal = unpack("<f", f.read(4))[0]
                    vw3laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laal = unpack("<f", f.read(4))[0]
                    vy4laal = unpack("<f", f.read(4))[0]
                    vz4laal = unpack("<f", f.read(4))[0]
                    vw4laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laal = unpack("<f", f.read(4))[0]
                    vy5laal = unpack("<f", f.read(4))[0]
                    vz5laal = unpack("<f", f.read(4))[0]
                    vw5laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laal = unpack("<f", f.read(4))[0]
                    vy6laal = unpack("<f", f.read(4))[0]
                    vz6laal = unpack("<f", f.read(4))[0]
                    vw6laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laal = unpack("<f", f.read(4))[0]
                    vy7laal = unpack("<f", f.read(4))[0]
                    vz7laal = unpack("<f", f.read(4))[0]
                    vw7laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laal = unpack("<f", f.read(4))[0]
                    vy8laal = unpack("<f", f.read(4))[0]
                    vz8laal = unpack("<f", f.read(4))[0]
                    vw8laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laal = unpack("<f", f.read(4))[0]
                    vy9laal = unpack("<f", f.read(4))[0]
                    vz9laal = unpack("<f", f.read(4))[0]
                    vw9laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laal = unpack("<f", f.read(4))[0]
                    vy10laal = unpack("<f", f.read(4))[0]
                    vz10laal = unpack("<f", f.read(4))[0]
                    vw10laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laal = unpack("<f", f.read(4))[0]
                    vy11laal = unpack("<f", f.read(4))[0]
                    vz11laal = unpack("<f", f.read(4))[0]
                    vw11laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laal = unpack("<f", f.read(4))[0]
                    vy12laal = unpack("<f", f.read(4))[0]
                    vz12laal = unpack("<f", f.read(4))[0]
                    vw12laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laal = unpack("<f", f.read(4))[0]
                    vy13laal = unpack("<f", f.read(4))[0]
                    vz13laal = unpack("<f", f.read(4))[0]
                    vw13laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laal = unpack("<f", f.read(4))[0]
                    vy14laal = unpack("<f", f.read(4))[0]
                    vz14laal = unpack("<f", f.read(4))[0]
                    vw14laal = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laal = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laam = unpack("<f", f.read(4))[0]
                    vy1laam = unpack("<f", f.read(4))[0]
                    vz1laam = unpack("<f", f.read(4))[0]
                    vw1laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laam = unpack("<f", f.read(4))[0]
                    vy2laam = unpack("<f", f.read(4))[0]
                    vz2laam = unpack("<f", f.read(4))[0]
                    vw2laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laam = unpack("<f", f.read(4))[0]
                    vy3laam = unpack("<f", f.read(4))[0]
                    vz3laam = unpack("<f", f.read(4))[0]
                    vw3laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laam = unpack("<f", f.read(4))[0]
                    vy4laam = unpack("<f", f.read(4))[0]
                    vz4laam = unpack("<f", f.read(4))[0]
                    vw4laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laam = unpack("<f", f.read(4))[0]
                    vy5laam = unpack("<f", f.read(4))[0]
                    vz5laam = unpack("<f", f.read(4))[0]
                    vw5laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laam = unpack("<f", f.read(4))[0]
                    vy6laam = unpack("<f", f.read(4))[0]
                    vz6laam = unpack("<f", f.read(4))[0]
                    vw6laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laam = unpack("<f", f.read(4))[0]
                    vy7laam = unpack("<f", f.read(4))[0]
                    vz7laam = unpack("<f", f.read(4))[0]
                    vw7laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laam = unpack("<f", f.read(4))[0]
                    vy8laam = unpack("<f", f.read(4))[0]
                    vz8laam = unpack("<f", f.read(4))[0]
                    vw8laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laam = unpack("<f", f.read(4))[0]
                    vy9laam = unpack("<f", f.read(4))[0]
                    vz9laam = unpack("<f", f.read(4))[0]
                    vw9laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laam = unpack("<f", f.read(4))[0]
                    vy10laam = unpack("<f", f.read(4))[0]
                    vz10laam = unpack("<f", f.read(4))[0]
                    vw10laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laam = unpack("<f", f.read(4))[0]
                    vy11laam = unpack("<f", f.read(4))[0]
                    vz11laam = unpack("<f", f.read(4))[0]
                    vw11laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laam = unpack("<f", f.read(4))[0]
                    vy12laam = unpack("<f", f.read(4))[0]
                    vz12laam = unpack("<f", f.read(4))[0]
                    vw12laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laam = unpack("<f", f.read(4))[0]
                    vy13laam = unpack("<f", f.read(4))[0]
                    vz13laam = unpack("<f", f.read(4))[0]
                    vw13laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laam = unpack("<f", f.read(4))[0]
                    vy14laam = unpack("<f", f.read(4))[0]
                    vz14laam = unpack("<f", f.read(4))[0]
                    vw14laam = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laam = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laan = unpack("<f", f.read(4))[0]
                    vy1laan = unpack("<f", f.read(4))[0]
                    vz1laan = unpack("<f", f.read(4))[0]
                    vw1laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laan = unpack("<f", f.read(4))[0]
                    vy2laan = unpack("<f", f.read(4))[0]
                    vz2laan = unpack("<f", f.read(4))[0]
                    vw2laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laan = unpack("<f", f.read(4))[0]
                    vy3laan = unpack("<f", f.read(4))[0]
                    vz3laan = unpack("<f", f.read(4))[0]
                    vw3laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laan = unpack("<f", f.read(4))[0]
                    vy4laan = unpack("<f", f.read(4))[0]
                    vz4laan = unpack("<f", f.read(4))[0]
                    vw4laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laan = unpack("<f", f.read(4))[0]
                    vy5laan = unpack("<f", f.read(4))[0]
                    vz5laan = unpack("<f", f.read(4))[0]
                    vw5laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laan = unpack("<f", f.read(4))[0]
                    vy6laan = unpack("<f", f.read(4))[0]
                    vz6laan = unpack("<f", f.read(4))[0]
                    vw6laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laan = unpack("<f", f.read(4))[0]
                    vy7laan = unpack("<f", f.read(4))[0]
                    vz7laan = unpack("<f", f.read(4))[0]
                    vw7laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laan = unpack("<f", f.read(4))[0]
                    vy8laan = unpack("<f", f.read(4))[0]
                    vz8laan = unpack("<f", f.read(4))[0]
                    vw8laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laan = unpack("<f", f.read(4))[0]
                    vy9laan = unpack("<f", f.read(4))[0]
                    vz9laan = unpack("<f", f.read(4))[0]
                    vw9laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laan = unpack("<f", f.read(4))[0]
                    vy10laan = unpack("<f", f.read(4))[0]
                    vz10laan = unpack("<f", f.read(4))[0]
                    vw10laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laan = unpack("<f", f.read(4))[0]
                    vy11laan = unpack("<f", f.read(4))[0]
                    vz11laan = unpack("<f", f.read(4))[0]
                    vw11laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laan = unpack("<f", f.read(4))[0]
                    vy12laan = unpack("<f", f.read(4))[0]
                    vz12laan = unpack("<f", f.read(4))[0]
                    vw12laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laan = unpack("<f", f.read(4))[0]
                    vy13laan = unpack("<f", f.read(4))[0]
                    vz13laan = unpack("<f", f.read(4))[0]
                    vw13laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laan = unpack("<f", f.read(4))[0]
                    vy14laan = unpack("<f", f.read(4))[0]
                    vz14laan = unpack("<f", f.read(4))[0]
                    vw14laan = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laan = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laao = unpack("<f", f.read(4))[0]
                    vy1laao = unpack("<f", f.read(4))[0]
                    vz1laao = unpack("<f", f.read(4))[0]
                    vw1laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laao = unpack("<f", f.read(4))[0]
                    vy2laao = unpack("<f", f.read(4))[0]
                    vz2laao = unpack("<f", f.read(4))[0]
                    vw2laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laao = unpack("<f", f.read(4))[0]
                    vy3laao = unpack("<f", f.read(4))[0]
                    vz3laao = unpack("<f", f.read(4))[0]
                    vw3laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laao = unpack("<f", f.read(4))[0]
                    vy4laao = unpack("<f", f.read(4))[0]
                    vz4laao = unpack("<f", f.read(4))[0]
                    vw4laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laao = unpack("<f", f.read(4))[0]
                    vy5laao = unpack("<f", f.read(4))[0]
                    vz5laao = unpack("<f", f.read(4))[0]
                    vw5laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laao = unpack("<f", f.read(4))[0]
                    vy6laao = unpack("<f", f.read(4))[0]
                    vz6laao = unpack("<f", f.read(4))[0]
                    vw6laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laao = unpack("<f", f.read(4))[0]
                    vy7laao = unpack("<f", f.read(4))[0]
                    vz7laao = unpack("<f", f.read(4))[0]
                    vw7laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laao = unpack("<f", f.read(4))[0]
                    vy8laao = unpack("<f", f.read(4))[0]
                    vz8laao = unpack("<f", f.read(4))[0]
                    vw8laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laao = unpack("<f", f.read(4))[0]
                    vy9laao = unpack("<f", f.read(4))[0]
                    vz9laao = unpack("<f", f.read(4))[0]
                    vw9laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laao = unpack("<f", f.read(4))[0]
                    vy10laao = unpack("<f", f.read(4))[0]
                    vz10laao = unpack("<f", f.read(4))[0]
                    vw10laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laao = unpack("<f", f.read(4))[0]
                    vy11laao = unpack("<f", f.read(4))[0]
                    vz11laao = unpack("<f", f.read(4))[0]
                    vw11laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laao = unpack("<f", f.read(4))[0]
                    vy12laao = unpack("<f", f.read(4))[0]
                    vz12laao = unpack("<f", f.read(4))[0]
                    vw12laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laao = unpack("<f", f.read(4))[0]
                    vy13laao = unpack("<f", f.read(4))[0]
                    vz13laao = unpack("<f", f.read(4))[0]
                    vw13laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laao = unpack("<f", f.read(4))[0]
                    vy14laao = unpack("<f", f.read(4))[0]
                    vz14laao = unpack("<f", f.read(4))[0]
                    vw14laao = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laao = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laap = unpack("<f", f.read(4))[0]
                    vy1laap = unpack("<f", f.read(4))[0]
                    vz1laap = unpack("<f", f.read(4))[0]
                    vw1laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laap = unpack("<f", f.read(4))[0]
                    vy2laap = unpack("<f", f.read(4))[0]
                    vz2laap = unpack("<f", f.read(4))[0]
                    vw2laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laap = unpack("<f", f.read(4))[0]
                    vy3laap = unpack("<f", f.read(4))[0]
                    vz3laap = unpack("<f", f.read(4))[0]
                    vw3laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laap = unpack("<f", f.read(4))[0]
                    vy4laap = unpack("<f", f.read(4))[0]
                    vz4laap = unpack("<f", f.read(4))[0]
                    vw4laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laap = unpack("<f", f.read(4))[0]
                    vy5laap = unpack("<f", f.read(4))[0]
                    vz5laap = unpack("<f", f.read(4))[0]
                    vw5laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laap = unpack("<f", f.read(4))[0]
                    vy6laap = unpack("<f", f.read(4))[0]
                    vz6laap = unpack("<f", f.read(4))[0]
                    vw6laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laap = unpack("<f", f.read(4))[0]
                    vy7laap = unpack("<f", f.read(4))[0]
                    vz7laap = unpack("<f", f.read(4))[0]
                    vw7laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laap = unpack("<f", f.read(4))[0]
                    vy8laap = unpack("<f", f.read(4))[0]
                    vz8laap = unpack("<f", f.read(4))[0]
                    vw8laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laap = unpack("<f", f.read(4))[0]
                    vy9laap = unpack("<f", f.read(4))[0]
                    vz9laap = unpack("<f", f.read(4))[0]
                    vw9laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laap = unpack("<f", f.read(4))[0]
                    vy10laap = unpack("<f", f.read(4))[0]
                    vz10laap = unpack("<f", f.read(4))[0]
                    vw10laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laap = unpack("<f", f.read(4))[0]
                    vy11laap = unpack("<f", f.read(4))[0]
                    vz11laap = unpack("<f", f.read(4))[0]
                    vw11laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laap = unpack("<f", f.read(4))[0]
                    vy12laap = unpack("<f", f.read(4))[0]
                    vz12laap = unpack("<f", f.read(4))[0]
                    vw12laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laap = unpack("<f", f.read(4))[0]
                    vy13laap = unpack("<f", f.read(4))[0]
                    vz13laap = unpack("<f", f.read(4))[0]
                    vw13laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laap = unpack("<f", f.read(4))[0]
                    vy14laap = unpack("<f", f.read(4))[0]
                    vz14laap = unpack("<f", f.read(4))[0]
                    vw14laap = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laap = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaq = unpack("<f", f.read(4))[0]
                    vy1laaq = unpack("<f", f.read(4))[0]
                    vz1laaq = unpack("<f", f.read(4))[0]
                    vw1laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaq = unpack("<f", f.read(4))[0]
                    vy2laaq = unpack("<f", f.read(4))[0]
                    vz2laaq = unpack("<f", f.read(4))[0]
                    vw2laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaq = unpack("<f", f.read(4))[0]
                    vy3laaq = unpack("<f", f.read(4))[0]
                    vz3laaq = unpack("<f", f.read(4))[0]
                    vw3laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaq = unpack("<f", f.read(4))[0]
                    vy4laaq = unpack("<f", f.read(4))[0]
                    vz4laaq = unpack("<f", f.read(4))[0]
                    vw4laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaq = unpack("<f", f.read(4))[0]
                    vy5laaq = unpack("<f", f.read(4))[0]
                    vz5laaq = unpack("<f", f.read(4))[0]
                    vw5laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaq = unpack("<f", f.read(4))[0]
                    vy6laaq = unpack("<f", f.read(4))[0]
                    vz6laaq = unpack("<f", f.read(4))[0]
                    vw6laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaq = unpack("<f", f.read(4))[0]
                    vy7laaq = unpack("<f", f.read(4))[0]
                    vz7laaq = unpack("<f", f.read(4))[0]
                    vw7laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaq = unpack("<f", f.read(4))[0]
                    vy8laaq = unpack("<f", f.read(4))[0]
                    vz8laaq = unpack("<f", f.read(4))[0]
                    vw8laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaq = unpack("<f", f.read(4))[0]
                    vy9laaq = unpack("<f", f.read(4))[0]
                    vz9laaq = unpack("<f", f.read(4))[0]
                    vw9laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaq = unpack("<f", f.read(4))[0]
                    vy10laaq = unpack("<f", f.read(4))[0]
                    vz10laaq = unpack("<f", f.read(4))[0]
                    vw10laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaq = unpack("<f", f.read(4))[0]
                    vy11laaq = unpack("<f", f.read(4))[0]
                    vz11laaq = unpack("<f", f.read(4))[0]
                    vw11laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaq = unpack("<f", f.read(4))[0]
                    vy12laaq = unpack("<f", f.read(4))[0]
                    vz12laaq = unpack("<f", f.read(4))[0]
                    vw12laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaq = unpack("<f", f.read(4))[0]
                    vy13laaq = unpack("<f", f.read(4))[0]
                    vz13laaq = unpack("<f", f.read(4))[0]
                    vw13laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaq = unpack("<f", f.read(4))[0]
                    vy14laaq = unpack("<f", f.read(4))[0]
                    vz14laaq = unpack("<f", f.read(4))[0]
                    vw14laaq = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaq = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laar = unpack("<f", f.read(4))[0]
                    vy1laar = unpack("<f", f.read(4))[0]
                    vz1laar = unpack("<f", f.read(4))[0]
                    vw1laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laar = unpack("<f", f.read(4))[0]
                    vy2laar = unpack("<f", f.read(4))[0]
                    vz2laar = unpack("<f", f.read(4))[0]
                    vw2laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laar = unpack("<f", f.read(4))[0]
                    vy3laar = unpack("<f", f.read(4))[0]
                    vz3laar = unpack("<f", f.read(4))[0]
                    vw3laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laar = unpack("<f", f.read(4))[0]
                    vy4laar = unpack("<f", f.read(4))[0]
                    vz4laar = unpack("<f", f.read(4))[0]
                    vw4laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laar = unpack("<f", f.read(4))[0]
                    vy5laar = unpack("<f", f.read(4))[0]
                    vz5laar = unpack("<f", f.read(4))[0]
                    vw5laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laar = unpack("<f", f.read(4))[0]
                    vy6laar = unpack("<f", f.read(4))[0]
                    vz6laar = unpack("<f", f.read(4))[0]
                    vw6laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laar = unpack("<f", f.read(4))[0]
                    vy7laar = unpack("<f", f.read(4))[0]
                    vz7laar = unpack("<f", f.read(4))[0]
                    vw7laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laar = unpack("<f", f.read(4))[0]
                    vy8laar = unpack("<f", f.read(4))[0]
                    vz8laar = unpack("<f", f.read(4))[0]
                    vw8laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laar = unpack("<f", f.read(4))[0]
                    vy9laar = unpack("<f", f.read(4))[0]
                    vz9laar = unpack("<f", f.read(4))[0]
                    vw9laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laar = unpack("<f", f.read(4))[0]
                    vy10laar = unpack("<f", f.read(4))[0]
                    vz10laar = unpack("<f", f.read(4))[0]
                    vw10laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laar = unpack("<f", f.read(4))[0]
                    vy11laar = unpack("<f", f.read(4))[0]
                    vz11laar = unpack("<f", f.read(4))[0]
                    vw11laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laar = unpack("<f", f.read(4))[0]
                    vy12laar = unpack("<f", f.read(4))[0]
                    vz12laar = unpack("<f", f.read(4))[0]
                    vw12laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laar = unpack("<f", f.read(4))[0]
                    vy13laar = unpack("<f", f.read(4))[0]
                    vz13laar = unpack("<f", f.read(4))[0]
                    vw13laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laar = unpack("<f", f.read(4))[0]
                    vy14laar = unpack("<f", f.read(4))[0]
                    vz14laar = unpack("<f", f.read(4))[0]
                    vw14laar = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laar = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laas = unpack("<f", f.read(4))[0]
                    vy1laas = unpack("<f", f.read(4))[0]
                    vz1laas = unpack("<f", f.read(4))[0]
                    vw1laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laas = unpack("<f", f.read(4))[0]
                    vy2laas = unpack("<f", f.read(4))[0]
                    vz2laas = unpack("<f", f.read(4))[0]
                    vw2laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laas = unpack("<f", f.read(4))[0]
                    vy3laas = unpack("<f", f.read(4))[0]
                    vz3laas = unpack("<f", f.read(4))[0]
                    vw3laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laas = unpack("<f", f.read(4))[0]
                    vy4laas = unpack("<f", f.read(4))[0]
                    vz4laas = unpack("<f", f.read(4))[0]
                    vw4laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laas = unpack("<f", f.read(4))[0]
                    vy5laas = unpack("<f", f.read(4))[0]
                    vz5laas = unpack("<f", f.read(4))[0]
                    vw5laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laas = unpack("<f", f.read(4))[0]
                    vy6laas = unpack("<f", f.read(4))[0]
                    vz6laas = unpack("<f", f.read(4))[0]
                    vw6laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laas = unpack("<f", f.read(4))[0]
                    vy7laas = unpack("<f", f.read(4))[0]
                    vz7laas = unpack("<f", f.read(4))[0]
                    vw7laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laas = unpack("<f", f.read(4))[0]
                    vy8laas = unpack("<f", f.read(4))[0]
                    vz8laas = unpack("<f", f.read(4))[0]
                    vw8laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laas = unpack("<f", f.read(4))[0]
                    vy9laas = unpack("<f", f.read(4))[0]
                    vz9laas = unpack("<f", f.read(4))[0]
                    vw9laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laas = unpack("<f", f.read(4))[0]
                    vy10laas = unpack("<f", f.read(4))[0]
                    vz10laas = unpack("<f", f.read(4))[0]
                    vw10laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laas = unpack("<f", f.read(4))[0]
                    vy11laas = unpack("<f", f.read(4))[0]
                    vz11laas = unpack("<f", f.read(4))[0]
                    vw11laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laas = unpack("<f", f.read(4))[0]
                    vy12laas = unpack("<f", f.read(4))[0]
                    vz12laas = unpack("<f", f.read(4))[0]
                    vw12laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laas = unpack("<f", f.read(4))[0]
                    vy13laas = unpack("<f", f.read(4))[0]
                    vz13laas = unpack("<f", f.read(4))[0]
                    vw13laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laas = unpack("<f", f.read(4))[0]
                    vy14laas = unpack("<f", f.read(4))[0]
                    vz14laas = unpack("<f", f.read(4))[0]
                    vw14laas = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laas = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laat = unpack("<f", f.read(4))[0]
                    vy1laat = unpack("<f", f.read(4))[0]
                    vz1laat = unpack("<f", f.read(4))[0]
                    vw1laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laat = unpack("<f", f.read(4))[0]
                    vy2laat = unpack("<f", f.read(4))[0]
                    vz2laat = unpack("<f", f.read(4))[0]
                    vw2laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laat = unpack("<f", f.read(4))[0]
                    vy3laat = unpack("<f", f.read(4))[0]
                    vz3laat = unpack("<f", f.read(4))[0]
                    vw3laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laat = unpack("<f", f.read(4))[0]
                    vy4laat = unpack("<f", f.read(4))[0]
                    vz4laat = unpack("<f", f.read(4))[0]
                    vw4laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laat = unpack("<f", f.read(4))[0]
                    vy5laat = unpack("<f", f.read(4))[0]
                    vz5laat = unpack("<f", f.read(4))[0]
                    vw5laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laat = unpack("<f", f.read(4))[0]
                    vy6laat = unpack("<f", f.read(4))[0]
                    vz6laat = unpack("<f", f.read(4))[0]
                    vw6laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laat = unpack("<f", f.read(4))[0]
                    vy7laat = unpack("<f", f.read(4))[0]
                    vz7laat = unpack("<f", f.read(4))[0]
                    vw7laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laat = unpack("<f", f.read(4))[0]
                    vy8laat = unpack("<f", f.read(4))[0]
                    vz8laat = unpack("<f", f.read(4))[0]
                    vw8laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laat = unpack("<f", f.read(4))[0]
                    vy9laat = unpack("<f", f.read(4))[0]
                    vz9laat = unpack("<f", f.read(4))[0]
                    vw9laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laat = unpack("<f", f.read(4))[0]
                    vy10laat = unpack("<f", f.read(4))[0]
                    vz10laat = unpack("<f", f.read(4))[0]
                    vw10laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laat = unpack("<f", f.read(4))[0]
                    vy11laat = unpack("<f", f.read(4))[0]
                    vz11laat = unpack("<f", f.read(4))[0]
                    vw11laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laat = unpack("<f", f.read(4))[0]
                    vy12laat = unpack("<f", f.read(4))[0]
                    vz12laat = unpack("<f", f.read(4))[0]
                    vw12laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laat = unpack("<f", f.read(4))[0]
                    vy13laat = unpack("<f", f.read(4))[0]
                    vz13laat = unpack("<f", f.read(4))[0]
                    vw13laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laat = unpack("<f", f.read(4))[0]
                    vy14laat = unpack("<f", f.read(4))[0]
                    vz14laat = unpack("<f", f.read(4))[0]
                    vw14laat = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laat = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laau = unpack("<f", f.read(4))[0]
                    vy1laau = unpack("<f", f.read(4))[0]
                    vz1laau = unpack("<f", f.read(4))[0]
                    vw1laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laau = unpack("<f", f.read(4))[0]
                    vy2laau = unpack("<f", f.read(4))[0]
                    vz2laau = unpack("<f", f.read(4))[0]
                    vw2laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laau = unpack("<f", f.read(4))[0]
                    vy3laau = unpack("<f", f.read(4))[0]
                    vz3laau = unpack("<f", f.read(4))[0]
                    vw3laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laau = unpack("<f", f.read(4))[0]
                    vy4laau = unpack("<f", f.read(4))[0]
                    vz4laau = unpack("<f", f.read(4))[0]
                    vw4laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laau = unpack("<f", f.read(4))[0]
                    vy5laau = unpack("<f", f.read(4))[0]
                    vz5laau = unpack("<f", f.read(4))[0]
                    vw5laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laau = unpack("<f", f.read(4))[0]
                    vy6laau = unpack("<f", f.read(4))[0]
                    vz6laau = unpack("<f", f.read(4))[0]
                    vw6laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laau = unpack("<f", f.read(4))[0]
                    vy7laau = unpack("<f", f.read(4))[0]
                    vz7laau = unpack("<f", f.read(4))[0]
                    vw7laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laau = unpack("<f", f.read(4))[0]
                    vy8laau = unpack("<f", f.read(4))[0]
                    vz8laau = unpack("<f", f.read(4))[0]
                    vw8laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laau = unpack("<f", f.read(4))[0]
                    vy9laau = unpack("<f", f.read(4))[0]
                    vz9laau = unpack("<f", f.read(4))[0]
                    vw9laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laau = unpack("<f", f.read(4))[0]
                    vy10laau = unpack("<f", f.read(4))[0]
                    vz10laau = unpack("<f", f.read(4))[0]
                    vw10laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laau = unpack("<f", f.read(4))[0]
                    vy11laau = unpack("<f", f.read(4))[0]
                    vz11laau = unpack("<f", f.read(4))[0]
                    vw11laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laau = unpack("<f", f.read(4))[0]
                    vy12laau = unpack("<f", f.read(4))[0]
                    vz12laau = unpack("<f", f.read(4))[0]
                    vw12laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laau = unpack("<f", f.read(4))[0]
                    vy13laau = unpack("<f", f.read(4))[0]
                    vz13laau = unpack("<f", f.read(4))[0]
                    vw13laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laau = unpack("<f", f.read(4))[0]
                    vy14laau = unpack("<f", f.read(4))[0]
                    vz14laau = unpack("<f", f.read(4))[0]
                    vw14laau = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laau = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laav = unpack("<f", f.read(4))[0]
                    vy1laav = unpack("<f", f.read(4))[0]
                    vz1laav = unpack("<f", f.read(4))[0]
                    vw1laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laav = unpack("<f", f.read(4))[0]
                    vy2laav = unpack("<f", f.read(4))[0]
                    vz2laav = unpack("<f", f.read(4))[0]
                    vw2laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laav = unpack("<f", f.read(4))[0]
                    vy3laav = unpack("<f", f.read(4))[0]
                    vz3laav = unpack("<f", f.read(4))[0]
                    vw3laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laav = unpack("<f", f.read(4))[0]
                    vy4laav = unpack("<f", f.read(4))[0]
                    vz4laav = unpack("<f", f.read(4))[0]
                    vw4laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laav = unpack("<f", f.read(4))[0]
                    vy5laav = unpack("<f", f.read(4))[0]
                    vz5laav = unpack("<f", f.read(4))[0]
                    vw5laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laav = unpack("<f", f.read(4))[0]
                    vy6laav = unpack("<f", f.read(4))[0]
                    vz6laav = unpack("<f", f.read(4))[0]
                    vw6laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laav = unpack("<f", f.read(4))[0]
                    vy7laav = unpack("<f", f.read(4))[0]
                    vz7laav = unpack("<f", f.read(4))[0]
                    vw7laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laav = unpack("<f", f.read(4))[0]
                    vy8laav = unpack("<f", f.read(4))[0]
                    vz8laav = unpack("<f", f.read(4))[0]
                    vw8laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laav = unpack("<f", f.read(4))[0]
                    vy9laav = unpack("<f", f.read(4))[0]
                    vz9laav = unpack("<f", f.read(4))[0]
                    vw9laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laav = unpack("<f", f.read(4))[0]
                    vy10laav = unpack("<f", f.read(4))[0]
                    vz10laav = unpack("<f", f.read(4))[0]
                    vw10laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laav = unpack("<f", f.read(4))[0]
                    vy11laav = unpack("<f", f.read(4))[0]
                    vz11laav = unpack("<f", f.read(4))[0]
                    vw11laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laav = unpack("<f", f.read(4))[0]
                    vy12laav = unpack("<f", f.read(4))[0]
                    vz12laav = unpack("<f", f.read(4))[0]
                    vw12laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laav = unpack("<f", f.read(4))[0]
                    vy13laav = unpack("<f", f.read(4))[0]
                    vz13laav = unpack("<f", f.read(4))[0]
                    vw13laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laav = unpack("<f", f.read(4))[0]
                    vy14laav = unpack("<f", f.read(4))[0]
                    vz14laav = unpack("<f", f.read(4))[0]
                    vw14laav = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laav = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaw = unpack("<f", f.read(4))[0]
                    vy1laaw = unpack("<f", f.read(4))[0]
                    vz1laaw = unpack("<f", f.read(4))[0]
                    vw1laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaw = unpack("<f", f.read(4))[0]
                    vy2laaw = unpack("<f", f.read(4))[0]
                    vz2laaw = unpack("<f", f.read(4))[0]
                    vw2laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaw = unpack("<f", f.read(4))[0]
                    vy3laaw = unpack("<f", f.read(4))[0]
                    vz3laaw = unpack("<f", f.read(4))[0]
                    vw3laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaw = unpack("<f", f.read(4))[0]
                    vy4laaw = unpack("<f", f.read(4))[0]
                    vz4laaw = unpack("<f", f.read(4))[0]
                    vw4laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaw = unpack("<f", f.read(4))[0]
                    vy5laaw = unpack("<f", f.read(4))[0]
                    vz5laaw = unpack("<f", f.read(4))[0]
                    vw5laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaw = unpack("<f", f.read(4))[0]
                    vy6laaw = unpack("<f", f.read(4))[0]
                    vz6laaw = unpack("<f", f.read(4))[0]
                    vw6laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaw = unpack("<f", f.read(4))[0]
                    vy7laaw = unpack("<f", f.read(4))[0]
                    vz7laaw = unpack("<f", f.read(4))[0]
                    vw7laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaw = unpack("<f", f.read(4))[0]
                    vy8laaw = unpack("<f", f.read(4))[0]
                    vz8laaw = unpack("<f", f.read(4))[0]
                    vw8laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaw = unpack("<f", f.read(4))[0]
                    vy9laaw = unpack("<f", f.read(4))[0]
                    vz9laaw = unpack("<f", f.read(4))[0]
                    vw9laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaw = unpack("<f", f.read(4))[0]
                    vy10laaw = unpack("<f", f.read(4))[0]
                    vz10laaw = unpack("<f", f.read(4))[0]
                    vw10laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaw = unpack("<f", f.read(4))[0]
                    vy11laaw = unpack("<f", f.read(4))[0]
                    vz11laaw = unpack("<f", f.read(4))[0]
                    vw11laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaw = unpack("<f", f.read(4))[0]
                    vy12laaw = unpack("<f", f.read(4))[0]
                    vz12laaw = unpack("<f", f.read(4))[0]
                    vw12laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaw = unpack("<f", f.read(4))[0]
                    vy13laaw = unpack("<f", f.read(4))[0]
                    vz13laaw = unpack("<f", f.read(4))[0]
                    vw13laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaw = unpack("<f", f.read(4))[0]
                    vy14laaw = unpack("<f", f.read(4))[0]
                    vz14laaw = unpack("<f", f.read(4))[0]
                    vw14laaw = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaw = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laax = unpack("<f", f.read(4))[0]
                    vy1laax = unpack("<f", f.read(4))[0]
                    vz1laax = unpack("<f", f.read(4))[0]
                    vw1laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laax = unpack("<f", f.read(4))[0]
                    vy2laax = unpack("<f", f.read(4))[0]
                    vz2laax = unpack("<f", f.read(4))[0]
                    vw2laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laax = unpack("<f", f.read(4))[0]
                    vy3laax = unpack("<f", f.read(4))[0]
                    vz3laax = unpack("<f", f.read(4))[0]
                    vw3laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laax = unpack("<f", f.read(4))[0]
                    vy4laax = unpack("<f", f.read(4))[0]
                    vz4laax = unpack("<f", f.read(4))[0]
                    vw4laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laax = unpack("<f", f.read(4))[0]
                    vy5laax = unpack("<f", f.read(4))[0]
                    vz5laax = unpack("<f", f.read(4))[0]
                    vw5laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laax = unpack("<f", f.read(4))[0]
                    vy6laax = unpack("<f", f.read(4))[0]
                    vz6laax = unpack("<f", f.read(4))[0]
                    vw6laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laax = unpack("<f", f.read(4))[0]
                    vy7laax = unpack("<f", f.read(4))[0]
                    vz7laax = unpack("<f", f.read(4))[0]
                    vw7laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laax = unpack("<f", f.read(4))[0]
                    vy8laax = unpack("<f", f.read(4))[0]
                    vz8laax = unpack("<f", f.read(4))[0]
                    vw8laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laax = unpack("<f", f.read(4))[0]
                    vy9laax = unpack("<f", f.read(4))[0]
                    vz9laax = unpack("<f", f.read(4))[0]
                    vw9laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laax = unpack("<f", f.read(4))[0]
                    vy10laax = unpack("<f", f.read(4))[0]
                    vz10laax = unpack("<f", f.read(4))[0]
                    vw10laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laax = unpack("<f", f.read(4))[0]
                    vy11laax = unpack("<f", f.read(4))[0]
                    vz11laax = unpack("<f", f.read(4))[0]
                    vw11laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laax = unpack("<f", f.read(4))[0]
                    vy12laax = unpack("<f", f.read(4))[0]
                    vz12laax = unpack("<f", f.read(4))[0]
                    vw12laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laax = unpack("<f", f.read(4))[0]
                    vy13laax = unpack("<f", f.read(4))[0]
                    vz13laax = unpack("<f", f.read(4))[0]
                    vw13laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laax = unpack("<f", f.read(4))[0]
                    vy14laax = unpack("<f", f.read(4))[0]
                    vz14laax = unpack("<f", f.read(4))[0]
                    vw14laax = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laax = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laay = unpack("<f", f.read(4))[0]
                    vy1laay = unpack("<f", f.read(4))[0]
                    vz1laay = unpack("<f", f.read(4))[0]
                    vw1laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laay = unpack("<f", f.read(4))[0]
                    vy2laay = unpack("<f", f.read(4))[0]
                    vz2laay = unpack("<f", f.read(4))[0]
                    vw2laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laay = unpack("<f", f.read(4))[0]
                    vy3laay = unpack("<f", f.read(4))[0]
                    vz3laay = unpack("<f", f.read(4))[0]
                    vw3laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laay = unpack("<f", f.read(4))[0]
                    vy4laay = unpack("<f", f.read(4))[0]
                    vz4laay = unpack("<f", f.read(4))[0]
                    vw4laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laay = unpack("<f", f.read(4))[0]
                    vy5laay = unpack("<f", f.read(4))[0]
                    vz5laay = unpack("<f", f.read(4))[0]
                    vw5laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laay = unpack("<f", f.read(4))[0]
                    vy6laay = unpack("<f", f.read(4))[0]
                    vz6laay = unpack("<f", f.read(4))[0]
                    vw6laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laay = unpack("<f", f.read(4))[0]
                    vy7laay = unpack("<f", f.read(4))[0]
                    vz7laay = unpack("<f", f.read(4))[0]
                    vw7laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laay = unpack("<f", f.read(4))[0]
                    vy8laay = unpack("<f", f.read(4))[0]
                    vz8laay = unpack("<f", f.read(4))[0]
                    vw8laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laay = unpack("<f", f.read(4))[0]
                    vy9laay = unpack("<f", f.read(4))[0]
                    vz9laay = unpack("<f", f.read(4))[0]
                    vw9laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laay = unpack("<f", f.read(4))[0]
                    vy10laay = unpack("<f", f.read(4))[0]
                    vz10laay = unpack("<f", f.read(4))[0]
                    vw10laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laay = unpack("<f", f.read(4))[0]
                    vy11laay = unpack("<f", f.read(4))[0]
                    vz11laay = unpack("<f", f.read(4))[0]
                    vw11laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laay = unpack("<f", f.read(4))[0]
                    vy12laay = unpack("<f", f.read(4))[0]
                    vz12laay = unpack("<f", f.read(4))[0]
                    vw12laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laay = unpack("<f", f.read(4))[0]
                    vy13laay = unpack("<f", f.read(4))[0]
                    vz13laay = unpack("<f", f.read(4))[0]
                    vw13laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laay = unpack("<f", f.read(4))[0]
                    vy14laay = unpack("<f", f.read(4))[0]
                    vz14laay = unpack("<f", f.read(4))[0]
                    vw14laay = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laay = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaz = unpack("<f", f.read(4))[0]
                    vy1laaz = unpack("<f", f.read(4))[0]
                    vz1laaz = unpack("<f", f.read(4))[0]
                    vw1laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaz = unpack("<f", f.read(4))[0]
                    vy2laaz = unpack("<f", f.read(4))[0]
                    vz2laaz = unpack("<f", f.read(4))[0]
                    vw2laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaz = unpack("<f", f.read(4))[0]
                    vy3laaz = unpack("<f", f.read(4))[0]
                    vz3laaz = unpack("<f", f.read(4))[0]
                    vw3laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaz = unpack("<f", f.read(4))[0]
                    vy4laaz = unpack("<f", f.read(4))[0]
                    vz4laaz = unpack("<f", f.read(4))[0]
                    vw4laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaz = unpack("<f", f.read(4))[0]
                    vy5laaz = unpack("<f", f.read(4))[0]
                    vz5laaz = unpack("<f", f.read(4))[0]
                    vw5laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaz = unpack("<f", f.read(4))[0]
                    vy6laaz = unpack("<f", f.read(4))[0]
                    vz6laaz = unpack("<f", f.read(4))[0]
                    vw6laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaz = unpack("<f", f.read(4))[0]
                    vy7laaz = unpack("<f", f.read(4))[0]
                    vz7laaz = unpack("<f", f.read(4))[0]
                    vw7laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaz = unpack("<f", f.read(4))[0]
                    vy8laaz = unpack("<f", f.read(4))[0]
                    vz8laaz = unpack("<f", f.read(4))[0]
                    vw8laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaz = unpack("<f", f.read(4))[0]
                    vy9laaz = unpack("<f", f.read(4))[0]
                    vz9laaz = unpack("<f", f.read(4))[0]
                    vw9laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaz = unpack("<f", f.read(4))[0]
                    vy10laaz = unpack("<f", f.read(4))[0]
                    vz10laaz = unpack("<f", f.read(4))[0]
                    vw10laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaz = unpack("<f", f.read(4))[0]
                    vy11laaz = unpack("<f", f.read(4))[0]
                    vz11laaz = unpack("<f", f.read(4))[0]
                    vw11laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaz = unpack("<f", f.read(4))[0]
                    vy12laaz = unpack("<f", f.read(4))[0]
                    vz12laaz = unpack("<f", f.read(4))[0]
                    vw12laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaz = unpack("<f", f.read(4))[0]
                    vy13laaz = unpack("<f", f.read(4))[0]
                    vz13laaz = unpack("<f", f.read(4))[0]
                    vw13laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaz = unpack("<f", f.read(4))[0]
                    vy14laaz = unpack("<f", f.read(4))[0]
                    vz14laaz = unpack("<f", f.read(4))[0]
                    vw14laaz = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaz = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaaa = unpack("<f", f.read(4))[0]
                    vy1laaaa = unpack("<f", f.read(4))[0]
                    vz1laaaa = unpack("<f", f.read(4))[0]
                    vw1laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaaa = unpack("<f", f.read(4))[0]
                    vy2laaaa = unpack("<f", f.read(4))[0]
                    vz2laaaa = unpack("<f", f.read(4))[0]
                    vw2laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaaa = unpack("<f", f.read(4))[0]
                    vy3laaaa = unpack("<f", f.read(4))[0]
                    vz3laaaa = unpack("<f", f.read(4))[0]
                    vw3laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaaa = unpack("<f", f.read(4))[0]
                    vy4laaaa = unpack("<f", f.read(4))[0]
                    vz4laaaa = unpack("<f", f.read(4))[0]
                    vw4laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaaa = unpack("<f", f.read(4))[0]
                    vy5laaaa = unpack("<f", f.read(4))[0]
                    vz5laaaa = unpack("<f", f.read(4))[0]
                    vw5laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaaa = unpack("<f", f.read(4))[0]
                    vy6laaaa = unpack("<f", f.read(4))[0]
                    vz6laaaa = unpack("<f", f.read(4))[0]
                    vw6laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaaa = unpack("<f", f.read(4))[0]
                    vy7laaaa = unpack("<f", f.read(4))[0]
                    vz7laaaa = unpack("<f", f.read(4))[0]
                    vw7laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaaa = unpack("<f", f.read(4))[0]
                    vy8laaaa = unpack("<f", f.read(4))[0]
                    vz8laaaa = unpack("<f", f.read(4))[0]
                    vw8laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaaa = unpack("<f", f.read(4))[0]
                    vy9laaaa = unpack("<f", f.read(4))[0]
                    vz9laaaa = unpack("<f", f.read(4))[0]
                    vw9laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaaa = unpack("<f", f.read(4))[0]
                    vy10laaaa = unpack("<f", f.read(4))[0]
                    vz10laaaa = unpack("<f", f.read(4))[0]
                    vw10laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaaa = unpack("<f", f.read(4))[0]
                    vy11laaaa = unpack("<f", f.read(4))[0]
                    vz11laaaa = unpack("<f", f.read(4))[0]
                    vw11laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaaa = unpack("<f", f.read(4))[0]
                    vy12laaaa = unpack("<f", f.read(4))[0]
                    vz12laaaa = unpack("<f", f.read(4))[0]
                    vw12laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaaa = unpack("<f", f.read(4))[0]
                    vy13laaaa = unpack("<f", f.read(4))[0]
                    vz13laaaa = unpack("<f", f.read(4))[0]
                    vw13laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaaa = unpack("<f", f.read(4))[0]
                    vy14laaaa = unpack("<f", f.read(4))[0]
                    vz14laaaa = unpack("<f", f.read(4))[0]
                    vw14laaaa = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaaa = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaab = unpack("<f", f.read(4))[0]
                    vy1laaab = unpack("<f", f.read(4))[0]
                    vz1laaab = unpack("<f", f.read(4))[0]
                    vw1laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaab = unpack("<f", f.read(4))[0]
                    vy2laaab = unpack("<f", f.read(4))[0]
                    vz2laaab = unpack("<f", f.read(4))[0]
                    vw2laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaab = unpack("<f", f.read(4))[0]
                    vy3laaab = unpack("<f", f.read(4))[0]
                    vz3laaab = unpack("<f", f.read(4))[0]
                    vw3laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaab = unpack("<f", f.read(4))[0]
                    vy4laaab = unpack("<f", f.read(4))[0]
                    vz4laaab = unpack("<f", f.read(4))[0]
                    vw4laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaab = unpack("<f", f.read(4))[0]
                    vy5laaab = unpack("<f", f.read(4))[0]
                    vz5laaab = unpack("<f", f.read(4))[0]
                    vw5laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaab = unpack("<f", f.read(4))[0]
                    vy6laaab = unpack("<f", f.read(4))[0]
                    vz6laaab = unpack("<f", f.read(4))[0]
                    vw6laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaab = unpack("<f", f.read(4))[0]
                    vy7laaab = unpack("<f", f.read(4))[0]
                    vz7laaab = unpack("<f", f.read(4))[0]
                    vw7laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaab = unpack("<f", f.read(4))[0]
                    vy8laaab = unpack("<f", f.read(4))[0]
                    vz8laaab = unpack("<f", f.read(4))[0]
                    vw8laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaab = unpack("<f", f.read(4))[0]
                    vy9laaab = unpack("<f", f.read(4))[0]
                    vz9laaab = unpack("<f", f.read(4))[0]
                    vw9laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaab = unpack("<f", f.read(4))[0]
                    vy10laaab = unpack("<f", f.read(4))[0]
                    vz10laaab = unpack("<f", f.read(4))[0]
                    vw10laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaab = unpack("<f", f.read(4))[0]
                    vy11laaab = unpack("<f", f.read(4))[0]
                    vz11laaab = unpack("<f", f.read(4))[0]
                    vw11laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaab = unpack("<f", f.read(4))[0]
                    vy12laaab = unpack("<f", f.read(4))[0]
                    vz12laaab = unpack("<f", f.read(4))[0]
                    vw12laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaab = unpack("<f", f.read(4))[0]
                    vy13laaab = unpack("<f", f.read(4))[0]
                    vz13laaab = unpack("<f", f.read(4))[0]
                    vw13laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaab = unpack("<f", f.read(4))[0]
                    vy14laaab = unpack("<f", f.read(4))[0]
                    vz14laaab = unpack("<f", f.read(4))[0]
                    vw14laaab = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaab = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaac = unpack("<f", f.read(4))[0]
                    vy1laaac = unpack("<f", f.read(4))[0]
                    vz1laaac = unpack("<f", f.read(4))[0]
                    vw1laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaac = unpack("<f", f.read(4))[0]
                    vy2laaac = unpack("<f", f.read(4))[0]
                    vz2laaac = unpack("<f", f.read(4))[0]
                    vw2laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaac = unpack("<f", f.read(4))[0]
                    vy3laaac = unpack("<f", f.read(4))[0]
                    vz3laaac = unpack("<f", f.read(4))[0]
                    vw3laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaac = unpack("<f", f.read(4))[0]
                    vy4laaac = unpack("<f", f.read(4))[0]
                    vz4laaac = unpack("<f", f.read(4))[0]
                    vw4laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaac = unpack("<f", f.read(4))[0]
                    vy5laaac = unpack("<f", f.read(4))[0]
                    vz5laaac = unpack("<f", f.read(4))[0]
                    vw5laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaac = unpack("<f", f.read(4))[0]
                    vy6laaac = unpack("<f", f.read(4))[0]
                    vz6laaac = unpack("<f", f.read(4))[0]
                    vw6laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaac = unpack("<f", f.read(4))[0]
                    vy7laaac = unpack("<f", f.read(4))[0]
                    vz7laaac = unpack("<f", f.read(4))[0]
                    vw7laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaac = unpack("<f", f.read(4))[0]
                    vy8laaac = unpack("<f", f.read(4))[0]
                    vz8laaac = unpack("<f", f.read(4))[0]
                    vw8laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaac = unpack("<f", f.read(4))[0]
                    vy9laaac = unpack("<f", f.read(4))[0]
                    vz9laaac = unpack("<f", f.read(4))[0]
                    vw9laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaac = unpack("<f", f.read(4))[0]
                    vy10laaac = unpack("<f", f.read(4))[0]
                    vz10laaac = unpack("<f", f.read(4))[0]
                    vw10laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaac = unpack("<f", f.read(4))[0]
                    vy11laaac = unpack("<f", f.read(4))[0]
                    vz11laaac = unpack("<f", f.read(4))[0]
                    vw11laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaac = unpack("<f", f.read(4))[0]
                    vy12laaac = unpack("<f", f.read(4))[0]
                    vz12laaac = unpack("<f", f.read(4))[0]
                    vw12laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaac = unpack("<f", f.read(4))[0]
                    vy13laaac = unpack("<f", f.read(4))[0]
                    vz13laaac = unpack("<f", f.read(4))[0]
                    vw13laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaac = unpack("<f", f.read(4))[0]
                    vy14laaac = unpack("<f", f.read(4))[0]
                    vz14laaac = unpack("<f", f.read(4))[0]
                    vw14laaac = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaac = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaad = unpack("<f", f.read(4))[0]
                    vy1laaad = unpack("<f", f.read(4))[0]
                    vz1laaad = unpack("<f", f.read(4))[0]
                    vw1laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaad = unpack("<f", f.read(4))[0]
                    vy2laaad = unpack("<f", f.read(4))[0]
                    vz2laaad = unpack("<f", f.read(4))[0]
                    vw2laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaad = unpack("<f", f.read(4))[0]
                    vy3laaad = unpack("<f", f.read(4))[0]
                    vz3laaad = unpack("<f", f.read(4))[0]
                    vw3laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaad = unpack("<f", f.read(4))[0]
                    vy4laaad = unpack("<f", f.read(4))[0]
                    vz4laaad = unpack("<f", f.read(4))[0]
                    vw4laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaad = unpack("<f", f.read(4))[0]
                    vy5laaad = unpack("<f", f.read(4))[0]
                    vz5laaad = unpack("<f", f.read(4))[0]
                    vw5laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaad = unpack("<f", f.read(4))[0]
                    vy6laaad = unpack("<f", f.read(4))[0]
                    vz6laaad = unpack("<f", f.read(4))[0]
                    vw6laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaad = unpack("<f", f.read(4))[0]
                    vy7laaad = unpack("<f", f.read(4))[0]
                    vz7laaad = unpack("<f", f.read(4))[0]
                    vw7laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaad = unpack("<f", f.read(4))[0]
                    vy8laaad = unpack("<f", f.read(4))[0]
                    vz8laaad = unpack("<f", f.read(4))[0]
                    vw8laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaad = unpack("<f", f.read(4))[0]
                    vy9laaad = unpack("<f", f.read(4))[0]
                    vz9laaad = unpack("<f", f.read(4))[0]
                    vw9laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaad = unpack("<f", f.read(4))[0]
                    vy10laaad = unpack("<f", f.read(4))[0]
                    vz10laaad = unpack("<f", f.read(4))[0]
                    vw10laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaad = unpack("<f", f.read(4))[0]
                    vy11laaad = unpack("<f", f.read(4))[0]
                    vz11laaad = unpack("<f", f.read(4))[0]
                    vw11laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaad = unpack("<f", f.read(4))[0]
                    vy12laaad = unpack("<f", f.read(4))[0]
                    vz12laaad = unpack("<f", f.read(4))[0]
                    vw12laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaad = unpack("<f", f.read(4))[0]
                    vy13laaad = unpack("<f", f.read(4))[0]
                    vz13laaad = unpack("<f", f.read(4))[0]
                    vw13laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaad = unpack("<f", f.read(4))[0]
                    vy14laaad = unpack("<f", f.read(4))[0]
                    vz14laaad = unpack("<f", f.read(4))[0]
                    vw14laaad = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaad = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaae = unpack("<f", f.read(4))[0]
                    vy1laaae = unpack("<f", f.read(4))[0]
                    vz1laaae = unpack("<f", f.read(4))[0]
                    vw1laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaae = unpack("<f", f.read(4))[0]
                    vy2laaae = unpack("<f", f.read(4))[0]
                    vz2laaae = unpack("<f", f.read(4))[0]
                    vw2laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaae = unpack("<f", f.read(4))[0]
                    vy3laaae = unpack("<f", f.read(4))[0]
                    vz3laaae = unpack("<f", f.read(4))[0]
                    vw3laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaae = unpack("<f", f.read(4))[0]
                    vy4laaae = unpack("<f", f.read(4))[0]
                    vz4laaae = unpack("<f", f.read(4))[0]
                    vw4laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaae = unpack("<f", f.read(4))[0]
                    vy5laaae = unpack("<f", f.read(4))[0]
                    vz5laaae = unpack("<f", f.read(4))[0]
                    vw5laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaae = unpack("<f", f.read(4))[0]
                    vy6laaae = unpack("<f", f.read(4))[0]
                    vz6laaae = unpack("<f", f.read(4))[0]
                    vw6laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaae = unpack("<f", f.read(4))[0]
                    vy7laaae = unpack("<f", f.read(4))[0]
                    vz7laaae = unpack("<f", f.read(4))[0]
                    vw7laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaae = unpack("<f", f.read(4))[0]
                    vy8laaae = unpack("<f", f.read(4))[0]
                    vz8laaae = unpack("<f", f.read(4))[0]
                    vw8laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaae = unpack("<f", f.read(4))[0]
                    vy9laaae = unpack("<f", f.read(4))[0]
                    vz9laaae = unpack("<f", f.read(4))[0]
                    vw9laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaae = unpack("<f", f.read(4))[0]
                    vy10laaae = unpack("<f", f.read(4))[0]
                    vz10laaae = unpack("<f", f.read(4))[0]
                    vw10laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaae = unpack("<f", f.read(4))[0]
                    vy11laaae = unpack("<f", f.read(4))[0]
                    vz11laaae = unpack("<f", f.read(4))[0]
                    vw11laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaae = unpack("<f", f.read(4))[0]
                    vy12laaae = unpack("<f", f.read(4))[0]
                    vz12laaae = unpack("<f", f.read(4))[0]
                    vw12laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaae = unpack("<f", f.read(4))[0]
                    vy13laaae = unpack("<f", f.read(4))[0]
                    vz13laaae = unpack("<f", f.read(4))[0]
                    vw13laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaae = unpack("<f", f.read(4))[0]
                    vy14laaae = unpack("<f", f.read(4))[0]
                    vz14laaae = unpack("<f", f.read(4))[0]
                    vw14laaae = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaae = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-448,1)

                    vx1laaaf = unpack("<f", f.read(4))[0]
                    vy1laaaf = unpack("<f", f.read(4))[0]
                    vz1laaaf = unpack("<f", f.read(4))[0]
                    vw1laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2laaaf = unpack("<f", f.read(4))[0]
                    vy2laaaf = unpack("<f", f.read(4))[0]
                    vz2laaaf = unpack("<f", f.read(4))[0]
                    vw2laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3laaaf = unpack("<f", f.read(4))[0]
                    vy3laaaf = unpack("<f", f.read(4))[0]
                    vz3laaaf = unpack("<f", f.read(4))[0]
                    vw3laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4laaaf = unpack("<f", f.read(4))[0]
                    vy4laaaf = unpack("<f", f.read(4))[0]
                    vz4laaaf = unpack("<f", f.read(4))[0]
                    vw4laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5laaaf = unpack("<f", f.read(4))[0]
                    vy5laaaf = unpack("<f", f.read(4))[0]
                    vz5laaaf = unpack("<f", f.read(4))[0]
                    vw5laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6laaaf = unpack("<f", f.read(4))[0]
                    vy6laaaf = unpack("<f", f.read(4))[0]
                    vz6laaaf = unpack("<f", f.read(4))[0]
                    vw6laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7laaaf = unpack("<f", f.read(4))[0]
                    vy7laaaf = unpack("<f", f.read(4))[0]
                    vz7laaaf = unpack("<f", f.read(4))[0]
                    vw7laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8laaaf = unpack("<f", f.read(4))[0]
                    vy8laaaf = unpack("<f", f.read(4))[0]
                    vz8laaaf = unpack("<f", f.read(4))[0]
                    vw8laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9laaaf = unpack("<f", f.read(4))[0]
                    vy9laaaf = unpack("<f", f.read(4))[0]
                    vz9laaaf = unpack("<f", f.read(4))[0]
                    vw9laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10laaaf = unpack("<f", f.read(4))[0]
                    vy10laaaf = unpack("<f", f.read(4))[0]
                    vz10laaaf = unpack("<f", f.read(4))[0]
                    vw10laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11laaaf = unpack("<f", f.read(4))[0]
                    vy11laaaf = unpack("<f", f.read(4))[0]
                    vz11laaaf = unpack("<f", f.read(4))[0]
                    vw11laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12laaaf = unpack("<f", f.read(4))[0]
                    vy12laaaf = unpack("<f", f.read(4))[0]
                    vz12laaaf = unpack("<f", f.read(4))[0]
                    vw12laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13laaaf = unpack("<f", f.read(4))[0]
                    vy13laaaf = unpack("<f", f.read(4))[0]
                    vz13laaaf = unpack("<f", f.read(4))[0]
                    vw13laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14laaaf = unpack("<f", f.read(4))[0]
                    vy14laaaf = unpack("<f", f.read(4))[0]
                    vz14laaaf = unpack("<f", f.read(4))[0]
                    vw14laaaf = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14laaaf = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa109 = bm_3l.verts.new([-vx1l,-vy1l,-vz1l])
                    fb109 = bm_3l.verts.new([-vx2l,-vy2l,-vz2l])
                    fc109 = bm_3l.verts.new([-vx3l,-vy3l,-vz3l])
                    fd109 = bm_3l.verts.new([-vx4l,-vy4l,-vz4l])
                    fe109 = bm_3l.verts.new([-vx5l,-vy5l,-vz5l])
                    ff109 = bm_3l.verts.new([-vx6l,-vy6l,-vz6l])
                    fg109 = bm_3l.verts.new([-vx7l,-vy7l,-vz7l])
                    fh109 = bm_3l.verts.new([-vx8l,-vy8l,-vz8l])
                    fi109 = bm_3l.verts.new([-vx9l,-vy9l,-vz9l])
                    fj109 = bm_3l.verts.new([-vx10l,-vy10l,-vz10l])
                    fk109 = bm_3l.verts.new([-vx11l,-vy11l,-vz11l])
                    fl109 = bm_3l.verts.new([-vx12l,-vy12l,-vz12l])
                    fm109 = bm_3l.verts.new([-vx13l,-vy13l,-vz13l])
                    fn109 = bm_3l.verts.new([-vx14l,-vy14l,-vz14l])

                    fa110 = bm_3la.verts.new([-vx1la,-vy1la,-vz1la])
                    fb110 = bm_3la.verts.new([-vx2la,-vy2la,-vz2la])
                    fc110 = bm_3la.verts.new([-vx3la,-vy3la,-vz3la])
                    fd110 = bm_3la.verts.new([-vx4la,-vy4la,-vz4la])
                    fe110 = bm_3la.verts.new([-vx5la,-vy5la,-vz5la])
                    ff110 = bm_3la.verts.new([-vx6la,-vy6la,-vz6la])
                    fg110 = bm_3la.verts.new([-vx7la,-vy7la,-vz7la])
                    fh110 = bm_3la.verts.new([-vx8la,-vy8la,-vz8la])
                    fi110 = bm_3la.verts.new([-vx9la,-vy9la,-vz9la])
                    fj110 = bm_3la.verts.new([-vx10la,-vy10la,-vz10la])
                    fk110 = bm_3la.verts.new([-vx11la,-vy11la,-vz11la])
                    fl110 = bm_3la.verts.new([-vx12la,-vy12la,-vz12la])
                    fm110 = bm_3la.verts.new([-vx13la,-vy13la,-vz13la])
                    fn110 = bm_3la.verts.new([-vx14la,-vy14la,-vz14la])

                    fa111 = bm_3lb.verts.new([-vx1lb,-vy1lb,-vz1lb])
                    fb111 = bm_3lb.verts.new([-vx2lb,-vy2lb,-vz2lb])
                    fc111 = bm_3lb.verts.new([-vx3lb,-vy3lb,-vz3lb])
                    fd111 = bm_3lb.verts.new([-vx4lb,-vy4lb,-vz4lb])
                    fe111 = bm_3lb.verts.new([-vx5lb,-vy5lb,-vz5lb])
                    ff111 = bm_3lb.verts.new([-vx6lb,-vy6lb,-vz6lb])
                    fg111 = bm_3lb.verts.new([-vx7lb,-vy7lb,-vz7lb])
                    fh111 = bm_3lb.verts.new([-vx8lb,-vy8lb,-vz8lb])
                    fi111 = bm_3lb.verts.new([-vx9lb,-vy9lb,-vz9lb])
                    fj111 = bm_3lb.verts.new([-vx10lb,-vy10lb,-vz10lb])
                    fk111 = bm_3lb.verts.new([-vx11lb,-vy11lb,-vz11lb])
                    fl111 = bm_3lb.verts.new([-vx12lb,-vy12lb,-vz12lb])
                    fm111 = bm_3lb.verts.new([-vx13lb,-vy13lb,-vz13lb])
                    fn111 = bm_3lb.verts.new([-vx14lb,-vy14lb,-vz14lb])

                    fa112 = bm_3lc.verts.new([-vx1lc,-vy1lc,-vz1lc])
                    fb112 = bm_3lc.verts.new([-vx2lc,-vy2lc,-vz2lc])
                    fc112 = bm_3lc.verts.new([-vx3lc,-vy3lc,-vz3lc])
                    fd112 = bm_3lc.verts.new([-vx4lc,-vy4lc,-vz4lc])
                    fe112 = bm_3lc.verts.new([-vx5lc,-vy5lc,-vz5lc])
                    ff112 = bm_3lc.verts.new([-vx6lc,-vy6lc,-vz6lc])
                    fg112 = bm_3lc.verts.new([-vx7lc,-vy7lc,-vz7lc])
                    fh112 = bm_3lc.verts.new([-vx8lc,-vy8lc,-vz8lc])
                    fi112 = bm_3lc.verts.new([-vx9lc,-vy9lc,-vz9lc])
                    fj112 = bm_3lc.verts.new([-vx10lc,-vy10lc,-vz10lc])
                    fk112 = bm_3lc.verts.new([-vx11lc,-vy11lc,-vz11lc])
                    fl112 = bm_3lc.verts.new([-vx12lc,-vy12lc,-vz12lc])
                    fm112 = bm_3lc.verts.new([-vx13lc,-vy13lc,-vz13lc])
                    fn112 = bm_3lc.verts.new([-vx14lc,-vy14lc,-vz14lc])

                    fa113 = bm_3ld.verts.new([-vx1ld,-vy1ld,-vz1ld])
                    fb113 = bm_3ld.verts.new([-vx2ld,-vy2ld,-vz2ld])
                    fc113 = bm_3ld.verts.new([-vx3ld,-vy3ld,-vz3ld])
                    fd113 = bm_3ld.verts.new([-vx4ld,-vy4ld,-vz4ld])
                    fe113 = bm_3ld.verts.new([-vx5ld,-vy5ld,-vz5ld])
                    ff113 = bm_3ld.verts.new([-vx6ld,-vy6ld,-vz6ld])
                    fg113 = bm_3ld.verts.new([-vx7ld,-vy7ld,-vz7ld])
                    fh113 = bm_3ld.verts.new([-vx8ld,-vy8ld,-vz8ld])
                    fi113 = bm_3ld.verts.new([-vx9ld,-vy9ld,-vz9ld])
                    fj113 = bm_3ld.verts.new([-vx10ld,-vy10ld,-vz10ld])
                    fk113 = bm_3ld.verts.new([-vx11ld,-vy11ld,-vz11ld])
                    fl113 = bm_3ld.verts.new([-vx12ld,-vy12ld,-vz12ld])
                    fm113 = bm_3ld.verts.new([-vx13ld,-vy13ld,-vz13ld])
                    fn113 = bm_3ld.verts.new([-vx14ld,-vy14ld,-vz14ld])

                    fa114 = bm_3le.verts.new([-vx1le,-vy1le,-vz1le])
                    fb114 = bm_3le.verts.new([-vx2le,-vy2le,-vz2le])
                    fc114 = bm_3le.verts.new([-vx3le,-vy3le,-vz3le])
                    fd114 = bm_3le.verts.new([-vx4le,-vy4le,-vz4le])
                    fe114 = bm_3le.verts.new([-vx5le,-vy5le,-vz5le])
                    ff114 = bm_3le.verts.new([-vx6le,-vy6le,-vz6le])
                    fg114 = bm_3le.verts.new([-vx7le,-vy7le,-vz7le])
                    fh114 = bm_3le.verts.new([-vx8le,-vy8le,-vz8le])
                    fi114 = bm_3le.verts.new([-vx9le,-vy9le,-vz9le])
                    fj114 = bm_3le.verts.new([-vx10le,-vy10le,-vz10le])
                    fk114 = bm_3le.verts.new([-vx11le,-vy11le,-vz11le])
                    fl114 = bm_3le.verts.new([-vx12le,-vy12le,-vz12le])
                    fm114 = bm_3le.verts.new([-vx13le,-vy13le,-vz13le])
                    fn114 = bm_3le.verts.new([-vx14le,-vy14le,-vz14le])

                    fa115 = bm_3lf.verts.new([-vx1lf,-vy1lf,-vz1lf])
                    fb115 = bm_3lf.verts.new([-vx2lf,-vy2lf,-vz2lf])
                    fc115 = bm_3lf.verts.new([-vx3lf,-vy3lf,-vz3lf])
                    fd115 = bm_3lf.verts.new([-vx4lf,-vy4lf,-vz4lf])
                    fe115 = bm_3lf.verts.new([-vx5lf,-vy5lf,-vz5lf])
                    ff115 = bm_3lf.verts.new([-vx6lf,-vy6lf,-vz6lf])
                    fg115 = bm_3lf.verts.new([-vx7lf,-vy7lf,-vz7lf])
                    fh115 = bm_3lf.verts.new([-vx8lf,-vy8lf,-vz8lf])
                    fi115 = bm_3lf.verts.new([-vx9lf,-vy9lf,-vz9lf])
                    fj115 = bm_3lf.verts.new([-vx10lf,-vy10lf,-vz10lf])
                    fk115 = bm_3lf.verts.new([-vx11lf,-vy11lf,-vz11lf])
                    fl115 = bm_3lf.verts.new([-vx12lf,-vy12lf,-vz12lf])
                    fm115 = bm_3lf.verts.new([-vx13lf,-vy13lf,-vz13lf])
                    fn115 = bm_3lf.verts.new([-vx14lf,-vy14lf,-vz14lf])

                    fa116 = bm_3lg.verts.new([-vx1lg,-vy1lg,-vz1lg])
                    fb116 = bm_3lg.verts.new([-vx2lg,-vy2lg,-vz2lg])
                    fc116 = bm_3lg.verts.new([-vx3lg,-vy3lg,-vz3lg])
                    fd116 = bm_3lg.verts.new([-vx4lg,-vy4lg,-vz4lg])
                    fe116 = bm_3lg.verts.new([-vx5lg,-vy5lg,-vz5lg])
                    ff116 = bm_3lg.verts.new([-vx6lg,-vy6lg,-vz6lg])
                    fg116 = bm_3lg.verts.new([-vx7lg,-vy7lg,-vz7lg])
                    fh116 = bm_3lg.verts.new([-vx8lg,-vy8lg,-vz8lg])
                    fi116 = bm_3lg.verts.new([-vx9lg,-vy9lg,-vz9lg])
                    fj116 = bm_3lg.verts.new([-vx10lg,-vy10lg,-vz10lg])
                    fk116 = bm_3lg.verts.new([-vx11lg,-vy11lg,-vz11lg])
                    fl116 = bm_3lg.verts.new([-vx12lg,-vy12lg,-vz12lg])
                    fm116 = bm_3lg.verts.new([-vx13lg,-vy13lg,-vz13lg])
                    fn116 = bm_3lg.verts.new([-vx14lg,-vy14lg,-vz14lg])

                    fa117 = bm_3lh.verts.new([-vx1lh,-vy1lh,-vz1lh])
                    fb117 = bm_3lh.verts.new([-vx2lh,-vy2lh,-vz2lh])
                    fc117 = bm_3lh.verts.new([-vx3lh,-vy3lh,-vz3lh])
                    fd117 = bm_3lh.verts.new([-vx4lh,-vy4lh,-vz4lh])
                    fe117 = bm_3lh.verts.new([-vx5lh,-vy5lh,-vz5lh])
                    ff117 = bm_3lh.verts.new([-vx6lh,-vy6lh,-vz6lh])
                    fg117 = bm_3lh.verts.new([-vx7lh,-vy7lh,-vz7lh])
                    fh117 = bm_3lh.verts.new([-vx8lh,-vy8lh,-vz8lh])
                    fi117 = bm_3lh.verts.new([-vx9lh,-vy9lh,-vz9lh])
                    fj117 = bm_3lh.verts.new([-vx10lh,-vy10lh,-vz10lh])
                    fk117 = bm_3lh.verts.new([-vx11lh,-vy11lh,-vz11lh])
                    fl117 = bm_3lh.verts.new([-vx12lh,-vy12lh,-vz12lh])
                    fm117 = bm_3lh.verts.new([-vx13lh,-vy13lh,-vz13lh])
                    fn117 = bm_3lh.verts.new([-vx14lh,-vy14lh,-vz14lh])

                    fa118 = bm_3li.verts.new([-vx1li,-vy1li,-vz1li])
                    fb118 = bm_3li.verts.new([-vx2li,-vy2li,-vz2li])
                    fc118 = bm_3li.verts.new([-vx3li,-vy3li,-vz3li])
                    fd118 = bm_3li.verts.new([-vx4li,-vy4li,-vz4li])
                    fe118 = bm_3li.verts.new([-vx5li,-vy5li,-vz5li])
                    ff118 = bm_3li.verts.new([-vx6li,-vy6li,-vz6li])
                    fg118 = bm_3li.verts.new([-vx7li,-vy7li,-vz7li])
                    fh118 = bm_3li.verts.new([-vx8li,-vy8li,-vz8li])
                    fi118 = bm_3li.verts.new([-vx9li,-vy9li,-vz9li])
                    fj118 = bm_3li.verts.new([-vx10li,-vy10li,-vz10li])
                    fk118 = bm_3li.verts.new([-vx11li,-vy11li,-vz11li])
                    fl118 = bm_3li.verts.new([-vx12li,-vy12li,-vz12li])
                    fm118 = bm_3li.verts.new([-vx13li,-vy13li,-vz13li])
                    fn118 = bm_3li.verts.new([-vx14li,-vy14li,-vz14li])

                    fa119 = bm_3lj.verts.new([-vx1lj,-vy1lj,-vz1lj])
                    fb119 = bm_3lj.verts.new([-vx2lj,-vy2lj,-vz2lj])
                    fc119 = bm_3lj.verts.new([-vx3lj,-vy3lj,-vz3lj])
                    fd119 = bm_3lj.verts.new([-vx4lj,-vy4lj,-vz4lj])
                    fe119 = bm_3lj.verts.new([-vx5lj,-vy5lj,-vz5lj])
                    ff119 = bm_3lj.verts.new([-vx6lj,-vy6lj,-vz6lj])
                    fg119 = bm_3lj.verts.new([-vx7lj,-vy7lj,-vz7lj])
                    fh119 = bm_3lj.verts.new([-vx8lj,-vy8lj,-vz8lj])
                    fi119 = bm_3lj.verts.new([-vx9lj,-vy9lj,-vz9lj])
                    fj119 = bm_3lj.verts.new([-vx10lj,-vy10lj,-vz10lj])
                    fk119 = bm_3lj.verts.new([-vx11lj,-vy11lj,-vz11lj])
                    fl119 = bm_3lj.verts.new([-vx12lj,-vy12lj,-vz12lj])
                    fm119 = bm_3lj.verts.new([-vx13lj,-vy13lj,-vz13lj])
                    fn119 = bm_3lj.verts.new([-vx14lj,-vy14lj,-vz14lj])

                    fa120 = bm_3lk.verts.new([-vx1lk,-vy1lk,-vz1lk])
                    fb120 = bm_3lk.verts.new([-vx2lk,-vy2lk,-vz2lk])
                    fc120 = bm_3lk.verts.new([-vx3lk,-vy3lk,-vz3lk])
                    fd120 = bm_3lk.verts.new([-vx4lk,-vy4lk,-vz4lk])
                    fe120 = bm_3lk.verts.new([-vx5lk,-vy5lk,-vz5lk])
                    ff120 = bm_3lk.verts.new([-vx6lk,-vy6lk,-vz6lk])
                    fg120 = bm_3lk.verts.new([-vx7lk,-vy7lk,-vz7lk])
                    fh120 = bm_3lk.verts.new([-vx8lk,-vy8lk,-vz8lk])
                    fi120 = bm_3lk.verts.new([-vx9lk,-vy9lk,-vz9lk])
                    fj120 = bm_3lk.verts.new([-vx10lk,-vy10lk,-vz10lk])
                    fk120 = bm_3lk.verts.new([-vx11lk,-vy11lk,-vz11lk])
                    fl120 = bm_3lk.verts.new([-vx12lk,-vy12lk,-vz12lk])
                    fm120 = bm_3lk.verts.new([-vx13lk,-vy13lk,-vz13lk])
                    fn120 = bm_3lk.verts.new([-vx14lk,-vy14lk,-vz14lk])

                    fa121 = bm_3ll.verts.new([-vx1ll,-vy1ll,-vz1ll])
                    fb121 = bm_3ll.verts.new([-vx2ll,-vy2ll,-vz2ll])
                    fc121 = bm_3ll.verts.new([-vx3ll,-vy3ll,-vz3ll])
                    fd121 = bm_3ll.verts.new([-vx4ll,-vy4ll,-vz4ll])
                    fe121 = bm_3ll.verts.new([-vx5ll,-vy5ll,-vz5ll])
                    ff121 = bm_3ll.verts.new([-vx6ll,-vy6ll,-vz6ll])
                    fg121 = bm_3ll.verts.new([-vx7ll,-vy7ll,-vz7ll])
                    fh121 = bm_3ll.verts.new([-vx8ll,-vy8ll,-vz8ll])
                    fi121 = bm_3ll.verts.new([-vx9ll,-vy9ll,-vz9ll])
                    fj121 = bm_3ll.verts.new([-vx10ll,-vy10ll,-vz10ll])
                    fk121 = bm_3ll.verts.new([-vx11ll,-vy11ll,-vz11ll])
                    fl121 = bm_3ll.verts.new([-vx12ll,-vy12ll,-vz12ll])
                    fm121 = bm_3ll.verts.new([-vx13ll,-vy13ll,-vz13ll])
                    fn121 = bm_3ll.verts.new([-vx14ll,-vy14ll,-vz14ll])

                    fa122 = bm_3lm.verts.new([-vx1lm,-vy1lm,-vz1lm])
                    fb122 = bm_3lm.verts.new([-vx2lm,-vy2lm,-vz2lm])
                    fc122 = bm_3lm.verts.new([-vx3lm,-vy3lm,-vz3lm])
                    fd122 = bm_3lm.verts.new([-vx4lm,-vy4lm,-vz4lm])
                    fe122 = bm_3lm.verts.new([-vx5lm,-vy5lm,-vz5lm])
                    ff122 = bm_3lm.verts.new([-vx6lm,-vy6lm,-vz6lm])
                    fg122 = bm_3lm.verts.new([-vx7lm,-vy7lm,-vz7lm])
                    fh122 = bm_3lm.verts.new([-vx8lm,-vy8lm,-vz8lm])
                    fi122 = bm_3lm.verts.new([-vx9lm,-vy9lm,-vz9lm])
                    fj122 = bm_3lm.verts.new([-vx10lm,-vy10lm,-vz10lm])
                    fk122 = bm_3lm.verts.new([-vx11lm,-vy11lm,-vz11lm])
                    fl122 = bm_3lm.verts.new([-vx12lm,-vy12lm,-vz12lm])
                    fm122 = bm_3lm.verts.new([-vx13lm,-vy13lm,-vz13lm])
                    fn122 = bm_3lm.verts.new([-vx14lm,-vy14lm,-vz14lm])

                    fa123 = bm_3ln.verts.new([-vx1ln,-vy1ln,-vz1ln])
                    fb123 = bm_3ln.verts.new([-vx2ln,-vy2ln,-vz2ln])
                    fc123 = bm_3ln.verts.new([-vx3ln,-vy3ln,-vz3ln])
                    fd123 = bm_3ln.verts.new([-vx4ln,-vy4ln,-vz4ln])
                    fe123 = bm_3ln.verts.new([-vx5ln,-vy5ln,-vz5ln])
                    ff123 = bm_3ln.verts.new([-vx6ln,-vy6ln,-vz6ln])
                    fg123 = bm_3ln.verts.new([-vx7ln,-vy7ln,-vz7ln])
                    fh123 = bm_3ln.verts.new([-vx8ln,-vy8ln,-vz8ln])
                    fi123 = bm_3ln.verts.new([-vx9ln,-vy9ln,-vz9ln])
                    fj123 = bm_3ln.verts.new([-vx10ln,-vy10ln,-vz10ln])
                    fk123 = bm_3ln.verts.new([-vx11ln,-vy11ln,-vz11ln])
                    fl123 = bm_3ln.verts.new([-vx12ln,-vy12ln,-vz12ln])
                    fm123 = bm_3ln.verts.new([-vx13ln,-vy13ln,-vz13ln])
                    fn123 = bm_3ln.verts.new([-vx14ln,-vy14ln,-vz14ln])

                    fa124 = bm_3lo.verts.new([-vx1lo,-vy1lo,-vz1lo])
                    fb124 = bm_3lo.verts.new([-vx2lo,-vy2lo,-vz2lo])
                    fc124 = bm_3lo.verts.new([-vx3lo,-vy3lo,-vz3lo])
                    fd124 = bm_3lo.verts.new([-vx4lo,-vy4lo,-vz4lo])
                    fe124 = bm_3lo.verts.new([-vx5lo,-vy5lo,-vz5lo])
                    ff124 = bm_3lo.verts.new([-vx6lo,-vy6lo,-vz6lo])
                    fg124 = bm_3lo.verts.new([-vx7lo,-vy7lo,-vz7lo])
                    fh124 = bm_3lo.verts.new([-vx8lo,-vy8lo,-vz8lo])
                    fi124 = bm_3lo.verts.new([-vx9lo,-vy9lo,-vz9lo])
                    fj124 = bm_3lo.verts.new([-vx10lo,-vy10lo,-vz10lo])
                    fk124 = bm_3lo.verts.new([-vx11lo,-vy11lo,-vz11lo])
                    fl124 = bm_3lo.verts.new([-vx12lo,-vy12lo,-vz12lo])
                    fm124 = bm_3lo.verts.new([-vx13lo,-vy13lo,-vz13lo])
                    fn124 = bm_3lo.verts.new([-vx14lo,-vy14lo,-vz14lo])

                    fa125 = bm_3lp.verts.new([-vx1lp,-vy1lp,-vz1lp])
                    fb125 = bm_3lp.verts.new([-vx2lp,-vy2lp,-vz2lp])
                    fc125 = bm_3lp.verts.new([-vx3lp,-vy3lp,-vz3lp])
                    fd125 = bm_3lp.verts.new([-vx4lp,-vy4lp,-vz4lp])
                    fe125 = bm_3lp.verts.new([-vx5lp,-vy5lp,-vz5lp])
                    ff125 = bm_3lp.verts.new([-vx6lp,-vy6lp,-vz6lp])
                    fg125 = bm_3lp.verts.new([-vx7lp,-vy7lp,-vz7lp])
                    fh125 = bm_3lp.verts.new([-vx8lp,-vy8lp,-vz8lp])
                    fi125 = bm_3lp.verts.new([-vx9lp,-vy9lp,-vz9lp])
                    fj125 = bm_3lp.verts.new([-vx10lp,-vy10lp,-vz10lp])
                    fk125 = bm_3lp.verts.new([-vx11lp,-vy11lp,-vz11lp])
                    fl125 = bm_3lp.verts.new([-vx12lp,-vy12lp,-vz12lp])
                    fm125 = bm_3lp.verts.new([-vx13lp,-vy13lp,-vz13lp])
                    fn125 = bm_3lp.verts.new([-vx14lp,-vy14lp,-vz14lp])

                    fa126 = bm_3lq.verts.new([-vx1lq,-vy1lq,-vz1lq])
                    fb126 = bm_3lq.verts.new([-vx2lq,-vy2lq,-vz2lq])
                    fc126 = bm_3lq.verts.new([-vx3lq,-vy3lq,-vz3lq])
                    fd126 = bm_3lq.verts.new([-vx4lq,-vy4lq,-vz4lq])
                    fe126 = bm_3lq.verts.new([-vx5lq,-vy5lq,-vz5lq])
                    ff126 = bm_3lq.verts.new([-vx6lq,-vy6lq,-vz6lq])
                    fg126 = bm_3lq.verts.new([-vx7lq,-vy7lq,-vz7lq])
                    fh126 = bm_3lq.verts.new([-vx8lq,-vy8lq,-vz8lq])
                    fi126 = bm_3lq.verts.new([-vx9lq,-vy9lq,-vz9lq])
                    fj126 = bm_3lq.verts.new([-vx10lq,-vy10lq,-vz10lq])
                    fk126 = bm_3lq.verts.new([-vx11lq,-vy11lq,-vz11lq])
                    fl126 = bm_3lq.verts.new([-vx12lq,-vy12lq,-vz12lq])
                    fm126 = bm_3lq.verts.new([-vx13lq,-vy13lq,-vz13lq])
                    fn126 = bm_3lq.verts.new([-vx14lq,-vy14lq,-vz14lq])

                    fa127 = bm_3lr.verts.new([-vx1lr,-vy1lr,-vz1lr])
                    fb127 = bm_3lr.verts.new([-vx2lr,-vy2lr,-vz2lr])
                    fc127 = bm_3lr.verts.new([-vx3lr,-vy3lr,-vz3lr])
                    fd127 = bm_3lr.verts.new([-vx4lr,-vy4lr,-vz4lr])
                    fe127 = bm_3lr.verts.new([-vx5lr,-vy5lr,-vz5lr])
                    ff127 = bm_3lr.verts.new([-vx6lr,-vy6lr,-vz6lr])
                    fg127 = bm_3lr.verts.new([-vx7lr,-vy7lr,-vz7lr])
                    fh127 = bm_3lr.verts.new([-vx8lr,-vy8lr,-vz8lr])
                    fi127 = bm_3lr.verts.new([-vx9lr,-vy9lr,-vz9lr])
                    fj127 = bm_3lr.verts.new([-vx10lr,-vy10lr,-vz10lr])
                    fk127 = bm_3lr.verts.new([-vx11lr,-vy11lr,-vz11lr])
                    fl127 = bm_3lr.verts.new([-vx12lr,-vy12lr,-vz12lr])
                    fm127 = bm_3lr.verts.new([-vx13lr,-vy13lr,-vz13lr])
                    fn127 = bm_3lr.verts.new([-vx14lr,-vy14lr,-vz14lr])

                    fa128 = bm_3ls.verts.new([-vx1ls,-vy1ls,-vz1ls])
                    fb128 = bm_3ls.verts.new([-vx2ls,-vy2ls,-vz2ls])
                    fc128 = bm_3ls.verts.new([-vx3ls,-vy3ls,-vz3ls])
                    fd128 = bm_3ls.verts.new([-vx4ls,-vy4ls,-vz4ls])
                    fe128 = bm_3ls.verts.new([-vx5ls,-vy5ls,-vz5ls])
                    ff128 = bm_3ls.verts.new([-vx6ls,-vy6ls,-vz6ls])
                    fg128 = bm_3ls.verts.new([-vx7ls,-vy7ls,-vz7ls])
                    fh128 = bm_3ls.verts.new([-vx8ls,-vy8ls,-vz8ls])
                    fi128 = bm_3ls.verts.new([-vx9ls,-vy9ls,-vz9ls])
                    fj128 = bm_3ls.verts.new([-vx10ls,-vy10ls,-vz10ls])
                    fk128 = bm_3ls.verts.new([-vx11ls,-vy11ls,-vz11ls])
                    fl128 = bm_3ls.verts.new([-vx12ls,-vy12ls,-vz12ls])
                    fm128 = bm_3ls.verts.new([-vx13ls,-vy13ls,-vz13ls])
                    fn128 = bm_3ls.verts.new([-vx14ls,-vy14ls,-vz14ls])

                    fa129 = bm_3lt.verts.new([-vx1lt,-vy1lt,-vz1lt])
                    fb129 = bm_3lt.verts.new([-vx2lt,-vy2lt,-vz2lt])
                    fc129 = bm_3lt.verts.new([-vx3lt,-vy3lt,-vz3lt])
                    fd129 = bm_3lt.verts.new([-vx4lt,-vy4lt,-vz4lt])
                    fe129 = bm_3lt.verts.new([-vx5lt,-vy5lt,-vz5lt])
                    ff129 = bm_3lt.verts.new([-vx6lt,-vy6lt,-vz6lt])
                    fg129 = bm_3lt.verts.new([-vx7lt,-vy7lt,-vz7lt])
                    fh129 = bm_3lt.verts.new([-vx8lt,-vy8lt,-vz8lt])
                    fi129 = bm_3lt.verts.new([-vx9lt,-vy9lt,-vz9lt])
                    fj129 = bm_3lt.verts.new([-vx10lt,-vy10lt,-vz10lt])
                    fk129 = bm_3lt.verts.new([-vx11lt,-vy11lt,-vz11lt])
                    fl129 = bm_3lt.verts.new([-vx12lt,-vy12lt,-vz12lt])
                    fm129 = bm_3lt.verts.new([-vx13lt,-vy13lt,-vz13lt])
                    fn129 = bm_3lt.verts.new([-vx14lt,-vy14lt,-vz14lt])

                    fa130 = bm_3lu.verts.new([-vx1lu,-vy1lu,-vz1lu])
                    fb130 = bm_3lu.verts.new([-vx2lu,-vy2lu,-vz2lu])
                    fc130 = bm_3lu.verts.new([-vx3lu,-vy3lu,-vz3lu])
                    fd130 = bm_3lu.verts.new([-vx4lu,-vy4lu,-vz4lu])
                    fe130 = bm_3lu.verts.new([-vx5lu,-vy5lu,-vz5lu])
                    ff130 = bm_3lu.verts.new([-vx6lu,-vy6lu,-vz6lu])
                    fg130 = bm_3lu.verts.new([-vx7lu,-vy7lu,-vz7lu])
                    fh130 = bm_3lu.verts.new([-vx8lu,-vy8lu,-vz8lu])
                    fi130 = bm_3lu.verts.new([-vx9lu,-vy9lu,-vz9lu])
                    fj130 = bm_3lu.verts.new([-vx10lu,-vy10lu,-vz10lu])
                    fk130 = bm_3lu.verts.new([-vx11lu,-vy11lu,-vz11lu])
                    fl130 = bm_3lu.verts.new([-vx12lu,-vy12lu,-vz12lu])
                    fm130 = bm_3lu.verts.new([-vx13lu,-vy13lu,-vz13lu])
                    fn130 = bm_3lu.verts.new([-vx14lu,-vy14lu,-vz14lu])

                    fa131 = bm_3lv.verts.new([-vx1lv,-vy1lv,-vz1lv])
                    fb131 = bm_3lv.verts.new([-vx2lv,-vy2lv,-vz2lv])
                    fc131 = bm_3lv.verts.new([-vx3lv,-vy3lv,-vz3lv])
                    fd131 = bm_3lv.verts.new([-vx4lv,-vy4lv,-vz4lv])
                    fe131 = bm_3lv.verts.new([-vx5lv,-vy5lv,-vz5lv])
                    ff131 = bm_3lv.verts.new([-vx6lv,-vy6lv,-vz6lv])
                    fg131 = bm_3lv.verts.new([-vx7lv,-vy7lv,-vz7lv])
                    fh131 = bm_3lv.verts.new([-vx8lv,-vy8lv,-vz8lv])
                    fi131 = bm_3lv.verts.new([-vx9lv,-vy9lv,-vz9lv])
                    fj131 = bm_3lv.verts.new([-vx10lv,-vy10lv,-vz10lv])
                    fk131 = bm_3lv.verts.new([-vx11lv,-vy11lv,-vz11lv])
                    fl131 = bm_3lv.verts.new([-vx12lv,-vy12lv,-vz12lv])
                    fm131 = bm_3lv.verts.new([-vx13lv,-vy13lv,-vz13lv])
                    fn131 = bm_3lv.verts.new([-vx14lv,-vy14lv,-vz14lv])

                    fa132 = bm_3lw.verts.new([-vx1lw,-vy1lw,-vz1lw])
                    fb132 = bm_3lw.verts.new([-vx2lw,-vy2lw,-vz2lw])
                    fc132 = bm_3lw.verts.new([-vx3lw,-vy3lw,-vz3lw])
                    fd132 = bm_3lw.verts.new([-vx4lw,-vy4lw,-vz4lw])
                    fe132 = bm_3lw.verts.new([-vx5lw,-vy5lw,-vz5lw])
                    ff132 = bm_3lw.verts.new([-vx6lw,-vy6lw,-vz6lw])
                    fg132 = bm_3lw.verts.new([-vx7lw,-vy7lw,-vz7lw])
                    fh132 = bm_3lw.verts.new([-vx8lw,-vy8lw,-vz8lw])
                    fi132 = bm_3lw.verts.new([-vx9lw,-vy9lw,-vz9lw])
                    fj132 = bm_3lw.verts.new([-vx10lw,-vy10lw,-vz10lw])
                    fk132 = bm_3lw.verts.new([-vx11lw,-vy11lw,-vz11lw])
                    fl132 = bm_3lw.verts.new([-vx12lw,-vy12lw,-vz12lw])
                    fm132 = bm_3lw.verts.new([-vx13lw,-vy13lw,-vz13lw])
                    fn132 = bm_3lw.verts.new([-vx14lw,-vy14lw,-vz14lw])

                    fa133 = bm_3lx.verts.new([-vx1lx,-vy1lx,-vz1lx])
                    fb133 = bm_3lx.verts.new([-vx2lx,-vy2lx,-vz2lx])
                    fc133 = bm_3lx.verts.new([-vx3lx,-vy3lx,-vz3lx])
                    fd133 = bm_3lx.verts.new([-vx4lx,-vy4lx,-vz4lx])
                    fe133 = bm_3lx.verts.new([-vx5lx,-vy5lx,-vz5lx])
                    ff133 = bm_3lx.verts.new([-vx6lx,-vy6lx,-vz6lx])
                    fg133 = bm_3lx.verts.new([-vx7lx,-vy7lx,-vz7lx])
                    fh133 = bm_3lx.verts.new([-vx8lx,-vy8lx,-vz8lx])
                    fi133 = bm_3lx.verts.new([-vx9lx,-vy9lx,-vz9lx])
                    fj133 = bm_3lx.verts.new([-vx10lx,-vy10lx,-vz10lx])
                    fk133 = bm_3lx.verts.new([-vx11lx,-vy11lx,-vz11lx])
                    fl133 = bm_3lx.verts.new([-vx12lx,-vy12lx,-vz12lx])
                    fm133 = bm_3lx.verts.new([-vx13lx,-vy13lx,-vz13lx])
                    fn133 = bm_3lx.verts.new([-vx14lx,-vy14lx,-vz14lx])

                    fa134 = bm_3ly.verts.new([-vx1ly,-vy1ly,-vz1ly])
                    fb134 = bm_3ly.verts.new([-vx2ly,-vy2ly,-vz2ly])
                    fc134 = bm_3ly.verts.new([-vx3ly,-vy3ly,-vz3ly])
                    fd134 = bm_3ly.verts.new([-vx4ly,-vy4ly,-vz4ly])
                    fe134 = bm_3ly.verts.new([-vx5ly,-vy5ly,-vz5ly])
                    ff134 = bm_3ly.verts.new([-vx6ly,-vy6ly,-vz6ly])
                    fg134 = bm_3ly.verts.new([-vx7ly,-vy7ly,-vz7ly])
                    fh134 = bm_3ly.verts.new([-vx8ly,-vy8ly,-vz8ly])
                    fi134 = bm_3ly.verts.new([-vx9ly,-vy9ly,-vz9ly])
                    fj134 = bm_3ly.verts.new([-vx10ly,-vy10ly,-vz10ly])
                    fk134 = bm_3ly.verts.new([-vx11ly,-vy11ly,-vz11ly])
                    fl134 = bm_3ly.verts.new([-vx12ly,-vy12ly,-vz12ly])
                    fm134 = bm_3ly.verts.new([-vx13ly,-vy13ly,-vz13ly])
                    fn134 = bm_3ly.verts.new([-vx14ly,-vy14ly,-vz14ly])

                    fa135 = bm_3lz.verts.new([-vx1lz,-vy1lz,-vz1lz])
                    fb135 = bm_3lz.verts.new([-vx2lz,-vy2lz,-vz2lz])
                    fc135 = bm_3lz.verts.new([-vx3lz,-vy3lz,-vz3lz])
                    fd135 = bm_3lz.verts.new([-vx4lz,-vy4lz,-vz4lz])
                    fe135 = bm_3lz.verts.new([-vx5lz,-vy5lz,-vz5lz])
                    ff135 = bm_3lz.verts.new([-vx6lz,-vy6lz,-vz6lz])
                    fg135 = bm_3lz.verts.new([-vx7lz,-vy7lz,-vz7lz])
                    fh135 = bm_3lz.verts.new([-vx8lz,-vy8lz,-vz8lz])
                    fi135 = bm_3lz.verts.new([-vx9lz,-vy9lz,-vz9lz])
                    fj135 = bm_3lz.verts.new([-vx10lz,-vy10lz,-vz10lz])
                    fk135 = bm_3lz.verts.new([-vx11lz,-vy11lz,-vz11lz])
                    fl135 = bm_3lz.verts.new([-vx12lz,-vy12lz,-vz12lz])
                    fm135 = bm_3lz.verts.new([-vx13lz,-vy13lz,-vz13lz])
                    fn135 = bm_3lz.verts.new([-vx14lz,-vy14lz,-vz14lz])

                    fa136 = bm_3laa.verts.new([-vx1laa,-vy1laa,-vz1laa])
                    fb136 = bm_3laa.verts.new([-vx2laa,-vy2laa,-vz2laa])
                    fc136 = bm_3laa.verts.new([-vx3laa,-vy3laa,-vz3laa])
                    fd136 = bm_3laa.verts.new([-vx4laa,-vy4laa,-vz4laa])
                    fe136 = bm_3laa.verts.new([-vx5laa,-vy5laa,-vz5laa])
                    ff136 = bm_3laa.verts.new([-vx6laa,-vy6laa,-vz6laa])
                    fg136 = bm_3laa.verts.new([-vx7laa,-vy7laa,-vz7laa])
                    fh136 = bm_3laa.verts.new([-vx8laa,-vy8laa,-vz8laa])
                    fi136 = bm_3laa.verts.new([-vx9laa,-vy9laa,-vz9laa])
                    fj136 = bm_3laa.verts.new([-vx10laa,-vy10laa,-vz10laa])
                    fk136 = bm_3laa.verts.new([-vx11laa,-vy11laa,-vz11laa])
                    fl136 = bm_3laa.verts.new([-vx12laa,-vy12laa,-vz12laa])
                    fm136 = bm_3laa.verts.new([-vx13laa,-vy13laa,-vz13laa])
                    fn136 = bm_3laa.verts.new([-vx14laa,-vy14laa,-vz14laa])

                    fa137 = bm_3lab.verts.new([-vx1lab,-vy1lab,-vz1lab])
                    fb137 = bm_3lab.verts.new([-vx2lab,-vy2lab,-vz2lab])
                    fc137 = bm_3lab.verts.new([-vx3lab,-vy3lab,-vz3lab])
                    fd137 = bm_3lab.verts.new([-vx4lab,-vy4lab,-vz4lab])
                    fe137 = bm_3lab.verts.new([-vx5lab,-vy5lab,-vz5lab])
                    ff137 = bm_3lab.verts.new([-vx6lab,-vy6lab,-vz6lab])
                    fg137 = bm_3lab.verts.new([-vx7lab,-vy7lab,-vz7lab])
                    fh137 = bm_3lab.verts.new([-vx8lab,-vy8lab,-vz8lab])
                    fi137 = bm_3lab.verts.new([-vx9lab,-vy9lab,-vz9lab])
                    fj137 = bm_3lab.verts.new([-vx10lab,-vy10lab,-vz10lab])
                    fk137 = bm_3lab.verts.new([-vx11lab,-vy11lab,-vz11lab])
                    fl137 = bm_3lab.verts.new([-vx12lab,-vy12lab,-vz12lab])
                    fm137 = bm_3lab.verts.new([-vx13lab,-vy13lab,-vz13lab])
                    fn137 = bm_3lab.verts.new([-vx14lab,-vy14lab,-vz14lab])

                    fa138 = bm_3lac.verts.new([-vx1lac,-vy1lac,-vz1lac])
                    fb138 = bm_3lac.verts.new([-vx2lac,-vy2lac,-vz2lac])
                    fc138 = bm_3lac.verts.new([-vx3lac,-vy3lac,-vz3lac])
                    fd138 = bm_3lac.verts.new([-vx4lac,-vy4lac,-vz4lac])
                    fe138 = bm_3lac.verts.new([-vx5lac,-vy5lac,-vz5lac])
                    ff138 = bm_3lac.verts.new([-vx6lac,-vy6lac,-vz6lac])
                    fg138 = bm_3lac.verts.new([-vx7lac,-vy7lac,-vz7lac])
                    fh138 = bm_3lac.verts.new([-vx8lac,-vy8lac,-vz8lac])
                    fi138 = bm_3lac.verts.new([-vx9lac,-vy9lac,-vz9lac])
                    fj138 = bm_3lac.verts.new([-vx10lac,-vy10lac,-vz10lac])
                    fk138 = bm_3lac.verts.new([-vx11lac,-vy11lac,-vz11lac])
                    fl138 = bm_3lac.verts.new([-vx12lac,-vy12lac,-vz12lac])
                    fm138 = bm_3lac.verts.new([-vx13lac,-vy13lac,-vz13lac])
                    fn138 = bm_3lac.verts.new([-vx14lac,-vy14lac,-vz14lac])

                    fa139 = bm_3lad.verts.new([-vx1lad,-vy1lad,-vz1lad])
                    fb139 = bm_3lad.verts.new([-vx2lad,-vy2lad,-vz2lad])
                    fc139 = bm_3lad.verts.new([-vx3lad,-vy3lad,-vz3lad])
                    fd139 = bm_3lad.verts.new([-vx4lad,-vy4lad,-vz4lad])
                    fe139 = bm_3lad.verts.new([-vx5lad,-vy5lad,-vz5lad])
                    ff139 = bm_3lad.verts.new([-vx6lad,-vy6lad,-vz6lad])
                    fg139 = bm_3lad.verts.new([-vx7lad,-vy7lad,-vz7lad])
                    fh139 = bm_3lad.verts.new([-vx8lad,-vy8lad,-vz8lad])
                    fi139 = bm_3lad.verts.new([-vx9lad,-vy9lad,-vz9lad])
                    fj139 = bm_3lad.verts.new([-vx10lad,-vy10lad,-vz10lad])
                    fk139 = bm_3lad.verts.new([-vx11lad,-vy11lad,-vz11lad])
                    fl139 = bm_3lad.verts.new([-vx12lad,-vy12lad,-vz12lad])
                    fm139 = bm_3lad.verts.new([-vx13lad,-vy13lad,-vz13lad])
                    fn139 = bm_3lad.verts.new([-vx14lad,-vy14lad,-vz14lad])

                    fa140 = bm_3lae.verts.new([-vx1lae,-vy1lae,-vz1lae])
                    fb140 = bm_3lae.verts.new([-vx2lae,-vy2lae,-vz2lae])
                    fc140 = bm_3lae.verts.new([-vx3lae,-vy3lae,-vz3lae])
                    fd140 = bm_3lae.verts.new([-vx4lae,-vy4lae,-vz4lae])
                    fe140 = bm_3lae.verts.new([-vx5lae,-vy5lae,-vz5lae])
                    ff140 = bm_3lae.verts.new([-vx6lae,-vy6lae,-vz6lae])
                    fg140 = bm_3lae.verts.new([-vx7lae,-vy7lae,-vz7lae])
                    fh140 = bm_3lae.verts.new([-vx8lae,-vy8lae,-vz8lae])
                    fi140 = bm_3lae.verts.new([-vx9lae,-vy9lae,-vz9lae])
                    fj140 = bm_3lae.verts.new([-vx10lae,-vy10lae,-vz10lae])
                    fk140 = bm_3lae.verts.new([-vx11lae,-vy11lae,-vz11lae])
                    fl140 = bm_3lae.verts.new([-vx12lae,-vy12lae,-vz12lae])
                    fm140 = bm_3lae.verts.new([-vx13lae,-vy13lae,-vz13lae])
                    fn140 = bm_3lae.verts.new([-vx14lae,-vy14lae,-vz14lae])

                    fa141 = bm_3laf.verts.new([-vx1laf,-vy1laf,-vz1laf])
                    fb141 = bm_3laf.verts.new([-vx2laf,-vy2laf,-vz2laf])
                    fc141 = bm_3laf.verts.new([-vx3laf,-vy3laf,-vz3laf])
                    fd141 = bm_3laf.verts.new([-vx4laf,-vy4laf,-vz4laf])
                    fe141 = bm_3laf.verts.new([-vx5laf,-vy5laf,-vz5laf])
                    ff141 = bm_3laf.verts.new([-vx6laf,-vy6laf,-vz6laf])
                    fg141 = bm_3laf.verts.new([-vx7laf,-vy7laf,-vz7laf])
                    fh141 = bm_3laf.verts.new([-vx8laf,-vy8laf,-vz8laf])
                    fi141 = bm_3laf.verts.new([-vx9laf,-vy9laf,-vz9laf])
                    fj141 = bm_3laf.verts.new([-vx10laf,-vy10laf,-vz10laf])
                    fk141 = bm_3laf.verts.new([-vx11laf,-vy11laf,-vz11laf])
                    fl141 = bm_3laf.verts.new([-vx12laf,-vy12laf,-vz12laf])
                    fm141 = bm_3laf.verts.new([-vx13laf,-vy13laf,-vz13laf])
                    fn141 = bm_3laf.verts.new([-vx14laf,-vy14laf,-vz14laf])

                    fa142 = bm_3lag.verts.new([-vx1lag,-vy1lag,-vz1lag])
                    fb142 = bm_3lag.verts.new([-vx2lag,-vy2lag,-vz2lag])
                    fc142 = bm_3lag.verts.new([-vx3lag,-vy3lag,-vz3lag])
                    fd142 = bm_3lag.verts.new([-vx4lag,-vy4lag,-vz4lag])
                    fe142 = bm_3lag.verts.new([-vx5lag,-vy5lag,-vz5lag])
                    ff142 = bm_3lag.verts.new([-vx6lag,-vy6lag,-vz6lag])
                    fg142 = bm_3lag.verts.new([-vx7lag,-vy7lag,-vz7lag])
                    fh142 = bm_3lag.verts.new([-vx8lag,-vy8lag,-vz8lag])
                    fi142 = bm_3lag.verts.new([-vx9lag,-vy9lag,-vz9lag])
                    fj142 = bm_3lag.verts.new([-vx10lag,-vy10lag,-vz10lag])
                    fk142 = bm_3lag.verts.new([-vx11lag,-vy11lag,-vz11lag])
                    fl142 = bm_3lag.verts.new([-vx12lag,-vy12lag,-vz12lag])
                    fm142 = bm_3lag.verts.new([-vx13lag,-vy13lag,-vz13lag])
                    fn142 = bm_3lag.verts.new([-vx14lag,-vy14lag,-vz14lag])

                    fa143 = bm_3lah.verts.new([-vx1lah,-vy1lah,-vz1lah])
                    fb143 = bm_3lah.verts.new([-vx2lah,-vy2lah,-vz2lah])
                    fc143 = bm_3lah.verts.new([-vx3lah,-vy3lah,-vz3lah])
                    fd143 = bm_3lah.verts.new([-vx4lah,-vy4lah,-vz4lah])
                    fe143 = bm_3lah.verts.new([-vx5lah,-vy5lah,-vz5lah])
                    ff143 = bm_3lah.verts.new([-vx6lah,-vy6lah,-vz6lah])
                    fg143 = bm_3lah.verts.new([-vx7lah,-vy7lah,-vz7lah])
                    fh143 = bm_3lah.verts.new([-vx8lah,-vy8lah,-vz8lah])
                    fi143 = bm_3lah.verts.new([-vx9lah,-vy9lah,-vz9lah])
                    fj143 = bm_3lah.verts.new([-vx10lah,-vy10lah,-vz10lah])
                    fk143 = bm_3lah.verts.new([-vx11lah,-vy11lah,-vz11lah])
                    fl143 = bm_3lah.verts.new([-vx12lah,-vy12lah,-vz12lah])
                    fm143 = bm_3lah.verts.new([-vx13lah,-vy13lah,-vz13lah])
                    fn143 = bm_3lah.verts.new([-vx14lah,-vy14lah,-vz14lah])

                    fa144 = bm_3lai.verts.new([-vx1lai,-vy1lai,-vz1lai])
                    fb144 = bm_3lai.verts.new([-vx2lai,-vy2lai,-vz2lai])
                    fc144 = bm_3lai.verts.new([-vx3lai,-vy3lai,-vz3lai])
                    fd144 = bm_3lai.verts.new([-vx4lai,-vy4lai,-vz4lai])
                    fe144 = bm_3lai.verts.new([-vx5lai,-vy5lai,-vz5lai])
                    ff144 = bm_3lai.verts.new([-vx6lai,-vy6lai,-vz6lai])
                    fg144 = bm_3lai.verts.new([-vx7lai,-vy7lai,-vz7lai])
                    fh144 = bm_3lai.verts.new([-vx8lai,-vy8lai,-vz8lai])
                    fi144 = bm_3lai.verts.new([-vx9lai,-vy9lai,-vz9lai])
                    fj144 = bm_3lai.verts.new([-vx10lai,-vy10lai,-vz10lai])
                    fk144 = bm_3lai.verts.new([-vx11lai,-vy11lai,-vz11lai])
                    fl144 = bm_3lai.verts.new([-vx12lai,-vy12lai,-vz12lai])
                    fm144 = bm_3lai.verts.new([-vx13lai,-vy13lai,-vz13lai])
                    fn144 = bm_3lai.verts.new([-vx14lai,-vy14lai,-vz14lai])

                    fa145 = bm_3laj.verts.new([-vx1laj,-vy1laj,-vz1laj])
                    fb145 = bm_3laj.verts.new([-vx2laj,-vy2laj,-vz2laj])
                    fc145 = bm_3laj.verts.new([-vx3laj,-vy3laj,-vz3laj])
                    fd145 = bm_3laj.verts.new([-vx4laj,-vy4laj,-vz4laj])
                    fe145 = bm_3laj.verts.new([-vx5laj,-vy5laj,-vz5laj])
                    ff145 = bm_3laj.verts.new([-vx6laj,-vy6laj,-vz6laj])
                    fg145 = bm_3laj.verts.new([-vx7laj,-vy7laj,-vz7laj])
                    fh145 = bm_3laj.verts.new([-vx8laj,-vy8laj,-vz8laj])
                    fi145 = bm_3laj.verts.new([-vx9laj,-vy9laj,-vz9laj])
                    fj145 = bm_3laj.verts.new([-vx10laj,-vy10laj,-vz10laj])
                    fk145 = bm_3laj.verts.new([-vx11laj,-vy11laj,-vz11laj])
                    fl145 = bm_3laj.verts.new([-vx12laj,-vy12laj,-vz12laj])
                    fm145 = bm_3laj.verts.new([-vx13laj,-vy13laj,-vz13laj])
                    fn145 = bm_3laj.verts.new([-vx14laj,-vy14laj,-vz14laj])

                    fa146 = bm_3lak.verts.new([-vx1lak,-vy1lak,-vz1lak])
                    fb146 = bm_3lak.verts.new([-vx2lak,-vy2lak,-vz2lak])
                    fc146 = bm_3lak.verts.new([-vx3lak,-vy3lak,-vz3lak])
                    fd146 = bm_3lak.verts.new([-vx4lak,-vy4lak,-vz4lak])
                    fe146 = bm_3lak.verts.new([-vx5lak,-vy5lak,-vz5lak])
                    ff146 = bm_3lak.verts.new([-vx6lak,-vy6lak,-vz6lak])
                    fg146 = bm_3lak.verts.new([-vx7lak,-vy7lak,-vz7lak])
                    fh146 = bm_3lak.verts.new([-vx8lak,-vy8lak,-vz8lak])
                    fi146 = bm_3lak.verts.new([-vx9lak,-vy9lak,-vz9lak])
                    fj146 = bm_3lak.verts.new([-vx10lak,-vy10lak,-vz10lak])
                    fk146 = bm_3lak.verts.new([-vx11lak,-vy11lak,-vz11lak])
                    fl146 = bm_3lak.verts.new([-vx12lak,-vy12lak,-vz12lak])
                    fm146 = bm_3lak.verts.new([-vx13lak,-vy13lak,-vz13lak])
                    fn146 = bm_3lak.verts.new([-vx14lak,-vy14lak,-vz14lak])

                    fa147 = bm_3lal.verts.new([-vx1lal,-vy1lal,-vz1lal])
                    fb147 = bm_3lal.verts.new([-vx2lal,-vy2lal,-vz2lal])
                    fc147 = bm_3lal.verts.new([-vx3lal,-vy3lal,-vz3lal])
                    fd147 = bm_3lal.verts.new([-vx4lal,-vy4lal,-vz4lal])
                    fe147 = bm_3lal.verts.new([-vx5lal,-vy5lal,-vz5lal])
                    ff147 = bm_3lal.verts.new([-vx6lal,-vy6lal,-vz6lal])
                    fg147 = bm_3lal.verts.new([-vx7lal,-vy7lal,-vz7lal])
                    fh147 = bm_3lal.verts.new([-vx8lal,-vy8lal,-vz8lal])
                    fi147 = bm_3lal.verts.new([-vx9lal,-vy9lal,-vz9lal])
                    fj147 = bm_3lal.verts.new([-vx10lal,-vy10lal,-vz10lal])
                    fk147 = bm_3lal.verts.new([-vx11lal,-vy11lal,-vz11lal])
                    fl147 = bm_3lal.verts.new([-vx12lal,-vy12lal,-vz12lal])
                    fm147 = bm_3lal.verts.new([-vx13lal,-vy13lal,-vz13lal])
                    fn147 = bm_3lal.verts.new([-vx14lal,-vy14lal,-vz14lal])

                    fa148 = bm_3lam.verts.new([-vx1lam,-vy1lam,-vz1lam])
                    fb148 = bm_3lam.verts.new([-vx2lam,-vy2lam,-vz2lam])
                    fc148 = bm_3lam.verts.new([-vx3lam,-vy3lam,-vz3lam])
                    fd148 = bm_3lam.verts.new([-vx4lam,-vy4lam,-vz4lam])
                    fe148 = bm_3lam.verts.new([-vx5lam,-vy5lam,-vz5lam])
                    ff148 = bm_3lam.verts.new([-vx6lam,-vy6lam,-vz6lam])
                    fg148 = bm_3lam.verts.new([-vx7lam,-vy7lam,-vz7lam])
                    fh148 = bm_3lam.verts.new([-vx8lam,-vy8lam,-vz8lam])
                    fi148 = bm_3lam.verts.new([-vx9lam,-vy9lam,-vz9lam])
                    fj148 = bm_3lam.verts.new([-vx10lam,-vy10lam,-vz10lam])
                    fk148 = bm_3lam.verts.new([-vx11lam,-vy11lam,-vz11lam])
                    fl148 = bm_3lam.verts.new([-vx12lam,-vy12lam,-vz12lam])
                    fm148 = bm_3lam.verts.new([-vx13lam,-vy13lam,-vz13lam])
                    fn148 = bm_3lam.verts.new([-vx14lam,-vy14lam,-vz14lam])

                    fa149 = bm_3lan.verts.new([-vx1lan,-vy1lan,-vz1lan])
                    fb149 = bm_3lan.verts.new([-vx2lan,-vy2lan,-vz2lan])
                    fc149 = bm_3lan.verts.new([-vx3lan,-vy3lan,-vz3lan])
                    fd149 = bm_3lan.verts.new([-vx4lan,-vy4lan,-vz4lan])
                    fe149 = bm_3lan.verts.new([-vx5lan,-vy5lan,-vz5lan])
                    ff149 = bm_3lan.verts.new([-vx6lan,-vy6lan,-vz6lan])
                    fg149 = bm_3lan.verts.new([-vx7lan,-vy7lan,-vz7lan])
                    fh149 = bm_3lan.verts.new([-vx8lan,-vy8lan,-vz8lan])
                    fi149 = bm_3lan.verts.new([-vx9lan,-vy9lan,-vz9lan])
                    fj149 = bm_3lan.verts.new([-vx10lan,-vy10lan,-vz10lan])
                    fk149 = bm_3lan.verts.new([-vx11lan,-vy11lan,-vz11lan])
                    fl149 = bm_3lan.verts.new([-vx12lan,-vy12lan,-vz12lan])
                    fm149 = bm_3lan.verts.new([-vx13lan,-vy13lan,-vz13lan])
                    fn149 = bm_3lan.verts.new([-vx14lan,-vy14lan,-vz14lan])

                    fa150 = bm_3lao.verts.new([-vx1lao,-vy1lao,-vz1lao])
                    fb150 = bm_3lao.verts.new([-vx2lao,-vy2lao,-vz2lao])
                    fc150 = bm_3lao.verts.new([-vx3lao,-vy3lao,-vz3lao])
                    fd150 = bm_3lao.verts.new([-vx4lao,-vy4lao,-vz4lao])
                    fe150 = bm_3lao.verts.new([-vx5lao,-vy5lao,-vz5lao])
                    ff150 = bm_3lao.verts.new([-vx6lao,-vy6lao,-vz6lao])
                    fg150 = bm_3lao.verts.new([-vx7lao,-vy7lao,-vz7lao])
                    fh150 = bm_3lao.verts.new([-vx8lao,-vy8lao,-vz8lao])
                    fi150 = bm_3lao.verts.new([-vx9lao,-vy9lao,-vz9lao])
                    fj150 = bm_3lao.verts.new([-vx10lao,-vy10lao,-vz10lao])
                    fk150 = bm_3lao.verts.new([-vx11lao,-vy11lao,-vz11lao])
                    fl150 = bm_3lao.verts.new([-vx12lao,-vy12lao,-vz12lao])
                    fm150 = bm_3lao.verts.new([-vx13lao,-vy13lao,-vz13lao])
                    fn150 = bm_3lao.verts.new([-vx14lao,-vy14lao,-vz14lao])

                    fa151 = bm_3lap.verts.new([-vx1lap,-vy1lap,-vz1lap])
                    fb151 = bm_3lap.verts.new([-vx2lap,-vy2lap,-vz2lap])
                    fc151 = bm_3lap.verts.new([-vx3lap,-vy3lap,-vz3lap])
                    fd151 = bm_3lap.verts.new([-vx4lap,-vy4lap,-vz4lap])
                    fe151 = bm_3lap.verts.new([-vx5lap,-vy5lap,-vz5lap])
                    ff151 = bm_3lap.verts.new([-vx6lap,-vy6lap,-vz6lap])
                    fg151 = bm_3lap.verts.new([-vx7lap,-vy7lap,-vz7lap])
                    fh151 = bm_3lap.verts.new([-vx8lap,-vy8lap,-vz8lap])
                    fi151 = bm_3lap.verts.new([-vx9lap,-vy9lap,-vz9lap])
                    fj151 = bm_3lap.verts.new([-vx10lap,-vy10lap,-vz10lap])
                    fk151 = bm_3lap.verts.new([-vx11lap,-vy11lap,-vz11lap])
                    fl151 = bm_3lap.verts.new([-vx12lap,-vy12lap,-vz12lap])
                    fm151 = bm_3lap.verts.new([-vx13lap,-vy13lap,-vz13lap])
                    fn151 = bm_3lap.verts.new([-vx14lap,-vy14lap,-vz14lap])

                    fa152 = bm_3laq.verts.new([-vx1laq,-vy1laq,-vz1laq])
                    fb152 = bm_3laq.verts.new([-vx2laq,-vy2laq,-vz2laq])
                    fc152 = bm_3laq.verts.new([-vx3laq,-vy3laq,-vz3laq])
                    fd152 = bm_3laq.verts.new([-vx4laq,-vy4laq,-vz4laq])
                    fe152 = bm_3laq.verts.new([-vx5laq,-vy5laq,-vz5laq])
                    ff152 = bm_3laq.verts.new([-vx6laq,-vy6laq,-vz6laq])
                    fg152 = bm_3laq.verts.new([-vx7laq,-vy7laq,-vz7laq])
                    fh152 = bm_3laq.verts.new([-vx8laq,-vy8laq,-vz8laq])
                    fi152 = bm_3laq.verts.new([-vx9laq,-vy9laq,-vz9laq])
                    fj152 = bm_3laq.verts.new([-vx10laq,-vy10laq,-vz10laq])
                    fk152 = bm_3laq.verts.new([-vx11laq,-vy11laq,-vz11laq])
                    fl152 = bm_3laq.verts.new([-vx12laq,-vy12laq,-vz12laq])
                    fm152 = bm_3laq.verts.new([-vx13laq,-vy13laq,-vz13laq])
                    fn152 = bm_3laq.verts.new([-vx14laq,-vy14laq,-vz14laq])

                    fa153 = bm_3lar.verts.new([-vx1lar,-vy1lar,-vz1lar])
                    fb153 = bm_3lar.verts.new([-vx2lar,-vy2lar,-vz2lar])
                    fc153 = bm_3lar.verts.new([-vx3lar,-vy3lar,-vz3lar])
                    fd153 = bm_3lar.verts.new([-vx4lar,-vy4lar,-vz4lar])
                    fe153 = bm_3lar.verts.new([-vx5lar,-vy5lar,-vz5lar])
                    ff153 = bm_3lar.verts.new([-vx6lar,-vy6lar,-vz6lar])
                    fg153 = bm_3lar.verts.new([-vx7lar,-vy7lar,-vz7lar])
                    fh153 = bm_3lar.verts.new([-vx8lar,-vy8lar,-vz8lar])
                    fi153 = bm_3lar.verts.new([-vx9lar,-vy9lar,-vz9lar])
                    fj153 = bm_3lar.verts.new([-vx10lar,-vy10lar,-vz10lar])
                    fk153 = bm_3lar.verts.new([-vx11lar,-vy11lar,-vz11lar])
                    fl153 = bm_3lar.verts.new([-vx12lar,-vy12lar,-vz12lar])
                    fm153 = bm_3lar.verts.new([-vx13lar,-vy13lar,-vz13lar])
                    fn153 = bm_3lar.verts.new([-vx14lar,-vy14lar,-vz14lar])

                    fa154 = bm_3las.verts.new([-vx1las,-vy1las,-vz1las])
                    fb154 = bm_3las.verts.new([-vx2las,-vy2las,-vz2las])
                    fc154 = bm_3las.verts.new([-vx3las,-vy3las,-vz3las])
                    fd154 = bm_3las.verts.new([-vx4las,-vy4las,-vz4las])
                    fe154 = bm_3las.verts.new([-vx5las,-vy5las,-vz5las])
                    ff154 = bm_3las.verts.new([-vx6las,-vy6las,-vz6las])
                    fg154 = bm_3las.verts.new([-vx7las,-vy7las,-vz7las])
                    fh154 = bm_3las.verts.new([-vx8las,-vy8las,-vz8las])
                    fi154 = bm_3las.verts.new([-vx9las,-vy9las,-vz9las])
                    fj154 = bm_3las.verts.new([-vx10las,-vy10las,-vz10las])
                    fk154 = bm_3las.verts.new([-vx11las,-vy11las,-vz11las])
                    fl154 = bm_3las.verts.new([-vx12las,-vy12las,-vz12las])
                    fm154 = bm_3las.verts.new([-vx13las,-vy13las,-vz13las])
                    fn154 = bm_3las.verts.new([-vx14las,-vy14las,-vz14las])

                    fa155 = bm_3lat.verts.new([-vx1lat,-vy1lat,-vz1lat])
                    fb155 = bm_3lat.verts.new([-vx2lat,-vy2lat,-vz2lat])
                    fc155 = bm_3lat.verts.new([-vx3lat,-vy3lat,-vz3lat])
                    fd155 = bm_3lat.verts.new([-vx4lat,-vy4lat,-vz4lat])
                    fe155 = bm_3lat.verts.new([-vx5lat,-vy5lat,-vz5lat])
                    ff155 = bm_3lat.verts.new([-vx6lat,-vy6lat,-vz6lat])
                    fg155 = bm_3lat.verts.new([-vx7lat,-vy7lat,-vz7lat])
                    fh155 = bm_3lat.verts.new([-vx8lat,-vy8lat,-vz8lat])
                    fi155 = bm_3lat.verts.new([-vx9lat,-vy9lat,-vz9lat])
                    fj155 = bm_3lat.verts.new([-vx10lat,-vy10lat,-vz10lat])
                    fk155 = bm_3lat.verts.new([-vx11lat,-vy11lat,-vz11lat])
                    fl155 = bm_3lat.verts.new([-vx12lat,-vy12lat,-vz12lat])
                    fm155 = bm_3lat.verts.new([-vx13lat,-vy13lat,-vz13lat])
                    fn155 = bm_3lat.verts.new([-vx14lat,-vy14lat,-vz14lat])

                    fa156 = bm_3lau.verts.new([-vx1lau,-vy1lau,-vz1lau])
                    fb156 = bm_3lau.verts.new([-vx2lau,-vy2lau,-vz2lau])
                    fc156 = bm_3lau.verts.new([-vx3lau,-vy3lau,-vz3lau])
                    fd156 = bm_3lau.verts.new([-vx4lau,-vy4lau,-vz4lau])
                    fe156 = bm_3lau.verts.new([-vx5lau,-vy5lau,-vz5lau])
                    ff156 = bm_3lau.verts.new([-vx6lau,-vy6lau,-vz6lau])
                    fg156 = bm_3lau.verts.new([-vx7lau,-vy7lau,-vz7lau])
                    fh156 = bm_3lau.verts.new([-vx8lau,-vy8lau,-vz8lau])
                    fi156 = bm_3lau.verts.new([-vx9lau,-vy9lau,-vz9lau])
                    fj156 = bm_3lau.verts.new([-vx10lau,-vy10lau,-vz10lau])
                    fk156 = bm_3lau.verts.new([-vx11lau,-vy11lau,-vz11lau])
                    fl156 = bm_3lau.verts.new([-vx12lau,-vy12lau,-vz12lau])
                    fm156 = bm_3lau.verts.new([-vx13lau,-vy13lau,-vz13lau])
                    fn156 = bm_3lau.verts.new([-vx14lau,-vy14lau,-vz14lau])

                    fa157 = bm_3lav.verts.new([-vx1lav,-vy1lav,-vz1lav])
                    fb157 = bm_3lav.verts.new([-vx2lav,-vy2lav,-vz2lav])
                    fc157 = bm_3lav.verts.new([-vx3lav,-vy3lav,-vz3lav])
                    fd157 = bm_3lav.verts.new([-vx4lav,-vy4lav,-vz4lav])
                    fe157 = bm_3lav.verts.new([-vx5lav,-vy5lav,-vz5lav])
                    ff157 = bm_3lav.verts.new([-vx6lav,-vy6lav,-vz6lav])
                    fg157 = bm_3lav.verts.new([-vx7lav,-vy7lav,-vz7lav])
                    fh157 = bm_3lav.verts.new([-vx8lav,-vy8lav,-vz8lav])
                    fi157 = bm_3lav.verts.new([-vx9lav,-vy9lav,-vz9lav])
                    fj157 = bm_3lav.verts.new([-vx10lav,-vy10lav,-vz10lav])
                    fk157 = bm_3lav.verts.new([-vx11lav,-vy11lav,-vz11lav])
                    fl157 = bm_3lav.verts.new([-vx12lav,-vy12lav,-vz12lav])
                    fm157 = bm_3lav.verts.new([-vx13lav,-vy13lav,-vz13lav])
                    fn157 = bm_3lav.verts.new([-vx14lav,-vy14lav,-vz14lav])

                    fa158 = bm_3law.verts.new([-vx1law,-vy1law,-vz1law])
                    fb158 = bm_3law.verts.new([-vx2law,-vy2law,-vz2law])
                    fc158 = bm_3law.verts.new([-vx3law,-vy3law,-vz3law])
                    fd158 = bm_3law.verts.new([-vx4law,-vy4law,-vz4law])
                    fe158 = bm_3law.verts.new([-vx5law,-vy5law,-vz5law])
                    ff158 = bm_3law.verts.new([-vx6law,-vy6law,-vz6law])
                    fg158 = bm_3law.verts.new([-vx7law,-vy7law,-vz7law])
                    fh158 = bm_3law.verts.new([-vx8law,-vy8law,-vz8law])
                    fi158 = bm_3law.verts.new([-vx9law,-vy9law,-vz9law])
                    fj158 = bm_3law.verts.new([-vx10law,-vy10law,-vz10law])
                    fk158 = bm_3law.verts.new([-vx11law,-vy11law,-vz11law])
                    fl158 = bm_3law.verts.new([-vx12law,-vy12law,-vz12law])
                    fm158 = bm_3law.verts.new([-vx13law,-vy13law,-vz13law])
                    fn158 = bm_3law.verts.new([-vx14law,-vy14law,-vz14law])

                    fa159 = bm_3lax.verts.new([-vx1lax,-vy1lax,-vz1lax])
                    fb159 = bm_3lax.verts.new([-vx2lax,-vy2lax,-vz2lax])
                    fc159 = bm_3lax.verts.new([-vx3lax,-vy3lax,-vz3lax])
                    fd159 = bm_3lax.verts.new([-vx4lax,-vy4lax,-vz4lax])
                    fe159 = bm_3lax.verts.new([-vx5lax,-vy5lax,-vz5lax])
                    ff159 = bm_3lax.verts.new([-vx6lax,-vy6lax,-vz6lax])
                    fg159 = bm_3lax.verts.new([-vx7lax,-vy7lax,-vz7lax])
                    fh159 = bm_3lax.verts.new([-vx8lax,-vy8lax,-vz8lax])
                    fi159 = bm_3lax.verts.new([-vx9lax,-vy9lax,-vz9lax])
                    fj159 = bm_3lax.verts.new([-vx10lax,-vy10lax,-vz10lax])
                    fk159 = bm_3lax.verts.new([-vx11lax,-vy11lax,-vz11lax])
                    fl159 = bm_3lax.verts.new([-vx12lax,-vy12lax,-vz12lax])
                    fm159 = bm_3lax.verts.new([-vx13lax,-vy13lax,-vz13lax])
                    fn159 = bm_3lax.verts.new([-vx14lax,-vy14lax,-vz14lax])

                    fa160 = bm_3lay.verts.new([-vx1lay,-vy1lay,-vz1lay])
                    fb160 = bm_3lay.verts.new([-vx2lay,-vy2lay,-vz2lay])
                    fc160 = bm_3lay.verts.new([-vx3lay,-vy3lay,-vz3lay])
                    fd160 = bm_3lay.verts.new([-vx4lay,-vy4lay,-vz4lay])
                    fe160 = bm_3lay.verts.new([-vx5lay,-vy5lay,-vz5lay])
                    ff160 = bm_3lay.verts.new([-vx6lay,-vy6lay,-vz6lay])
                    fg160 = bm_3lay.verts.new([-vx7lay,-vy7lay,-vz7lay])
                    fh160 = bm_3lay.verts.new([-vx8lay,-vy8lay,-vz8lay])
                    fi160 = bm_3lay.verts.new([-vx9lay,-vy9lay,-vz9lay])
                    fj160 = bm_3lay.verts.new([-vx10lay,-vy10lay,-vz10lay])
                    fk160 = bm_3lay.verts.new([-vx11lay,-vy11lay,-vz11lay])
                    fl160 = bm_3lay.verts.new([-vx12lay,-vy12lay,-vz12lay])
                    fm160 = bm_3lay.verts.new([-vx13lay,-vy13lay,-vz13lay])
                    fn160 = bm_3lay.verts.new([-vx14lay,-vy14lay,-vz14lay])

                    fa161 = bm_3laz.verts.new([-vx1laz,-vy1laz,-vz1laz])
                    fb161 = bm_3laz.verts.new([-vx2laz,-vy2laz,-vz2laz])
                    fc161 = bm_3laz.verts.new([-vx3laz,-vy3laz,-vz3laz])
                    fd161 = bm_3laz.verts.new([-vx4laz,-vy4laz,-vz4laz])
                    fe161 = bm_3laz.verts.new([-vx5laz,-vy5laz,-vz5laz])
                    ff161 = bm_3laz.verts.new([-vx6laz,-vy6laz,-vz6laz])
                    fg161 = bm_3laz.verts.new([-vx7laz,-vy7laz,-vz7laz])
                    fh161 = bm_3laz.verts.new([-vx8laz,-vy8laz,-vz8laz])
                    fi161 = bm_3laz.verts.new([-vx9laz,-vy9laz,-vz9laz])
                    fj161 = bm_3laz.verts.new([-vx10laz,-vy10laz,-vz10laz])
                    fk161 = bm_3laz.verts.new([-vx11laz,-vy11laz,-vz11laz])
                    fl161 = bm_3laz.verts.new([-vx12laz,-vy12laz,-vz12laz])
                    fm161 = bm_3laz.verts.new([-vx13laz,-vy13laz,-vz13laz])
                    fn161 = bm_3laz.verts.new([-vx14laz,-vy14laz,-vz14laz])

                    fa162 = bm_3laaa.verts.new([-vx1laaa,-vy1laaa,-vz1laaa])
                    fb162 = bm_3laaa.verts.new([-vx2laaa,-vy2laaa,-vz2laaa])
                    fc162 = bm_3laaa.verts.new([-vx3laaa,-vy3laaa,-vz3laaa])
                    fd162 = bm_3laaa.verts.new([-vx4laaa,-vy4laaa,-vz4laaa])
                    fe162 = bm_3laaa.verts.new([-vx5laaa,-vy5laaa,-vz5laaa])
                    ff162 = bm_3laaa.verts.new([-vx6laaa,-vy6laaa,-vz6laaa])
                    fg162 = bm_3laaa.verts.new([-vx7laaa,-vy7laaa,-vz7laaa])
                    fh162 = bm_3laaa.verts.new([-vx8laaa,-vy8laaa,-vz8laaa])
                    fi162 = bm_3laaa.verts.new([-vx9laaa,-vy9laaa,-vz9laaa])
                    fj162 = bm_3laaa.verts.new([-vx10laaa,-vy10laaa,-vz10laaa])
                    fk162 = bm_3laaa.verts.new([-vx11laaa,-vy11laaa,-vz11laaa])
                    fl162 = bm_3laaa.verts.new([-vx12laaa,-vy12laaa,-vz12laaa])
                    fm162 = bm_3laaa.verts.new([-vx13laaa,-vy13laaa,-vz13laaa])
                    fn162 = bm_3laaa.verts.new([-vx14laaa,-vy14laaa,-vz14laaa])

                    fa163 = bm_3laab.verts.new([-vx1laab,-vy1laab,-vz1laab])
                    fb163 = bm_3laab.verts.new([-vx2laab,-vy2laab,-vz2laab])
                    fc163 = bm_3laab.verts.new([-vx3laab,-vy3laab,-vz3laab])
                    fd163 = bm_3laab.verts.new([-vx4laab,-vy4laab,-vz4laab])
                    fe163 = bm_3laab.verts.new([-vx5laab,-vy5laab,-vz5laab])
                    ff163 = bm_3laab.verts.new([-vx6laab,-vy6laab,-vz6laab])
                    fg163 = bm_3laab.verts.new([-vx7laab,-vy7laab,-vz7laab])
                    fh163 = bm_3laab.verts.new([-vx8laab,-vy8laab,-vz8laab])
                    fi163 = bm_3laab.verts.new([-vx9laab,-vy9laab,-vz9laab])
                    fj163 = bm_3laab.verts.new([-vx10laab,-vy10laab,-vz10laab])
                    fk163 = bm_3laab.verts.new([-vx11laab,-vy11laab,-vz11laab])
                    fl163 = bm_3laab.verts.new([-vx12laab,-vy12laab,-vz12laab])
                    fm163 = bm_3laab.verts.new([-vx13laab,-vy13laab,-vz13laab])
                    fn163 = bm_3laab.verts.new([-vx14laab,-vy14laab,-vz14laab])

                    fa164 = bm_3laac.verts.new([-vx1laac,-vy1laac,-vz1laac])
                    fb164 = bm_3laac.verts.new([-vx2laac,-vy2laac,-vz2laac])
                    fc164 = bm_3laac.verts.new([-vx3laac,-vy3laac,-vz3laac])
                    fd164 = bm_3laac.verts.new([-vx4laac,-vy4laac,-vz4laac])
                    fe164 = bm_3laac.verts.new([-vx5laac,-vy5laac,-vz5laac])
                    ff164 = bm_3laac.verts.new([-vx6laac,-vy6laac,-vz6laac])
                    fg164 = bm_3laac.verts.new([-vx7laac,-vy7laac,-vz7laac])
                    fh164 = bm_3laac.verts.new([-vx8laac,-vy8laac,-vz8laac])
                    fi164 = bm_3laac.verts.new([-vx9laac,-vy9laac,-vz9laac])
                    fj164 = bm_3laac.verts.new([-vx10laac,-vy10laac,-vz10laac])
                    fk164 = bm_3laac.verts.new([-vx11laac,-vy11laac,-vz11laac])
                    fl164 = bm_3laac.verts.new([-vx12laac,-vy12laac,-vz12laac])
                    fm164 = bm_3laac.verts.new([-vx13laac,-vy13laac,-vz13laac])
                    fn164 = bm_3laac.verts.new([-vx14laac,-vy14laac,-vz14laac])

                    fa165 = bm_3laad.verts.new([-vx1laad,-vy1laad,-vz1laad])
                    fb165 = bm_3laad.verts.new([-vx2laad,-vy2laad,-vz2laad])
                    fc165 = bm_3laad.verts.new([-vx3laad,-vy3laad,-vz3laad])
                    fd165 = bm_3laad.verts.new([-vx4laad,-vy4laad,-vz4laad])
                    fe165 = bm_3laad.verts.new([-vx5laad,-vy5laad,-vz5laad])
                    ff165 = bm_3laad.verts.new([-vx6laad,-vy6laad,-vz6laad])
                    fg165 = bm_3laad.verts.new([-vx7laad,-vy7laad,-vz7laad])
                    fh165 = bm_3laad.verts.new([-vx8laad,-vy8laad,-vz8laad])
                    fi165 = bm_3laad.verts.new([-vx9laad,-vy9laad,-vz9laad])
                    fj165 = bm_3laad.verts.new([-vx10laad,-vy10laad,-vz10laad])
                    fk165 = bm_3laad.verts.new([-vx11laad,-vy11laad,-vz11laad])
                    fl165 = bm_3laad.verts.new([-vx12laad,-vy12laad,-vz12laad])
                    fm165 = bm_3laad.verts.new([-vx13laad,-vy13laad,-vz13laad])
                    fn165 = bm_3laad.verts.new([-vx14laad,-vy14laad,-vz14laad])

                    fa166 = bm_3laae.verts.new([-vx1laae,-vy1laae,-vz1laae])
                    fb166 = bm_3laae.verts.new([-vx2laae,-vy2laae,-vz2laae])
                    fc166 = bm_3laae.verts.new([-vx3laae,-vy3laae,-vz3laae])
                    fd166 = bm_3laae.verts.new([-vx4laae,-vy4laae,-vz4laae])
                    fe166 = bm_3laae.verts.new([-vx5laae,-vy5laae,-vz5laae])
                    ff166 = bm_3laae.verts.new([-vx6laae,-vy6laae,-vz6laae])
                    fg166 = bm_3laae.verts.new([-vx7laae,-vy7laae,-vz7laae])
                    fh166 = bm_3laae.verts.new([-vx8laae,-vy8laae,-vz8laae])
                    fi166 = bm_3laae.verts.new([-vx9laae,-vy9laae,-vz9laae])
                    fj166 = bm_3laae.verts.new([-vx10laae,-vy10laae,-vz10laae])
                    fk166 = bm_3laae.verts.new([-vx11laae,-vy11laae,-vz11laae])
                    fl166 = bm_3laae.verts.new([-vx12laae,-vy12laae,-vz12laae])
                    fm166 = bm_3laae.verts.new([-vx13laae,-vy13laae,-vz13laae])
                    fn166 = bm_3laae.verts.new([-vx14laae,-vy14laae,-vz14laae])

                    fa167 = bm_3laaf.verts.new([-vx1laaf,-vy1laaf,-vz1laaf])
                    fb167 = bm_3laaf.verts.new([-vx2laaf,-vy2laaf,-vz2laaf])
                    fc167 = bm_3laaf.verts.new([-vx3laaf,-vy3laaf,-vz3laaf])
                    fd167 = bm_3laaf.verts.new([-vx4laaf,-vy4laaf,-vz4laaf])
                    fe167 = bm_3laaf.verts.new([-vx5laaf,-vy5laaf,-vz5laaf])
                    ff167 = bm_3laaf.verts.new([-vx6laaf,-vy6laaf,-vz6laaf])
                    fg167 = bm_3laaf.verts.new([-vx7laaf,-vy7laaf,-vz7laaf])
                    fh167 = bm_3laaf.verts.new([-vx8laaf,-vy8laaf,-vz8laaf])
                    fi167 = bm_3laaf.verts.new([-vx9laaf,-vy9laaf,-vz9laaf])
                    fj167 = bm_3laaf.verts.new([-vx10laaf,-vy10laaf,-vz10laaf])
                    fk167 = bm_3laaf.verts.new([-vx11laaf,-vy11laaf,-vz11laaf])
                    fl167 = bm_3laaf.verts.new([-vx12laaf,-vy12laaf,-vz12laaf])
                    fm167 = bm_3laaf.verts.new([-vx13laaf,-vy13laaf,-vz13laaf])
                    fn167 = bm_3laaf.verts.new([-vx14laaf,-vy14laaf,-vz14laaf])

                    fa168 = bm_3laag.verts.new([-vx1laag,-vy1laag,-vz1laag])
                    fb168 = bm_3laag.verts.new([-vx2laag,-vy2laag,-vz2laag])
                    fc168 = bm_3laag.verts.new([-vx3laag,-vy3laag,-vz3laag])
                    fd168 = bm_3laag.verts.new([-vx4laag,-vy4laag,-vz4laag])
                    fe168 = bm_3laag.verts.new([-vx5laag,-vy5laag,-vz5laag])
                    ff168 = bm_3laag.verts.new([-vx6laag,-vy6laag,-vz6laag])
                    fg168 = bm_3laag.verts.new([-vx7laag,-vy7laag,-vz7laag])
                    fh168 = bm_3laag.verts.new([-vx8laag,-vy8laag,-vz8laag])
                    fi168 = bm_3laag.verts.new([-vx9laag,-vy9laag,-vz9laag])
                    fj168 = bm_3laag.verts.new([-vx10laag,-vy10laag,-vz10laag])
                    fk168 = bm_3laag.verts.new([-vx11laag,-vy11laag,-vz11laag])
                    fl168 = bm_3laag.verts.new([-vx12laag,-vy12laag,-vz12laag])
                    fm168 = bm_3laag.verts.new([-vx13laag,-vy13laag,-vz13laag])
                    fn168 = bm_3laag.verts.new([-vx14laag,-vy14laag,-vz14laag])

                    fa169 = bm_3laah.verts.new([-vx1laah,-vy1laah,-vz1laah])
                    fb169 = bm_3laah.verts.new([-vx2laah,-vy2laah,-vz2laah])
                    fc169 = bm_3laah.verts.new([-vx3laah,-vy3laah,-vz3laah])
                    fd169 = bm_3laah.verts.new([-vx4laah,-vy4laah,-vz4laah])
                    fe169 = bm_3laah.verts.new([-vx5laah,-vy5laah,-vz5laah])
                    ff169 = bm_3laah.verts.new([-vx6laah,-vy6laah,-vz6laah])
                    fg169 = bm_3laah.verts.new([-vx7laah,-vy7laah,-vz7laah])
                    fh169 = bm_3laah.verts.new([-vx8laah,-vy8laah,-vz8laah])
                    fi169 = bm_3laah.verts.new([-vx9laah,-vy9laah,-vz9laah])
                    fj169 = bm_3laah.verts.new([-vx10laah,-vy10laah,-vz10laah])
                    fk169 = bm_3laah.verts.new([-vx11laah,-vy11laah,-vz11laah])
                    fl169 = bm_3laah.verts.new([-vx12laah,-vy12laah,-vz12laah])
                    fm169 = bm_3laah.verts.new([-vx13laah,-vy13laah,-vz13laah])
                    fn169 = bm_3laah.verts.new([-vx14laah,-vy14laah,-vz14laah])

                    fa170 = bm_3laai.verts.new([-vx1laai,-vy1laai,-vz1laai])
                    fb170 = bm_3laai.verts.new([-vx2laai,-vy2laai,-vz2laai])
                    fc170 = bm_3laai.verts.new([-vx3laai,-vy3laai,-vz3laai])
                    fd170 = bm_3laai.verts.new([-vx4laai,-vy4laai,-vz4laai])
                    fe170 = bm_3laai.verts.new([-vx5laai,-vy5laai,-vz5laai])
                    ff170 = bm_3laai.verts.new([-vx6laai,-vy6laai,-vz6laai])
                    fg170 = bm_3laai.verts.new([-vx7laai,-vy7laai,-vz7laai])
                    fh170 = bm_3laai.verts.new([-vx8laai,-vy8laai,-vz8laai])
                    fi170 = bm_3laai.verts.new([-vx9laai,-vy9laai,-vz9laai])
                    fj170 = bm_3laai.verts.new([-vx10laai,-vy10laai,-vz10laai])
                    fk170 = bm_3laai.verts.new([-vx11laai,-vy11laai,-vz11laai])
                    fl170 = bm_3laai.verts.new([-vx12laai,-vy12laai,-vz12laai])
                    fm170 = bm_3laai.verts.new([-vx13laai,-vy13laai,-vz13laai])
                    fn170 = bm_3laai.verts.new([-vx14laai,-vy14laai,-vz14laai])

                    fa171 = bm_3laaj.verts.new([-vx1laaj,-vy1laaj,-vz1laaj])
                    fb171 = bm_3laaj.verts.new([-vx2laaj,-vy2laaj,-vz2laaj])
                    fc171 = bm_3laaj.verts.new([-vx3laaj,-vy3laaj,-vz3laaj])
                    fd171 = bm_3laaj.verts.new([-vx4laaj,-vy4laaj,-vz4laaj])
                    fe171 = bm_3laaj.verts.new([-vx5laaj,-vy5laaj,-vz5laaj])
                    ff171 = bm_3laaj.verts.new([-vx6laaj,-vy6laaj,-vz6laaj])
                    fg171 = bm_3laaj.verts.new([-vx7laaj,-vy7laaj,-vz7laaj])
                    fh171 = bm_3laaj.verts.new([-vx8laaj,-vy8laaj,-vz8laaj])
                    fi171 = bm_3laaj.verts.new([-vx9laaj,-vy9laaj,-vz9laaj])
                    fj171 = bm_3laaj.verts.new([-vx10laaj,-vy10laaj,-vz10laaj])
                    fk171 = bm_3laaj.verts.new([-vx11laaj,-vy11laaj,-vz11laaj])
                    fl171 = bm_3laaj.verts.new([-vx12laaj,-vy12laaj,-vz12laaj])
                    fm171 = bm_3laaj.verts.new([-vx13laaj,-vy13laaj,-vz13laaj])
                    fn171 = bm_3laaj.verts.new([-vx14laaj,-vy14laaj,-vz14laaj])

                    fa172 = bm_3laak.verts.new([-vx1laak,-vy1laak,-vz1laak])
                    fb172 = bm_3laak.verts.new([-vx2laak,-vy2laak,-vz2laak])
                    fc172 = bm_3laak.verts.new([-vx3laak,-vy3laak,-vz3laak])
                    fd172 = bm_3laak.verts.new([-vx4laak,-vy4laak,-vz4laak])
                    fe172 = bm_3laak.verts.new([-vx5laak,-vy5laak,-vz5laak])
                    ff172 = bm_3laak.verts.new([-vx6laak,-vy6laak,-vz6laak])
                    fg172 = bm_3laak.verts.new([-vx7laak,-vy7laak,-vz7laak])
                    fh172 = bm_3laak.verts.new([-vx8laak,-vy8laak,-vz8laak])
                    fi172 = bm_3laak.verts.new([-vx9laak,-vy9laak,-vz9laak])
                    fj172 = bm_3laak.verts.new([-vx10laak,-vy10laak,-vz10laak])
                    fk172 = bm_3laak.verts.new([-vx11laak,-vy11laak,-vz11laak])
                    fl172 = bm_3laak.verts.new([-vx12laak,-vy12laak,-vz12laak])
                    fm172 = bm_3laak.verts.new([-vx13laak,-vy13laak,-vz13laak])
                    fn172 = bm_3laak.verts.new([-vx14laak,-vy14laak,-vz14laak])

                    fa173 = bm_3laal.verts.new([-vx1laal,-vy1laal,-vz1laal])
                    fb173 = bm_3laal.verts.new([-vx2laal,-vy2laal,-vz2laal])
                    fc173 = bm_3laal.verts.new([-vx3laal,-vy3laal,-vz3laal])
                    fd173 = bm_3laal.verts.new([-vx4laal,-vy4laal,-vz4laal])
                    fe173 = bm_3laal.verts.new([-vx5laal,-vy5laal,-vz5laal])
                    ff173 = bm_3laal.verts.new([-vx6laal,-vy6laal,-vz6laal])
                    fg173 = bm_3laal.verts.new([-vx7laal,-vy7laal,-vz7laal])
                    fh173 = bm_3laal.verts.new([-vx8laal,-vy8laal,-vz8laal])
                    fi173 = bm_3laal.verts.new([-vx9laal,-vy9laal,-vz9laal])
                    fj173 = bm_3laal.verts.new([-vx10laal,-vy10laal,-vz10laal])
                    fk173 = bm_3laal.verts.new([-vx11laal,-vy11laal,-vz11laal])
                    fl173 = bm_3laal.verts.new([-vx12laal,-vy12laal,-vz12laal])
                    fm173 = bm_3laal.verts.new([-vx13laal,-vy13laal,-vz13laal])
                    fn173 = bm_3laal.verts.new([-vx14laal,-vy14laal,-vz14laal])

                    fa174 = bm_3laam.verts.new([-vx1laam,-vy1laam,-vz1laam])
                    fb174 = bm_3laam.verts.new([-vx2laam,-vy2laam,-vz2laam])
                    fc174 = bm_3laam.verts.new([-vx3laam,-vy3laam,-vz3laam])
                    fd174 = bm_3laam.verts.new([-vx4laam,-vy4laam,-vz4laam])
                    fe174 = bm_3laam.verts.new([-vx5laam,-vy5laam,-vz5laam])
                    ff174 = bm_3laam.verts.new([-vx6laam,-vy6laam,-vz6laam])
                    fg174 = bm_3laam.verts.new([-vx7laam,-vy7laam,-vz7laam])
                    fh174 = bm_3laam.verts.new([-vx8laam,-vy8laam,-vz8laam])
                    fi174 = bm_3laam.verts.new([-vx9laam,-vy9laam,-vz9laam])
                    fj174 = bm_3laam.verts.new([-vx10laam,-vy10laam,-vz10laam])
                    fk174 = bm_3laam.verts.new([-vx11laam,-vy11laam,-vz11laam])
                    fl174 = bm_3laam.verts.new([-vx12laam,-vy12laam,-vz12laam])
                    fm174 = bm_3laam.verts.new([-vx13laam,-vy13laam,-vz13laam])
                    fn174 = bm_3laam.verts.new([-vx14laam,-vy14laam,-vz14laam])

                    fa175 = bm_3laan.verts.new([-vx1laan,-vy1laan,-vz1laan])
                    fb175 = bm_3laan.verts.new([-vx2laan,-vy2laan,-vz2laan])
                    fc175 = bm_3laan.verts.new([-vx3laan,-vy3laan,-vz3laan])
                    fd175 = bm_3laan.verts.new([-vx4laan,-vy4laan,-vz4laan])
                    fe175 = bm_3laan.verts.new([-vx5laan,-vy5laan,-vz5laan])
                    ff175 = bm_3laan.verts.new([-vx6laan,-vy6laan,-vz6laan])
                    fg175 = bm_3laan.verts.new([-vx7laan,-vy7laan,-vz7laan])
                    fh175 = bm_3laan.verts.new([-vx8laan,-vy8laan,-vz8laan])
                    fi175 = bm_3laan.verts.new([-vx9laan,-vy9laan,-vz9laan])
                    fj175 = bm_3laan.verts.new([-vx10laan,-vy10laan,-vz10laan])
                    fk175 = bm_3laan.verts.new([-vx11laan,-vy11laan,-vz11laan])
                    fl175 = bm_3laan.verts.new([-vx12laan,-vy12laan,-vz12laan])
                    fm175 = bm_3laan.verts.new([-vx13laan,-vy13laan,-vz13laan])
                    fn175 = bm_3laan.verts.new([-vx14laan,-vy14laan,-vz14laan])

                    fa176 = bm_3laao.verts.new([-vx1laao,-vy1laao,-vz1laao])
                    fb176 = bm_3laao.verts.new([-vx2laao,-vy2laao,-vz2laao])
                    fc176 = bm_3laao.verts.new([-vx3laao,-vy3laao,-vz3laao])
                    fd176 = bm_3laao.verts.new([-vx4laao,-vy4laao,-vz4laao])
                    fe176 = bm_3laao.verts.new([-vx5laao,-vy5laao,-vz5laao])
                    ff176 = bm_3laao.verts.new([-vx6laao,-vy6laao,-vz6laao])
                    fg176 = bm_3laao.verts.new([-vx7laao,-vy7laao,-vz7laao])
                    fh176 = bm_3laao.verts.new([-vx8laao,-vy8laao,-vz8laao])
                    fi176 = bm_3laao.verts.new([-vx9laao,-vy9laao,-vz9laao])
                    fj176 = bm_3laao.verts.new([-vx10laao,-vy10laao,-vz10laao])
                    fk176 = bm_3laao.verts.new([-vx11laao,-vy11laao,-vz11laao])
                    fl176 = bm_3laao.verts.new([-vx12laao,-vy12laao,-vz12laao])
                    fm176 = bm_3laao.verts.new([-vx13laao,-vy13laao,-vz13laao])
                    fn176 = bm_3laao.verts.new([-vx14laao,-vy14laao,-vz14laao])

                    fa177 = bm_3laap.verts.new([-vx1laap,-vy1laap,-vz1laap])
                    fb177 = bm_3laap.verts.new([-vx2laap,-vy2laap,-vz2laap])
                    fc177 = bm_3laap.verts.new([-vx3laap,-vy3laap,-vz3laap])
                    fd177 = bm_3laap.verts.new([-vx4laap,-vy4laap,-vz4laap])
                    fe177 = bm_3laap.verts.new([-vx5laap,-vy5laap,-vz5laap])
                    ff177 = bm_3laap.verts.new([-vx6laap,-vy6laap,-vz6laap])
                    fg177 = bm_3laap.verts.new([-vx7laap,-vy7laap,-vz7laap])
                    fh177 = bm_3laap.verts.new([-vx8laap,-vy8laap,-vz8laap])
                    fi177 = bm_3laap.verts.new([-vx9laap,-vy9laap,-vz9laap])
                    fj177 = bm_3laap.verts.new([-vx10laap,-vy10laap,-vz10laap])
                    fk177 = bm_3laap.verts.new([-vx11laap,-vy11laap,-vz11laap])
                    fl177 = bm_3laap.verts.new([-vx12laap,-vy12laap,-vz12laap])
                    fm177 = bm_3laap.verts.new([-vx13laap,-vy13laap,-vz13laap])
                    fn177 = bm_3laap.verts.new([-vx14laap,-vy14laap,-vz14laap])

                    fa178 = bm_3laaq.verts.new([-vx1laaq,-vy1laaq,-vz1laaq])
                    fb178 = bm_3laaq.verts.new([-vx2laaq,-vy2laaq,-vz2laaq])
                    fc178 = bm_3laaq.verts.new([-vx3laaq,-vy3laaq,-vz3laaq])
                    fd178 = bm_3laaq.verts.new([-vx4laaq,-vy4laaq,-vz4laaq])
                    fe178 = bm_3laaq.verts.new([-vx5laaq,-vy5laaq,-vz5laaq])
                    ff178 = bm_3laaq.verts.new([-vx6laaq,-vy6laaq,-vz6laaq])
                    fg178 = bm_3laaq.verts.new([-vx7laaq,-vy7laaq,-vz7laaq])
                    fh178 = bm_3laaq.verts.new([-vx8laaq,-vy8laaq,-vz8laaq])
                    fi178 = bm_3laaq.verts.new([-vx9laaq,-vy9laaq,-vz9laaq])
                    fj178 = bm_3laaq.verts.new([-vx10laaq,-vy10laaq,-vz10laaq])
                    fk178 = bm_3laaq.verts.new([-vx11laaq,-vy11laaq,-vz11laaq])
                    fl178 = bm_3laaq.verts.new([-vx12laaq,-vy12laaq,-vz12laaq])
                    fm178 = bm_3laaq.verts.new([-vx13laaq,-vy13laaq,-vz13laaq])
                    fn178 = bm_3laaq.verts.new([-vx14laaq,-vy14laaq,-vz14laaq])

                    fa179 = bm_3laar.verts.new([-vx1laar,-vy1laar,-vz1laar])
                    fb179 = bm_3laar.verts.new([-vx2laar,-vy2laar,-vz2laar])
                    fc179 = bm_3laar.verts.new([-vx3laar,-vy3laar,-vz3laar])
                    fd179 = bm_3laar.verts.new([-vx4laar,-vy4laar,-vz4laar])
                    fe179 = bm_3laar.verts.new([-vx5laar,-vy5laar,-vz5laar])
                    ff179 = bm_3laar.verts.new([-vx6laar,-vy6laar,-vz6laar])
                    fg179 = bm_3laar.verts.new([-vx7laar,-vy7laar,-vz7laar])
                    fh179 = bm_3laar.verts.new([-vx8laar,-vy8laar,-vz8laar])
                    fi179 = bm_3laar.verts.new([-vx9laar,-vy9laar,-vz9laar])
                    fj179 = bm_3laar.verts.new([-vx10laar,-vy10laar,-vz10laar])
                    fk179 = bm_3laar.verts.new([-vx11laar,-vy11laar,-vz11laar])
                    fl179 = bm_3laar.verts.new([-vx12laar,-vy12laar,-vz12laar])
                    fm179 = bm_3laar.verts.new([-vx13laar,-vy13laar,-vz13laar])
                    fn179 = bm_3laar.verts.new([-vx14laar,-vy14laar,-vz14laar])

                    fa180 = bm_3laas.verts.new([-vx1laas,-vy1laas,-vz1laas])
                    fb180 = bm_3laas.verts.new([-vx2laas,-vy2laas,-vz2laas])
                    fc180 = bm_3laas.verts.new([-vx3laas,-vy3laas,-vz3laas])
                    fd180 = bm_3laas.verts.new([-vx4laas,-vy4laas,-vz4laas])
                    fe180 = bm_3laas.verts.new([-vx5laas,-vy5laas,-vz5laas])
                    ff180 = bm_3laas.verts.new([-vx6laas,-vy6laas,-vz6laas])
                    fg180 = bm_3laas.verts.new([-vx7laas,-vy7laas,-vz7laas])
                    fh180 = bm_3laas.verts.new([-vx8laas,-vy8laas,-vz8laas])
                    fi180 = bm_3laas.verts.new([-vx9laas,-vy9laas,-vz9laas])
                    fj180 = bm_3laas.verts.new([-vx10laas,-vy10laas,-vz10laas])
                    fk180 = bm_3laas.verts.new([-vx11laas,-vy11laas,-vz11laas])
                    fl180 = bm_3laas.verts.new([-vx12laas,-vy12laas,-vz12laas])
                    fm180 = bm_3laas.verts.new([-vx13laas,-vy13laas,-vz13laas])
                    fn180 = bm_3laas.verts.new([-vx14laas,-vy14laas,-vz14laas])

                    fa181 = bm_3laat.verts.new([-vx1laat,-vy1laat,-vz1laat])
                    fb181 = bm_3laat.verts.new([-vx2laat,-vy2laat,-vz2laat])
                    fc181 = bm_3laat.verts.new([-vx3laat,-vy3laat,-vz3laat])
                    fd181 = bm_3laat.verts.new([-vx4laat,-vy4laat,-vz4laat])
                    fe181 = bm_3laat.verts.new([-vx5laat,-vy5laat,-vz5laat])
                    ff181 = bm_3laat.verts.new([-vx6laat,-vy6laat,-vz6laat])
                    fg181 = bm_3laat.verts.new([-vx7laat,-vy7laat,-vz7laat])
                    fh181 = bm_3laat.verts.new([-vx8laat,-vy8laat,-vz8laat])
                    fi181 = bm_3laat.verts.new([-vx9laat,-vy9laat,-vz9laat])
                    fj181 = bm_3laat.verts.new([-vx10laat,-vy10laat,-vz10laat])
                    fk181 = bm_3laat.verts.new([-vx11laat,-vy11laat,-vz11laat])
                    fl181 = bm_3laat.verts.new([-vx12laat,-vy12laat,-vz12laat])
                    fm181 = bm_3laat.verts.new([-vx13laat,-vy13laat,-vz13laat])
                    fn181 = bm_3laat.verts.new([-vx14laat,-vy14laat,-vz14laat])

                    fa182 = bm_3laau.verts.new([-vx1laau,-vy1laau,-vz1laau])
                    fb182 = bm_3laau.verts.new([-vx2laau,-vy2laau,-vz2laau])
                    fc182 = bm_3laau.verts.new([-vx3laau,-vy3laau,-vz3laau])
                    fd182 = bm_3laau.verts.new([-vx4laau,-vy4laau,-vz4laau])
                    fe182 = bm_3laau.verts.new([-vx5laau,-vy5laau,-vz5laau])
                    ff182 = bm_3laau.verts.new([-vx6laau,-vy6laau,-vz6laau])
                    fg182 = bm_3laau.verts.new([-vx7laau,-vy7laau,-vz7laau])
                    fh182 = bm_3laau.verts.new([-vx8laau,-vy8laau,-vz8laau])
                    fi182 = bm_3laau.verts.new([-vx9laau,-vy9laau,-vz9laau])
                    fj182 = bm_3laau.verts.new([-vx10laau,-vy10laau,-vz10laau])
                    fk182 = bm_3laau.verts.new([-vx11laau,-vy11laau,-vz11laau])
                    fl182 = bm_3laau.verts.new([-vx12laau,-vy12laau,-vz12laau])
                    fm182 = bm_3laau.verts.new([-vx13laau,-vy13laau,-vz13laau])
                    fn182 = bm_3laau.verts.new([-vx14laau,-vy14laau,-vz14laau])

                    fa183 = bm_3laav.verts.new([-vx1laav,-vy1laav,-vz1laav])
                    fb183 = bm_3laav.verts.new([-vx2laav,-vy2laav,-vz2laav])
                    fc183 = bm_3laav.verts.new([-vx3laav,-vy3laav,-vz3laav])
                    fd183 = bm_3laav.verts.new([-vx4laav,-vy4laav,-vz4laav])
                    fe183 = bm_3laav.verts.new([-vx5laav,-vy5laav,-vz5laav])
                    ff183 = bm_3laav.verts.new([-vx6laav,-vy6laav,-vz6laav])
                    fg183 = bm_3laav.verts.new([-vx7laav,-vy7laav,-vz7laav])
                    fh183 = bm_3laav.verts.new([-vx8laav,-vy8laav,-vz8laav])
                    fi183 = bm_3laav.verts.new([-vx9laav,-vy9laav,-vz9laav])
                    fj183 = bm_3laav.verts.new([-vx10laav,-vy10laav,-vz10laav])
                    fk183 = bm_3laav.verts.new([-vx11laav,-vy11laav,-vz11laav])
                    fl183 = bm_3laav.verts.new([-vx12laav,-vy12laav,-vz12laav])
                    fm183 = bm_3laav.verts.new([-vx13laav,-vy13laav,-vz13laav])
                    fn183 = bm_3laav.verts.new([-vx14laav,-vy14laav,-vz14laav])

                    fa184 = bm_3laaw.verts.new([-vx1laaw,-vy1laaw,-vz1laaw])
                    fb184 = bm_3laaw.verts.new([-vx2laaw,-vy2laaw,-vz2laaw])
                    fc184 = bm_3laaw.verts.new([-vx3laaw,-vy3laaw,-vz3laaw])
                    fd184 = bm_3laaw.verts.new([-vx4laaw,-vy4laaw,-vz4laaw])
                    fe184 = bm_3laaw.verts.new([-vx5laaw,-vy5laaw,-vz5laaw])
                    ff184 = bm_3laaw.verts.new([-vx6laaw,-vy6laaw,-vz6laaw])
                    fg184 = bm_3laaw.verts.new([-vx7laaw,-vy7laaw,-vz7laaw])
                    fh184 = bm_3laaw.verts.new([-vx8laaw,-vy8laaw,-vz8laaw])
                    fi184 = bm_3laaw.verts.new([-vx9laaw,-vy9laaw,-vz9laaw])
                    fj184 = bm_3laaw.verts.new([-vx10laaw,-vy10laaw,-vz10laaw])
                    fk184 = bm_3laaw.verts.new([-vx11laaw,-vy11laaw,-vz11laaw])
                    fl184 = bm_3laaw.verts.new([-vx12laaw,-vy12laaw,-vz12laaw])
                    fm184 = bm_3laaw.verts.new([-vx13laaw,-vy13laaw,-vz13laaw])
                    fn184 = bm_3laaw.verts.new([-vx14laaw,-vy14laaw,-vz14laaw])

                    fa185 = bm_3laax.verts.new([-vx1laax,-vy1laax,-vz1laax])
                    fb185 = bm_3laax.verts.new([-vx2laax,-vy2laax,-vz2laax])
                    fc185 = bm_3laax.verts.new([-vx3laax,-vy3laax,-vz3laax])
                    fd185 = bm_3laax.verts.new([-vx4laax,-vy4laax,-vz4laax])
                    fe185 = bm_3laax.verts.new([-vx5laax,-vy5laax,-vz5laax])
                    ff185 = bm_3laax.verts.new([-vx6laax,-vy6laax,-vz6laax])
                    fg185 = bm_3laax.verts.new([-vx7laax,-vy7laax,-vz7laax])
                    fh185 = bm_3laax.verts.new([-vx8laax,-vy8laax,-vz8laax])
                    fi185 = bm_3laax.verts.new([-vx9laax,-vy9laax,-vz9laax])
                    fj185 = bm_3laax.verts.new([-vx10laax,-vy10laax,-vz10laax])
                    fk185 = bm_3laax.verts.new([-vx11laax,-vy11laax,-vz11laax])
                    fl185 = bm_3laax.verts.new([-vx12laax,-vy12laax,-vz12laax])
                    fm185 = bm_3laax.verts.new([-vx13laax,-vy13laax,-vz13laax])
                    fn185 = bm_3laax.verts.new([-vx14laax,-vy14laax,-vz14laax])

                    fa186 = bm_3laay.verts.new([-vx1laay,-vy1laay,-vz1laay])
                    fb186 = bm_3laay.verts.new([-vx2laay,-vy2laay,-vz2laay])
                    fc186 = bm_3laay.verts.new([-vx3laay,-vy3laay,-vz3laay])
                    fd186 = bm_3laay.verts.new([-vx4laay,-vy4laay,-vz4laay])
                    fe186 = bm_3laay.verts.new([-vx5laay,-vy5laay,-vz5laay])
                    ff186 = bm_3laay.verts.new([-vx6laay,-vy6laay,-vz6laay])
                    fg186 = bm_3laay.verts.new([-vx7laay,-vy7laay,-vz7laay])
                    fh186 = bm_3laay.verts.new([-vx8laay,-vy8laay,-vz8laay])
                    fi186 = bm_3laay.verts.new([-vx9laay,-vy9laay,-vz9laay])
                    fj186 = bm_3laay.verts.new([-vx10laay,-vy10laay,-vz10laay])
                    fk186 = bm_3laay.verts.new([-vx11laay,-vy11laay,-vz11laay])
                    fl186 = bm_3laay.verts.new([-vx12laay,-vy12laay,-vz12laay])
                    fm186 = bm_3laay.verts.new([-vx13laay,-vy13laay,-vz13laay])
                    fn186 = bm_3laay.verts.new([-vx14laay,-vy14laay,-vz14laay])

                    fa187 = bm_3laaz.verts.new([-vx1laaz,-vy1laaz,-vz1laaz])
                    fb187 = bm_3laaz.verts.new([-vx2laaz,-vy2laaz,-vz2laaz])
                    fc187 = bm_3laaz.verts.new([-vx3laaz,-vy3laaz,-vz3laaz])
                    fd187 = bm_3laaz.verts.new([-vx4laaz,-vy4laaz,-vz4laaz])
                    fe187 = bm_3laaz.verts.new([-vx5laaz,-vy5laaz,-vz5laaz])
                    ff187 = bm_3laaz.verts.new([-vx6laaz,-vy6laaz,-vz6laaz])
                    fg187 = bm_3laaz.verts.new([-vx7laaz,-vy7laaz,-vz7laaz])
                    fh187 = bm_3laaz.verts.new([-vx8laaz,-vy8laaz,-vz8laaz])
                    fi187 = bm_3laaz.verts.new([-vx9laaz,-vy9laaz,-vz9laaz])
                    fj187 = bm_3laaz.verts.new([-vx10laaz,-vy10laaz,-vz10laaz])
                    fk187 = bm_3laaz.verts.new([-vx11laaz,-vy11laaz,-vz11laaz])
                    fl187 = bm_3laaz.verts.new([-vx12laaz,-vy12laaz,-vz12laaz])
                    fm187 = bm_3laaz.verts.new([-vx13laaz,-vy13laaz,-vz13laaz])
                    fn187 = bm_3laaz.verts.new([-vx14laaz,-vy14laaz,-vz14laaz])

                    fa188 = bm_3laaaa.verts.new([-vx1laaaa,-vy1laaaa,-vz1laaaa])
                    fb188 = bm_3laaaa.verts.new([-vx2laaaa,-vy2laaaa,-vz2laaaa])
                    fc188 = bm_3laaaa.verts.new([-vx3laaaa,-vy3laaaa,-vz3laaaa])
                    fd188 = bm_3laaaa.verts.new([-vx4laaaa,-vy4laaaa,-vz4laaaa])
                    fe188 = bm_3laaaa.verts.new([-vx5laaaa,-vy5laaaa,-vz5laaaa])
                    ff188 = bm_3laaaa.verts.new([-vx6laaaa,-vy6laaaa,-vz6laaaa])
                    fg188 = bm_3laaaa.verts.new([-vx7laaaa,-vy7laaaa,-vz7laaaa])
                    fh188 = bm_3laaaa.verts.new([-vx8laaaa,-vy8laaaa,-vz8laaaa])
                    fi188 = bm_3laaaa.verts.new([-vx9laaaa,-vy9laaaa,-vz9laaaa])
                    fj188 = bm_3laaaa.verts.new([-vx10laaaa,-vy10laaaa,-vz10laaaa])
                    fk188 = bm_3laaaa.verts.new([-vx11laaaa,-vy11laaaa,-vz11laaaa])
                    fl188 = bm_3laaaa.verts.new([-vx12laaaa,-vy12laaaa,-vz12laaaa])
                    fm188 = bm_3laaaa.verts.new([-vx13laaaa,-vy13laaaa,-vz13laaaa])
                    fn188 = bm_3laaaa.verts.new([-vx14laaaa,-vy14laaaa,-vz14laaaa])

                    fa189 = bm_3laaab.verts.new([-vx1laaab,-vy1laaab,-vz1laaab])
                    fb189 = bm_3laaab.verts.new([-vx2laaab,-vy2laaab,-vz2laaab])
                    fc189 = bm_3laaab.verts.new([-vx3laaab,-vy3laaab,-vz3laaab])
                    fd189 = bm_3laaab.verts.new([-vx4laaab,-vy4laaab,-vz4laaab])
                    fe189 = bm_3laaab.verts.new([-vx5laaab,-vy5laaab,-vz5laaab])
                    ff189 = bm_3laaab.verts.new([-vx6laaab,-vy6laaab,-vz6laaab])
                    fg189 = bm_3laaab.verts.new([-vx7laaab,-vy7laaab,-vz7laaab])
                    fh189 = bm_3laaab.verts.new([-vx8laaab,-vy8laaab,-vz8laaab])
                    fi189 = bm_3laaab.verts.new([-vx9laaab,-vy9laaab,-vz9laaab])
                    fj189 = bm_3laaab.verts.new([-vx10laaab,-vy10laaab,-vz10laaab])
                    fk189 = bm_3laaab.verts.new([-vx11laaab,-vy11laaab,-vz11laaab])
                    fl189 = bm_3laaab.verts.new([-vx12laaab,-vy12laaab,-vz12laaab])
                    fm189 = bm_3laaab.verts.new([-vx13laaab,-vy13laaab,-vz13laaab])
                    fn189 = bm_3laaab.verts.new([-vx14laaab,-vy14laaab,-vz14laaab])

                    fa190 = bm_3laaac.verts.new([-vx1laaac,-vy1laaac,-vz1laaac])
                    fb190 = bm_3laaac.verts.new([-vx2laaac,-vy2laaac,-vz2laaac])
                    fc190 = bm_3laaac.verts.new([-vx3laaac,-vy3laaac,-vz3laaac])
                    fd190 = bm_3laaac.verts.new([-vx4laaac,-vy4laaac,-vz4laaac])
                    fe190 = bm_3laaac.verts.new([-vx5laaac,-vy5laaac,-vz5laaac])
                    ff190 = bm_3laaac.verts.new([-vx6laaac,-vy6laaac,-vz6laaac])
                    fg190 = bm_3laaac.verts.new([-vx7laaac,-vy7laaac,-vz7laaac])
                    fh190 = bm_3laaac.verts.new([-vx8laaac,-vy8laaac,-vz8laaac])
                    fi190 = bm_3laaac.verts.new([-vx9laaac,-vy9laaac,-vz9laaac])
                    fj190 = bm_3laaac.verts.new([-vx10laaac,-vy10laaac,-vz10laaac])
                    fk190 = bm_3laaac.verts.new([-vx11laaac,-vy11laaac,-vz11laaac])
                    fl190 = bm_3laaac.verts.new([-vx12laaac,-vy12laaac,-vz12laaac])
                    fm190 = bm_3laaac.verts.new([-vx13laaac,-vy13laaac,-vz13laaac])
                    fn190 = bm_3laaac.verts.new([-vx14laaac,-vy14laaac,-vz14laaac])

                    fa191 = bm_3laaad.verts.new([-vx1laaad,-vy1laaad,-vz1laaad])
                    fb191 = bm_3laaad.verts.new([-vx2laaad,-vy2laaad,-vz2laaad])
                    fc191 = bm_3laaad.verts.new([-vx3laaad,-vy3laaad,-vz3laaad])
                    fd191 = bm_3laaad.verts.new([-vx4laaad,-vy4laaad,-vz4laaad])
                    fe191 = bm_3laaad.verts.new([-vx5laaad,-vy5laaad,-vz5laaad])
                    ff191 = bm_3laaad.verts.new([-vx6laaad,-vy6laaad,-vz6laaad])
                    fg191 = bm_3laaad.verts.new([-vx7laaad,-vy7laaad,-vz7laaad])
                    fh191 = bm_3laaad.verts.new([-vx8laaad,-vy8laaad,-vz8laaad])
                    fi191 = bm_3laaad.verts.new([-vx9laaad,-vy9laaad,-vz9laaad])
                    fj191 = bm_3laaad.verts.new([-vx10laaad,-vy10laaad,-vz10laaad])
                    fk191 = bm_3laaad.verts.new([-vx11laaad,-vy11laaad,-vz11laaad])
                    fl191 = bm_3laaad.verts.new([-vx12laaad,-vy12laaad,-vz12laaad])
                    fm191 = bm_3laaad.verts.new([-vx13laaad,-vy13laaad,-vz13laaad])
                    fn191 = bm_3laaad.verts.new([-vx14laaad,-vy14laaad,-vz14laaad])

                    fa192 = bm_3laaae.verts.new([-vx1laaae,-vy1laaae,-vz1laaae])
                    fb192 = bm_3laaae.verts.new([-vx2laaae,-vy2laaae,-vz2laaae])
                    fc192 = bm_3laaae.verts.new([-vx3laaae,-vy3laaae,-vz3laaae])
                    fd192 = bm_3laaae.verts.new([-vx4laaae,-vy4laaae,-vz4laaae])
                    fe192 = bm_3laaae.verts.new([-vx5laaae,-vy5laaae,-vz5laaae])
                    ff192 = bm_3laaae.verts.new([-vx6laaae,-vy6laaae,-vz6laaae])
                    fg192 = bm_3laaae.verts.new([-vx7laaae,-vy7laaae,-vz7laaae])
                    fh192 = bm_3laaae.verts.new([-vx8laaae,-vy8laaae,-vz8laaae])
                    fi192 = bm_3laaae.verts.new([-vx9laaae,-vy9laaae,-vz9laaae])
                    fj192 = bm_3laaae.verts.new([-vx10laaae,-vy10laaae,-vz10laaae])
                    fk192 = bm_3laaae.verts.new([-vx11laaae,-vy11laaae,-vz11laaae])
                    fl192 = bm_3laaae.verts.new([-vx12laaae,-vy12laaae,-vz12laaae])
                    fm192 = bm_3laaae.verts.new([-vx13laaae,-vy13laaae,-vz13laaae])
                    fn192 = bm_3laaae.verts.new([-vx14laaae,-vy14laaae,-vz14laaae])

                    fa193 = bm_3laaaf.verts.new([-vx1laaaf,-vy1laaaf,-vz1laaaf])
                    fb193 = bm_3laaaf.verts.new([-vx2laaaf,-vy2laaaf,-vz2laaaf])
                    fc193 = bm_3laaaf.verts.new([-vx3laaaf,-vy3laaaf,-vz3laaaf])
                    fd193 = bm_3laaaf.verts.new([-vx4laaaf,-vy4laaaf,-vz4laaaf])
                    fe193 = bm_3laaaf.verts.new([-vx5laaaf,-vy5laaaf,-vz5laaaf])
                    ff193 = bm_3laaaf.verts.new([-vx6laaaf,-vy6laaaf,-vz6laaaf])
                    fg193 = bm_3laaaf.verts.new([-vx7laaaf,-vy7laaaf,-vz7laaaf])
                    fh193 = bm_3laaaf.verts.new([-vx8laaaf,-vy8laaaf,-vz8laaaf])
                    fi193 = bm_3laaaf.verts.new([-vx9laaaf,-vy9laaaf,-vz9laaaf])
                    fj193 = bm_3laaaf.verts.new([-vx10laaaf,-vy10laaaf,-vz10laaaf])
                    fk193 = bm_3laaaf.verts.new([-vx11laaaf,-vy11laaaf,-vz11laaaf])
                    fl193 = bm_3laaaf.verts.new([-vx12laaaf,-vy12laaaf,-vz12laaaf])
                    fm193 = bm_3laaaf.verts.new([-vx13laaaf,-vy13laaaf,-vz13laaaf])
                    fn193 = bm_3laaaf.verts.new([-vx14laaaf,-vy14laaaf,-vz14laaaf])

                    if type1laaaf == 1:
                        if type2laaaf == 1:
                            if type3laaaf == 0:
                                if type4laaaf == 0:
                                    if type5laaaf == 1:
                                        if type6laaaf == 1:
                                            if type7laaaf == 0:
                                                if type8laaaf == 1:
                                                    if type9laaaf == 1:
                                                        if type10laaaf == 0:
                                                            if type11laaaf == 1:
                                                                if type12laaaf == 1:
                                                                    if type13laaaf == 0:
                                                                        if type14laaaf == 1:
                                                                            bm_3laaaf.faces.new([fa193,fb193,fc193])
                                                                            bm_3laaaf.faces.new([fb193,fc193,fd193])
                                                                            bm_3laaaf.faces.new([fe193,ff193,fg193])
                                                                            bm_3laaaf.faces.new([fh193,fi193,fj193])
                                                                            bm_3laaaf.faces.new([fk193,fl193,fm193])
                                                                            bm_3laaaf.faces.new([fk193,fm193,fn193])

                    if type1laaae == 1:
                        if type2laaae == 1:
                            if type3laaae == 0:
                                if type4laaae == 1:
                                    if type5laaae == 1:
                                        if type6laaae == 0:
                                            if type7laaae == 0:
                                                if type8laaae == 1:
                                                    if type9laaae == 1:
                                                        if type10laaae == 0:
                                                            if type11laaae == 1:
                                                                if type12laaae == 1:
                                                                    if type13laaae == 0:
                                                                        if type14laaae == 1:
                                                                            bm_3laaae.faces.new([fa192,fb192,fc192])
                                                                            bm_3laaae.faces.new([fd192,fe192,ff192])
                                                                            bm_3laaae.faces.new([fe192,ff192,fg192])
                                                                            bm_3laaae.faces.new([fh192,fi192,fj192])
                                                                            bm_3laaae.faces.new([fk192,fl192,fm192])
                                                                            bm_3laaae.faces.new([fk192,fm192,fn192])

                    if type1laaad == 1:
                        if type2laaad == 1:
                            if type3laaad == 0:
                                if type4laaad == 1:
                                    if type5laaad == 1:
                                        if type6laaad == 0:
                                            if type7laaad == 1:
                                                if type8laaad == 1:
                                                    if type9laaad == 0:
                                                        if type10laaad == 0:
                                                            if type11laaad == 1:
                                                                if type12laaad == 1:
                                                                    if type13laaad == 0:
                                                                        if type14laaad == 1:
                                                                            bm_3laaad.faces.new([fa191,fb191,fc191])
                                                                            bm_3laaad.faces.new([fd191,fe191,ff191])
                                                                            bm_3laaad.faces.new([fg191,fh191,fi191])
                                                                            bm_3laaad.faces.new([fh191,fi191,fj191])
                                                                            bm_3laaad.faces.new([fk191,fl191,fm191])
                                                                            bm_3laaad.faces.new([fk191,fm191,fn191])

                    if type1laaac == 1:
                        if type2laaac == 1:
                            if type3laaac == 0:
                                if type4laaac == 1:
                                    if type5laaac == 1:
                                        if type6laaac == 0:
                                            if type7laaac == 1:
                                                if type8laaac == 1:
                                                    if type9laaac == 0:
                                                        if type10laaac == 1:
                                                            if type11laaac == 1:
                                                                if type12laaac == 0:
                                                                    if type13laaac == 0:
                                                                        if type14laaac == 1:
                                                                            bm_3laaac.faces.new([fa190,fb190,fc190])
                                                                            bm_3laaac.faces.new([fd190,fe190,ff190])
                                                                            bm_3laaac.faces.new([fg190,fh190,fi190])
                                                                            bm_3laaac.faces.new([fj190,fk190,fl190])
                                                                            bm_3laaac.faces.new([fk190,fl190,fm190])
                                                                            bm_3laaac.faces.new([fk190,fm190,fn190])

                    if type1laaab == 1:
                        if type2laaab == 1:
                            if type3laaab == 0:
                                if type4laaab == 1:
                                    if type5laaab == 1:
                                        if type6laaab == 0:
                                            if type7laaab == 1:
                                                if type8laaab == 1:
                                                    if type9laaab == 0:
                                                        if type10laaab == 1:
                                                            if type11laaab == 1:
                                                                if type12laaab == 0:
                                                                    if type13laaab == 1:
                                                                        if type14laaab == 1:
                                                                            bm_3laaab.faces.new([fa189,fb189,fc189])
                                                                            bm_3laaab.faces.new([fd189,fe189,ff189])
                                                                            bm_3laaab.faces.new([fg189,fh189,fi189])
                                                                            bm_3laaab.faces.new([fj189,fk189,fl189])
                                                                            bm_3laaab.faces.new([fj189,fl189,fm189])
                                                                            bm_3laaab.faces.new([fl189,fm189,fn189])

                    if type1laaaa == 1:
                        if type2laaaa == 1:
                            if type3laaaa == 0:
                                if type4laaaa == 0:
                                    if type5laaaa == 0:
                                        if type6laaaa == 0:
                                            if type7laaaa == 0:
                                                if type8laaaa == 1:
                                                    if type9laaaa == 1:
                                                        if type10laaaa == 0:
                                                            if type11laaaa == 1:
                                                                if type12laaaa == 1:
                                                                    if type13laaaa == 0:
                                                                        if type14laaaa == 1:
                                                                            bm_3laaaa.faces.new([fa188,fb188,fc188])
                                                                            bm_3laaaa.faces.new([fb188,fc188,fd188])
                                                                            bm_3laaaa.faces.new([fc188,fd188,fe188])
                                                                            bm_3laaaa.faces.new([fd188,fe188,ff188])
                                                                            bm_3laaaa.faces.new([fe188,ff188,fg188])
                                                                            bm_3laaaa.faces.new([fh188,fi188,fj188])
                                                                            bm_3laaaa.faces.new([fk188,fl188,fm188])
                                                                            bm_3laaaa.faces.new([fk188,fm188,fn188])

                    if type1laaz == 1:
                        if type2laaz == 1:
                            if type3laaz == 0:
                                if type4laaz == 0:
                                    if type5laaz == 0:
                                        if type6laaz == 0:
                                            if type7laaz == 1:
                                                if type8laaz == 1:
                                                    if type9laaz == 0:
                                                        if type10laaz == 0:
                                                            if type11laaz == 1:
                                                                if type12laaz == 1:
                                                                    if type13laaz == 0:
                                                                        if type14laaz == 1:
                                                                            bm_3laaz.faces.new([fa187,fb187,fc187])
                                                                            bm_3laaz.faces.new([fb187,fc187,fd187])
                                                                            bm_3laaz.faces.new([fc187,fd187,fe187])
                                                                            bm_3laaz.faces.new([fd187,fe187,ff187])
                                                                            bm_3laaz.faces.new([fg187,fh187,fi187])
                                                                            bm_3laaz.faces.new([fh187,fi187,fj187])
                                                                            bm_3laaz.faces.new([fk187,fl187,fm187])
                                                                            bm_3laaz.faces.new([fk187,fm187,fn187])

                    if type1laay == 1:
                        if type2laay == 1:
                            if type3laay == 0:
                                if type4laay == 0:
                                    if type5laay == 0:
                                        if type6laay == 0:
                                            if type7laay == 1:
                                                if type8laay == 1:
                                                    if type9laay == 0:
                                                        if type10laay == 1:
                                                            if type11laay == 1:
                                                                if type12laay == 0:
                                                                    if type13laay == 0:
                                                                        if type14laay == 1:
                                                                            bm_3laay.faces.new([fa186,fb186,fc186])
                                                                            bm_3laay.faces.new([fb186,fc186,fd186])
                                                                            bm_3laay.faces.new([fc186,fd186,fe186])
                                                                            bm_3laay.faces.new([fd186,fe186,ff186])
                                                                            bm_3laay.faces.new([fg186,fh186,fi186])
                                                                            bm_3laay.faces.new([fj186,fk186,fl186])
                                                                            bm_3laay.faces.new([fk186,fl186,fm186])
                                                                            bm_3laay.faces.new([fk186,fm186,fn186])

                    if type1laax == 1:
                        if type2laax == 1:
                            if type3laax == 0:
                                if type4laax == 0:
                                    if type5laax == 0:
                                        if type6laax == 0:
                                            if type7laax == 1:
                                                if type8laax == 1:
                                                    if type9laax == 0:
                                                        if type10laax == 1:
                                                            if type11laax == 1:
                                                                if type12laax == 0:
                                                                    if type13laax == 1:
                                                                        if type14laax == 1:
                                                                            bm_3laax.faces.new([fa185,fb185,fc185])
                                                                            bm_3laax.faces.new([fb185,fc185,fd185])
                                                                            bm_3laax.faces.new([fc185,fd185,fe185])
                                                                            bm_3laax.faces.new([fd185,fe185,ff185])
                                                                            bm_3laax.faces.new([fg185,fh185,fi185])
                                                                            bm_3laax.faces.new([fj185,fk185,fl185])
                                                                            bm_3laax.faces.new([fj185,fl185,fm185])
                                                                            bm_3laax.faces.new([fl185,fm185,fn185])

                    if type1laaw == 1:
                        if type2laaw == 1:
                            if type3laaw == 0:
                                if type4laaw == 0:
                                    if type5laaw == 0:
                                        if type6laaw == 1:
                                            if type7laaw == 1:
                                                if type8laaw == 0:
                                                    if type9laaw == 1:
                                                        if type10laaw == 1:
                                                            if type11laaw == 0:
                                                                if type12laaw == 0:
                                                                    if type13laaw == 0:
                                                                        if type14laaw == 1:
                                                                            bm_3laaw.faces.new([fa184,fb184,fc184])
                                                                            bm_3laaw.faces.new([fb184,fc184,fd184])
                                                                            bm_3laaw.faces.new([fc184,fd184,fe184])
                                                                            bm_3laaw.faces.new([ff184,fg184,fh184])
                                                                            bm_3laaw.faces.new([fi184,fj184,fk184])
                                                                            bm_3laaw.faces.new([fj184,fk184,fl184])
                                                                            bm_3laaw.faces.new([fk184,fl184,fm184])
                                                                            bm_3laaw.faces.new([fk184,fm184,fn184])

                    if type1laav == 1:
                        if type2laav == 1:
                            if type3laav == 0:
                                if type4laav == 0:
                                    if type5laav == 0:
                                        if type6laav == 1:
                                            if type7laav == 1:
                                                if type8laav == 0:
                                                    if type9laav == 1:
                                                        if type10laav == 1:
                                                            if type11laav == 0:
                                                                if type12laav == 0:
                                                                    if type13laav == 1:
                                                                        if type14laav == 1:
                                                                            bm_3laav.faces.new([fa183,fb183,fc183])
                                                                            bm_3laav.faces.new([fb183,fc183,fd183])
                                                                            bm_3laav.faces.new([fc183,fd183,fe183])
                                                                            bm_3laav.faces.new([ff183,fg183,fh183])
                                                                            bm_3laav.faces.new([fi183,fj183,fk183])
                                                                            bm_3laav.faces.new([fj183,fk183,fl183])
                                                                            bm_3laav.faces.new([fj183,fl183,fm183])
                                                                            bm_3laav.faces.new([fl183,fm183,fn183])

                    if type1laau == 1:
                        if type2laau == 1:
                            if type3laau == 0:
                                if type4laau == 0:
                                    if type5laau == 0:
                                        if type6laau == 1:
                                            if type7laau == 1:
                                                if type8laau == 0:
                                                    if type9laau == 1:
                                                        if type10laau == 1:
                                                            if type11laau == 0:
                                                                if type12laau == 1:
                                                                    if type13laau == 1:
                                                                        if type14laau == 0:
                                                                            bm_3laau.faces.new([fa182,fb182,fc182])
                                                                            bm_3laau.faces.new([fb182,fc182,fd182])
                                                                            bm_3laau.faces.new([fc182,fd182,fe182])
                                                                            bm_3laau.faces.new([ff182,fg182,fh182])
                                                                            bm_3laau.faces.new([fi182,fj182,fk182])
                                                                            bm_3laau.faces.new([fl182,fm182,fn182])

                    if type1laat == 1:
                        if type2laat == 1:
                            if type3laat == 0:
                                if type4laat == 0:
                                    if type5laat == 1:
                                        if type6laat == 1:
                                            if type7laat == 0:
                                                if type8laat == 0:
                                                    if type9laat == 0:
                                                        if type10laat == 0:
                                                            if type11laat == 1:
                                                                if type12laat == 1:
                                                                    if type13laat == 0:
                                                                        if type14laat == 1:
                                                                            bm_3laat.faces.new([fa181,fb181,fc181])
                                                                            bm_3laat.faces.new([fb181,fc181,fd181])
                                                                            bm_3laat.faces.new([fe181,ff181,fg181])
                                                                            bm_3laat.faces.new([ff181,fg181,fh181])
                                                                            bm_3laat.faces.new([fg181,fh181,fi181])
                                                                            bm_3laat.faces.new([fh181,fi181,fj181])
                                                                            bm_3laat.faces.new([fk181,fl181,fm181])
                                                                            bm_3laat.faces.new([fk181,fm181,fn181])

                    if type1laas == 1:
                        if type2laas == 1:
                            if type3laas == 0:
                                if type4laas == 0:
                                    if type5laas == 1:
                                        if type6laas == 1:
                                            if type7laas == 0:
                                                if type8laas == 0:
                                                    if type9laas == 0:
                                                        if type10laas == 1:
                                                            if type11laas == 1:
                                                                if type12laas == 0:
                                                                    if type13laas == 0:
                                                                        if type14laas == 1:
                                                                            bm_3laas.faces.new([fa180,fb180,fc180])
                                                                            bm_3laas.faces.new([fb180,fc180,fd180])
                                                                            bm_3laas.faces.new([fe180,ff180,fg180])
                                                                            bm_3laas.faces.new([ff180,fg180,fh180])
                                                                            bm_3laas.faces.new([fg180,fh180,fi180])
                                                                            bm_3laas.faces.new([fj180,fk180,fl180])
                                                                            bm_3laas.faces.new([fk180,fl180,fm180])
                                                                            bm_3laas.faces.new([fk180,fm180,fn180])

                    if type1laar == 1:
                        if type2laar == 1:
                            if type3laar == 0:
                                if type4laar == 0:
                                    if type5laar == 1:
                                        if type6laar == 1:
                                            if type7laar == 0:
                                                if type8laar == 0:
                                                    if type9laar == 0:
                                                        if type10laar == 1:
                                                            if type11laar == 1:
                                                                if type12laar == 0:
                                                                    if type13laar == 1:
                                                                        if type14laar == 1:
                                                                            bm_3laar.faces.new([fa179,fb179,fc179])
                                                                            bm_3laar.faces.new([fb179,fc179,fd179])
                                                                            bm_3laar.faces.new([fe179,ff179,fg179])
                                                                            bm_3laar.faces.new([ff179,fg179,fh179])
                                                                            bm_3laar.faces.new([fg179,fh179,fi179])
                                                                            bm_3laar.faces.new([fj179,fk179,fl179])
                                                                            bm_3laar.faces.new([fj179,fl179,fm179])
                                                                            bm_3laar.faces.new([fl179,fm179,fn179])

                    if type1laaq == 1:
                        if type2laaq == 1:
                            if type3laaq == 0:
                                if type4laaq == 0:
                                    if type5laaq == 1:
                                        if type6laaq == 1:
                                            if type7laaq == 0:
                                                if type8laaq == 0:
                                                    if type9laaq == 1:
                                                        if type10laaq == 1:
                                                            if type11laaq == 0:
                                                                if type12laaq == 0:
                                                                    if type13laaq == 0:
                                                                        if type14laaq == 1:
                                                                            bm_3laaq.faces.new([fa178,fb178,fc178])
                                                                            bm_3laaq.faces.new([fb178,fc178,fd178])
                                                                            bm_3laaq.faces.new([fe178,ff178,fg178])
                                                                            bm_3laaq.faces.new([ff178,fg178,fh178])
                                                                            bm_3laaq.faces.new([fi178,fj178,fk178])
                                                                            bm_3laaq.faces.new([fj178,fk178,fl178])
                                                                            bm_3laaq.faces.new([fk178,fl178,fm178])
                                                                            bm_3laaq.faces.new([fk178,fm178,fn178])

                    if type1laap == 1:
                        if type2laap == 1:
                            if type3laap == 0:
                                if type4laap == 0:
                                    if type5laap == 1:
                                        if type6laap == 1:
                                            if type7laap == 0:
                                                if type8laap == 0:
                                                    if type9laap == 1:
                                                        if type10laap == 1:
                                                            if type11laap == 0:
                                                                if type12laap == 0:
                                                                    if type13laap == 1:
                                                                        if type14laap == 1:
                                                                            bm_3laap.faces.new([fa177,fb177,fc177])
                                                                            bm_3laap.faces.new([fb177,fc177,fd177])
                                                                            bm_3laap.faces.new([fe177,ff177,fg177])
                                                                            bm_3laap.faces.new([ff177,fg177,fh177])
                                                                            bm_3laap.faces.new([fi177,fj177,fk177])
                                                                            bm_3laap.faces.new([fj177,fk177,fl177])
                                                                            bm_3laap.faces.new([fj177,fl177,fm177])
                                                                            bm_3laap.faces.new([fl177,fm177,fn177])

                    if type1laao == 1:
                        if type2laao == 1:
                            if type3laao == 0:
                                if type4laao == 0:
                                    if type5laao == 1:
                                        if type6laao == 1:
                                            if type7laao == 0:
                                                if type8laao == 0:
                                                    if type9laao == 1:
                                                        if type10laao == 1:
                                                            if type11laao == 0:
                                                                if type12laao == 1:
                                                                    if type13laao == 1:
                                                                        if type14laao == 0:
                                                                            bm_3laao.faces.new([fa176,fb176,fc176])
                                                                            bm_3laao.faces.new([fb176,fc176,fd176])
                                                                            bm_3laao.faces.new([fe176,ff176,fg176])
                                                                            bm_3laao.faces.new([ff176,fg176,fh176])
                                                                            bm_3laao.faces.new([fi176,fj176,fk176])
                                                                            bm_3laao.faces.new([fl176,fm176,fn176])

                    if type1laan == 1:
                        if type2laan == 1:
                            if type3laan == 0:
                                if type4laan == 0:
                                    if type5laan == 1:
                                        if type6laan == 1:
                                            if type7laan == 0:
                                                if type8laan == 1:
                                                    if type9laan == 1:
                                                        if type10laan == 0:
                                                            if type11laan == 0:
                                                                if type12laan == 0:
                                                                    if type13laan == 0:
                                                                        if type14laan == 1:
                                                                            bm_3laan.faces.new([fa175,fb175,fc175])
                                                                            bm_3laan.faces.new([fb175,fc175,fd175])
                                                                            bm_3laan.faces.new([fe175,ff175,fg175])
                                                                            bm_3laan.faces.new([fh175,fi175,fj175])
                                                                            bm_3laan.faces.new([fi175,fj175,fk175])
                                                                            bm_3laan.faces.new([fj175,fk175,fl175])
                                                                            bm_3laan.faces.new([fk175,fl175,fm175])
                                                                            bm_3laan.faces.new([fk175,fm175,fn175])

                    if type1laam == 1:
                        if type2laam == 1:
                            if type3laam == 0:
                                if type4laam == 0:
                                    if type5laam == 1:
                                        if type6laam == 1:
                                            if type7laam == 0:
                                                if type8laam == 1:
                                                    if type9laam == 1:
                                                        if type10laam == 0:
                                                            if type11laam == 0:
                                                                if type12laam == 0:
                                                                    if type13laam == 1:
                                                                        if type14laam == 1:
                                                                            bm_3laam.faces.new([fa174,fb174,fc174])
                                                                            bm_3laam.faces.new([fb174,fc174,fd174])
                                                                            bm_3laam.faces.new([fe174,ff174,fg174])
                                                                            bm_3laam.faces.new([fh174,fi174,fj174])
                                                                            bm_3laam.faces.new([fi174,fj174,fk174])
                                                                            bm_3laam.faces.new([fj174,fk174,fl174])
                                                                            bm_3laam.faces.new([fj174,fl174,fm174])
                                                                            bm_3laam.faces.new([fl174,fm174,fn174])

                    if type1laal == 1:
                        if type2laal == 1:
                            if type3laal == 0:
                                if type4laal == 0:
                                    if type5laal == 1:
                                        if type6laal == 1:
                                            if type7laal == 0:
                                                if type8laal == 1:
                                                    if type9laal == 1:
                                                        if type10laal == 0:
                                                            if type11laal == 0:
                                                                if type12laal == 1:
                                                                    if type13laal == 1:
                                                                        if type14laal == 0:
                                                                            bm_3laal.faces.new([fa173,fb173,fc173])
                                                                            bm_3laal.faces.new([fb173,fc173,fd173])
                                                                            bm_3laal.faces.new([fe173,ff173,fg173])
                                                                            bm_3laal.faces.new([fh173,fi173,fj173])
                                                                            bm_3laal.faces.new([fi173,fj173,fk173])
                                                                            bm_3laal.faces.new([fl173,fm173,fn173])

                    if type1laak == 1:
                        if type2laak == 1:
                            if type3laak == 0:
                                if type4laak == 0:
                                    if type5laak == 1:
                                        if type6laak == 1:
                                            if type7laak == 0:
                                                if type8laak == 1:
                                                    if type9laak == 1:
                                                        if type10laak == 0:
                                                            if type11laak == 1:
                                                                if type12laak == 1:
                                                                    if type13laak == 0:
                                                                        if type14laak == 0:
                                                                            bm_3laak.faces.new([fa172,fb172,fc172])
                                                                            bm_3laak.faces.new([fb172,fc172,fd172])
                                                                            bm_3laak.faces.new([fe172,ff172,fg172])
                                                                            bm_3laak.faces.new([fh172,fi172,fj172])
                                                                            bm_3laak.faces.new([fk172,fl172,fm172])
                                                                            bm_3laak.faces.new([fl172,fm172,fn172])

                    if type1laaj == 1:
                        if type2laaj == 1:
                            if type3laaj == 0:
                                if type4laaj == 1:
                                    if type5laaj == 1:
                                        if type6laaj == 0:
                                            if type7laaj == 0:
                                                if type8laaj == 0:
                                                    if type9laaj == 0:
                                                        if type10laaj == 0:
                                                            if type11laaj == 1:
                                                                if type12laaj == 1:
                                                                    if type13laaj == 0:
                                                                        if type14laaj == 1:
                                                                            bm_3laaj.faces.new([fa171,fb171,fc171])
                                                                            bm_3laaj.faces.new([fd171,fe171,ff171])
                                                                            bm_3laaj.faces.new([fe171,ff171,fg171])
                                                                            bm_3laaj.faces.new([ff171,fg171,fh171])
                                                                            bm_3laaj.faces.new([fg171,fh171,fi171])
                                                                            bm_3laaj.faces.new([fh171,fi171,fj171])
                                                                            bm_3laaj.faces.new([fk171,fl171,fm171])
                                                                            bm_3laaj.faces.new([fk171,fm171,fn171])

                    if type1laai == 1:
                        if type2laai == 1:
                            if type3laai == 0:
                                if type4laai == 1:
                                    if type5laai == 1:
                                        if type6laai == 0:
                                            if type7laai == 0:
                                                if type8laai == 0:
                                                    if type9laai == 0:
                                                        if type10laai == 1:
                                                            if type11laai == 1:
                                                                if type12laai == 0:
                                                                    if type13laai == 0:
                                                                        if type14laai == 1:
                                                                            bm_3laai.faces.new([fa170,fb170,fc170])
                                                                            bm_3laai.faces.new([fd170,fe170,ff170])
                                                                            bm_3laai.faces.new([fe170,ff170,fg170])
                                                                            bm_3laai.faces.new([ff170,fg170,fh170])
                                                                            bm_3laai.faces.new([fg170,fh170,fi170])
                                                                            bm_3laai.faces.new([fj170,fk170,fl170])
                                                                            bm_3laai.faces.new([fk170,fl170,fm170])
                                                                            bm_3laai.faces.new([fk170,fm170,fn170])

                    if type1laah == 1:
                        if type2laah == 1:
                            if type3laah == 0:
                                if type4laah == 1:
                                    if type5laah == 1:
                                        if type6laah == 0:
                                            if type7laah == 0:
                                                if type8laah == 0:
                                                    if type9laah == 0:
                                                        if type10laah == 1:
                                                            if type11laah == 1:
                                                                if type12laah == 0:
                                                                    if type13laah == 1:
                                                                        if type14laah == 1:
                                                                            bm_3laah.faces.new([fa169,fb169,fc169])
                                                                            bm_3laah.faces.new([fd169,fe169,ff169])
                                                                            bm_3laah.faces.new([fe169,ff169,fg169])
                                                                            bm_3laah.faces.new([ff169,fg169,fh169])
                                                                            bm_3laah.faces.new([fg169,fh169,fi169])
                                                                            bm_3laah.faces.new([fj169,fk169,fl169])
                                                                            bm_3laah.faces.new([fj169,fl169,fm169])
                                                                            bm_3laah.faces.new([fl169,fm169,fn169])

                    if type1laag == 1:
                        if type2laag == 1:
                            if type3laag == 0:
                                if type4laag == 1:
                                    if type5laag == 1:
                                        if type6laag == 0:
                                            if type7laag == 0:
                                                if type8laag == 0:
                                                    if type9laag == 1:
                                                        if type10laag == 1:
                                                            if type11laag == 0:
                                                                if type12laag == 0:
                                                                    if type13laag == 0:
                                                                        if type14laag == 1:
                                                                            bm_3laag.faces.new([fa168,fb168,fc168])
                                                                            bm_3laag.faces.new([fd168,fe168,ff168])
                                                                            bm_3laag.faces.new([fe168,ff168,fg168])
                                                                            bm_3laag.faces.new([ff168,fg168,fh168])
                                                                            bm_3laag.faces.new([fi168,fj168,fk168])
                                                                            bm_3laag.faces.new([fj168,fk168,fl168])
                                                                            bm_3laag.faces.new([fk168,fl168,fm168])
                                                                            bm_3laag.faces.new([fk168,fm168,fn168])

                    if type1laaf == 1:
                        if type2laaf == 1:
                            if type3laaf == 0:
                                if type4laaf == 1:
                                    if type5laaf == 1:
                                        if type6laaf == 0:
                                            if type7laaf == 0:
                                                if type8laaf == 0:
                                                    if type9laaf == 1:
                                                        if type10laaf == 1:
                                                            if type11laaf == 0:
                                                                if type12laaf == 0:
                                                                    if type13laaf == 1:
                                                                        if type14laaf == 1:
                                                                            bm_3laaf.faces.new([fa167,fb167,fc167])
                                                                            bm_3laaf.faces.new([fd167,fe167,ff167])
                                                                            bm_3laaf.faces.new([fe167,ff167,fg167])
                                                                            bm_3laaf.faces.new([ff167,fg167,fh167])
                                                                            bm_3laaf.faces.new([fi167,fj167,fk167])
                                                                            bm_3laaf.faces.new([fj167,fk167,fl167])
                                                                            bm_3laaf.faces.new([fj167,fl167,fm167])
                                                                            bm_3laaf.faces.new([fl167,fm167,fn167])

                    if type1laae == 1:
                        if type2laae == 1:
                            if type3laae == 0:
                                if type4laae == 1:
                                    if type5laae == 1:
                                        if type6laae == 0:
                                            if type7laae == 0:
                                                if type8laae == 0:
                                                    if type9laae == 1:
                                                        if type10laae == 1:
                                                            if type11laae == 0:
                                                                if type12laae == 1:
                                                                    if type13laae == 1:
                                                                        if type14laae == 0:
                                                                            bm_3laae.faces.new([fa166,fb166,fc166])
                                                                            bm_3laae.faces.new([fd166,fe166,ff166])
                                                                            bm_3laae.faces.new([fe166,ff166,fg166])
                                                                            bm_3laae.faces.new([ff166,fg166,fh166])
                                                                            bm_3laae.faces.new([fi166,fj166,fk166])
                                                                            bm_3laae.faces.new([fl166,fm166,fn166])

                    if type1laad == 1:
                        if type2laad == 1:
                            if type3laad == 0:
                                if type4laad == 1:
                                    if type5laad == 1:
                                        if type6laad == 0:
                                            if type7laad == 0:
                                                if type8laad == 1:
                                                    if type9laad == 1:
                                                        if type10laad == 0:
                                                            if type11laad == 0:
                                                                if type12laad == 0:
                                                                    if type13laad == 0:
                                                                        if type14laad == 1:
                                                                            bm_3laad.faces.new([fa165,fb165,fc165])
                                                                            bm_3laad.faces.new([fd165,fe165,ff165])
                                                                            bm_3laad.faces.new([fe165,ff165,fg165])
                                                                            bm_3laad.faces.new([fh165,fi165,fj165])
                                                                            bm_3laad.faces.new([fi165,fj165,fk165])
                                                                            bm_3laad.faces.new([fj165,fk165,fl165])
                                                                            bm_3laad.faces.new([fk165,fl165,fm165])
                                                                            bm_3laad.faces.new([fk165,fm165,fn165])

                    if type1laac == 1:
                        if type2laac == 1:
                            if type3laac == 0:
                                if type4laac == 1:
                                    if type5laac == 1:
                                        if type6laac == 0:
                                            if type7laac == 0:
                                                if type8laac == 1:
                                                    if type9laac == 1:
                                                        if type10laac == 0:
                                                            if type11laac == 0:
                                                                if type12laac == 0:
                                                                    if type13laac == 1:
                                                                        if type14laac == 1:
                                                                            bm_3laac.faces.new([fa164,fb164,fc164])
                                                                            bm_3laac.faces.new([fd164,fe164,ff164])
                                                                            bm_3laac.faces.new([fe164,ff164,fg164])
                                                                            bm_3laac.faces.new([fh164,fi164,fj164])
                                                                            bm_3laac.faces.new([fi164,fj164,fk164])
                                                                            bm_3laac.faces.new([fj164,fk164,fl164])
                                                                            bm_3laac.faces.new([fj164,fl164,fm164])
                                                                            bm_3laac.faces.new([fl164,fm164,fn164])

                    if type1laab == 1:
                        if type2laab == 1:
                            if type3laab == 0:
                                if type4laab == 1:
                                    if type5laab == 1:
                                        if type6laab == 0:
                                            if type7laab == 0:
                                                if type8laab == 1:
                                                    if type9laab == 1:
                                                        if type10laab == 0:
                                                            if type11laab == 0:
                                                                if type12laab == 1:
                                                                    if type13laab == 1:
                                                                        if type14laab == 0:
                                                                            bm_3laab.faces.new([fa163,fb163,fc163])
                                                                            bm_3laab.faces.new([fd163,fe163,ff163])
                                                                            bm_3laab.faces.new([fe163,ff163,fg163])
                                                                            bm_3laab.faces.new([fh163,fi163,fj163])
                                                                            bm_3laab.faces.new([fi163,fj163,fk163])
                                                                            bm_3laab.faces.new([fl163,fm163,fn163])

                    if type1laaa == 1:
                        if type2laaa == 1:
                            if type3laaa == 0:
                                if type4laaa == 1:
                                    if type5laaa == 1:
                                        if type6laaa == 0:
                                            if type7laaa == 0:
                                                if type8laaa == 1:
                                                    if type9laaa == 1:
                                                        if type10laaa == 0:
                                                            if type11laaa == 1:
                                                                if type12laaa == 1:
                                                                    if type13laaa == 0:
                                                                        if type14laaa == 0:
                                                                            bm_3laaa.faces.new([fa162,fb162,fc162])
                                                                            bm_3laaa.faces.new([fd162,fe162,ff162])
                                                                            bm_3laaa.faces.new([fe162,ff162,fg162])
                                                                            bm_3laaa.faces.new([fh162,fi162,fj162])
                                                                            bm_3laaa.faces.new([fk162,fl162,fm162])
                                                                            bm_3laaa.faces.new([fl162,fm162,fn162])

                    if type1laz == 1:
                        if type2laz == 1:
                            if type3laz == 0:
                                if type4laz == 1:
                                    if type5laz == 1:
                                        if type6laz == 0:
                                            if type7laz == 1:
                                                if type8laz == 1:
                                                    if type9laz == 0:
                                                        if type10laz == 0:
                                                            if type11laz == 0:
                                                                if type12laz == 0:
                                                                    if type13laz == 0:
                                                                        if type14laz == 1:
                                                                            bm_3laz.faces.new([fa161,fb161,fc161])
                                                                            bm_3laz.faces.new([fd161,fe161,ff161])
                                                                            bm_3laz.faces.new([fg161,fh161,fi161])
                                                                            bm_3laz.faces.new([fh161,fi161,fj161])
                                                                            bm_3laz.faces.new([fi161,fj161,fk161])
                                                                            bm_3laz.faces.new([fj161,fk161,fl161])
                                                                            bm_3laz.faces.new([fk161,fl161,fm161])
                                                                            bm_3laz.faces.new([fk161,fm161,fn161])

                    if type1lay == 1:
                        if type2lay == 1:
                            if type3lay == 0:
                                if type4lay == 1:
                                    if type5lay == 1:
                                        if type6lay == 0:
                                            if type7lay == 1:
                                                if type8lay == 1:
                                                    if type9lay == 0:
                                                        if type10lay == 0:
                                                            if type11lay == 0:
                                                                if type12lay == 0:
                                                                    if type13lay == 1:
                                                                        if type14lay == 1:
                                                                            bm_3lay.faces.new([fa160,fb160,fc160])
                                                                            bm_3lay.faces.new([fd160,fe160,ff160])
                                                                            bm_3lay.faces.new([fg160,fh160,fi160])
                                                                            bm_3lay.faces.new([fh160,fi160,fj160])
                                                                            bm_3lay.faces.new([fi160,fj160,fk160])
                                                                            bm_3lay.faces.new([fj160,fk160,fl160])
                                                                            bm_3lay.faces.new([fj160,fl160,fm160])
                                                                            bm_3lay.faces.new([fl160,fm160,fn160])

                    if type1lax == 1:
                        if type2lax == 1:
                            if type3lax == 0:
                                if type4lax == 1:
                                    if type5lax == 1:
                                        if type6lax == 0:
                                            if type7lax == 1:
                                                if type8lax == 1:
                                                    if type9lax == 0:
                                                        if type10lax == 0:
                                                            if type11lax == 0:
                                                                if type12lax == 1:
                                                                    if type13lax == 1:
                                                                        if type14lax == 0:
                                                                            bm_3lax.faces.new([fa159,fb159,fc159])
                                                                            bm_3lax.faces.new([fd159,fe159,ff159])
                                                                            bm_3lax.faces.new([fg159,fh159,fi159])
                                                                            bm_3lax.faces.new([fh159,fi159,fj159])
                                                                            bm_3lax.faces.new([fi159,fj159,fk159])
                                                                            bm_3lax.faces.new([fl159,fm159,fn159])

                    if type1law == 1:
                        if type2law == 1:
                            if type3law == 0:
                                if type4law == 1:
                                    if type5law == 1:
                                        if type6law == 0:
                                            if type7law == 1:
                                                if type8law == 1:
                                                    if type9law == 0:
                                                        if type10law == 0:
                                                            if type11law == 1:
                                                                if type12law == 1:
                                                                    if type13law == 0:
                                                                        if type14law == 0:
                                                                            bm_3law.faces.new([fa158,fb158,fc158])
                                                                            bm_3law.faces.new([fd158,fe158,ff158])
                                                                            bm_3law.faces.new([fg158,fh158,fi158])
                                                                            bm_3law.faces.new([fh158,fi158,fj158])
                                                                            bm_3law.faces.new([fk158,fl158,fm158])
                                                                            bm_3law.faces.new([fl158,fm158,fn158])

                    if type1lav == 1:
                        if type2lav == 1:
                            if type3lav == 0:
                                if type4lav == 1:
                                    if type5lav == 1:
                                        if type6lav == 0:
                                            if type7lav == 1:
                                                if type8lav == 1:
                                                    if type9lav == 0:
                                                        if type10lav == 1:
                                                            if type11lav == 1:
                                                                if type12lav == 0:
                                                                    if type13lav == 0:
                                                                        if type14lav == 0:
                                                                            bm_3lav.faces.new([fa157,fb157,fc157])
                                                                            bm_3lav.faces.new([fd157,fe157,ff157])
                                                                            bm_3lav.faces.new([fg157,fh157,fi157])
                                                                            bm_3lav.faces.new([fj157,fk157,fl157])
                                                                            bm_3lav.faces.new([fk157,fl157,fm157])
                                                                            bm_3lav.faces.new([fl157,fm157,fn157])

                    if type1lau == 1:
                        if type2lau == 1:
                            if type3lau == 0:
                                if type4lau == 0:
                                    if type5lau == 0:
                                        if type6lau == 0:
                                            if type7lau == 0:
                                                if type8lau == 0:
                                                    if type9lau == 0:
                                                        if type10lau == 0:
                                                            if type11lau == 1:
                                                                if type12lau == 1:
                                                                    if type13lau == 0:
                                                                        if type14lau == 1:
                                                                            bm_3lau.faces.new([fa156,fb156,fc156])
                                                                            bm_3lau.faces.new([fb156,fc156,fd156])
                                                                            bm_3lau.faces.new([fc156,fd156,fe156])
                                                                            bm_3lau.faces.new([fd156,fe156,ff156])
                                                                            bm_3lau.faces.new([fe156,ff156,fg156])
                                                                            bm_3lau.faces.new([ff156,fg156,fh156])
                                                                            bm_3lau.faces.new([fg156,fh156,fi156])
                                                                            bm_3lau.faces.new([fh156,fi156,fj156])
                                                                            bm_3lau.faces.new([fk156,fl156,fm156])
                                                                            bm_3lau.faces.new([fk156,fm156,fn156])

                    if type1lat == 1:
                        if type2lat == 1:
                            if type3lat == 0:
                                if type4lat == 0:
                                    if type5lat == 0:
                                        if type6lat == 0:
                                            if type7lat == 0:
                                                if type8lat == 0:
                                                    if type9lat == 0:
                                                        if type10lat == 1:
                                                            if type11lat == 1:
                                                                if type12lat == 0:
                                                                    if type13lat == 0:
                                                                        if type14lat == 1:
                                                                            bm_3lat.faces.new([fa155,fb155,fc155])
                                                                            bm_3lat.faces.new([fb155,fc155,fd155])
                                                                            bm_3lat.faces.new([fc155,fd155,fe155])
                                                                            bm_3lat.faces.new([fd155,fe155,ff155])
                                                                            bm_3lat.faces.new([fe155,ff155,fg155])
                                                                            bm_3lat.faces.new([ff155,fg155,fh155])
                                                                            bm_3lat.faces.new([fg155,fh155,fi155])
                                                                            bm_3lat.faces.new([fj155,fk155,fl155])
                                                                            bm_3lat.faces.new([fk155,fl155,fm155])
                                                                            bm_3lat.faces.new([fk155,fm155,fn155])

                    if type1las == 1:
                        if type2las == 1:
                            if type3las == 0:
                                if type4las == 0:
                                    if type5las == 0:
                                        if type6las == 0:
                                            if type7las == 0:
                                                if type8las == 0:
                                                    if type9las == 0:
                                                        if type10las == 1:
                                                            if type11las == 1:
                                                                if type12las == 0:
                                                                    if type13las == 1:
                                                                        if type14las == 1:
                                                                            bm_3las.faces.new([fa154,fb154,fc154])
                                                                            bm_3las.faces.new([fb154,fc154,fd154])
                                                                            bm_3las.faces.new([fc154,fd154,fe154])
                                                                            bm_3las.faces.new([fd154,fe154,ff154])
                                                                            bm_3las.faces.new([fe154,ff154,fg154])
                                                                            bm_3las.faces.new([ff154,fg154,fh154])
                                                                            bm_3las.faces.new([fg154,fh154,fi154])
                                                                            bm_3las.faces.new([fj154,fk154,fl154])
                                                                            bm_3las.faces.new([fj154,fl154,fm154])
                                                                            bm_3las.faces.new([fl154,fm154,fn154])

                    if type1lar == 1:
                        if type2lar == 1:
                            if type3lar == 0:
                                if type4lar == 0:
                                    if type5lar == 0:
                                        if type6lar == 0:
                                            if type7lar == 0:
                                                if type8lar == 0:
                                                    if type9lar == 1:
                                                        if type10lar == 1:
                                                            if type11lar == 0:
                                                                if type12lar == 0:
                                                                    if type13lar == 0:
                                                                        if type14lar == 1:
                                                                            bm_3lar.faces.new([fa153,fb153,fc153])
                                                                            bm_3lar.faces.new([fb153,fc153,fd153])
                                                                            bm_3lar.faces.new([fc153,fd153,fe153])
                                                                            bm_3lar.faces.new([fd153,fe153,ff153])
                                                                            bm_3lar.faces.new([fe153,ff153,fg153])
                                                                            bm_3lar.faces.new([ff153,fg153,fh153])
                                                                            bm_3lar.faces.new([fi153,fj153,fk153])
                                                                            bm_3lar.faces.new([fj153,fk153,fl153])
                                                                            bm_3lar.faces.new([fk153,fl153,fm153])
                                                                            bm_3lar.faces.new([fk153,fm153,fn153])

                    if type1laq == 1:
                        if type2laq == 1:
                            if type3laq == 0:
                                if type4laq == 0:
                                    if type5laq == 0:
                                        if type6laq == 0:
                                            if type7laq == 0:
                                                if type8laq == 0:
                                                    if type9laq == 1:
                                                        if type10laq == 1:
                                                            if type11laq == 0:
                                                                if type12laq == 0:
                                                                    if type13laq == 1:
                                                                        if type14laq == 1:
                                                                            bm_3laq.faces.new([fa152,fb152,fc152])
                                                                            bm_3laq.faces.new([fb152,fc152,fd152])
                                                                            bm_3laq.faces.new([fc152,fd152,fe152])
                                                                            bm_3laq.faces.new([fd152,fe152,ff152])
                                                                            bm_3laq.faces.new([fe152,ff152,fg152])
                                                                            bm_3laq.faces.new([ff152,fg152,fh152])
                                                                            bm_3laq.faces.new([fi152,fj152,fk152])
                                                                            bm_3laq.faces.new([fj152,fk152,fl152])
                                                                            bm_3laq.faces.new([fj152,fl152,fm152])
                                                                            bm_3laq.faces.new([fl152,fm152,fn152])

                    if type1lap == 1:
                        if type2lap == 1:
                            if type3lap == 0:
                                if type4lap == 0:
                                    if type5lap == 0:
                                        if type6lap == 0:
                                            if type7lap == 0:
                                                if type8lap == 0:
                                                    if type9lap == 1:
                                                        if type10lap == 1:
                                                            if type11lap == 0:
                                                                if type12lap == 1:
                                                                    if type13lap == 1:
                                                                        if type14lap == 0:
                                                                            bm_3lap.faces.new([fa151,fb151,fc151])
                                                                            bm_3lap.faces.new([fb151,fc151,fd151])
                                                                            bm_3lap.faces.new([fc151,fd151,fe151])
                                                                            bm_3lap.faces.new([fd151,fe151,ff151])
                                                                            bm_3lap.faces.new([fe151,ff151,fg151])
                                                                            bm_3lap.faces.new([ff151,fg151,fh151])
                                                                            bm_3lap.faces.new([fi151,fj151,fk151])
                                                                            bm_3lap.faces.new([fl151,fm151,fn151])

                    if type1lao == 1:
                        if type2lao == 1:
                            if type3lao == 0:
                                if type4lao == 0:
                                    if type5lao == 0:
                                        if type6lao == 0:
                                            if type7lao == 0:
                                                if type8lao == 1:
                                                    if type9lao == 1:
                                                        if type10lao == 0:
                                                            if type11lao == 0:
                                                                if type12lao == 0:
                                                                    if type13lao == 0:
                                                                        if type14lao == 1:
                                                                            bm_3lao.faces.new([fa150,fb150,fc150])
                                                                            bm_3lao.faces.new([fb150,fc150,fd150])
                                                                            bm_3lao.faces.new([fc150,fd150,fe150])
                                                                            bm_3lao.faces.new([fd150,fe150,ff150])
                                                                            bm_3lao.faces.new([fe150,ff150,fg150])
                                                                            bm_3lao.faces.new([fh150,fi150,fj150])
                                                                            bm_3lao.faces.new([fi150,fj150,fk150])
                                                                            bm_3lao.faces.new([fj150,fk150,fl150])
                                                                            bm_3lao.faces.new([fk150,fl150,fm150])
                                                                            bm_3lao.faces.new([fk150,fm150,fn150])

                    if type1lan == 1:
                        if type2lan == 1:
                            if type3lan == 0:
                                if type4lan == 0:
                                    if type5lan == 0:
                                        if type6lan == 0:
                                            if type7lan == 0:
                                                if type8lan == 1:
                                                    if type9lan == 1:
                                                        if type10lan == 0:
                                                            if type11lan == 0:
                                                                if type12lan == 0:
                                                                    if type13lan == 1:
                                                                        if type14lan == 1:
                                                                            bm_3lan.faces.new([fa149,fb149,fc149])
                                                                            bm_3lan.faces.new([fb149,fc149,fd149])
                                                                            bm_3lan.faces.new([fc149,fd149,fe149])
                                                                            bm_3lan.faces.new([fd149,fe149,ff149])
                                                                            bm_3lan.faces.new([fe149,ff149,fg149])
                                                                            bm_3lan.faces.new([fh149,fi149,fj149])
                                                                            bm_3lan.faces.new([fi149,fj149,fk149])
                                                                            bm_3lan.faces.new([fj149,fk149,fl149])
                                                                            bm_3lan.faces.new([fj149,fl149,fm149])
                                                                            bm_3lan.faces.new([fl149,fm149,fn149])

                    if type1lam == 1:
                        if type2lam == 1:
                            if type3lam == 0:
                                if type4lam == 0:
                                    if type5lam == 0:
                                        if type6lam == 0:
                                            if type7lam == 0:
                                                if type8lam == 1:
                                                    if type9lam == 1:
                                                        if type10lam == 0:
                                                            if type11lam == 0:
                                                                if type12lam == 1:
                                                                    if type13lam == 1:
                                                                        if type14lam == 0:
                                                                            bm_3lam.faces.new([fa148,fb148,fc148])
                                                                            bm_3lam.faces.new([fb148,fc148,fd148])
                                                                            bm_3lam.faces.new([fc148,fd148,fe148])
                                                                            bm_3lam.faces.new([fd148,fe148,ff148])
                                                                            bm_3lam.faces.new([fe148,ff148,fg148])
                                                                            bm_3lam.faces.new([fh148,fi148,fj148])
                                                                            bm_3lam.faces.new([fi148,fj148,fk148])
                                                                            bm_3lam.faces.new([fl148,fm148,fn148])

                    if type1lal == 1:
                        if type2lal == 1:
                            if type3lal == 0:
                                if type4lal == 0:
                                    if type5lal == 0:
                                        if type6lal == 0:
                                            if type7lal == 0:
                                                if type8lal == 1:
                                                    if type9lal == 1:
                                                        if type10lal == 0:
                                                            if type11lal == 1:
                                                                if type12lal == 1:
                                                                    if type13lal == 0:
                                                                        if type14lal == 0:
                                                                            bm_3lal.faces.new([fa147,fb147,fc147])
                                                                            bm_3lal.faces.new([fb147,fc147,fd147])
                                                                            bm_3lal.faces.new([fc147,fd147,fe147])
                                                                            bm_3lal.faces.new([fd147,fe147,ff147])
                                                                            bm_3lal.faces.new([fe147,ff147,fg147])
                                                                            bm_3lal.faces.new([fh147,fi147,fj147])
                                                                            bm_3lal.faces.new([fk147,fl147,fm147])
                                                                            bm_3lal.faces.new([fl147,fm147,fn147])

                    if type1lak == 1:
                        if type2lak == 1:
                            if type3lak == 0:
                                if type4lak == 0:
                                    if type5lak == 0:
                                        if type6lak == 0:
                                            if type7lak == 1:
                                                if type8lak == 1:
                                                    if type9lak == 0:
                                                        if type10lak == 0:
                                                            if type11lak == 0:
                                                                if type12lak == 0:
                                                                    if type13lak == 0:
                                                                        if type14lak == 1:
                                                                            bm_3lak.faces.new([fa146,fb146,fc146])
                                                                            bm_3lak.faces.new([fb146,fc146,fd146])
                                                                            bm_3lak.faces.new([fc146,fd146,fe146])
                                                                            bm_3lak.faces.new([fd146,fe146,ff146])
                                                                            bm_3lak.faces.new([fg146,fh146,fi146])
                                                                            bm_3lak.faces.new([fh146,fi146,fj146])
                                                                            bm_3lak.faces.new([fi146,fj146,fk146])
                                                                            bm_3lak.faces.new([fj146,fk146,fl146])
                                                                            bm_3lak.faces.new([fk146,fl146,fm146])
                                                                            bm_3lak.faces.new([fk146,fm146,fn146])

                    if type1laj == 1:
                        if type2laj == 1:
                            if type3laj == 0:
                                if type4laj == 0:
                                    if type5laj == 0:
                                        if type6laj == 0:
                                            if type7laj == 1:
                                                if type8laj == 1:
                                                    if type9laj == 0:
                                                        if type10laj == 0:
                                                            if type11laj == 0:
                                                                if type12laj == 0:
                                                                    if type13laj == 1:
                                                                        if type14laj == 1:
                                                                            bm_3laj.faces.new([fa145,fb145,fc145])
                                                                            bm_3laj.faces.new([fb145,fc145,fd145])
                                                                            bm_3laj.faces.new([fc145,fd145,fe145])
                                                                            bm_3laj.faces.new([fd145,fe145,ff145])
                                                                            bm_3laj.faces.new([fg145,fh145,fi145])
                                                                            bm_3laj.faces.new([fh145,fi145,fj145])
                                                                            bm_3laj.faces.new([fi145,fj145,fk145])
                                                                            bm_3laj.faces.new([fj145,fk145,fl145])
                                                                            bm_3laj.faces.new([fj145,fl145,fm145])
                                                                            bm_3laj.faces.new([fl145,fm145,fn145])

                    if type1lai == 1:
                        if type2lai == 1:
                            if type3lai == 0:
                                if type4lai == 0:
                                    if type5lai == 0:
                                        if type6lai == 0:
                                            if type7lai == 1:
                                                if type8lai == 1:
                                                    if type9lai == 0:
                                                        if type10lai == 0:
                                                            if type11lai == 0:
                                                                if type12lai == 1:
                                                                    if type13lai == 1:
                                                                        if type14lai == 0:
                                                                            bm_3lai.faces.new([fa144,fb144,fc144])
                                                                            bm_3lai.faces.new([fb144,fc144,fd144])
                                                                            bm_3lai.faces.new([fc144,fd144,fe144])
                                                                            bm_3lai.faces.new([fd144,fe144,ff144])
                                                                            bm_3lai.faces.new([fg144,fh144,fi144])
                                                                            bm_3lai.faces.new([fh144,fi144,fj144])
                                                                            bm_3lai.faces.new([fi144,fj144,fk144])
                                                                            bm_3lai.faces.new([fl144,fm144,fn144])

                    if type1lah == 1:
                        if type2lah == 1:
                            if type3lah == 0:
                                if type4lah == 0:
                                    if type5lah == 0:
                                        if type6lah == 0:
                                            if type7lah == 1:
                                                if type8lah == 1:
                                                    if type9lah == 0:
                                                        if type10lah == 0:
                                                            if type11lah == 1:
                                                                if type12lah == 1:
                                                                    if type13lah == 0:
                                                                        if type14lah == 0:
                                                                            bm_3lah.faces.new([fa143,fb143,fc143])
                                                                            bm_3lah.faces.new([fb143,fc143,fd143])
                                                                            bm_3lah.faces.new([fc143,fd143,fe143])
                                                                            bm_3lah.faces.new([fd143,fe143,ff143])
                                                                            bm_3lah.faces.new([fg143,fh143,fi143])
                                                                            bm_3lah.faces.new([fh143,fi143,fj143])
                                                                            bm_3lah.faces.new([fk143,fl143,fm143])
                                                                            bm_3lah.faces.new([fl143,fm143,fn143])

                    if type1lag == 1:
                        if type2lag == 1:
                            if type3lag == 0:
                                if type4lag == 0:
                                    if type5lag == 0:
                                        if type6lag == 0:
                                            if type7lag == 1:
                                                if type8lag == 1:
                                                    if type9lag == 0:
                                                        if type10lag == 1:
                                                            if type11lag == 1:
                                                                if type12lag == 0:
                                                                    if type13lag == 0:
                                                                        if type14lag == 0:
                                                                            bm_3lag.faces.new([fa142,fb142,fc142])
                                                                            bm_3lag.faces.new([fb142,fc142,fd142])
                                                                            bm_3lag.faces.new([fc142,fd142,fe142])
                                                                            bm_3lag.faces.new([fd142,fe142,ff142])
                                                                            bm_3lag.faces.new([fg142,fh142,fi142])
                                                                            bm_3lag.faces.new([fj142,fk142,fl142])
                                                                            bm_3lag.faces.new([fk142,fl142,fm142])
                                                                            bm_3lag.faces.new([fl142,fm142,fn142])

                    if type1laf == 1:
                        if type2laf == 1:
                            if type3laf == 0:
                                if type4laf == 0:
                                    if type5laf == 0:
                                        if type6laf == 1:
                                            if type7laf == 1:
                                                if type8laf == 0:
                                                    if type9laf == 0:
                                                        if type10laf == 0:
                                                            if type11laf == 0:
                                                                if type12laf == 0:
                                                                    if type13laf == 0:
                                                                        if type14laf == 1:
                                                                            bm_3laf.faces.new([fa141,fb141,fc141])
                                                                            bm_3laf.faces.new([fb141,fc141,fd141])
                                                                            bm_3laf.faces.new([fc141,fd141,fe141])
                                                                            bm_3laf.faces.new([ff141,fg141,fh141])
                                                                            bm_3laf.faces.new([fg141,fh141,fi141])
                                                                            bm_3laf.faces.new([fh141,fi141,fj141])
                                                                            bm_3laf.faces.new([fi141,fj141,fk141])
                                                                            bm_3laf.faces.new([fj141,fk141,fl141])
                                                                            bm_3laf.faces.new([fk141,fl141,fm141])
                                                                            bm_3laf.faces.new([fk141,fm141,fn141])

                    if type1lae == 1:
                        if type2lae == 1:
                            if type3lae == 0:
                                if type4lae == 0:
                                    if type5lae == 0:
                                        if type6lae == 1:
                                            if type7lae == 1:
                                                if type8lae == 0:
                                                    if type9lae == 0:
                                                        if type10lae == 0:
                                                            if type11lae == 0:
                                                                if type12lae == 0:
                                                                    if type13lae == 1:
                                                                        if type14lae == 1:
                                                                            bm_3lae.faces.new([fa140,fb140,fc140])
                                                                            bm_3lae.faces.new([fb140,fc140,fd140])
                                                                            bm_3lae.faces.new([fc140,fd140,fe140])
                                                                            bm_3lae.faces.new([ff140,fg140,fh140])
                                                                            bm_3lae.faces.new([fg140,fh140,fi140])
                                                                            bm_3lae.faces.new([fh140,fi140,fj140])
                                                                            bm_3lae.faces.new([fi140,fj140,fk140])
                                                                            bm_3lae.faces.new([fj140,fk140,fl140])
                                                                            bm_3lae.faces.new([fj140,fl140,fm140])
                                                                            bm_3lae.faces.new([fl140,fm140,fn140])

                    if type1lad == 1:
                        if type2lad == 1:
                            if type3lad == 0:
                                if type4lad == 0:
                                    if type5lad == 0:
                                        if type6lad == 1:
                                            if type7lad == 1:
                                                if type8lad == 0:
                                                    if type9lad == 0:
                                                        if type10lad == 0:
                                                            if type11lad == 0:
                                                                if type12lad == 1:
                                                                    if type13lad == 1:
                                                                        if type14lad == 0:
                                                                            bm_3lad.faces.new([fa139,fb139,fc139])
                                                                            bm_3lad.faces.new([fb139,fc139,fd139])
                                                                            bm_3lad.faces.new([fc139,fd139,fe139])
                                                                            bm_3lad.faces.new([ff139,fg139,fh139])
                                                                            bm_3lad.faces.new([fg139,fh139,fi139])
                                                                            bm_3lad.faces.new([fh139,fi139,fj139])
                                                                            bm_3lad.faces.new([fi139,fj139,fk139])
                                                                            bm_3lad.faces.new([fl139,fm139,fn139])

                    if type1lac == 1:
                        if type2lac == 1:
                            if type3lac == 0:
                                if type4lac == 0:
                                    if type5lac == 0:
                                        if type6lac == 1:
                                            if type7lac == 1:
                                                if type8lac == 0:
                                                    if type9lac == 0:
                                                        if type10lac == 0:
                                                            if type11lac == 1:
                                                                if type12lac == 1:
                                                                    if type13lac == 0:
                                                                        if type14lac == 0:
                                                                            bm_3lac.faces.new([fa138,fb138,fc138])
                                                                            bm_3lac.faces.new([fb138,fc138,fd138])
                                                                            bm_3lac.faces.new([fc138,fd138,fe138])
                                                                            bm_3lac.faces.new([ff138,fg138,fh138])
                                                                            bm_3lac.faces.new([fg138,fh138,fi138])
                                                                            bm_3lac.faces.new([fh138,fi138,fj138])
                                                                            bm_3lac.faces.new([fk138,fl138,fm138])
                                                                            bm_3lac.faces.new([fl138,fm138,fn138])

                    if type1lab == 1:
                        if type2lab == 1:
                            if type3lab == 0:
                                if type4lab == 0:
                                    if type5lab == 0:
                                        if type6lab == 1:
                                            if type7lab == 1:
                                                if type8lab == 0:
                                                    if type9lab == 0:
                                                        if type10lab == 1:
                                                            if type11lab == 1:
                                                                if type12lab == 0:
                                                                    if type13lab == 0:
                                                                        if type14lab == 0:
                                                                            bm_3lab.faces.new([fa137,fb137,fc137])
                                                                            bm_3lab.faces.new([fb137,fc137,fd137])
                                                                            bm_3lab.faces.new([fc137,fd137,fe137])
                                                                            bm_3lab.faces.new([ff137,fg137,fh137])
                                                                            bm_3lab.faces.new([fg137,fh137,fi137])
                                                                            bm_3lab.faces.new([fj137,fk137,fl137])
                                                                            bm_3lab.faces.new([fk137,fl137,fm137])
                                                                            bm_3lab.faces.new([fl137,fm137,fn137])

                    if type1laa == 1:
                        if type2laa == 1:
                            if type3laa == 0:
                                if type4laa == 0:
                                    if type5laa == 0:
                                        if type6laa == 1:
                                            if type7laa == 1:
                                                if type8laa == 0:
                                                    if type9laa == 1:
                                                        if type10laa == 1:
                                                            if type11laa == 0:
                                                                if type12laa == 0:
                                                                    if type13laa == 0:
                                                                        if type14laa == 0:
                                                                            bm_3laa.faces.new([fa136,fb136,fc136])
                                                                            bm_3laa.faces.new([fb136,fc136,fd136])
                                                                            bm_3laa.faces.new([fc136,fd136,fe136])
                                                                            bm_3laa.faces.new([ff136,fg136,fh136])
                                                                            bm_3laa.faces.new([fi136,fj136,fk136])
                                                                            bm_3laa.faces.new([fj136,fk136,fl136])
                                                                            bm_3laa.faces.new([fk136,fl136,fm136])
                                                                            bm_3laa.faces.new([fl136,fm136,fn136])

                    if type1lz == 1:
                        if type2lz == 1:
                            if type3lz == 0:
                                if type4lz == 0:
                                    if type5lz == 1:
                                        if type6lz == 1:
                                            if type7lz == 0:
                                                if type8lz == 0:
                                                    if type9lz == 0:
                                                        if type10lz == 0:
                                                            if type11lz == 0:
                                                                if type12lz == 0:
                                                                    if type13lz == 0:
                                                                        if type14lz == 1:
                                                                            bm_3lz.faces.new([fa135,fb135,fc135])
                                                                            bm_3lz.faces.new([fb135,fc135,fd135])
                                                                            bm_3lz.faces.new([fe135,ff135,fg135])
                                                                            bm_3lz.faces.new([ff135,fg135,fh135])
                                                                            bm_3lz.faces.new([fg135,fh135,fi135])
                                                                            bm_3lz.faces.new([fh135,fi135,fj135])
                                                                            bm_3lz.faces.new([fi135,fj135,fk135])
                                                                            bm_3lz.faces.new([fj135,fk135,fl135])
                                                                            bm_3lz.faces.new([fj135,fl135,fm135])
                                                                            bm_3lz.faces.new([fj135,fm135,fn135])

                    if type1ly == 1:
                        if type2ly == 1:
                            if type3ly == 0:
                                if type4ly == 0:
                                    if type5ly == 1:
                                        if type6ly == 1:
                                            if type7ly == 0:
                                                if type8ly == 0:
                                                    if type9ly == 0:
                                                        if type10ly == 0:
                                                            if type11ly == 0:
                                                                if type12ly == 0:
                                                                    if type13ly == 1:
                                                                        if type14ly == 1:
                                                                            bm_3ly.faces.new([fa134,fb134,fc134])
                                                                            bm_3ly.faces.new([fb134,fc134,fd134])
                                                                            bm_3ly.faces.new([fe134,ff134,fg134])
                                                                            bm_3ly.faces.new([ff134,fg134,fh134])
                                                                            bm_3ly.faces.new([fg134,fh134,fi134])
                                                                            bm_3ly.faces.new([fh134,fi134,fj134])
                                                                            bm_3ly.faces.new([fi134,fj134,fk134])
                                                                            bm_3ly.faces.new([fj134,fk134,fl134])
                                                                            bm_3ly.faces.new([fj134,fl134,fm134])
                                                                            bm_3ly.faces.new([fl134,fm134,fn134])

                    if type1lx == 1:
                        if type2lx == 1:
                            if type3lx == 0:
                                if type4lx == 0:
                                    if type5lx == 1:
                                        if type6lx == 1:
                                            if type7lx == 0:
                                                if type8lx == 0:
                                                    if type9lx == 0:
                                                        if type10lx == 0:
                                                            if type11lx == 0:
                                                                if type12lx == 1:
                                                                    if type13lx == 1:
                                                                        if type14lx == 0:
                                                                            bm_3lx.faces.new([fa133,fb133,fc133])
                                                                            bm_3lx.faces.new([fb133,fc133,fd133])
                                                                            bm_3lx.faces.new([fe133,ff133,fg133])
                                                                            bm_3lx.faces.new([ff133,fg133,fh133])
                                                                            bm_3lx.faces.new([fg133,fh133,fi133])
                                                                            bm_3lx.faces.new([fh133,fi133,fj133])
                                                                            bm_3lx.faces.new([fi133,fj133,fk133])
                                                                            bm_3lx.faces.new([fl133,fm133,fn133])

                    if type1lw == 1:
                        if type2lw == 1:
                            if type3lw == 0:
                                if type4lw == 0:
                                    if type5lw == 1:
                                        if type6lw == 1:
                                            if type7lw == 0:
                                                if type8lw == 0:
                                                    if type9lw == 0:
                                                        if type10lw == 0:
                                                            if type11lw == 1:
                                                                if type12lw == 1:
                                                                    if type13lw == 0:
                                                                        if type14lw == 0:
                                                                            bm_3lw.faces.new([fa132,fb132,fc132])
                                                                            bm_3lw.faces.new([fb132,fc132,fd132])
                                                                            bm_3lw.faces.new([fe132,ff132,fg132])
                                                                            bm_3lw.faces.new([ff132,fg132,fh132])
                                                                            bm_3lw.faces.new([fg132,fh132,fi132])
                                                                            bm_3lw.faces.new([fh132,fi132,fj132])
                                                                            bm_3lw.faces.new([fk132,fl132,fm132])
                                                                            bm_3lw.faces.new([fl132,fm132,fn132])

                    if type1lv == 1:
                        if type2lv == 1:
                            if type3lv == 0:
                                if type4lv == 0:
                                    if type5lv == 1:
                                        if type6lv == 1:
                                            if type7lv == 0:
                                                if type8lv == 0:
                                                    if type9lv == 0:
                                                        if type10lv == 1:
                                                            if type11lv == 1:
                                                                if type12lv == 0:
                                                                    if type13lv == 0:
                                                                        if type14lv == 0:
                                                                            bm_3lv.faces.new([fa131,fb131,fc131])
                                                                            bm_3lv.faces.new([fb131,fc131,fd131])
                                                                            bm_3lv.faces.new([fe131,ff131,fg131])
                                                                            bm_3lv.faces.new([ff131,fg131,fh131])
                                                                            bm_3lv.faces.new([fg131,fh131,fi131])
                                                                            bm_3lv.faces.new([fj131,fk131,fl131])
                                                                            bm_3lv.faces.new([fk131,fl131,fm131])
                                                                            bm_3lv.faces.new([fl131,fm131,fn131])

                    if type1lu == 1:
                        if type2lu == 1:
                            if type3lu == 0:
                                if type4lu == 0:
                                    if type5lu == 1:
                                        if type6lu == 1:
                                            if type7lu == 0:
                                                if type8lu == 0:
                                                    if type9lu == 1:
                                                        if type10lu == 1:
                                                            if type11lu == 0:
                                                                if type12lu == 0:
                                                                    if type13lu == 0:
                                                                        if type14lu == 0:
                                                                            bm_3lu.faces.new([fa130,fb130,fc130])
                                                                            bm_3lu.faces.new([fb130,fc130,fd130])
                                                                            bm_3lu.faces.new([fe130,ff130,fg130])
                                                                            bm_3lu.faces.new([ff130,fg130,fh130])
                                                                            bm_3lu.faces.new([fi130,fj130,fk130])
                                                                            bm_3lu.faces.new([fj130,fk130,fl130])
                                                                            bm_3lu.faces.new([fk130,fl130,fm130])
                                                                            bm_3lu.faces.new([fl130,fm130,fn130])

                    if type1lt == 1:
                        if type2lt == 1:
                            if type3lt == 0:
                                if type4lt == 0:
                                    if type5lt == 1:
                                        if type6lt == 1:
                                            if type7lt == 0:
                                                if type8lt == 1:
                                                    if type9lt == 1:
                                                        if type10lt == 0:
                                                            if type11lt == 0:
                                                                if type12lt == 0:
                                                                    if type13lt == 0:
                                                                        if type14lt == 0:
                                                                            bm_3lt.faces.new([fa129,fb129,fc129])
                                                                            bm_3lt.faces.new([fb129,fc129,fd129])
                                                                            bm_3lt.faces.new([fe129,ff129,fg129])
                                                                            bm_3lt.faces.new([fh129,fi129,fj129])
                                                                            bm_3lt.faces.new([fi129,fj129,fk129])
                                                                            bm_3lt.faces.new([fj129,fk129,fl129])
                                                                            bm_3lt.faces.new([fk129,fl129,fm129])
                                                                            bm_3lt.faces.new([fl129,fm129,fn129])

                    if type1ls == 1:
                        if type2ls == 1:
                            if type3ls == 0:
                                if type4ls == 1:
                                    if type5ls == 1:
                                        if type6ls == 0:
                                            if type7ls == 0:
                                                if type8ls == 0:
                                                    if type9ls == 0:
                                                        if type10ls == 0:
                                                            if type11ls == 0:
                                                                if type12ls == 0:
                                                                    if type13ls == 0:
                                                                        if type14ls == 1:
                                                                            bm_3ls.faces.new([fa128,fb128,fc128])
                                                                            bm_3ls.faces.new([fd128,fe128,ff128])
                                                                            bm_3ls.faces.new([fe128,ff128,fg128])
                                                                            bm_3ls.faces.new([ff128,fg128,fh128])
                                                                            bm_3ls.faces.new([fg128,fh128,fi128])
                                                                            bm_3ls.faces.new([fh128,fi128,fj128])
                                                                            bm_3ls.faces.new([fi128,fj128,fk128])
                                                                            bm_3ls.faces.new([fj128,fk128,fl128])
                                                                            bm_3ls.faces.new([fk128,fl128,fm128])
                                                                            bm_3ls.faces.new([fk128,fm128,fn128])

                    if type1lr == 1:
                        if type2lr == 1:
                            if type3lr == 0:
                                if type4lr == 1:
                                    if type5lr == 1:
                                        if type6lr == 0:
                                            if type7lr == 0:
                                                if type8lr == 0:
                                                    if type9lr == 0:
                                                        if type10lr == 0:
                                                            if type11lr == 0:
                                                                if type12lr == 0:
                                                                    if type13lr == 1:
                                                                        if type14lr == 1:
                                                                            bm_3lr.faces.new([fa127,fb127,fc127])
                                                                            bm_3lr.faces.new([fd127,fe127,ff127])
                                                                            bm_3lr.faces.new([fe127,ff127,fg127])
                                                                            bm_3lr.faces.new([ff127,fg127,fh127])
                                                                            bm_3lr.faces.new([fg127,fh127,fi127])
                                                                            bm_3lr.faces.new([fh127,fi127,fj127])
                                                                            bm_3lr.faces.new([fi127,fj127,fk127])
                                                                            bm_3lr.faces.new([fj127,fk127,fl127])
                                                                            bm_3lr.faces.new([fj127,fl127,fm127])
                                                                            bm_3lr.faces.new([fl127,fm127,fn127])

                    if type1lq == 1:
                        if type2lq == 1:
                            if type3lq == 0:
                                if type4lq == 1:
                                    if type5lq == 1:
                                        if type6lq == 0:
                                            if type7lq == 0:
                                                if type8lq == 0:
                                                    if type9lq == 0:
                                                        if type10lq == 0:
                                                            if type11lq == 0:
                                                                if type12lq == 1:
                                                                    if type13lq == 1:
                                                                        if type14lq == 0:
                                                                            bm_3lq.faces.new([fa126,fb126,fc126])
                                                                            bm_3lq.faces.new([fd126,fe126,ff126])
                                                                            bm_3lq.faces.new([fe126,ff126,fg126])
                                                                            bm_3lq.faces.new([ff126,fg126,fh126])
                                                                            bm_3lq.faces.new([fg126,fh126,fi126])
                                                                            bm_3lq.faces.new([fh126,fi126,fj126])
                                                                            bm_3lq.faces.new([fi126,fj126,fk126])
                                                                            bm_3lq.faces.new([fl126,fm126,fn126])

                    if type1lp == 1:
                        if type2lp == 1:
                            if type3lp == 0:
                                if type4lp == 1:
                                    if type5lp == 1:
                                        if type6lp == 0:
                                            if type7lp == 0:
                                                if type8lp == 0:
                                                    if type9lp == 0:
                                                        if type10lp == 0:
                                                            if type11lp == 1:
                                                                if type12lp == 1:
                                                                    if type13lp == 0:
                                                                        if type14lp == 0:
                                                                            bm_3lp.faces.new([fa125,fb125,fc125])
                                                                            bm_3lp.faces.new([fd125,fe125,ff125])
                                                                            bm_3lp.faces.new([fe125,ff125,fg125])
                                                                            bm_3lp.faces.new([ff125,fg125,fh125])
                                                                            bm_3lp.faces.new([fg125,fh125,fi125])
                                                                            bm_3lp.faces.new([fh125,fi125,fj125])
                                                                            bm_3lp.faces.new([fk125,fl125,fm125])
                                                                            bm_3lp.faces.new([fl125,fm125,fn125])

                    if type1lo == 1:
                        if type2lo == 1:
                            if type3lo == 0:
                                if type4lo == 1:
                                    if type5lo == 1:
                                        if type6lo == 0:
                                            if type7lo == 0:
                                                if type8lo == 0:
                                                    if type9lo == 0:
                                                        if type10lo == 1:
                                                            if type11lo == 1:
                                                                if type12lo == 0:
                                                                    if type13lo == 0:
                                                                        if type14lo == 0:
                                                                            bm_3lo.faces.new([fa124,fb124,fc124])
                                                                            bm_3lo.faces.new([fd124,fe124,ff124])
                                                                            bm_3lo.faces.new([fe124,ff124,fg124])
                                                                            bm_3lo.faces.new([ff124,fg124,fh124])
                                                                            bm_3lo.faces.new([fg124,fh124,fi124])
                                                                            bm_3lo.faces.new([fj124,fk124,fl124])
                                                                            bm_3lo.faces.new([fk124,fl124,fm124])
                                                                            bm_3lo.faces.new([fl124,fm124,fn124])

                    if type1ln == 1:
                        if type2ln == 1:
                            if type3ln == 0:
                                if type4ln == 1:
                                    if type5ln == 1:
                                        if type6ln == 0:
                                            if type7ln == 0:
                                                if type8ln == 0:
                                                    if type9ln == 1:
                                                        if type10ln == 1:
                                                            if type11ln == 0:
                                                                if type12ln == 0:
                                                                    if type13ln == 0:
                                                                        if type14ln == 0:
                                                                            bm_3ln.faces.new([fa123,fb123,fc123])
                                                                            bm_3ln.faces.new([fd123,fe123,ff123])
                                                                            bm_3ln.faces.new([fe123,ff123,fg123])
                                                                            bm_3ln.faces.new([ff123,fg123,fh123])
                                                                            bm_3ln.faces.new([fi123,fj123,fk123])
                                                                            bm_3ln.faces.new([fj123,fk123,fl123])
                                                                            bm_3ln.faces.new([fk123,fl123,fm123])
                                                                            bm_3ln.faces.new([fl123,fm123,fn123])

                    if type1lm == 1:
                        if type2lm == 1:
                            if type3lm == 0:
                                if type4lm == 1:
                                    if type5lm == 1:
                                        if type6lm == 0:
                                            if type7lm == 0:
                                                if type8lm == 1:
                                                    if type9lm == 1:
                                                        if type10lm == 0:
                                                            if type11lm == 0:
                                                                if type12lm == 0:
                                                                    if type13lm == 0:
                                                                        if type14lm == 0:
                                                                            bm_3lm.faces.new([fa122,fb122,fc122])
                                                                            bm_3lm.faces.new([fd122,fe122,ff122])
                                                                            bm_3lm.faces.new([fe122,ff122,fg122])
                                                                            bm_3lm.faces.new([fh122,fi122,fj122])
                                                                            bm_3lm.faces.new([fi122,fj122,fk122])
                                                                            bm_3lm.faces.new([fj122,fk122,fl122])
                                                                            bm_3lm.faces.new([fk122,fl122,fm122])
                                                                            bm_3lm.faces.new([fl122,fm122,fn122])

                    if type1ll == 1:
                        if type2ll == 1:
                            if type3ll == 0:
                                if type4ll == 1:
                                    if type5ll == 1:
                                        if type6ll == 0:
                                            if type7ll == 1:
                                                if type8ll == 1:
                                                    if type9ll == 0:
                                                        if type10ll == 0:
                                                            if type11ll == 0:
                                                                if type12ll == 0:
                                                                    if type13ll == 0:
                                                                        if type14ll == 0:
                                                                            bm_3ll.faces.new([fa121,fb121,fc121])
                                                                            bm_3ll.faces.new([fd121,fe121,ff121])
                                                                            bm_3ll.faces.new([fg121,fh121,fi121])
                                                                            bm_3ll.faces.new([fh121,fi121,fj121])
                                                                            bm_3ll.faces.new([fi121,fj121,fk121])
                                                                            bm_3ll.faces.new([fj121,fk121,fl121])
                                                                            bm_3ll.faces.new([fk121,fl121,fm121])
                                                                            bm_3ll.faces.new([fl121,fm121,fn121])

                    if type1lk == 1:
                        if type2lk == 1:
                            if type3lk == 0:
                                if type4lk == 0:
                                    if type5lk == 0:
                                        if type6lk == 0:
                                            if type7lk == 0:
                                                if type8lk == 0:
                                                    if type9lk == 0:
                                                        if type10lk == 0:
                                                            if type11lk == 0:
                                                                if type12lk == 0:
                                                                    if type13lk == 0:
                                                                        if type14lk == 1:
                                                                            bm_3lk.faces.new([fa120,fb120,fc120])
                                                                            bm_3lk.faces.new([fb120,fc120,fd120])
                                                                            bm_3lk.faces.new([fc120,fd120,fe120])
                                                                            bm_3lk.faces.new([fd120,fe120,ff120])
                                                                            bm_3lk.faces.new([fe120,ff120,fg120])
                                                                            bm_3lk.faces.new([ff120,fg120,fh120])
                                                                            bm_3lk.faces.new([fg120,fh120,fi120])
                                                                            bm_3lk.faces.new([fh120,fi120,fj120])
                                                                            bm_3lk.faces.new([fi120,fj120,fk120])
                                                                            bm_3lk.faces.new([fj120,fk120,fl120])
                                                                            bm_3lk.faces.new([fk120,fl120,fm120])
                                                                            bm_3lk.faces.new([fk120,fm120,fn120])

                    

                    if type1lj == 1:
                        if type2lj == 1:
                            if type3lj == 0:
                                if type4lj == 0:
                                    if type5lj == 0:
                                        if type6lj == 0:
                                            if type7lj == 0:
                                                if type8lj == 0:
                                                    if type9lj == 0:
                                                        if type10lj == 0:
                                                            if type11lj == 0:
                                                                if type12lj == 0:
                                                                    if type13lj == 1:
                                                                        if type14lj == 1:
                                                                            bm_3lj.faces.new([fa119,fb119,fc119])
                                                                            bm_3lj.faces.new([fb119,fc119,fd119])
                                                                            bm_3lj.faces.new([fc119,fd119,fe119])
                                                                            bm_3lj.faces.new([fd119,fe119,ff119])
                                                                            bm_3lj.faces.new([fe119,ff119,fg119])
                                                                            bm_3lj.faces.new([ff119,fg119,fh119])
                                                                            bm_3lj.faces.new([fg119,fh119,fi119])
                                                                            bm_3lj.faces.new([fh119,fi119,fj119])
                                                                            bm_3lj.faces.new([fi119,fj119,fk119])
                                                                            bm_3lj.faces.new([fj119,fk119,fl119])
                                                                            bm_3lj.faces.new([fj119,fl119,fm119])
                                                                            bm_3lj.faces.new([fl119,fm119,fn119])

                    if type1li == 1:
                        if type2li == 1:
                            if type3li == 0:
                                if type4li == 0:
                                    if type5li == 0:
                                        if type6li == 0:
                                            if type7li == 0:
                                                if type8li == 0:
                                                    if type9li == 0:
                                                        if type10li == 0:
                                                            if type11li == 0:
                                                                if type12li == 1:
                                                                    if type13li == 1:
                                                                        if type14li == 0:
                                                                            bm_3li.faces.new([fa118,fb118,fc118])
                                                                            bm_3li.faces.new([fb118,fc118,fd118])
                                                                            bm_3li.faces.new([fc118,fd118,fe118])
                                                                            bm_3li.faces.new([fd118,fe118,ff118])
                                                                            bm_3li.faces.new([fe118,ff118,fg118])
                                                                            bm_3li.faces.new([ff118,fg118,fh118])
                                                                            bm_3li.faces.new([fg118,fh118,fi118])
                                                                            bm_3li.faces.new([fh118,fi118,fj118])
                                                                            bm_3li.faces.new([fi118,fj118,fk118])
                                                                            bm_3li.faces.new([fl118,fm118,fn118])

                    if type1lh == 1:
                        if type2lh == 1:
                            if type3lh == 0:
                                if type4lh == 0:
                                    if type5lh == 0:
                                        if type6lh == 0:
                                            if type7lh == 0:
                                                if type8lh == 0:
                                                    if type9lh == 0:
                                                        if type10lh == 0:
                                                            if type11lh == 1:
                                                                if type12lh == 1:
                                                                    if type13lh == 0:
                                                                        if type14lh == 0:
                                                                            bm_3lh.faces.new([fa117,fb117,fc117])
                                                                            bm_3lh.faces.new([fb117,fc117,fd117])
                                                                            bm_3lh.faces.new([fc117,fd117,fe117])
                                                                            bm_3lh.faces.new([fd117,fe117,ff117])
                                                                            bm_3lh.faces.new([fe117,ff117,fg117])
                                                                            bm_3lh.faces.new([ff117,fg117,fh117])
                                                                            bm_3lh.faces.new([fg117,fh117,fi117])
                                                                            bm_3lh.faces.new([fh117,fi117,fj117])
                                                                            bm_3lh.faces.new([fk117,fl117,fm117])
                                                                            bm_3lh.faces.new([fl117,fm117,fn117])

                    if type1lg == 1:
                        if type2lg == 1:
                            if type3lg == 0:
                                if type4lg == 0:
                                    if type5lg == 0:
                                        if type6lg == 0:
                                            if type7lg == 0:
                                                if type8lg == 0:
                                                    if type9lg == 0:
                                                        if type10lg == 1:
                                                            if type11lg == 1:
                                                                if type12lg == 0:
                                                                    if type13lg == 0:
                                                                        if type14lg == 0:
                                                                            bm_3lg.faces.new([fa116,fb116,fc116])
                                                                            bm_3lg.faces.new([fb116,fc116,fd116])
                                                                            bm_3lg.faces.new([fc116,fd116,fe116])
                                                                            bm_3lg.faces.new([fd116,fe116,ff116])
                                                                            bm_3lg.faces.new([fe116,ff116,fg116])
                                                                            bm_3lg.faces.new([ff116,fg116,fh116])
                                                                            bm_3lg.faces.new([fg116,fh116,fi116])
                                                                            bm_3lg.faces.new([fj116,fk116,fl116])
                                                                            bm_3lg.faces.new([fk116,fl116,fm116])
                                                                            bm_3lg.faces.new([fl116,fm116,fn116])

                    if type1lf == 1:
                        if type2lf == 1:
                            if type3lf == 0:
                                if type4lf == 0:
                                    if type5lf == 0:
                                        if type6lf == 0:
                                            if type7lf == 0:
                                                if type8lf == 0:
                                                    if type9lf == 1:
                                                        if type10lf == 1:
                                                            if type11lf == 0:
                                                                if type12lf == 0:
                                                                    if type13lf == 0:
                                                                        if type14lf == 0:
                                                                            bm_3lf.faces.new([fa115,fb115,fc115])
                                                                            bm_3lf.faces.new([fb115,fc115,fd115])
                                                                            bm_3lf.faces.new([fc115,fd115,fe115])
                                                                            bm_3lf.faces.new([fd115,fe115,ff115])
                                                                            bm_3lf.faces.new([fe115,ff115,fg115])
                                                                            bm_3lf.faces.new([ff115,fg115,fh115])
                                                                            bm_3lf.faces.new([fi115,fj115,fk115])
                                                                            bm_3lf.faces.new([fj115,fk115,fl115])
                                                                            bm_3lf.faces.new([fk115,fl115,fm115])
                                                                            bm_3lf.faces.new([fl115,fm115,fn115])

                    if type1le == 1:
                        if type2le == 1:
                            if type3le == 0:
                                if type4le == 0:
                                    if type5le == 0:
                                        if type6le == 0:
                                            if type7le == 0:
                                                if type8le == 1:
                                                    if type9le == 1:
                                                        if type10le == 0:
                                                            if type11le == 0:
                                                                if type12le == 0:
                                                                    if type13le == 0:
                                                                        if type14le == 0:
                                                                            bm_3le.faces.new([fa114,fb114,fc114])
                                                                            bm_3le.faces.new([fb114,fc114,fd114])
                                                                            bm_3le.faces.new([fc114,fd114,fe114])
                                                                            bm_3le.faces.new([fd114,fe114,ff114])
                                                                            bm_3le.faces.new([fe114,ff114,fg114])
                                                                            bm_3le.faces.new([fh114,fi114,fj114])
                                                                            bm_3le.faces.new([fi114,fj114,fk114])
                                                                            bm_3le.faces.new([fj114,fk114,fl114])
                                                                            bm_3le.faces.new([fk114,fl114,fm114])
                                                                            bm_3le.faces.new([fl114,fm114,fn114])

                    if type1ld == 1:
                        if type2ld == 1:
                            if type3ld == 0:
                                if type4ld == 0:
                                    if type5ld == 0:
                                        if type6ld == 0:
                                            if type7ld == 1:
                                                if type8ld == 1:
                                                    if type9ld == 0:
                                                        if type10ld == 0:
                                                            if type11ld == 0:
                                                                if type12ld == 0:
                                                                    if type13ld == 0:
                                                                        if type14ld == 0:
                                                                            bm_3ld.faces.new([fa113,fb113,fc113])
                                                                            bm_3ld.faces.new([fb113,fc113,fd113])
                                                                            bm_3ld.faces.new([fc113,fd113,fe113])
                                                                            bm_3ld.faces.new([fd113,fe113,ff113])
                                                                            bm_3ld.faces.new([fg113,fh113,fi113])
                                                                            bm_3ld.faces.new([fh113,fi113,fj113])
                                                                            bm_3ld.faces.new([fi113,fj113,fk113])
                                                                            bm_3ld.faces.new([fj113,fk113,fl113])
                                                                            bm_3ld.faces.new([fk113,fl113,fm113])
                                                                            bm_3ld.faces.new([fl113,fm113,fn113])

                    if type1lc == 1:
                        if type2lc == 1:
                            if type3lc == 0:
                                if type4lc == 0:
                                    if type5lc == 0:
                                        if type6lc == 1:
                                            if type7lc == 1:
                                                if type8lc == 0:
                                                    if type9lc == 0:
                                                        if type10lc == 0:
                                                            if type11lc == 0:
                                                                if type12lc == 0:
                                                                    if type13lc == 0:
                                                                        if type14lc == 0:
                                                                            bm_3lc.faces.new([fa112,fb112,fc112])
                                                                            bm_3lc.faces.new([fb112,fc112,fd112])
                                                                            bm_3lc.faces.new([fc112,fd112,fe112])
                                                                            bm_3lc.faces.new([ff112,fg112,fh112])
                                                                            bm_3lc.faces.new([fg112,fh112,fi112])
                                                                            bm_3lc.faces.new([fh112,fi112,fj112])
                                                                            bm_3lc.faces.new([fi112,fj112,fk112])
                                                                            bm_3lc.faces.new([fj112,fk112,fl112])
                                                                            bm_3lc.faces.new([fk112,fl112,fm112])
                                                                            bm_3lc.faces.new([fl112,fm112,fn112])

                    if type1lb == 1:
                        if type2lb == 1:
                            if type3lb == 0:
                                if type4lb == 0:
                                    if type5lb == 1:
                                        if type6lb == 1:
                                            if type7lb == 0:
                                                if type8lb == 0:
                                                    if type9lb == 0:
                                                        if type10lb == 0:
                                                            if type11lb == 0:
                                                                if type12lb == 0:
                                                                    if type13lb == 0:
                                                                        if type14lb == 0:
                                                                            bm_3lb.faces.new([fa111,fb111,fc111])
                                                                            bm_3lb.faces.new([fb111,fc111,fd111])
                                                                            bm_3lb.faces.new([fe111,ff111,fg111])
                                                                            bm_3lb.faces.new([ff111,fg111,fh111])
                                                                            bm_3lb.faces.new([fg111,fh111,fi111])
                                                                            bm_3lb.faces.new([fh111,fi111,fj111])
                                                                            bm_3lb.faces.new([fi111,fj111,fk111])
                                                                            bm_3lb.faces.new([fj111,fk111,fl111])
                                                                            bm_3lb.faces.new([fk111,fl111,fm111])
                                                                            bm_3lb.faces.new([fl111,fm111,fn111])

                    if type1la == 1:
                        if type2la == 1:
                            if type3la == 0:
                                if type4la == 1:
                                    if type5la == 1:
                                        if type6la == 0:
                                            if type7la == 0:
                                                if type8la == 0:
                                                    if type9la == 0:
                                                        if type10la == 0:
                                                            if type11la == 0:
                                                                if type12la == 0:
                                                                    if type13la == 0:
                                                                        if type14la == 0:
                                                                            bm_3la.faces.new([fa110,fb110,fc110])
                                                                            bm_3la.faces.new([fd110,fe110,ff110])
                                                                            bm_3la.faces.new([fe110,ff110,fg110])
                                                                            bm_3la.faces.new([ff110,fg110,fh110])
                                                                            bm_3la.faces.new([fg110,fh110,fi110])
                                                                            bm_3la.faces.new([fh110,fi110,fj110])
                                                                            bm_3la.faces.new([fi110,fj110,fk110])
                                                                            bm_3la.faces.new([fj110,fk110,fl110])
                                                                            bm_3la.faces.new([fk110,fl110,fm110])
                                                                            bm_3la.faces.new([fl110,fm110,fn110])

                    if type1l == 1:
                        if type2l == 1:
                            if type3l == 0:
                                if type4l == 0:
                                    if type5l == 0:
                                        if type6l == 0:
                                            if type7l == 0:
                                                if type8l == 0:
                                                    if type9l == 0:
                                                        if type10l == 0:
                                                            if type11l == 0:
                                                                if type12l == 0:
                                                                    if type13l == 0:
                                                                        if type14l == 0:
                                                                            bm_3l.faces.new([fa109,fb109,fc109])
                                                                            bm_3l.faces.new([fb109,fc109,fd109])
                                                                            bm_3l.faces.new([fc109,fd109,fe109])
                                                                            bm_3l.faces.new([fd109,fe109,ff109])
                                                                            bm_3l.faces.new([fe109,ff109,fg109])
                                                                            bm_3l.faces.new([ff109,fg109,fh109])
                                                                            bm_3l.faces.new([fg109,fh109,fi109])
                                                                            bm_3l.faces.new([fh109,fi109,fj109])
                                                                            bm_3l.faces.new([fi109,fj109,fk109])
                                                                            bm_3l.faces.new([fj109,fk109,fl109])
                                                                            bm_3l.faces.new([fk109,fl109,fm109])
                                                                            bm_3l.faces.new([fl109,fm109,fn109])
            elif vertexCount == 15:
                for i in range(vertexCount//15):
                    vx1m = unpack("<f", f.read(4))[0]
                    vy1m = unpack("<f", f.read(4))[0]
                    vz1m = unpack("<f", f.read(4))[0]
                    vw1m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2m = unpack("<f", f.read(4))[0]
                    vy2m = unpack("<f", f.read(4))[0]
                    vz2m = unpack("<f", f.read(4))[0]
                    vw2m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3m = unpack("<f", f.read(4))[0]
                    vy3m = unpack("<f", f.read(4))[0]
                    vz3m = unpack("<f", f.read(4))[0]
                    vw3m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4m = unpack("<f", f.read(4))[0]
                    vy4m = unpack("<f", f.read(4))[0]
                    vz4m = unpack("<f", f.read(4))[0]
                    vw4m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5m = unpack("<f", f.read(4))[0]
                    vy5m = unpack("<f", f.read(4))[0]
                    vz5m = unpack("<f", f.read(4))[0]
                    vw5m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6m = unpack("<f", f.read(4))[0]
                    vy6m = unpack("<f", f.read(4))[0]
                    vz6m = unpack("<f", f.read(4))[0]
                    vw6m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7m = unpack("<f", f.read(4))[0]
                    vy7m = unpack("<f", f.read(4))[0]
                    vz7m = unpack("<f", f.read(4))[0]
                    vw7m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8m = unpack("<f", f.read(4))[0]
                    vy8m = unpack("<f", f.read(4))[0]
                    vz8m = unpack("<f", f.read(4))[0]
                    vw8m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9m = unpack("<f", f.read(4))[0]
                    vy9m = unpack("<f", f.read(4))[0]
                    vz9m = unpack("<f", f.read(4))[0]
                    vw9m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10m = unpack("<f", f.read(4))[0]
                    vy10m = unpack("<f", f.read(4))[0]
                    vz10m = unpack("<f", f.read(4))[0]
                    vw10m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11m = unpack("<f", f.read(4))[0]
                    vy11m = unpack("<f", f.read(4))[0]
                    vz11m = unpack("<f", f.read(4))[0]
                    vw11m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12m = unpack("<f", f.read(4))[0]
                    vy12m = unpack("<f", f.read(4))[0]
                    vz12m = unpack("<f", f.read(4))[0]
                    vw12m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13m = unpack("<f", f.read(4))[0]
                    vy13m = unpack("<f", f.read(4))[0]
                    vz13m = unpack("<f", f.read(4))[0]
                    vw13m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14m = unpack("<f", f.read(4))[0]
                    vy14m = unpack("<f", f.read(4))[0]
                    vz14m = unpack("<f", f.read(4))[0]
                    vw14m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14m = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx15m = unpack("<f", f.read(4))[0]
                    vy15m = unpack("<f", f.read(4))[0]
                    vz15m = unpack("<f", f.read(4))[0]
                    vw15m = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type15m = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    f.seek(-480,1)

                    vx1ma = unpack("<f", f.read(4))[0]
                    vy1ma = unpack("<f", f.read(4))[0]
                    vz1ma = unpack("<f", f.read(4))[0]
                    vw1ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type1ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx2ma = unpack("<f", f.read(4))[0]
                    vy2ma = unpack("<f", f.read(4))[0]
                    vz2ma = unpack("<f", f.read(4))[0]
                    vw2ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type2ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx3ma = unpack("<f", f.read(4))[0]
                    vy3ma = unpack("<f", f.read(4))[0]
                    vz3ma = unpack("<f", f.read(4))[0]
                    vw3ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type3ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx4ma = unpack("<f", f.read(4))[0]
                    vy4ma = unpack("<f", f.read(4))[0]
                    vz4ma = unpack("<f", f.read(4))[0]
                    vw4ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type4ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx5ma = unpack("<f", f.read(4))[0]
                    vy5ma = unpack("<f", f.read(4))[0]
                    vz5ma = unpack("<f", f.read(4))[0]
                    vw5ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type5ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx6ma = unpack("<f", f.read(4))[0]
                    vy6ma = unpack("<f", f.read(4))[0]
                    vz6ma = unpack("<f", f.read(4))[0]
                    vw6ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type6ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx7ma = unpack("<f", f.read(4))[0]
                    vy7ma = unpack("<f", f.read(4))[0]
                    vz7ma = unpack("<f", f.read(4))[0]
                    vw7ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type7ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx8ma = unpack("<f", f.read(4))[0]
                    vy8ma = unpack("<f", f.read(4))[0]
                    vz8ma = unpack("<f", f.read(4))[0]
                    vw8ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type8ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx9ma = unpack("<f", f.read(4))[0]
                    vy9ma = unpack("<f", f.read(4))[0]
                    vz9ma = unpack("<f", f.read(4))[0]
                    vw9ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type9ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx10ma = unpack("<f", f.read(4))[0]
                    vy10ma = unpack("<f", f.read(4))[0]
                    vz10ma = unpack("<f", f.read(4))[0]
                    vw10ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type10ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx11ma = unpack("<f", f.read(4))[0]
                    vy11ma = unpack("<f", f.read(4))[0]
                    vz11ma = unpack("<f", f.read(4))[0]
                    vw11ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type11ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx12ma = unpack("<f", f.read(4))[0]
                    vy12ma = unpack("<f", f.read(4))[0]
                    vz12ma = unpack("<f", f.read(4))[0]
                    vw12ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type12ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx13ma = unpack("<f", f.read(4))[0]
                    vy13ma = unpack("<f", f.read(4))[0]
                    vz13ma = unpack("<f", f.read(4))[0]
                    vw13ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type13ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx14ma = unpack("<f", f.read(4))[0]
                    vy14ma = unpack("<f", f.read(4))[0]
                    vz14ma = unpack("<f", f.read(4))[0]
                    vw14ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type14ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)
                    vx15ma = unpack("<f", f.read(4))[0]
                    vy15ma = unpack("<f", f.read(4))[0]
                    vz15ma = unpack("<f", f.read(4))[0]
                    vw15ma = unpack("<f", f.read(4))[0]
                    f.seek(12,1)
                    type15ma = unpack("B", f.read(1))[0]
                    f.seek(3,1)

                    fa194 = bm_3m.verts.new([-vx1m,-vy1m,-vz1m])
                    fb194 = bm_3m.verts.new([-vx2m,-vy2m,-vz2m])
                    fc194 = bm_3m.verts.new([-vx3m,-vy3m,-vz3m])
                    fd194 = bm_3m.verts.new([-vx4m,-vy4m,-vz4m])
                    fe194 = bm_3m.verts.new([-vx5m,-vy5m,-vz5m])
                    ff194 = bm_3m.verts.new([-vx6m,-vy6m,-vz6m])
                    fg194 = bm_3m.verts.new([-vx7m,-vy7m,-vz7m])
                    fh194 = bm_3m.verts.new([-vx8m,-vy8m,-vz8m])
                    fi194 = bm_3m.verts.new([-vx9m,-vy9m,-vz9m])
                    fj194 = bm_3m.verts.new([-vx10m,-vy10m,-vz10m])
                    fk194 = bm_3m.verts.new([-vx11m,-vy11m,-vz11m])
                    fl194 = bm_3m.verts.new([-vx12m,-vy12m,-vz12m])
                    fm194 = bm_3m.verts.new([-vx13m,-vy13m,-vz13m])
                    fn194 = bm_3m.verts.new([-vx14m,-vy14m,-vz14m])
                    fo194 = bm_3m.verts.new([-vx15m,-vy15m,-vz15m])

                    fa195 = bm_3ma.verts.new([-vx1ma,-vy1ma,-vz1ma])
                    fb195 = bm_3ma.verts.new([-vx2ma,-vy2ma,-vz2ma])
                    fc195 = bm_3ma.verts.new([-vx3ma,-vy3ma,-vz3ma])
                    fd195 = bm_3ma.verts.new([-vx4ma,-vy4ma,-vz4ma])
                    fe195 = bm_3ma.verts.new([-vx5ma,-vy5ma,-vz5ma])
                    ff195 = bm_3ma.verts.new([-vx6ma,-vy6ma,-vz6ma])
                    fg195 = bm_3ma.verts.new([-vx7ma,-vy7ma,-vz7ma])
                    fh195 = bm_3ma.verts.new([-vx8ma,-vy8ma,-vz8ma])
                    fi195 = bm_3ma.verts.new([-vx9ma,-vy9ma,-vz9ma])
                    fj195 = bm_3ma.verts.new([-vx10ma,-vy10ma,-vz10ma])
                    fk195 = bm_3ma.verts.new([-vx11ma,-vy11ma,-vz11ma])
                    fl195 = bm_3ma.verts.new([-vx12ma,-vy12ma,-vz12ma])
                    fm195 = bm_3ma.verts.new([-vx13ma,-vy13ma,-vz13ma])
                    fn195 = bm_3ma.verts.new([-vx14ma,-vy14ma,-vz14ma])
                    fo195 = bm_3ma.verts.new([-vx15ma,-vy15ma,-vz15ma])

                    fa196 = bm_3mb.verts.new([-vx1mb,-vy1mb,-vz1mb])
                    fb196 = bm_3mb.verts.new([-vx2mb,-vy2mb,-vz2mb])
                    fc196 = bm_3mb.verts.new([-vx3mb,-vy3mb,-vz3mb])
                    fd196 = bm_3mb.verts.new([-vx4mb,-vy4mb,-vz4mb])
                    fe196 = bm_3mb.verts.new([-vx5mb,-vy5mb,-vz5mb])
                    ff196 = bm_3mb.verts.new([-vx6mb,-vy6mb,-vz6mb])
                    fg196 = bm_3mb.verts.new([-vx7mb,-vy7mb,-vz7mb])
                    fh196 = bm_3mb.verts.new([-vx8mb,-vy8mb,-vz8mb])
                    fi196 = bm_3mb.verts.new([-vx9mb,-vy9mb,-vz9mb])
                    fj196 = bm_3mb.verts.new([-vx10mb,-vy10mb,-vz10mb])
                    fk196 = bm_3mb.verts.new([-vx11mb,-vy11mb,-vz11mb])
                    fl196 = bm_3mb.verts.new([-vx12mb,-vy12mb,-vz12mb])
                    fm196 = bm_3mb.verts.new([-vx13mb,-vy13mb,-vz13mb])
                    fn196 = bm_3mb.verts.new([-vx14mb,-vy14mb,-vz14mb])
                    fo196 = bm_3mb.verts.new([-vx15mb,-vy15mb,-vz15mb])

                    fa197 = bm_3mc.verts.new([-vx1mc,-vy1mc,-vz1mc])
                    fb197 = bm_3mc.verts.new([-vx2mc,-vy2mc,-vz2mc])
                    fc197 = bm_3mc.verts.new([-vx3mc,-vy3mc,-vz3mc])
                    fd197 = bm_3mc.verts.new([-vx4mc,-vy4mc,-vz4mc])
                    fe197 = bm_3mc.verts.new([-vx5mc,-vy5mc,-vz5mc])
                    ff197 = bm_3mc.verts.new([-vx6mc,-vy6mc,-vz6mc])
                    fg197 = bm_3mc.verts.new([-vx7mc,-vy7mc,-vz7mc])
                    fh197 = bm_3mc.verts.new([-vx8mc,-vy8mc,-vz8mc])
                    fi197 = bm_3mc.verts.new([-vx9mc,-vy9mc,-vz9mc])
                    fj197 = bm_3mc.verts.new([-vx10mc,-vy10mc,-vz10mc])
                    fk197 = bm_3mc.verts.new([-vx11mc,-vy11mc,-vz11mc])
                    fl197 = bm_3mc.verts.new([-vx12mc,-vy12mc,-vz12mc])
                    fm197 = bm_3mc.verts.new([-vx13mc,-vy13mc,-vz13mc])
                    fn197 = bm_3mc.verts.new([-vx14mc,-vy14mc,-vz14mc])
                    fo197 = bm_3mc.verts.new([-vx15mc,-vy15mc,-vz15mc])

                    fa198 = bm_3md.verts.new([-vx1md,-vy1md,-vz1md])
                    fb198 = bm_3md.verts.new([-vx2md,-vy2md,-vz2md])
                    fc198 = bm_3md.verts.new([-vx3md,-vy3md,-vz3md])
                    fd198 = bm_3md.verts.new([-vx4md,-vy4md,-vz4md])
                    fe198 = bm_3md.verts.new([-vx5md,-vy5md,-vz5md])
                    ff198 = bm_3md.verts.new([-vx6md,-vy6md,-vz6md])
                    fg198 = bm_3md.verts.new([-vx7md,-vy7md,-vz7md])
                    fh198 = bm_3md.verts.new([-vx8md,-vy8md,-vz8md])
                    fi198 = bm_3md.verts.new([-vx9md,-vy9md,-vz9md])
                    fj198 = bm_3md.verts.new([-vx10md,-vy10md,-vz10md])
                    fk198 = bm_3md.verts.new([-vx11md,-vy11md,-vz11md])
                    fl198 = bm_3md.verts.new([-vx12md,-vy12md,-vz12md])
                    fm198 = bm_3md.verts.new([-vx13md,-vy13md,-vz13md])
                    fn198 = bm_3md.verts.new([-vx14md,-vy14md,-vz14md])
                    fo198 = bm_3md.verts.new([-vx15md,-vy15md,-vz15md])

                    fa199 = bm_3me.verts.new([-vx1me,-vy1me,-vz1me])
                    fb199 = bm_3me.verts.new([-vx2me,-vy2me,-vz2me])
                    fc199 = bm_3me.verts.new([-vx3me,-vy3me,-vz3me])
                    fd199 = bm_3me.verts.new([-vx4me,-vy4me,-vz4me])
                    fe199 = bm_3me.verts.new([-vx5me,-vy5me,-vz5me])
                    ff199 = bm_3me.verts.new([-vx6me,-vy6me,-vz6me])
                    fg199 = bm_3me.verts.new([-vx7me,-vy7me,-vz7me])
                    fh199 = bm_3me.verts.new([-vx8me,-vy8me,-vz8me])
                    fi199 = bm_3me.verts.new([-vx9me,-vy9me,-vz9me])
                    fj199 = bm_3me.verts.new([-vx10me,-vy10me,-vz10me])
                    fk199 = bm_3me.verts.new([-vx11me,-vy11me,-vz11me])
                    fl199 = bm_3me.verts.new([-vx12me,-vy12me,-vz12me])
                    fm199 = bm_3me.verts.new([-vx13me,-vy13me,-vz13me])
                    fn199 = bm_3me.verts.new([-vx14me,-vy14me,-vz14me])
                    fo199 = bm_3me.verts.new([-vx15me,-vy15me,-vz15me])

                    fa200 = bm_3mf.verts.new([-vx1mf,-vy1mf,-vz1mf])
                    fb200 = bm_3mf.verts.new([-vx2mf,-vy2mf,-vz2mf])
                    fc200 = bm_3mf.verts.new([-vx3mf,-vy3mf,-vz3mf])
                    fd200 = bm_3mf.verts.new([-vx4mf,-vy4mf,-vz4mf])
                    fe200 = bm_3mf.verts.new([-vx5mf,-vy5mf,-vz5mf])
                    ff200 = bm_3mf.verts.new([-vx6mf,-vy6mf,-vz6mf])
                    fg200 = bm_3mf.verts.new([-vx7mf,-vy7mf,-vz7mf])
                    fh200 = bm_3mf.verts.new([-vx8mf,-vy8mf,-vz8mf])
                    fi200 = bm_3mf.verts.new([-vx9mf,-vy9mf,-vz9mf])
                    fj200 = bm_3mf.verts.new([-vx10mf,-vy10mf,-vz10mf])
                    fk200 = bm_3mf.verts.new([-vx11mf,-vy11mf,-vz11mf])
                    fl200 = bm_3mf.verts.new([-vx12mf,-vy12mf,-vz12mf])
                    fm200 = bm_3mf.verts.new([-vx13mf,-vy13mf,-vz13mf])
                    fn200 = bm_3mf.verts.new([-vx14mf,-vy14mf,-vz14mf])
                    fo200 = bm_3mf.verts.new([-vx15mf,-vy15mf,-vz15mf])

                    fa201 = bm_3mg.verts.new([-vx1mg,-vy1mg,-vz1mg])
                    fb201 = bm_3mg.verts.new([-vx2mg,-vy2mg,-vz2mg])
                    fc201 = bm_3mg.verts.new([-vx3mg,-vy3mg,-vz3mg])
                    fd201 = bm_3mg.verts.new([-vx4mg,-vy4mg,-vz4mg])
                    fe201 = bm_3mg.verts.new([-vx5mg,-vy5mg,-vz5mg])
                    ff201 = bm_3mg.verts.new([-vx6mg,-vy6mg,-vz6mg])
                    fg201 = bm_3mg.verts.new([-vx7mg,-vy7mg,-vz7mg])
                    fh201 = bm_3mg.verts.new([-vx8mg,-vy8mg,-vz8mg])
                    fi201 = bm_3mg.verts.new([-vx9mg,-vy9mg,-vz9mg])
                    fj201 = bm_3mg.verts.new([-vx10mg,-vy10mg,-vz10mg])
                    fk201 = bm_3mg.verts.new([-vx11mg,-vy11mg,-vz11mg])
                    fl201 = bm_3mg.verts.new([-vx12mg,-vy12mg,-vz12mg])
                    fm201 = bm_3mg.verts.new([-vx13mg,-vy13mg,-vz13mg])
                    fn201 = bm_3mg.verts.new([-vx14mg,-vy14mg,-vz14mg])
                    fo201 = bm_3mg.verts.new([-vx15mg,-vy15mg,-vz15mg])

                    fa202 = bm_3mh.verts.new([-vx1mh,-vy1mh,-vz1mh])
                    fb202 = bm_3mh.verts.new([-vx2mh,-vy2mh,-vz2mh])
                    fc202 = bm_3mh.verts.new([-vx3mh,-vy3mh,-vz3mh])
                    fd202 = bm_3mh.verts.new([-vx4mh,-vy4mh,-vz4mh])
                    fe202 = bm_3mh.verts.new([-vx5mh,-vy5mh,-vz5mh])
                    ff202 = bm_3mh.verts.new([-vx6mh,-vy6mh,-vz6mh])
                    fg202 = bm_3mh.verts.new([-vx7mh,-vy7mh,-vz7mh])
                    fh202 = bm_3mh.verts.new([-vx8mh,-vy8mh,-vz8mh])
                    fi202 = bm_3mh.verts.new([-vx9mh,-vy9mh,-vz9mh])
                    fj202 = bm_3mh.verts.new([-vx10mh,-vy10mh,-vz10mh])
                    fk202 = bm_3mh.verts.new([-vx11mh,-vy11mh,-vz11mh])
                    fl202 = bm_3mh.verts.new([-vx12mh,-vy12mh,-vz12mh])
                    fm202 = bm_3mh.verts.new([-vx13mh,-vy13mh,-vz13mh])
                    fn202 = bm_3mh.verts.new([-vx14mh,-vy14mh,-vz14mh])
                    fo202 = bm_3mh.verts.new([-vx15mh,-vy15mh,-vz15mh])

                    if type1maaz == 1:
                        if type2maaz == 1:
                            if type3maaz == 0:
                                if type4maaz == 1:
                                    if type5maaz == 1:
                                        if type6maaz == 0:
                                            if type7maaz == 0:
                                                if type8maaz == 0:
                                                    if type9maaz == 0:
                                                        if type10maaz == 0:
                                                            if type11maaz == 0:
                                                                if type12maaz == 1:
                                                                    if type13maaz == 1:
                                                                        if type14maaz == 0:
                                                                            if type15maaz == 1:
                                                                                pass

                    if type1maay == 1:
                        if type2maay == 1:
                            if type3maay == 0:
                                if type4maay == 1:
                                    if type5maay == 1:
                                        if type6maay == 0:
                                            if type7maay == 0:
                                                if type8maay == 0:
                                                    if type9maay == 0:
                                                        if type10maay == 0:
                                                            if type11maay == 1:
                                                                if type12maay == 1:
                                                                    if type13maay == 0:
                                                                        if type14maay == 0:
                                                                            if type15maay == 1:
                                                                                bm_3maay.faces.new([fa271,fb271,fc271])
                                                                                bm_3maay.faces.new([fd271,fe271,ff271])
                                                                                bm_3maay.faces.new([fe271,ff271,fg271])
                                                                                bm_3maay.faces.new([ff271,fg271,fh271])
                                                                                bm_3maay.faces.new([fg271,fh271,fi271])
                                                                                bm_3maay.faces.new([fh271,fi271,fj271])
                                                                                bm_3maay.faces.new([fk271,fl271,fm271])
                                                                                bm_3maay.faces.new([fl271,fm271,fn271])
                                                                                bm_3maay.faces.new([fl271,fn271,fo271])

                    if type1maax == 1:
                        if type2maax == 1:
                            if type3maax == 0:
                                if type4maax == 1:
                                    if type5maax == 1:
                                        if type6maax == 0:
                                            if type7maax == 0:
                                                if type8maax == 0:
                                                    if type9maax == 0:
                                                        if type10maax == 0:
                                                            if type11maax == 1:
                                                                if type12maax == 1:
                                                                    if type13maax == 0:
                                                                        if type14maax == 1:
                                                                            if type15maax == 1:
                                                                                bm_3maax.faces.new([fa270,fb270,fc270])
                                                                                bm_3maax.faces.new([fd270,fe270,ff270])
                                                                                bm_3maax.faces.new([fe270,ff270,fg270])
                                                                                bm_3maax.faces.new([ff270,fg270,fh270])
                                                                                bm_3maax.faces.new([fg270,fh270,fi270])
                                                                                bm_3maax.faces.new([fh270,fi270,fj270])
                                                                                bm_3maax.faces.new([fk270,fl270,fm270])
                                                                                bm_3maax.faces.new([fk270,fm270,fn270])
                                                                                bm_3maax.faces.new([fm270,fn270,fo270])

                    if type1maaw == 1:
                        if type2maaw == 1:
                            if type3maaw == 0:
                                if type4maaw == 1:
                                    if type5maaw == 1:
                                        if type6maaw == 0:
                                            if type7maaw == 0:
                                                if type8maaw == 0:
                                                    if type9maaw == 0:
                                                        if type10maaw == 1:
                                                            if type11maaw == 1:
                                                                if type12maaw == 0:
                                                                    if type13maaw == 0:
                                                                        if type14maaw == 0:
                                                                            if type15maaw == 1:
                                                                                bm_3maaw.faces.new([fa269,fb269,fc269])
                                                                                bm_3maaw.faces.new([fd269,fe269,ff269])
                                                                                bm_3maaw.faces.new([fe269,ff269,fg269])
                                                                                bm_3maaw.faces.new([ff269,fg269,fh269])
                                                                                bm_3maaw.faces.new([fg269,fh269,fi269])
                                                                                bm_3maaw.faces.new([fj269,fk269,fl269])
                                                                                bm_3maaw.faces.new([fk269,fl269,fm269])
                                                                                bm_3maaw.faces.new([fl269,fm269,fn269])
                                                                                bm_3maaw.faces.new([fl269,fn269,fo269])

                    if type1maav == 1:
                        if type2maav == 1:
                            if type3maav == 0:
                                if type4maav == 1:
                                    if type5maav == 1:
                                        if type6maav == 0:
                                            if type7maav == 0:
                                                if type8maav == 0:
                                                    if type9maav == 0:
                                                        if type10maav == 1:
                                                            if type11maav == 1:
                                                                if type12maav == 0:
                                                                    if type13maav == 0:
                                                                        if type14maav == 1:
                                                                            if type15maav == 1:
                                                                                bm_3maav.faces.new([fa268,fb268,fc268])
                                                                                bm_3maav.faces.new([fd268,fe268,ff268])
                                                                                bm_3maav.faces.new([fe268,ff268,fg268])
                                                                                bm_3maav.faces.new([ff268,fg268,fh268])
                                                                                bm_3maav.faces.new([fg268,fh268,fi268])
                                                                                bm_3maav.faces.new([fj268,fk268,fl268])
                                                                                bm_3maav.faces.new([fk268,fl268,fm268])
                                                                                bm_3maav.faces.new([fk268,fm268,fn268])
                                                                                bm_3maav.faces.new([fm268,fn268,fo268])

                    if type1maau == 1:
                        if type2maau == 1:
                            if type3maau == 0:
                                if type4maau == 1:
                                    if type5maau == 1:
                                        if type6maau == 0:
                                            if type7maau == 0:
                                                if type8maau == 0:
                                                    if type9maau == 0:
                                                        if type10maau == 1:
                                                            if type11maau == 1:
                                                                if type12maau == 0:
                                                                    if type13maau == 1:
                                                                        if type14maau == 1:
                                                                            if type15maau == 0:
                                                                                bm_3maau.faces.new([fa267,fb267,fc267])
                                                                                bm_3maau.faces.new([fd267,fe267,ff267])
                                                                                bm_3maau.faces.new([fe267,ff267,fg267])
                                                                                bm_3maau.faces.new([ff267,fg267,fh267])
                                                                                bm_3maau.faces.new([fg267,fh267,fi267])
                                                                                bm_3maau.faces.new([fj267,fk267,fl267])
                                                                                bm_3maau.faces.new([fm267,fn267,fo267])

                    if type1maat == 1:
                        if type2maat == 1:
                            if type3maat == 0:
                                if type4maat == 1:
                                    if type5maat == 1:
                                        if type6maat == 0:
                                            if type7maat == 0:
                                                if type8maat == 0:
                                                    if type9maat == 1:
                                                        if type10maat == 1:
                                                            if type11maat == 0:
                                                                if type12maat == 0:
                                                                    if type13maat == 0:
                                                                        if type14maat == 0:
                                                                            if type15maat == 1:
                                                                                bm_3maat.faces.new([fa266,fb266,fc266])
                                                                                bm_3maat.faces.new([fd266,fe266,ff266])
                                                                                bm_3maat.faces.new([fe266,ff266,fg266])
                                                                                bm_3maat.faces.new([ff266,fg266,fh266])
                                                                                bm_3maat.faces.new([fi266,fj266,fk266])
                                                                                bm_3maat.faces.new([fj266,fk266,fl266])
                                                                                bm_3maat.faces.new([fk266,fl266,fm266])
                                                                                bm_3maat.faces.new([fl266,fm266,fn266])
                                                                                bm_3maat.faces.new([fl266,fn266,fo266])

                    if type1maas == 1:
                        if type2maas == 1:
                            if type3maas == 0:
                                if type4maas == 1:
                                    if type5maas == 1:
                                        if type6maas == 0:
                                            if type7maas == 0:
                                                if type8maas == 0:
                                                    if type9maas == 1:
                                                        if type10maas == 1:
                                                            if type11maas == 0:
                                                                if type12maas == 0:
                                                                    if type13maas == 0:
                                                                        if type14maas == 1:
                                                                            if type15maas == 1:
                                                                                bm_3maas.faces.new([fa265,fb265,fc265])
                                                                                bm_3maas.faces.new([fd265,fe265,ff265])
                                                                                bm_3maas.faces.new([fe265,ff265,fg265])
                                                                                bm_3maas.faces.new([ff265,fg265,fh265])
                                                                                bm_3maas.faces.new([fi265,fj265,fk265])
                                                                                bm_3maas.faces.new([fj265,fk265,fl265])
                                                                                bm_3maas.faces.new([fk265,fl265,fm265])
                                                                                bm_3maas.faces.new([fk265,fm265,fn265])
                                                                                bm_3maas.faces.new([fm265,fn265,fo265])

                    if type1maar == 1:
                        if type2maar == 1:
                            if type3maar == 0:
                                if type4maar == 1:
                                    if type5maar == 1:
                                        if type6maar == 0:
                                            if type7maar == 0:
                                                if type8maar == 0:
                                                    if type9maar == 1:
                                                        if type10maar == 1:
                                                            if type11maar == 0:
                                                                if type12maar == 0:
                                                                    if type13maar == 1:
                                                                        if type14maar == 1:
                                                                            if type15maar == 0:
                                                                                bm_3maar.faces.new([fa264,fb264,fc264])
                                                                                bm_3maar.faces.new([fd264,fe264,ff264])
                                                                                bm_3maar.faces.new([fe264,ff264,fg264])
                                                                                bm_3maar.faces.new([ff264,fg264,fh264])
                                                                                bm_3maar.faces.new([fi264,fj264,fk264])
                                                                                bm_3maar.faces.new([fj264,fk264,fl264])
                                                                                bm_3maar.faces.new([fm264,fn264,fo264])

                    if type1maaq == 1:
                        if type2maaq == 1:
                            if type3maaq == 0:
                                if type4maaq == 1:
                                    if type5maaq == 1:
                                        if type6maaq == 0:
                                            if type7maaq == 0:
                                                if type8maaq == 0:
                                                    if type9maaq == 1:
                                                        if type10maaq == 1:
                                                            if type11maaq == 0:
                                                                if type12maaq == 1:
                                                                    if type13maaq == 1:
                                                                        if type14maaq == 0:
                                                                            if type15maaq == 0:
                                                                                bm_3maaq.faces.new([fa263,fb263,fc263])
                                                                                bm_3maaq.faces.new([fd263,fe263,ff263])
                                                                                bm_3maaq.faces.new([fe263,ff263,fg263])
                                                                                bm_3maaq.faces.new([ff263,fg263,fh263])
                                                                                bm_3maaq.faces.new([fi263,fj263,fk263])
                                                                                bm_3maaq.faces.new([fl263,fm263,fn263])
                                                                                bm_3maaq.faces.new([fm263,fn263,fo263])

                    if type1maap == 1:
                        if type2maap == 1:
                            if type3maap == 0:
                                if type4maap == 1:
                                    if type5maap == 1:
                                        if type6maap == 0:
                                            if type7maap == 0:
                                                if type8maap == 1:
                                                    if type9maap == 1:
                                                        if type10maap == 0:
                                                            if type11maap == 0:
                                                                if type12maap == 0:
                                                                    if type13maap == 0:
                                                                        if type14maap == 0:
                                                                            if type15maap == 1:
                                                                                bm_3maap.faces.new([fa262,fb262,fc262])
                                                                                bm_3maap.faces.new([fd262,fe262,ff262])
                                                                                bm_3maap.faces.new([fe262,ff262,fg262])
                                                                                bm_3maap.faces.new([fh262,fi262,fj262])
                                                                                bm_3maap.faces.new([fi262,fj262,fk262])
                                                                                bm_3maap.faces.new([fj262,fk262,fl262])
                                                                                bm_3maap.faces.new([fk262,fl262,fm262])
                                                                                bm_3maap.faces.new([fl262,fm262,fn262])
                                                                                bm_3maap.faces.new([fl262,fn262,fo262])

                    if type1maao == 1:
                        if type2maao == 1:
                            if type3maao == 0:
                                if type4maao == 1:
                                    if type5maao == 1:
                                        if type6maao == 0:
                                            if type7maao == 0:
                                                if type8maao == 1:
                                                    if type9maao == 1:
                                                        if type10maao == 0:
                                                            if type11maao == 0:
                                                                if type12maao == 0:
                                                                    if type13maao == 0:
                                                                        if type14maao == 1:
                                                                            if type15maao == 1:
                                                                                bm_3maao.faces.new([fa261,fb261,fc261])
                                                                                bm_3maao.faces.new([fd261,fe261,ff261])
                                                                                bm_3maao.faces.new([fe261,ff261,fg261])
                                                                                bm_3maao.faces.new([fh261,fi261,fj261])
                                                                                bm_3maao.faces.new([fi261,fj261,fk261])
                                                                                bm_3maao.faces.new([fj261,fk261,fl261])
                                                                                bm_3maao.faces.new([fk261,fl261,fm261])
                                                                                bm_3maao.faces.new([fk261,fm261,fn261])
                                                                                bm_3maao.faces.new([fm261,fn261,fo261])

                    if type1maan == 1:
                        if type2maan == 1:
                            if type3maan == 0:
                                if type4maan == 1:
                                    if type5maan == 1:
                                        if type6maan == 0:
                                            if type7maan == 0:
                                                if type8maan == 1:
                                                    if type9maan == 1:
                                                        if type10maan == 0:
                                                            if type11maan == 0:
                                                                if type12maan == 0:
                                                                    if type13maan == 1:
                                                                        if type14maan == 1:
                                                                            if type15maan == 0:
                                                                                bm_3maan.faces.new([fa260,fb260,fc260])
                                                                                bm_3maan.faces.new([fd260,fe260,ff260])
                                                                                bm_3maan.faces.new([fe260,ff260,fg260])
                                                                                bm_3maan.faces.new([fh260,fi260,fj260])
                                                                                bm_3maan.faces.new([fi260,fj260,fk260])
                                                                                bm_3maan.faces.new([fj260,fk260,fl260])
                                                                                bm_3maan.faces.new([fm260,fn260,fo260])

                    if type1maam == 1:
                        if type2maam == 1:
                            if type3maam == 0:
                                if type4maam == 1:
                                    if type5maam == 1:
                                        if type6maam == 0:
                                            if type7maam == 0:
                                                if type8maam == 1:
                                                    if type9maam == 1:
                                                        if type10maam == 0:
                                                            if type11maam == 0:
                                                                if type12maam == 1:
                                                                    if type13maam == 1:
                                                                        if type14maam == 0:
                                                                            if type15maam == 0:
                                                                                bm_3maam.faces.new([fa259,fb259,fc259])
                                                                                bm_3maam.faces.new([fd259,fe259,ff259])
                                                                                bm_3maam.faces.new([fe259,ff259,fg259])
                                                                                bm_3maam.faces.new([fh259,fi259,fj259])
                                                                                bm_3maam.faces.new([fi259,fj259,fk259])
                                                                                bm_3maam.faces.new([fl259,fm259,fn259])
                                                                                bm_3maam.faces.new([fm259,fn259,fo259])

                    if type1maal == 1:
                        if type2maal == 1:
                            if type3maal == 0:
                                if type4maal == 1:
                                    if type5maal == 1:
                                        if type6maal == 0:
                                            if type7maal == 0:
                                                if type8maal == 1:
                                                    if type9maal == 1:
                                                        if type10maal == 0:
                                                            if type11maal == 1:
                                                                if type12maal == 1:
                                                                    if type13maal == 0:
                                                                        if type14maal == 0:
                                                                            if type15maal == 0:
                                                                                bm_3maal.faces.new([fa258,fb258,fc258])
                                                                                bm_3maal.faces.new([fd258,fe258,ff258])
                                                                                bm_3maal.faces.new([fe258,ff258,fg258])
                                                                                bm_3maal.faces.new([fh258,fi258,fj258])
                                                                                bm_3maal.faces.new([fk258,fl258,fm258])
                                                                                bm_3maal.faces.new([fl258,fm258,fn258])
                                                                                bm_3maal.faces.new([fm258,fn258,fo258])

                    if type1maak == 1:
                        if type2maak == 1:
                            if type3maak == 0:
                                if type4maak == 1:
                                    if type5maak == 1:
                                        if type6maak == 0:
                                            if type7maak == 1:
                                                if type8maak == 1:
                                                    if type9maak == 0:
                                                        if type10maak == 0:
                                                            if type11maak == 0:
                                                                if type12maak == 0:
                                                                    if type13maak == 0:
                                                                        if type14maak == 0:
                                                                            if type15maak == 1:
                                                                                bm_3maak.faces.new([fa257,fb257,fc257])
                                                                                bm_3maak.faces.new([fd257,fe257,ff257])
                                                                                bm_3maak.faces.new([fg257,fh257,fi257])
                                                                                bm_3maak.faces.new([fh257,fi257,fj257])
                                                                                bm_3maak.faces.new([fi257,fj257,fk257])
                                                                                bm_3maak.faces.new([fj257,fk257,fl257])
                                                                                bm_3maak.faces.new([fk257,fl257,fm257])
                                                                                bm_3maak.faces.new([fl257,fm257,fn257])
                                                                                bm_3maak.faces.new([fl257,fn257,fo257])

                    if type1maaj == 1:
                        if type2maaj == 1:
                            if type3maaj == 0:
                                if type4maaj == 1:
                                    if type5maaj == 1:
                                        if type6maaj == 0:
                                            if type7maaj == 1:
                                                if type8maaj == 1:
                                                    if type9maaj == 0:
                                                        if type10maaj == 0:
                                                            if type11maaj == 0:
                                                                if type12maaj == 0:
                                                                    if type13maaj == 0:
                                                                        if type14maaj == 1:
                                                                            if type15maaj == 1:
                                                                                bm_3maaj.faces.new([fa256,fb256,fc256])
                                                                                bm_3maaj.faces.new([fd256,fe256,ff256])
                                                                                bm_3maaj.faces.new([fg256,fh256,fi256])
                                                                                bm_3maaj.faces.new([fh256,fi256,fj256])
                                                                                bm_3maaj.faces.new([fi256,fj256,fk256])
                                                                                bm_3maaj.faces.new([fj256,fk256,fl256])
                                                                                bm_3maaj.faces.new([fk256,fl256,fm256])
                                                                                bm_3maaj.faces.new([fk256,fm256,fn256])
                                                                                bm_3maaj.faces.new([fm256,fn256,fo256])

                    if type1maai == 1:
                        if type2maai == 1:
                            if type3maai == 0:
                                if type4maai == 1:
                                    if type5maai == 1:
                                        if type6maai == 0:
                                            if type7maai == 1:
                                                if type8maai == 1:
                                                    if type9maai == 0:
                                                        if type10maai == 0:
                                                            if type11maai == 0:
                                                                if type12maai == 0:
                                                                    if type13maai == 1:
                                                                        if type14maai == 1:
                                                                            if type15maai == 0:
                                                                                bm_3maai.faces.new([fa255,fb255,fc255])
                                                                                bm_3maai.faces.new([fd255,fe255,ff255])
                                                                                bm_3maai.faces.new([fg255,fh255,fi255])
                                                                                bm_3maai.faces.new([fh255,fi255,fj255])
                                                                                bm_3maai.faces.new([fi255,fj255,fk255])
                                                                                bm_3maai.faces.new([fj255,fk255,fl255])
                                                                                bm_3maai.faces.new([fm255,fn255,fo255])

                    if type1maah == 1:
                        if type2maah == 1:
                            if type3maah == 0:
                                if type4maah == 1:
                                    if type5maah == 1:
                                        if type6maah == 0:
                                            if type7maah == 1:
                                                if type8maah == 1:
                                                    if type9maah == 0:
                                                        if type10maah == 0:
                                                            if type11maah == 0:
                                                                if type12maah == 1:
                                                                    if type13maah == 1:
                                                                        if type14maah == 0:
                                                                            if type15maah == 0:
                                                                                bm_3maah.faces.new([fa254,fb254,fc254])
                                                                                bm_3maah.faces.new([fd254,fe254,ff254])
                                                                                bm_3maah.faces.new([fg254,fh254,fi254])
                                                                                bm_3maah.faces.new([fh254,fi254,fj254])
                                                                                bm_3maah.faces.new([fi254,fj254,fk254])
                                                                                bm_3maah.faces.new([fl254,fm254,fn254])
                                                                                bm_3maah.faces.new([fm254,fn254,fo254])

                    if type1maag == 1:
                        if type2maag == 1:
                            if type3maag == 0:
                                if type4maag == 1:
                                    if type5maag == 1:
                                        if type6maag == 0:
                                            if type7maag == 1:
                                                if type8maag == 1:
                                                    if type9maag == 0:
                                                        if type10maag == 0:
                                                            if type11maag == 1:
                                                                if type12maag == 1:
                                                                    if type13maag == 0:
                                                                        if type14maag == 0:
                                                                            if type15maag == 0:
                                                                                bm_3maag.faces.new([fa253,fb253,fc253])
                                                                                bm_3maag.faces.new([fd253,fe253,ff253])
                                                                                bm_3maag.faces.new([fg253,fh253,fi253])
                                                                                bm_3maag.faces.new([fh253,fi253,fj253])
                                                                                bm_3maag.faces.new([fk253,fl253,fm253])
                                                                                bm_3maag.faces.new([fl253,fm253,fn253])
                                                                                bm_3maag.faces.new([fm253,fn253,fo253])

                    if type1maaf == 1:
                        if type2maaf == 1:
                            if type3maaf == 0:
                                if type4maaf == 1:
                                    if type5maaf == 1:
                                        if type6maaf == 0:
                                            if type7maaf == 1:
                                                if type8maaf == 1:
                                                    if type9maaf == 0:
                                                        if type10maaf == 1:
                                                            if type11maaf == 1:
                                                                if type12maaf == 0:
                                                                    if type13maaf == 0:
                                                                        if type14maaf == 0:
                                                                            if type15maaf == 0:
                                                                                bm_3maaf.faces.new([fa252,fb252,fc252])
                                                                                bm_3maaf.faces.new([fd252,fe252,ff252])
                                                                                bm_3maaf.faces.new([fg252,fh252,fi252])
                                                                                bm_3maaf.faces.new([fj252,fk252,fl252])
                                                                                bm_3maaf.faces.new([fk252,fl252,fm252])
                                                                                bm_3maaf.faces.new([fl252,fm252,fn252])
                                                                                bm_3maaf.faces.new([fm252,fn252,fo252])

                    if type1maae == 1:
                        if type2maae == 1:
                            if type3maae == 0:
                                if type4maae == 0:
                                    if type5maae == 0:
                                        if type6maae == 0:
                                            if type7maae == 0:
                                                if type8maae == 0:
                                                    if type9maae == 0:
                                                        if type10maae == 0:
                                                            if type11maae == 0:
                                                                if type12maae == 1:
                                                                    if type13maae == 1:
                                                                        if type14maae == 0:
                                                                            if type15maae == 1:
                                                                                bm_3maae.faces.new([fa251,fb251,fc251])
                                                                                bm_3maae.faces.new([fb251,fc251,fd251])
                                                                                bm_3maae.faces.new([fc251,fd251,fe251])
                                                                                bm_3maae.faces.new([fd251,fe251,ff251])
                                                                                bm_3maae.faces.new([fe251,ff251,fg251])
                                                                                bm_3maae.faces.new([ff251,fg251,fh251])
                                                                                bm_3maae.faces.new([fg251,fh251,fi251])
                                                                                bm_3maae.faces.new([fh251,fi251,fj251])
                                                                                bm_3maae.faces.new([fi251,fj251,fk251])
                                                                                bm_3maae.faces.new([fl251,fm251,fn251])
                                                                                bm_3maae.faces.new([fm251,fn251,fo251])

                    if type1maad == 1:
                        if type2maad == 1:
                            if type3maad == 0:
                                if type4maad == 0:
                                    if type5maad == 0:
                                        if type6maad == 0:
                                            if type7maad == 0:
                                                if type8maad == 0:
                                                    if type9maad == 0:
                                                        if type10maad == 0:
                                                            if type11maad == 1:
                                                                if type12maad == 1:
                                                                    if type13maad == 0:
                                                                        if type14maad == 0:
                                                                            if type15maad == 1:
                                                                                bm_3maad.faces.new([fa250,fb250,fc250])
                                                                                bm_3maad.faces.new([fb250,fc250,fd250])
                                                                                bm_3maad.faces.new([fc250,fd250,fe250])
                                                                                bm_3maad.faces.new([fd250,fe250,ff250])
                                                                                bm_3maad.faces.new([fe250,ff250,fg250])
                                                                                bm_3maad.faces.new([ff250,fg250,fh250])
                                                                                bm_3maad.faces.new([fg250,fh250,fi250])
                                                                                bm_3maad.faces.new([fh250,fi250,fj250])
                                                                                bm_3maad.faces.new([fk250,fl250,fm250])
                                                                                bm_3maad.faces.new([fl250,fm250,fn250])
                                                                                bm_3maad.faces.new([fl250,fn250,fo250])

                    if type1maac == 1:
                        if type2maac == 1:
                            if type3maac == 0:
                                if type4maac == 0:
                                    if type5maac == 0:
                                        if type6maac == 0:
                                            if type7maac == 0:
                                                if type8maac == 0:
                                                    if type9maac == 0:
                                                        if type10maac == 0:
                                                            if type11maac == 1:
                                                                if type12maac == 1:
                                                                    if type13maac == 0:
                                                                        if type14maac == 1:
                                                                            if type15maac == 1:
                                                                                bm_3maac.faces.new([fa249,fb249,fc249])
                                                                                bm_3maac.faces.new([fb249,fc249,fd249])
                                                                                bm_3maac.faces.new([fc249,fd249,fe249])
                                                                                bm_3maac.faces.new([fd249,fe249,ff249])
                                                                                bm_3maac.faces.new([fe249,ff249,fg249])
                                                                                bm_3maac.faces.new([ff249,fg249,fh249])
                                                                                bm_3maac.faces.new([fg249,fh249,fi249])
                                                                                bm_3maac.faces.new([fh249,fi249,fj249])
                                                                                bm_3maac.faces.new([fk249,fl249,fm249])
                                                                                bm_3maac.faces.new([fk249,fm249,fn249])
                                                                                bm_3maac.faces.new([fm249,fn249,fo249])

                    if type1maab == 1:
                        if type2maab == 1:
                            if type3maab == 0:
                                if type4maab == 0:
                                    if type5maab == 0:
                                        if type6maab == 0:
                                            if type7maab == 0:
                                                if type8maab == 0:
                                                    if type9maab == 0:
                                                        if type10maab == 1:
                                                            if type11maab == 1:
                                                                if type12maab == 0:
                                                                    if type13maab == 0:
                                                                        if type14maab == 0:
                                                                            if type15maab == 1:
                                                                                bm_3maab.faces.new([fa248,fb248,fc248])
                                                                                bm_3maab.faces.new([fb248,fc248,fd248])
                                                                                bm_3maab.faces.new([fc248,fd248,fe248])
                                                                                bm_3maab.faces.new([fd248,fe248,ff248])
                                                                                bm_3maab.faces.new([fe248,ff248,fg248])
                                                                                bm_3maab.faces.new([ff248,fg248,fh248])
                                                                                bm_3maab.faces.new([fg248,fh248,fi248])
                                                                                bm_3maab.faces.new([fj248,fk248,fl248])
                                                                                bm_3maab.faces.new([fk248,fl248,fm248])
                                                                                bm_3maab.faces.new([fl248,fm248,fn248])
                                                                                bm_3maab.faces.new([fl248,fn248,fo248])

                    if type1maaa == 1:
                        if type2maaa == 1:
                            if type3maaa == 0:
                                if type4maaa == 0:
                                    if type5maaa == 0:
                                        if type6maaa == 0:
                                            if type7maaa == 0:
                                                if type8maaa == 0:
                                                    if type9maaa == 0:
                                                        if type10maaa == 1:
                                                            if type11maaa == 1:
                                                                if type12maaa == 0:
                                                                    if type13maaa == 0:
                                                                        if type14maaa == 1:
                                                                            if type15maaa == 1:
                                                                                bm_3maaa.faces.new([fa247,fb247,fc247])
                                                                                bm_3maaa.faces.new([fb247,fc247,fd247])
                                                                                bm_3maaa.faces.new([fc247,fd247,fe247])
                                                                                bm_3maaa.faces.new([fd247,fe247,ff247])
                                                                                bm_3maaa.faces.new([fe247,ff247,fg247])
                                                                                bm_3maaa.faces.new([ff247,fg247,fh247])
                                                                                bm_3maaa.faces.new([fg247,fh247,fi247])
                                                                                bm_3maaa.faces.new([fj247,fk247,fl247])
                                                                                bm_3maaa.faces.new([fk247,fl247,fm247])
                                                                                bm_3maaa.faces.new([fk247,fm247,fn247])
                                                                                bm_3maaa.faces.new([fm247,fn247,fo247])

                    if type1maz == 1:
                        if type2maz == 1:
                            if type3maz == 0:
                                if type4maz == 0:
                                    if type5maz == 0:
                                        if type6maz == 0:
                                            if type7maz == 0:
                                                if type8maz == 0:
                                                    if type9maz == 0:
                                                        if type10maz == 1:
                                                            if type11maz == 1:
                                                                if type12maz == 0:
                                                                    if type13maz == 1:
                                                                        if type14maz == 1:
                                                                            if type15maz == 0:
                                                                                bm_3maz.faces.new([fa246,fb246,fc246])
                                                                                bm_3maz.faces.new([fb246,fc246,fd246])
                                                                                bm_3maz.faces.new([fc246,fd246,fe246])
                                                                                bm_3maz.faces.new([fd246,fe246,ff246])
                                                                                bm_3maz.faces.new([fe246,ff246,fg246])
                                                                                bm_3maz.faces.new([ff246,fg246,fh246])
                                                                                bm_3maz.faces.new([fg246,fh246,fi246])
                                                                                bm_3maz.faces.new([fj246,fk246,fl246])
                                                                                bm_3maz.faces.new([fm246,fn246,fo246])

                    if type1may == 1:
                        if type2may == 1:
                            if type3may == 0:
                                if type4may == 0:
                                    if type5may == 0:
                                        if type6may == 0:
                                            if type7may == 0:
                                                if type8may == 0:
                                                    if type9may == 1:
                                                        if type10may == 1:
                                                            if type11may == 0:
                                                                if type12may == 0:
                                                                    if type13may == 0:
                                                                        if type14may == 0:
                                                                            if type15may == 1:
                                                                                bm_3may.faces.new([fa245,fb245,fc245])
                                                                                bm_3may.faces.new([fb245,fc245,fd245])
                                                                                bm_3may.faces.new([fc245,fd245,fe245])
                                                                                bm_3may.faces.new([fd245,fe245,ff245])
                                                                                bm_3may.faces.new([fe245,ff245,fg245])
                                                                                bm_3may.faces.new([ff245,fg245,fh245])
                                                                                bm_3may.faces.new([fi245,fj245,fk245])
                                                                                bm_3may.faces.new([fj245,fk245,fl245])
                                                                                bm_3may.faces.new([fk245,fl245,fm245])
                                                                                bm_3may.faces.new([fl245,fm245,fn245])
                                                                                bm_3may.faces.new([fl245,fn245,fo245])

                    if type1max == 1:
                        if type2max == 1:
                            if type3max == 0:
                                if type4max == 0:
                                    if type5max == 0:
                                        if type6max == 0:
                                            if type7max == 0:
                                                if type8max == 0:
                                                    if type9max == 1:
                                                        if type10max == 1:
                                                            if type11max == 0:
                                                                if type12max == 0:
                                                                    if type13max == 0:
                                                                        if type14max == 1:
                                                                            if type15max == 1:
                                                                                bm_3max.faces.new([fa244,fb244,fc244])
                                                                                bm_3max.faces.new([fb244,fc244,fd244])
                                                                                bm_3max.faces.new([fc244,fd244,fe244])
                                                                                bm_3max.faces.new([fd244,fe244,ff244])
                                                                                bm_3max.faces.new([fe244,ff244,fg244])
                                                                                bm_3max.faces.new([ff244,fg244,fh244])
                                                                                bm_3max.faces.new([fi244,fj244,fk244])
                                                                                bm_3max.faces.new([fj244,fk244,fl244])
                                                                                bm_3max.faces.new([fk244,fl244,fm244])
                                                                                bm_3max.faces.new([fk244,fm244,fn244])
                                                                                bm_3max.faces.new([fm244,fn244,fo244])

                    if type1maw == 1:
                        if type2maw == 1:
                            if type3maw == 0:
                                if type4maw == 0:
                                    if type5maw == 0:
                                        if type6maw == 0:
                                            if type7maw == 0:
                                                if type8maw == 0:
                                                    if type9maw == 1:
                                                        if type10maw == 1:
                                                            if type11maw == 0:
                                                                if type12maw == 0:
                                                                    if type13maw == 1:
                                                                        if type14maw == 1:
                                                                            if type15maw == 0:
                                                                                bm_3maw.faces.new([fa243,fb243,fc243])
                                                                                bm_3maw.faces.new([fb243,fc243,fd243])
                                                                                bm_3maw.faces.new([fc243,fd243,fe243])
                                                                                bm_3maw.faces.new([fd243,fe243,ff243])
                                                                                bm_3maw.faces.new([fe243,ff243,fg243])
                                                                                bm_3maw.faces.new([ff243,fg243,fh243])
                                                                                bm_3maw.faces.new([fi243,fj243,fk243])
                                                                                bm_3maw.faces.new([fj243,fk243,fl243])
                                                                                bm_3maw.faces.new([fm243,fn243,fo243])

                    if type1mav == 1:
                        if type2mav == 1:
                            if type3mav == 0:
                                if type4mav == 0:
                                    if type5mav == 0:
                                        if type6mav == 0:
                                            if type7mav == 0:
                                                if type8mav == 0:
                                                    if type9mav == 1:
                                                        if type10mav == 1:
                                                            if type11mav == 0:
                                                                if type12mav == 1:
                                                                    if type13mav == 1:
                                                                        if type14mav == 0:
                                                                            if type15mav == 0:
                                                                                bm_3mav.faces.new([fa242,fb242,fc242])
                                                                                bm_3mav.faces.new([fb242,fc242,fd242])
                                                                                bm_3mav.faces.new([fc242,fd242,fe242])
                                                                                bm_3mav.faces.new([fd242,fe242,ff242])
                                                                                bm_3mav.faces.new([fe242,ff242,fg242])
                                                                                bm_3mav.faces.new([ff242,fg242,fh242])
                                                                                bm_3mav.faces.new([fi242,fj242,fk242])
                                                                                bm_3mav.faces.new([fl242,fm242,fn242])
                                                                                bm_3mav.faces.new([fm242,fn242,fo242])

                    if type1mau == 1:
                        if type2mau == 1:
                            if type3mau == 0:
                                if type4mau == 0:
                                    if type5mau == 0:
                                        if type6mau == 0:
                                            if type7mau == 0:
                                                if type8mau == 1:
                                                    if type9mau == 1:
                                                        if type10mau == 0:
                                                            if type11mau == 0:
                                                                if type12mau == 0:
                                                                    if type13mau == 0:
                                                                        if type14mau == 0:
                                                                            if type15mau == 1:
                                                                                bm_3mau.faces.new([fa241,fb241,fc241])
                                                                                bm_3mau.faces.new([fb241,fc241,fd241])
                                                                                bm_3mau.faces.new([fc241,fd241,fe241])
                                                                                bm_3mau.faces.new([fd241,fe241,ff241])
                                                                                bm_3mau.faces.new([fe241,ff241,fg241])
                                                                                bm_3mau.faces.new([fh241,fi241,fj241])
                                                                                bm_3mau.faces.new([fi241,fj241,fk241])
                                                                                bm_3mau.faces.new([fj241,fk241,fl241])
                                                                                bm_3mau.faces.new([fk241,fl241,fm241])
                                                                                bm_3mau.faces.new([fl241,fm241,fn241])
                                                                                bm_3mau.faces.new([fl241,fn241,fo241])

                    if type1mat == 1:
                        if type2mat == 1:
                            if type3mat == 0:
                                if type4mat == 0:
                                    if type5mat == 0:
                                        if type6mat == 0:
                                            if type7mat == 0:
                                                if type8mat == 1:
                                                    if type9mat == 1:
                                                        if type10mat == 0:
                                                            if type11mat == 0:
                                                                if type12mat == 0:
                                                                    if type13mat == 0:
                                                                        if type14mat == 1:
                                                                            if type15mat == 1:
                                                                                bm_3mat.faces.new([fa240,fb240,fc240])
                                                                                bm_3mat.faces.new([fb240,fc240,fd240])
                                                                                bm_3mat.faces.new([fc240,fd240,fe240])
                                                                                bm_3mat.faces.new([fd240,fe240,ff240])
                                                                                bm_3mat.faces.new([fe240,ff240,fg240])
                                                                                bm_3mat.faces.new([fh240,fi240,fj240])
                                                                                bm_3mat.faces.new([fi240,fj240,fk240])
                                                                                bm_3mat.faces.new([fj240,fk240,fl240])
                                                                                bm_3mat.faces.new([fk240,fl240,fm240])
                                                                                bm_3mat.faces.new([fk240,fm240,fn240])
                                                                                bm_3mat.faces.new([fm240,fn240,fo240])

                    if type1mas == 1:
                        if type2mas == 1:
                            if type3mas == 0:
                                if type4mas == 0:
                                    if type5mas == 0:
                                        if type6mas == 0:
                                            if type7mas == 0:
                                                if type8mas == 1:
                                                    if type9mas == 1:
                                                        if type10mas == 0:
                                                            if type11mas == 0:
                                                                if type12mas == 0:
                                                                    if type13mas == 1:
                                                                        if type14mas == 1:
                                                                            if type15mas == 0:
                                                                                bm_3mas.faces.new([fa239,fb239,fc239])
                                                                                bm_3mas.faces.new([fb239,fc239,fd239])
                                                                                bm_3mas.faces.new([fc239,fd239,fe239])
                                                                                bm_3mas.faces.new([fd239,fe239,ff239])
                                                                                bm_3mas.faces.new([fe239,ff239,fg239])
                                                                                bm_3mas.faces.new([fh239,fi239,fj239])
                                                                                bm_3mas.faces.new([fi239,fj239,fk239])
                                                                                bm_3mas.faces.new([fj239,fk239,fl239])
                                                                                bm_3mas.faces.new([fm239,fn239,fo239])

                    if type1mar == 1:
                        if type2mar == 1:
                            if type3mar == 0:
                                if type4mar == 0:
                                    if type5mar == 0:
                                        if type6mar == 0:
                                            if type7mar == 0:
                                                if type8mar == 1:
                                                    if type9mar == 1:
                                                        if type10mar == 0:
                                                            if type11mar == 0:
                                                                if type12mar == 1:
                                                                    if type13mar == 1:
                                                                        if type14mar == 0:
                                                                            if type15mar == 0:
                                                                                bm_3mar.faces.new([fa238,fb238,fc238])
                                                                                bm_3mar.faces.new([fb238,fc238,fd238])
                                                                                bm_3mar.faces.new([fc238,fd238,fe238])
                                                                                bm_3mar.faces.new([fd238,fe238,ff238])
                                                                                bm_3mar.faces.new([fe238,ff238,fg238])
                                                                                bm_3mar.faces.new([fh238,fi238,fj238])
                                                                                bm_3mar.faces.new([fi238,fj238,fk238])
                                                                                bm_3mar.faces.new([fl238,fm238,fn238])
                                                                                bm_3mar.faces.new([fm238,fn238,fo238])

                    if type1maq == 1:
                        if type2maq == 1:
                            if type3maq == 0:
                                if type4maq == 0:
                                    if type5maq == 0:
                                        if type6maq == 0:
                                            if type7maq == 0:
                                                if type8maq == 1:
                                                    if type9maq == 1:
                                                        if type10maq == 0:
                                                            if type11maq == 1:
                                                                if type12maq == 1:
                                                                    if type13maq == 0:
                                                                        if type14maq == 0:
                                                                            if type15maq == 0:
                                                                                bm_3maq.faces.new([fa237,fb237,fc237])
                                                                                bm_3maq.faces.new([fb237,fc237,fd237])
                                                                                bm_3maq.faces.new([fc237,fd237,fe237])
                                                                                bm_3maq.faces.new([fd237,fe237,ff237])
                                                                                bm_3maq.faces.new([fe237,ff237,fg237])
                                                                                bm_3maq.faces.new([fh237,fi237,fj237])
                                                                                bm_3maq.faces.new([fk237,fl237,fm237])
                                                                                bm_3maq.faces.new([fl237,fm237,fn237])
                                                                                bm_3maq.faces.new([fm237,fn237,fo237])

                    if type1map == 1:
                        if type2map == 1:
                            if type3map == 0:
                                if type4map == 0:
                                    if type5map == 0:
                                        if type6map == 0:
                                            if type7map == 1:
                                                if type8map == 1:
                                                    if type9map == 0:
                                                        if type10map == 0:
                                                            if type11map == 0:
                                                                if type12map == 0:
                                                                    if type13map == 0:
                                                                        if type14map == 0:
                                                                            if type15map == 1:
                                                                                bm_3map.faces.new([fa236,fb236,fc236])
                                                                                bm_3map.faces.new([fb236,fc236,fd236])
                                                                                bm_3map.faces.new([fc236,fd236,fe236])
                                                                                bm_3map.faces.new([fd236,fe236,ff236])
                                                                                bm_3map.faces.new([fg236,fh236,fi236])
                                                                                bm_3map.faces.new([fh236,fi236,fj236])
                                                                                bm_3map.faces.new([fi236,fj236,fk236])
                                                                                bm_3map.faces.new([fj236,fk236,fl236])
                                                                                bm_3map.faces.new([fk236,fl236,fm236])
                                                                                bm_3map.faces.new([fl236,fm236,fn236])
                                                                                bm_3map.faces.new([fl236,fn236,fo236])

                    if type1mao == 1:
                        if type2mao == 1:
                            if type3mao == 0:
                                if type4mao == 0:
                                    if type5mao == 0:
                                        if type6mao == 0:
                                            if type7mao == 1:
                                                if type8mao == 1:
                                                    if type9mao == 0:
                                                        if type10mao == 0:
                                                            if type11mao == 0:
                                                                if type12mao == 0:
                                                                    if type13mao == 0:
                                                                        if type14mao == 1:
                                                                            if type15mao == 1:
                                                                                bm_3mao.faces.new([fa235,fb235,fc235])
                                                                                bm_3mao.faces.new([fb235,fc235,fd235])
                                                                                bm_3mao.faces.new([fc235,fd235,fe235])
                                                                                bm_3mao.faces.new([fd235,fe235,ff235])
                                                                                bm_3mao.faces.new([fg235,fh235,fi235])
                                                                                bm_3mao.faces.new([fh235,fi235,fj235])
                                                                                bm_3mao.faces.new([fi235,fj235,fk235])
                                                                                bm_3mao.faces.new([fj235,fk235,fl235])
                                                                                bm_3mao.faces.new([fk235,fl235,fm235])
                                                                                bm_3mao.faces.new([fk235,fm235,fn235])
                                                                                bm_3mao.faces.new([fm235,fn235,fo235])

                    if type1man == 1:
                        if type2man == 1:
                            if type3man == 0:
                                if type4man == 0:
                                    if type5man == 0:
                                        if type6man == 0:
                                            if type7man == 1:
                                                if type8man == 1:
                                                    if type9man == 0:
                                                        if type10man == 0:
                                                            if type11man == 0:
                                                                if type12man == 0:
                                                                    if type13man == 1:
                                                                        if type14man == 1:
                                                                            if type15man == 0:
                                                                                bm_3man.faces.new([fa234,fb234,fc234])
                                                                                bm_3man.faces.new([fb234,fc234,fd234])
                                                                                bm_3man.faces.new([fc234,fd234,fe234])
                                                                                bm_3man.faces.new([fd234,fe234,ff234])
                                                                                bm_3man.faces.new([fg234,fh234,fi234])
                                                                                bm_3man.faces.new([fh234,fi234,fj234])
                                                                                bm_3man.faces.new([fi234,fj234,fk234])
                                                                                bm_3man.faces.new([fj234,fk234,fl234])
                                                                                bm_3man.faces.new([fm234,fn234,fo234])

                    if type1mam == 1:
                        if type2mam == 1:
                            if type3mam == 0:
                                if type4mam == 0:
                                    if type5mam == 0:
                                        if type6mam == 0:
                                            if type7mam == 1:
                                                if type8mam == 1:
                                                    if type9mam == 0:
                                                        if type10mam == 0:
                                                            if type11mam == 0:
                                                                if type12mam == 1:
                                                                    if type13mam == 1:
                                                                        if type14mam == 0:
                                                                            if type15mam == 0:
                                                                                bm_3mam.faces.new([fa233,fb233,fc233])
                                                                                bm_3mam.faces.new([fb233,fc233,fd233])
                                                                                bm_3mam.faces.new([fc233,fd233,fe233])
                                                                                bm_3mam.faces.new([fd233,fe233,ff233])
                                                                                bm_3mam.faces.new([fg233,fh233,fi233])
                                                                                bm_3mam.faces.new([fh233,fi233,fj233])
                                                                                bm_3mam.faces.new([fi233,fj233,fk233])
                                                                                bm_3mam.faces.new([fl233,fm233,fn233])
                                                                                bm_3mam.faces.new([fm233,fn233,fo233])

                    if type1mal == 1:
                        if type2mal == 1:
                            if type3mal == 0:
                                if type4mal == 0:
                                    if type5mal == 0:
                                        if type6mal == 0:
                                            if type7mal == 1:
                                                if type8mal == 1:
                                                    if type9mal == 0:
                                                        if type10mal == 0:
                                                            if type11mal == 1:
                                                                if type12mal == 1:
                                                                    if type13mal == 0:
                                                                        if type14mal == 0:
                                                                            if type15mal == 0:
                                                                                bm_3mal.faces.new([fa232,fb232,fc232])
                                                                                bm_3mal.faces.new([fb232,fc232,fd232])
                                                                                bm_3mal.faces.new([fc232,fd232,fe232])
                                                                                bm_3mal.faces.new([fd232,fe232,ff232])
                                                                                bm_3mal.faces.new([fg232,fh232,fi232])
                                                                                bm_3mal.faces.new([fh232,fi232,fj232])
                                                                                bm_3mal.faces.new([fk232,fl232,fm232])
                                                                                bm_3mal.faces.new([fl232,fm232,fn232])
                                                                                bm_3mal.faces.new([fm232,fn232,fo232])

                    if type1mak == 1:
                        if type2mak == 1:
                            if type3mak == 0:
                                if type4mak == 0:
                                    if type5mak == 0:
                                        if type6mak == 0:
                                            if type7mak == 1:
                                                if type8mak == 1:
                                                    if type9mak == 0:
                                                        if type10mak == 1:
                                                            if type11mak == 1:
                                                                if type12mak == 0:
                                                                    if type13mak == 0:
                                                                        if type14mak == 0:
                                                                            if type15mak == 0:
                                                                                bm_3mak.faces.new([fa231,fb231,fc231])
                                                                                bm_3mak.faces.new([fb231,fc231,fd231])
                                                                                bm_3mak.faces.new([fc231,fd231,fe231])
                                                                                bm_3mak.faces.new([fd231,fe231,ff231])
                                                                                bm_3mak.faces.new([fg231,fh231,fi231])
                                                                                bm_3mak.faces.new([fj231,fk231,fl231])
                                                                                bm_3mak.faces.new([fk231,fl231,fm231])
                                                                                bm_3mak.faces.new([fl231,fm231,fn231])
                                                                                bm_3mak.faces.new([fm231,fn231,fo231])

                    if type1maj == 1:
                        if type2maj == 1:
                            if type3maj == 0:
                                if type4maj == 0:
                                    if type5maj == 0:
                                        if type6maj == 1:
                                            if type7maj == 1:
                                                if type8maj == 0:
                                                    if type9maj == 0:
                                                        if type10maj == 0:
                                                            if type11maj == 0:
                                                                if type12maj == 0:
                                                                    if type13maj == 0:
                                                                        if type14maj == 0:
                                                                            if type15maj == 1:
                                                                                bm_3maj.faces.new([fa230,fb230,fc230])
                                                                                bm_3maj.faces.new([fb230,fc230,fd230])
                                                                                bm_3maj.faces.new([fc230,fd230,fe230])
                                                                                bm_3maj.faces.new([ff230,fg230,fh230])
                                                                                bm_3maj.faces.new([fg230,fh230,fi230])
                                                                                bm_3maj.faces.new([fh230,fi230,fj230])
                                                                                bm_3maj.faces.new([fi230,fj230,fk230])
                                                                                bm_3maj.faces.new([fj230,fk230,fl230])
                                                                                bm_3maj.faces.new([fk230,fl230,fm230])
                                                                                bm_3maj.faces.new([fl230,fm230,fn230])
                                                                                bm_3maj.faces.new([fl230,fn230,fo230])

                    if type1mai == 1:
                        if type2mai == 1:
                            if type3mai == 0:
                                if type4mai == 0:
                                    if type5mai == 0:
                                        if type6mai == 1:
                                            if type7mai == 1:
                                                if type8mai == 0:
                                                    if type9mai == 0:
                                                        if type10mai == 0:
                                                            if type11mai == 0:
                                                                if type12mai == 0:
                                                                    if type13mai == 0:
                                                                        if type14mai == 1:
                                                                            if type15mai == 1:
                                                                                bm_3mai.faces.new([fa229,fb229,fc229])
                                                                                bm_3mai.faces.new([fb229,fc229,fd229])
                                                                                bm_3mai.faces.new([fc229,fd229,fe229])
                                                                                bm_3mai.faces.new([ff229,fg229,fh229])
                                                                                bm_3mai.faces.new([fg229,fh229,fi229])
                                                                                bm_3mai.faces.new([fh229,fi229,fj229])
                                                                                bm_3mai.faces.new([fi229,fj229,fk229])
                                                                                bm_3mai.faces.new([fj229,fk229,fl229])
                                                                                bm_3mai.faces.new([fk229,fl229,fm229])
                                                                                bm_3mai.faces.new([fk229,fm229,fn229])
                                                                                bm_3mai.faces.new([fm229,fn229,fo229])

                    if type1mah == 1:
                        if type2mah == 1:
                            if type3mah == 0:
                                if type4mah == 0:
                                    if type5mah == 0:
                                        if type6mah == 1:
                                            if type7mah == 1:
                                                if type8mah == 0:
                                                    if type9mah == 0:
                                                        if type10mah == 0:
                                                            if type11mah == 0:
                                                                if type12mah == 0:
                                                                    if type13mah == 1:
                                                                        if type14mah == 1:
                                                                            if type15mah == 0:
                                                                                bm_3mah.faces.new([fa228,fb228,fc228])
                                                                                bm_3mah.faces.new([fb228,fc228,fd228])
                                                                                bm_3mah.faces.new([fc228,fd228,fe228])
                                                                                bm_3mah.faces.new([ff228,fg228,fh228])
                                                                                bm_3mah.faces.new([fg228,fh228,fi228])
                                                                                bm_3mah.faces.new([fh228,fi228,fj228])
                                                                                bm_3mah.faces.new([fi228,fj228,fk228])
                                                                                bm_3mah.faces.new([fj228,fk228,fl228])
                                                                                bm_3mah.faces.new([fm228,fn228,fo228])

                    if type1mag == 1:
                        if type2mag == 1:
                            if type3mag == 0:
                                if type4mag == 0:
                                    if type5mag == 0:
                                        if type6mag == 1:
                                            if type7mag == 1:
                                                if type8mag == 0:
                                                    if type9mag == 0:
                                                        if type10mag == 0:
                                                            if type11mag == 0:
                                                                if type12mag == 1:
                                                                    if type13mag == 1:
                                                                        if type14mag == 0:
                                                                            if type15mag == 0:
                                                                                bm_3mag.faces.new([fa227,fb227,fc227])
                                                                                bm_3mag.faces.new([fb227,fc227,fd227])
                                                                                bm_3mag.faces.new([fc227,fd227,fe227])
                                                                                bm_3mag.faces.new([ff227,fg227,fh227])
                                                                                bm_3mag.faces.new([fg227,fh227,fi227])
                                                                                bm_3mag.faces.new([fh227,fi227,fj227])
                                                                                bm_3mag.faces.new([fi227,fj227,fk227])
                                                                                bm_3mag.faces.new([fl227,fm227,fn227])
                                                                                bm_3mag.faces.new([fm227,fn227,fo227])

                    if type1maf == 1:
                        if type2maf == 1:
                            if type3maf == 0:
                                if type4maf == 0:
                                    if type5maf == 0:
                                        if type6maf == 1:
                                            if type7maf == 1:
                                                if type8maf == 0:
                                                    if type9maf == 0:
                                                        if type10maf == 0:
                                                            if type11maf == 1:
                                                                if type12maf == 1:
                                                                    if type13maf == 0:
                                                                        if type14maf == 0:
                                                                            if type15maf == 0:
                                                                                bm_3maf.faces.new([fa226,fb226,fc226])
                                                                                bm_3maf.faces.new([fb226,fc226,fd226])
                                                                                bm_3maf.faces.new([fc226,fd226,fe226])
                                                                                bm_3maf.faces.new([ff226,fg226,fh226])
                                                                                bm_3maf.faces.new([fg226,fh226,fi226])
                                                                                bm_3maf.faces.new([fh226,fi226,fj226])
                                                                                bm_3maf.faces.new([fk226,fl226,fm226])
                                                                                bm_3maf.faces.new([fl226,fm226,fn226])
                                                                                bm_3maf.faces.new([fm226,fn226,fo226])

                    if type1mae == 1:
                        if type2mae == 1:
                            if type3mae == 0:
                                if type4mae == 0:
                                    if type5mae == 0:
                                        if type6mae == 1:
                                            if type7mae == 1:
                                                if type8mae == 0:
                                                    if type9mae == 0:
                                                        if type10mae == 1:
                                                            if type11mae == 1:
                                                                if type12mae == 0:
                                                                    if type13mae == 0:
                                                                        if type14mae == 0:
                                                                            if type15mae == 0:
                                                                                bm_3mae.faces.new([fa225,fb225,fc225])
                                                                                bm_3mae.faces.new([fb225,fc225,fd225])
                                                                                bm_3mae.faces.new([fc225,fd225,fe225])
                                                                                bm_3mae.faces.new([ff225,fg225,fh225])
                                                                                bm_3mae.faces.new([fg225,fh225,fi225])
                                                                                bm_3mae.faces.new([fj225,fk225,fl225])
                                                                                bm_3mae.faces.new([fk225,fl225,fm225])
                                                                                bm_3mae.faces.new([fl225,fm225,fn225])
                                                                                bm_3mae.faces.new([fm225,fn225,fo225])

                    if type1mad == 1:
                        if type2mad == 1:
                            if type3mad == 0:
                                if type4mad == 0:
                                    if type5mad == 0:
                                        if type6mad == 1:
                                            if type7mad == 1:
                                                if type8mad == 0:
                                                    if type9mad == 1:
                                                        if type10mad == 1:
                                                            if type11mad == 0:
                                                                if type12mad == 0:
                                                                    if type13mad == 0:
                                                                        if type14mad == 0:
                                                                            if type15mad == 0:
                                                                                bm_3mad.faces.new([fa224,fb224,fc224])
                                                                                bm_3mad.faces.new([fb224,fc224,fd224])
                                                                                bm_3mad.faces.new([fc224,fd224,fe224])
                                                                                bm_3mad.faces.new([ff224,fg224,fh224])
                                                                                bm_3mad.faces.new([fi224,fj224,fk224])
                                                                                bm_3mad.faces.new([fj224,fk224,fl224])
                                                                                bm_3mad.faces.new([fk224,fl224,fm224])
                                                                                bm_3mad.faces.new([fl224,fm224,fn224])
                                                                                bm_3mad.faces.new([fm224,fn224,fo224])

                    if type1mac == 1:
                        if type2mac == 1:
                            if type3mac == 0:
                                if type4mac == 0:
                                    if type5mac == 1:
                                        if type6mac == 1:
                                            if type7mac == 0:
                                                if type8mac == 0:
                                                    if type9mac == 0:
                                                        if type10mac == 0:
                                                            if type11mac == 0:
                                                                if type12mac == 0:
                                                                    if type13mac == 0:
                                                                        if type14mac == 0:
                                                                            if type15mac == 1:
                                                                                bm_3mac.faces.new([fa223,fb223,fc223])
                                                                                bm_3mac.faces.new([fb223,fc223,fd223])
                                                                                bm_3mac.faces.new([fe223,ff223,fg223])
                                                                                bm_3mac.faces.new([ff223,fg223,fh223])
                                                                                bm_3mac.faces.new([fg223,fh223,fi223])
                                                                                bm_3mac.faces.new([fh223,fi223,fj223])
                                                                                bm_3mac.faces.new([fi223,fj223,fk223])
                                                                                bm_3mac.faces.new([fj223,fk223,fl223])
                                                                                bm_3mac.faces.new([fk223,fl223,fm223])
                                                                                bm_3mac.faces.new([fl223,fm223,fn223])
                                                                                bm_3mac.faces.new([fl223,fn223,fo223])

                    if type1mab == 1:
                        if type2mab == 1:
                            if type3mab == 0:
                                if type4mab == 0:
                                    if type5mab == 1:
                                        if type6mab == 1:
                                            if type7mab == 0:
                                                if type8mab == 0:
                                                    if type9mab == 0:
                                                        if type10mab == 0:
                                                            if type11mab == 0:
                                                                if type12mab == 0:
                                                                    if type13mab == 0:
                                                                        if type14mab == 1:
                                                                            if type15mab == 1:
                                                                                bm_3mab.faces.new([fa222,fb222,fc222])
                                                                                bm_3mab.faces.new([fb222,fc222,fd222])
                                                                                bm_3mab.faces.new([fe222,ff222,fg222])
                                                                                bm_3mab.faces.new([ff222,fg222,fh222])
                                                                                bm_3mab.faces.new([fg222,fh222,fi222])
                                                                                bm_3mab.faces.new([fh222,fi222,fj222])
                                                                                bm_3mab.faces.new([fi222,fj222,fk222])
                                                                                bm_3mab.faces.new([fj222,fk222,fl222])
                                                                                bm_3mab.faces.new([fk222,fl222,fm222])
                                                                                bm_3mab.faces.new([fk222,fm222,fn222])
                                                                                bm_3mab.faces.new([fm222,fn222,fo222])

                    if type1maa == 1:
                        if type2maa == 1:
                            if type3maa == 0:
                                if type4maa == 0:
                                    if type5maa == 1:
                                        if type6maa == 1:
                                            if type7maa == 0:
                                                if type8maa == 0:
                                                    if type9maa == 0:
                                                        if type10maa == 0:
                                                            if type11maa == 0:
                                                                if type12maa == 0:
                                                                    if type13maa == 1:
                                                                        if type14maa == 1:
                                                                            if type15maa == 0:
                                                                                bm_3maa.faces.new([fa221,fb221,fc221])
                                                                                bm_3maa.faces.new([fb221,fc221,fd221])
                                                                                bm_3maa.faces.new([fe221,ff221,fg221])
                                                                                bm_3maa.faces.new([ff221,fg221,fh221])
                                                                                bm_3maa.faces.new([fg221,fh221,fi221])
                                                                                bm_3maa.faces.new([fh221,fi221,fj221])
                                                                                bm_3maa.faces.new([fi221,fj221,fk221])
                                                                                bm_3maa.faces.new([fj221,fk221,fl221])
                                                                                bm_3maa.faces.new([fm221,fn221,fo221])

                    if type1mz == 1:
                        if type2mz == 1:
                            if type3mz == 0:
                                if type4mz == 0:
                                    if type5mz == 1:
                                        if type6mz == 1:
                                            if type7mz == 0:
                                                if type8mz == 0:
                                                    if type9mz == 0:
                                                        if type10mz == 0:
                                                            if type11mz == 0:
                                                                if type12mz == 1:
                                                                    if type13mz == 1:
                                                                        if type14mz == 0:
                                                                            if type15mz == 0:
                                                                                bm_3mz.faces.new([fa220,fb220,fc220])
                                                                                bm_3mz.faces.new([fb220,fc220,fd220])
                                                                                bm_3mz.faces.new([fe220,ff220,fg220])
                                                                                bm_3mz.faces.new([ff220,fg220,fh220])
                                                                                bm_3mz.faces.new([fg220,fh220,fi220])
                                                                                bm_3mz.faces.new([fh220,fi220,fj220])
                                                                                bm_3mz.faces.new([fi220,fj220,fk220])
                                                                                bm_3mz.faces.new([fl220,fm220,fn220])
                                                                                bm_3mz.faces.new([fm220,fn220,fo220])

                    if type1my == 1:
                        if type2my == 1:
                            if type3my == 0:
                                if type4my == 0:
                                    if type5my == 1:
                                        if type6my == 1:
                                            if type7my == 0:
                                                if type8my == 0:
                                                    if type9my == 0:
                                                        if type10my == 0:
                                                            if type11my == 1:
                                                                if type12my == 1:
                                                                    if type13my == 0:
                                                                        if type14my == 0:
                                                                            if type15my == 0:
                                                                                bm_3my.faces.new([fa219,fb219,fc219])
                                                                                bm_3my.faces.new([fb219,fc219,fd219])
                                                                                bm_3my.faces.new([fe219,ff219,fg219])
                                                                                bm_3my.faces.new([ff219,fg219,fh219])
                                                                                bm_3my.faces.new([fg219,fh219,fi219])
                                                                                bm_3my.faces.new([fh219,fi219,fj219])
                                                                                bm_3my.faces.new([fk219,fl219,fm219])
                                                                                bm_3my.faces.new([fl219,fm219,fn219])
                                                                                bm_3my.faces.new([fm219,fn219,fo219])

                    if type1mx == 1:
                        if type2mx == 1:
                            if type3mx == 0:
                                if type4mx == 0:
                                    if type5mx == 1:
                                        if type6mx == 1:
                                            if type7mx == 0:
                                                if type8mx == 0:
                                                    if type9mx == 0:
                                                        if type10mx == 1:
                                                            if type11mx == 1:
                                                                if type12mx == 0:
                                                                    if type13mx == 0:
                                                                        if type14mx == 0:
                                                                            if type15mx == 0:
                                                                                bm_3mx.faces.new([fa218,fb218,fc218])
                                                                                bm_3mx.faces.new([fb218,fc218,fd218])
                                                                                bm_3mx.faces.new([fe218,ff218,fg218])
                                                                                bm_3mx.faces.new([ff218,fg218,fh218])
                                                                                bm_3mx.faces.new([fg218,fh218,fi218])
                                                                                bm_3mx.faces.new([fj218,fk218,fl218])
                                                                                bm_3mx.faces.new([fk218,fl218,fm218])
                                                                                bm_3mx.faces.new([fl218,fm218,fn218])
                                                                                bm_3mx.faces.new([fm218,fn218,fo218])

                    if type1mw == 1:
                        if type2mw == 1:
                            if type3mw == 0:
                                if type4mw == 0:
                                    if type5mw == 1:
                                        if type6mw == 1:
                                            if type7mw == 0:
                                                if type8mw == 0:
                                                    if type9mw == 1:
                                                        if type10mw == 1:
                                                            if type11mw == 0:
                                                                if type12mw == 0:
                                                                    if type13mw == 0:
                                                                        if type14mw == 0:
                                                                            if type15mw == 0:
                                                                                bm_3mw.faces.new([fa217,fb217,fc217])
                                                                                bm_3mw.faces.new([fb217,fc217,fd217])
                                                                                bm_3mw.faces.new([fe217,ff217,fg217])
                                                                                bm_3mw.faces.new([ff217,fg217,fh217])
                                                                                bm_3mw.faces.new([fi217,fj217,fk217])
                                                                                bm_3mw.faces.new([fj217,fk217,fl217])
                                                                                bm_3mw.faces.new([fk217,fl217,fm217])
                                                                                bm_3mw.faces.new([fl217,fm217,fn217])
                                                                                bm_3mw.faces.new([fm217,fn217,fo217])

                    if type1mv == 1:
                        if type2mv == 1:
                            if type3mv == 0:
                                if type4mv == 0:
                                    if type5mv == 1:
                                        if type6mv == 1:
                                            if type7mv == 0:
                                                if type8mv == 1:
                                                    if type9mv == 1:
                                                        if type10mv == 0:
                                                            if type11mv == 0:
                                                                if type12mv == 0:
                                                                    if type13mv == 0:
                                                                        if type14mv == 0:
                                                                            if type15mv == 0:
                                                                                bm_3mv.faces.new([fa216,fb216,fc216])
                                                                                bm_3mv.faces.new([fb216,fc216,fd216])
                                                                                bm_3mv.faces.new([fe216,ff216,fg216])
                                                                                bm_3mv.faces.new([fh216,fi216,fj216])
                                                                                bm_3mv.faces.new([fi216,fj216,fk216])
                                                                                bm_3mv.faces.new([fj216,fk216,fl216])
                                                                                bm_3mv.faces.new([fk216,fl216,fm216])
                                                                                bm_3mv.faces.new([fl216,fm216,fn216])
                                                                                bm_3mv.faces.new([fm216,fn216,fo216])

                    if type1mu == 1:
                        if type2mu == 1:
                            if type3mu == 0:
                                if type4mu == 1:
                                    if type5mu == 1:
                                        if type6mu == 0:
                                            if type7mu == 0:
                                                if type8mu == 0:
                                                    if type9mu == 0:
                                                        if type10mu == 0:
                                                            if type11mu == 0:
                                                                if type12mu == 0:
                                                                    if type13mu == 0:
                                                                        if type14mu == 0:
                                                                            if type15mu == 1:
                                                                                bm_3mu.faces.new([fa215,fb215,fc215])
                                                                                bm_3mu.faces.new([fd215,fe215,ff215])
                                                                                bm_3mu.faces.new([fe215,ff215,fg215])
                                                                                bm_3mu.faces.new([ff215,fg215,fh215])
                                                                                bm_3mu.faces.new([fg215,fh215,fi215])
                                                                                bm_3mu.faces.new([fh215,fi215,fj215])
                                                                                bm_3mu.faces.new([fi215,fj215,fk215])
                                                                                bm_3mu.faces.new([fj215,fk215,fl215])
                                                                                bm_3mu.faces.new([fk215,fl215,fm215])
                                                                                bm_3mu.faces.new([fl215,fm215,fn215])
                                                                                bm_3mu.faces.new([fl215,fn215,fo215])

                    if type1mt == 1:
                        if type2mt == 1:
                            if type3mt == 0:
                                if type4mt == 1:
                                    if type5mt == 1:
                                        if type6mt == 0:
                                            if type7mt == 0:
                                                if type8mt == 0:
                                                    if type9mt == 0:
                                                        if type10mt == 0:
                                                            if type11mt == 0:
                                                                if type12mt == 0:
                                                                    if type13mt == 0:
                                                                        if type14mt == 1:
                                                                            if type15mt == 1:
                                                                                bm_3mt.faces.new([fa214,fb214,fc214])
                                                                                bm_3mt.faces.new([fd214,fe214,ff214])
                                                                                bm_3mt.faces.new([fe214,ff214,fg214])
                                                                                bm_3mt.faces.new([ff214,fg214,fh214])
                                                                                bm_3mt.faces.new([fg214,fh214,fi214])
                                                                                bm_3mt.faces.new([fh214,fi214,fj214])
                                                                                bm_3mt.faces.new([fi214,fj214,fk214])
                                                                                bm_3mt.faces.new([fj214,fk214,fl214])
                                                                                bm_3mt.faces.new([fk214,fl214,fm214])
                                                                                bm_3mt.faces.new([fk214,fm214,fn214])
                                                                                bm_3mt.faces.new([fm214,fn214,fo214])

                    if type1ms == 1:
                        if type2ms == 1:
                            if type3ms == 0:
                                if type4ms == 1:
                                    if type5ms == 1:
                                        if type6ms == 0:
                                            if type7ms == 0:
                                                if type8ms == 0:
                                                    if type9ms == 0:
                                                        if type10ms == 0:
                                                            if type11ms == 0:
                                                                if type12ms == 0:
                                                                    if type13ms == 1:
                                                                        if type14ms == 1:
                                                                            if type15ms == 0:
                                                                                bm_3ms.faces.new([fa213,fb213,fc213])
                                                                                bm_3ms.faces.new([fd213,fe213,ff213])
                                                                                bm_3ms.faces.new([fe213,ff213,fg213])
                                                                                bm_3ms.faces.new([ff213,fg213,fh213])
                                                                                bm_3ms.faces.new([fg213,fh213,fi213])
                                                                                bm_3ms.faces.new([fh213,fi213,fj213])
                                                                                bm_3ms.faces.new([fi213,fj213,fk213])
                                                                                bm_3ms.faces.new([fj213,fk213,fl213])
                                                                                bm_3ms.faces.new([fm213,fn213,fo213])

                    if type1mr == 1:
                        if type2mr == 1:
                            if type3mr == 0:
                                if type4mr == 1:
                                    if type5mr == 1:
                                        if type6mr == 0:
                                            if type7mr == 0:
                                                if type8mr == 0:
                                                    if type9mr == 0:
                                                        if type10mr == 0:
                                                            if type11mr == 0:
                                                                if type12mr == 1:
                                                                    if type13mr == 1:
                                                                        if type14mr == 0:
                                                                            if type15mr == 0:
                                                                                bm_3mr.faces.new([fa212,fb212,fc212])
                                                                                bm_3mr.faces.new([fd212,fe212,ff212])
                                                                                bm_3mr.faces.new([fe212,ff212,fg212])
                                                                                bm_3mr.faces.new([ff212,fg212,fh212])
                                                                                bm_3mr.faces.new([fg212,fh212,fi212])
                                                                                bm_3mr.faces.new([fh212,fi212,fj212])
                                                                                bm_3mr.faces.new([fi212,fj212,fk212])
                                                                                bm_3mr.faces.new([fl212,fm212,fn212])
                                                                                bm_3mr.faces.new([fm212,fn212,fo212])

                    if type1mq == 1:
                        if type2mq == 1:
                            if type3mq == 0:
                                if type4mq == 1:
                                    if type5mq == 1:
                                        if type6mq == 0:
                                            if type7mq == 0:
                                                if type8mq == 0:
                                                    if type9mq == 0:
                                                        if type10mq == 0:
                                                            if type11mq == 1:
                                                                if type12mq == 1:
                                                                    if type13mq == 0:
                                                                        if type14mq == 0:
                                                                            if type15mq == 0:
                                                                                bm_3mq.faces.new([fa211,fb211,fc211])
                                                                                bm_3mq.faces.new([fd211,fe211,ff211])
                                                                                bm_3mq.faces.new([fe211,ff211,fg211])
                                                                                bm_3mq.faces.new([ff211,fg211,fh211])
                                                                                bm_3mq.faces.new([fg211,fh211,fi211])
                                                                                bm_3mq.faces.new([fh211,fi211,fj211])
                                                                                bm_3mq.faces.new([fk211,fl211,fm211])
                                                                                bm_3mq.faces.new([fl211,fm211,fn211])
                                                                                bm_3mq.faces.new([fm211,fn211,fo211])

                    if type1mp == 1:
                        if type2mp == 1:
                            if type3mp == 0:
                                if type4mp == 1:
                                    if type5mp == 1:
                                        if type6mp == 0:
                                            if type7mp == 0:
                                                if type8mp == 0:
                                                    if type9mp == 0:
                                                        if type10mp == 1:
                                                            if type11mp == 1:
                                                                if type12mp == 0:
                                                                    if type13mp == 0:
                                                                        if type14mp == 0:
                                                                            if type15mp == 0:
                                                                                bm_3mp.faces.new([fa210,fb210,fc210])
                                                                                bm_3mp.faces.new([fd210,fe210,ff210])
                                                                                bm_3mp.faces.new([fe210,ff210,fg210])
                                                                                bm_3mp.faces.new([ff210,fg210,fh210])
                                                                                bm_3mp.faces.new([fg210,fh210,fi210])
                                                                                bm_3mp.faces.new([fj210,fk210,fl210])
                                                                                bm_3mp.faces.new([fk210,fl210,fm210])
                                                                                bm_3mp.faces.new([fl210,fm210,fn210])
                                                                                bm_3mp.faces.new([fm210,fn210,fo210])

                    if type1mo == 1:
                        if type2mo == 1:
                            if type3mo == 0:
                                if type4mo == 1:
                                    if type5mo == 1:
                                        if type6mo == 0:
                                            if type7mo == 0:
                                                if type8mo == 0:
                                                    if type9mo == 1:
                                                        if type10mo == 1:
                                                            if type11mo == 0:
                                                                if type12mo == 0:
                                                                    if type13mo == 0:
                                                                        if type14mo == 0:
                                                                            if type15mo == 0:
                                                                                bm_3mo.faces.new([fa209,fb209,fc209])
                                                                                bm_3mo.faces.new([fd209,fe209,ff209])
                                                                                bm_3mo.faces.new([fe209,ff209,fg209])
                                                                                bm_3mo.faces.new([ff209,fg209,fh209])
                                                                                bm_3mo.faces.new([fi209,fj209,fk209])
                                                                                bm_3mo.faces.new([fj209,fk209,fl209])
                                                                                bm_3mo.faces.new([fk209,fl209,fm209])
                                                                                bm_3mo.faces.new([fl209,fm209,fn209])
                                                                                bm_3mo.faces.new([fm209,fn209,fo209])

                    if type1mn == 1:
                        if type2mn == 1:
                            if type3mn == 0:
                                if type4mn == 1:
                                    if type5mn == 1:
                                        if type6mn == 0:
                                            if type7mn == 0:
                                                if type8mn == 1:
                                                    if type9mn == 1:
                                                        if type10mn == 0:
                                                            if type11mn == 0:
                                                                if type12mn == 0:
                                                                    if type13mn == 0:
                                                                        if type14mn == 0:
                                                                            if type15mn == 0:
                                                                                bm_3mn.faces.new([fa208,fb208,fc208])
                                                                                bm_3mn.faces.new([fd208,fe208,ff208])
                                                                                bm_3mn.faces.new([fe208,ff208,fg208])
                                                                                bm_3mn.faces.new([fh208,fi208,fj208])
                                                                                bm_3mn.faces.new([fi208,fj208,fk208])
                                                                                bm_3mn.faces.new([fj208,fk208,fl208])
                                                                                bm_3mn.faces.new([fk208,fl208,fm208])
                                                                                bm_3mn.faces.new([fl208,fm208,fn208])
                                                                                bm_3mn.faces.new([fm208,fn208,fo208])

                    if type1mm == 1:
                        if type2mm == 1:
                            if type3mm == 0:
                                if type4mm == 1:
                                    if type5mm == 1:
                                        if type6mm == 0:
                                            if type7mm == 1:
                                                if type8mm == 1:
                                                    if type9mm == 0:
                                                        if type10mm == 0:
                                                            if type11mm == 0:
                                                                if type12mm == 0:
                                                                    if type13mm == 0:
                                                                        if type14mm == 0:
                                                                            if type15mm == 0:
                                                                                bm_3mm.faces.new([fa207,fb207,fc207])
                                                                                bm_3mm.faces.new([fd207,fe207,ff207])
                                                                                bm_3mm.faces.new([fg207,fh207,fi207])
                                                                                bm_3mm.faces.new([fh207,fi207,fj207])
                                                                                bm_3mm.faces.new([fi207,fj207,fk207])
                                                                                bm_3mm.faces.new([fj207,fk207,fl207])
                                                                                bm_3mm.faces.new([fk207,fl207,fm207])
                                                                                bm_3mm.faces.new([fl207,fm207,fn207])
                                                                                bm_3mm.faces.new([fm207,fn207,fo207])

                    if type1ml == 1:
                        if type2ml == 1:
                            if type3ml == 0:
                                if type4ml == 0:
                                    if type5ml == 0:
                                        if type6ml == 0:
                                            if type7ml == 0:
                                                if type8ml == 0:
                                                    if type9ml == 0:
                                                        if type10ml == 0:
                                                            if type11ml == 0:
                                                                if type12ml == 0:
                                                                    if type13ml == 0:
                                                                        if type14ml == 0:
                                                                            if type15ml == 1:
                                                                                bm_3ml.faces.new([fa206,fb206,fc206])
                                                                                bm_3ml.faces.new([fb206,fc206,fd206])
                                                                                bm_3ml.faces.new([fc206,fd206,fe206])
                                                                                bm_3ml.faces.new([fd206,fe206,ff206])
                                                                                bm_3ml.faces.new([fe206,ff206,fg206])
                                                                                bm_3ml.faces.new([ff206,fg206,fh206])
                                                                                bm_3ml.faces.new([fg206,fh206,fi206])
                                                                                bm_3ml.faces.new([fh206,fi206,fj206])
                                                                                bm_3ml.faces.new([fi206,fj206,fk206])
                                                                                bm_3ml.faces.new([fj206,fk206,fl206])
                                                                                bm_3ml.faces.new([fk206,fl206,fm206])
                                                                                bm_3ml.faces.new([fl206,fm206,fn206])
                                                                                bm_3ml.faces.new([fl206,fn206,fo206])

                    if type1mk == 1:
                        if type2mk == 1:
                            if type3mk == 0:
                                if type4mk == 0:
                                    if type5mk == 0:
                                        if type6mk == 0:
                                            if type7mk == 0:
                                                if type8mk == 0:
                                                    if type9mk == 0:
                                                        if type10mk == 0:
                                                            if type11mk == 0:
                                                                if type12mk == 0:
                                                                    if type13mk == 0:
                                                                        if type14mk == 1:
                                                                            if type15mk == 1:
                                                                                bm_3mk.faces.new([fa205,fb205,fc205])
                                                                                bm_3mk.faces.new([fb205,fc205,fd205])
                                                                                bm_3mk.faces.new([fc205,fd205,fe205])
                                                                                bm_3mk.faces.new([fd205,fe205,ff205])
                                                                                bm_3mk.faces.new([fe205,ff205,fg205])
                                                                                bm_3mk.faces.new([ff205,fg205,fh205])
                                                                                bm_3mk.faces.new([fg205,fh205,fi205])
                                                                                bm_3mk.faces.new([fh205,fi205,fj205])
                                                                                bm_3mk.faces.new([fi205,fj205,fk205])
                                                                                bm_3mk.faces.new([fj205,fk205,fl205])
                                                                                bm_3mk.faces.new([fk205,fl205,fm205])
                                                                                bm_3mk.faces.new([fk205,fm205,fn205])
                                                                                bm_3mk.faces.new([fm205,fn205,fo205])

                    if type1mj == 1:
                        if type2mj == 1:
                            if type3mj == 0:
                                if type4mj == 0:
                                    if type5mj == 0:
                                        if type6mj == 0:
                                            if type7mj == 0:
                                                if type8mj == 0:
                                                    if type9mj == 0:
                                                        if type10mj == 0:
                                                            if type11mj == 0:
                                                                if type12mj == 0:
                                                                    if type13mj == 1:
                                                                        if type14mj == 1:
                                                                            if type15mj == 0:
                                                                                bm_3mj.faces.new([fa204,fb204,fc204])
                                                                                bm_3mj.faces.new([fb204,fc204,fd204])
                                                                                bm_3mj.faces.new([fc204,fd204,fe204])
                                                                                bm_3mj.faces.new([fd204,fe204,ff204])
                                                                                bm_3mj.faces.new([fe204,ff204,fg204])
                                                                                bm_3mj.faces.new([ff204,fg204,fh204])
                                                                                bm_3mj.faces.new([fg204,fh204,fi204])
                                                                                bm_3mj.faces.new([fh204,fi204,fj204])
                                                                                bm_3mj.faces.new([fi204,fj204,fk204])
                                                                                bm_3mj.faces.new([fj204,fk204,fl204])
                                                                                bm_3mj.faces.new([fm204,fn204,fo204])

                    if type1mi == 1:
                        if type2mi == 1:
                            if type3mi == 0:
                                if type4mi == 0:
                                    if type5mi == 0:
                                        if type6mi == 0:
                                            if type7mi == 0:
                                                if type8mi == 0:
                                                    if type9mi == 0:
                                                        if type10mi == 0:
                                                            if type11mi == 0:
                                                                if type12mi == 1:
                                                                    if type13mi == 1:
                                                                        if type14mi == 0:
                                                                            if type15mi == 0:
                                                                                bm_3mi.faces.new([fa203,fb203,fc203])
                                                                                bm_3mi.faces.new([fb203,fc203,fd203])
                                                                                bm_3mi.faces.new([fc203,fd203,fe203])
                                                                                bm_3mi.faces.new([fd203,fe203,ff203])
                                                                                bm_3mi.faces.new([fe203,ff203,fg203])
                                                                                bm_3mi.faces.new([ff203,fg203,fh203])
                                                                                bm_3mi.faces.new([fg203,fh203,fi203])
                                                                                bm_3mi.faces.new([fh203,fi203,fj203])
                                                                                bm_3mi.faces.new([fi203,fj203,fk203])
                                                                                bm_3mi.faces.new([fl203,fm203,fn203])
                                                                                bm_3mi.faces.new([fm203,fn203,fo203])

                    if type1mh == 1:
                        if type2mh == 1:
                            if type3mh == 0:
                                if type4mh == 0:
                                    if type5mh == 0:
                                        if type6mh == 0:
                                            if type7mh == 0:
                                                if type8mh == 0:
                                                    if type9mh == 0:
                                                        if type10mh == 0:
                                                            if type11mh == 1:
                                                                if type12mh == 1:
                                                                    if type13mh == 0:
                                                                        if type14mh == 0:
                                                                            if type15mh == 0:
                                                                                bm_3mh.faces.new([fa202,fb202,fc202])
                                                                                bm_3mh.faces.new([fb202,fc202,fd202])
                                                                                bm_3mh.faces.new([fc202,fd202,fe202])
                                                                                bm_3mh.faces.new([fd202,fe202,ff202])
                                                                                bm_3mh.faces.new([fe202,ff202,fg202])
                                                                                bm_3mh.faces.new([ff202,fg202,fh202])
                                                                                bm_3mh.faces.new([fg202,fh202,fi202])
                                                                                bm_3mh.faces.new([fh202,fi202,fj202])
                                                                                bm_3mh.faces.new([fk202,fl202,fm202])
                                                                                bm_3mh.faces.new([fl202,fm202,fn202])
                                                                                bm_3mh.faces.new([fm202,fn202,fo202])

                    if type1mg == 1:
                        if type2mg == 1:
                            if type3mg == 0:
                                if type4mg == 0:
                                    if type5mg == 0:
                                        if type6mg == 0:
                                            if type7mg == 0:
                                                if type8mg == 0:
                                                    if type9mg == 0:
                                                        if type10mg == 1:
                                                            if type11mg == 1:
                                                                if type12mg == 0:
                                                                    if type13mg == 0:
                                                                        if type14mg == 0:
                                                                            if type15mg == 0:
                                                                                bm_3mg.faces.new([fa201,fb201,fc201])
                                                                                bm_3mg.faces.new([fb201,fc201,fd201])
                                                                                bm_3mg.faces.new([fc201,fd201,fe201])
                                                                                bm_3mg.faces.new([fd201,fe201,ff201])
                                                                                bm_3mg.faces.new([fe201,ff201,fg201])
                                                                                bm_3mg.faces.new([ff201,fg201,fh201])
                                                                                bm_3mg.faces.new([fg201,fh201,fi201])
                                                                                bm_3mg.faces.new([fj201,fk201,fl201])
                                                                                bm_3mg.faces.new([fk201,fl201,fm201])
                                                                                bm_3mg.faces.new([fl201,fm201,fn201])
                                                                                bm_3mg.faces.new([fm201,fn201,fo201])

                    if type1mf == 1:
                        if type2mf == 1:
                            if type3mf == 0:
                                if type4mf == 0:
                                    if type5mf == 0:
                                        if type6mf == 0:
                                            if type7mf == 0:
                                                if type8mf == 0:
                                                    if type9mf == 1:
                                                        if type10mf == 1:
                                                            if type11mf == 0:
                                                                if type12mf == 0:
                                                                    if type13mf == 0:
                                                                        if type14mf == 0:
                                                                            if type15mf == 0:
                                                                                bm_3mf.faces.new([fa200,fb200,fc200])
                                                                                bm_3mf.faces.new([fb200,fc200,fd200])
                                                                                bm_3mf.faces.new([fc200,fd200,fe200])
                                                                                bm_3mf.faces.new([fd200,fe200,ff200])
                                                                                bm_3mf.faces.new([fe200,ff200,fg200])
                                                                                bm_3mf.faces.new([ff200,fg200,fh200])
                                                                                bm_3mf.faces.new([fi200,fj200,fk200])
                                                                                bm_3mf.faces.new([fj200,fk200,fl200])
                                                                                bm_3mf.faces.new([fk200,fl200,fm200])
                                                                                bm_3mf.faces.new([fl200,fm200,fn200])
                                                                                bm_3mf.faces.new([fm200,fn200,fo200])

                    if type1me == 1:
                        if type2me == 1:
                            if type3me == 0:
                                if type4me == 0:
                                    if type5me == 0:
                                        if type6me == 0:
                                            if type7me == 0:
                                                if type8me == 1:
                                                    if type9me == 1:
                                                        if type10me == 0:
                                                            if type11me == 0:
                                                                if type12me == 0:
                                                                    if type13me == 0:
                                                                        if type14me == 0:
                                                                            if type15me == 0:
                                                                                bm_3me.faces.new([fa199,fb199,fc199])
                                                                                bm_3me.faces.new([fb199,fc199,fd199])
                                                                                bm_3me.faces.new([fc199,fd199,fe199])
                                                                                bm_3me.faces.new([fd199,fe199,ff199])
                                                                                bm_3me.faces.new([fe199,ff199,fg199])
                                                                                bm_3me.faces.new([fh199,fi199,fj199])
                                                                                bm_3me.faces.new([fi199,fj199,fk199])
                                                                                bm_3me.faces.new([fj199,fk199,fl199])
                                                                                bm_3me.faces.new([fk199,fl199,fm199])
                                                                                bm_3me.faces.new([fl199,fm199,fn199])
                                                                                bm_3me.faces.new([fm199,fn199,fo199])

                    if type1md == 1:
                        if type2md == 1:
                            if type3md == 0:
                                if type4md == 0:
                                    if type5md == 0:
                                        if type6md == 0:
                                            if type7md == 1:
                                                if type8md == 1:
                                                    if type9md == 0:
                                                        if type10md == 0:
                                                            if type11md == 0:
                                                                if type12md == 0:
                                                                    if type13md == 0:
                                                                        if type14md == 0:
                                                                            if type15md == 0:
                                                                                bm_3md.faces.new([fa198,fb198,fc198])
                                                                                bm_3md.faces.new([fb198,fc198,fd198])
                                                                                bm_3md.faces.new([fc198,fd198,fe198])
                                                                                bm_3md.faces.new([fd198,fe198,ff198])
                                                                                bm_3md.faces.new([fg198,fh198,fi198])
                                                                                bm_3md.faces.new([fh198,fi198,fj198])
                                                                                bm_3md.faces.new([fi198,fj198,fk198])
                                                                                bm_3md.faces.new([fj198,fk198,fl198])
                                                                                bm_3md.faces.new([fk198,fl198,fm198])
                                                                                bm_3md.faces.new([fl198,fm198,fn198])
                                                                                bm_3md.faces.new([fm198,fn198,fo198])

                    if type1mc == 1:
                        if type2mc == 1:
                            if type3mc == 0:
                                if type4mc == 0:
                                    if type5mc == 0:
                                        if type6mc == 1:
                                            if type7mc == 1:
                                                if type8mc == 0:
                                                    if type9mc == 0:
                                                        if type10mc == 0:
                                                            if type11mc == 0:
                                                                if type12mc == 0:
                                                                    if type13mc == 0:
                                                                        if type14mc == 0:
                                                                            if type15mc == 0:
                                                                                bm_3mc.faces.new([fa197,fb197,fc197])
                                                                                bm_3mc.faces.new([fb197,fc197,fd197])
                                                                                bm_3mc.faces.new([fc197,fd197,fe197])
                                                                                bm_3mc.faces.new([ff197,fg197,fh197])
                                                                                bm_3mc.faces.new([fg197,fh197,fi197])
                                                                                bm_3mc.faces.new([fh197,fi197,fj197])
                                                                                bm_3mc.faces.new([fi197,fj197,fk197])
                                                                                bm_3mc.faces.new([fj197,fk197,fl197])
                                                                                bm_3mc.faces.new([fk197,fl197,fm197])
                                                                                bm_3mc.faces.new([fl197,fm197,fn197])
                                                                                bm_3mc.faces.new([fm197,fn197,fo197])

                    if type1mb == 1:
                        if type2mb == 1:
                            if type3mb == 0:
                                if type4mb == 0:
                                    if type5mb == 1:
                                        if type6mb == 1:
                                            if type7mb == 0:
                                                if type8mb == 0:
                                                    if type9mb == 0:
                                                        if type10mb == 0:
                                                            if type11mb == 0:
                                                                if type12mb == 0:
                                                                    if type13mb == 0:
                                                                        if type14mb == 0:
                                                                            if type15mb == 0:
                                                                                bm_3mb.faces.new([fa196,fb196,fc196])
                                                                                bm_3mb.faces.new([fb196,fc196,fd196])
                                                                                bm_3mb.faces.new([fe196,ff196,fg196])
                                                                                bm_3mb.faces.new([ff196,fg196,fh196])
                                                                                bm_3mb.faces.new([fg196,fh196,fi196])
                                                                                bm_3mb.faces.new([fh196,fi196,fj196])
                                                                                bm_3mb.faces.new([fi196,fj196,fk196])
                                                                                bm_3mb.faces.new([fj196,fk196,fl196])
                                                                                bm_3mb.faces.new([fk196,fl196,fm196])
                                                                                bm_3mb.faces.new([fl196,fm196,fn196])
                                                                                bm_3mb.faces.new([fm196,fn196,fo196])

                    if type1ma == 1:
                        if type2ma == 1:
                            if type3ma == 0:
                                if type4ma == 1:
                                    if type5ma == 1:
                                        if type6ma == 0:
                                            if type7ma == 0:
                                                if type8ma == 0:
                                                    if type9ma == 0:
                                                        if type10ma == 0:
                                                            if type11ma == 0:
                                                                if type12ma == 0:
                                                                    if type13ma == 0:
                                                                        if type14ma == 0:
                                                                            if type15ma == 0:
                                                                                bm_3ma.faces.new([fa195,fb195,fc195])
                                                                                bm_3ma.faces.new([fd195,fe195,ff195])
                                                                                bm_3ma.faces.new([fe195,ff195,fg195])
                                                                                bm_3ma.faces.new([ff195,fg195,fh195])
                                                                                bm_3ma.faces.new([fg195,fh195,fi195])
                                                                                bm_3ma.faces.new([fh195,fi195,fj195])
                                                                                bm_3ma.faces.new([fi195,fj195,fk195])
                                                                                bm_3ma.faces.new([fj195,fk195,fl195])
                                                                                bm_3ma.faces.new([fk195,fl195,fm195])
                                                                                bm_3ma.faces.new([fl195,fm195,fn195])
                                                                                bm_3ma.faces.new([fm195,fn195,fo195])

                    if type1m == 1:
                        if type2m == 1:
                            if type3m == 0:
                                if type4m == 0:
                                    if type5m == 0:
                                        if type6m == 0:
                                            if type7m == 0:
                                                if type8m == 0:
                                                    if type9m == 0:
                                                        if type10m == 0:
                                                            if type11m == 0:
                                                                if type12m == 0:
                                                                    if type13m == 0:
                                                                        if type14m == 0:
                                                                            if type15m == 0:
                                                                                bm_3m.faces.new([fa194,fb194,fc194])
                                                                                bm_3m.faces.new([fb194,fc194,fd194])
                                                                                bm_3m.faces.new([fc194,fd194,fe194])
                                                                                bm_3m.faces.new([fd194,fe194,ff194])
                                                                                bm_3m.faces.new([fe194,ff194,fg194])
                                                                                bm_3m.faces.new([ff194,fg194,fh194])
                                                                                bm_3m.faces.new([fg194,fh194,fi194])
                                                                                bm_3m.faces.new([fh194,fi194,fj194])
                                                                                bm_3m.faces.new([fi194,fj194,fk194])
                                                                                bm_3m.faces.new([fj194,fk194,fl194])
                                                                                bm_3m.faces.new([fk194,fl194,fm194])
                                                                                bm_3m.faces.new([fl194,fm194,fn194])
                                                                                bm_3m.faces.new([fm194,fn194,fo194])

            
                                                
    f.seek(0) # todo overwrite the file                       
    collection = bpy.data.collections.new(os.path.basename(os.path.splitext(filepath)[0]))
    bpy.context.scene.collection.children.link(collection)
    mesh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm.from_mesh(mesh)
    objects1 = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh)
    collection.objects.link(objects1)
    bmesh.ops.remove_doubles(bm, verts = bm.verts, dist = 0.0001)
    bm.to_mesh(mesh)

    objects1.parent = arma
    armamodifier1 = objects1.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1.object = arma

    vgroups1 = [objects1.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #######################################
    #######################################
    #######################################

    mesh__1 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1.from_mesh(mesh__1)
    objects1_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__1)
    collection.objects.link(objects1_)
    bmesh.ops.remove_doubles(bm_1, verts = bm_1.verts, dist = 0.0001)
    bm_1.to_mesh(mesh__1)

    objects1_.parent = arma
    armamodifier1_ = objects1_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1_.object = arma

    vgroups1_ = [objects1_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__2 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1a.from_mesh(mesh__2)
    objects1a_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__2)
    collection.objects.link(objects1a_)
    bmesh.ops.remove_doubles(bm_1a, verts = bm_1a.verts, dist = 0.0001)
    bm_1a.to_mesh(mesh__2)

    objects1a_.parent = arma
    armamodifier1a_ = objects1a_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1a_.object = arma

    vgroups1a_ = [objects1a_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #############################################
    #############################################
    #############################################

    mesh__3 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1b.from_mesh(mesh__3)
    objects1b_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__3)
    collection.objects.link(objects1b_)
    bmesh.ops.remove_doubles(bm_1b, verts = bm_1b.verts, dist = 0.0001)
    bm_1b.to_mesh(mesh__3)

    objects1b_.parent = arma
    armamodifier1b_ = objects1b_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1b_.object = arma

    vgroups1b_ = [objects1b_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################

    mesh__3a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1bb.from_mesh(mesh__3a)
    objects1bb_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__3a)
    collection.objects.link(objects1bb_)
    bmesh.ops.remove_doubles(bm_1bb, verts = bm_1bb.verts, dist = 0.0001)
    bm_1bb.to_mesh(mesh__3a)

    objects1bb_.parent = arma
    armamodifier1bb_ = objects1bb_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1bb_.object = arma

    vgroups1bb_ = [objects1bb_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]
    
    ###########################

    

    mesh__4 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1c.from_mesh(mesh__4)
    objects1c_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__4)
    collection.objects.link(objects1c_)
    bmesh.ops.remove_doubles(bm_1c, verts = bm_1c.verts, dist = 0.0001)
    bm_1c.to_mesh(mesh__4)

    objects1c_.parent = arma
    armamodifier1c_ = objects1c_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1c_.object = arma

    vgroups1c_ = [objects1c_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__4a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1cc.from_mesh(mesh__4a)
    objects1cc_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__4a)
    collection.objects.link(objects1cc_)
    bmesh.ops.remove_doubles(bm_1cc, verts = bm_1cc.verts, dist = 0.0001)
    bm_1cc.to_mesh(mesh__4a)

    objects1cc_.parent = arma
    armamodifier1cc_ = objects1cc_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1cc_.object = arma

    vgroups1cc_ = [objects1cc_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__4aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ccc.from_mesh(mesh__4aa)
    objects1ccc_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__4aa)
    collection.objects.link(objects1ccc_)
    bmesh.ops.remove_doubles(bm_1ccc, verts = bm_1ccc.verts, dist = 0.0001)
    bm_1ccc.to_mesh(mesh__4aa)

    objects1ccc_.parent = arma
    armamodifier1ccc_ = objects1ccc_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ccc_.object = arma

    vgroups1ccc_ = [objects1ccc_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ################################################
    ################################################
    ################################################

    mesh__5 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1d.from_mesh(mesh__5)
    objects1d_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__5)
    collection.objects.link(objects1d_)
    bmesh.ops.remove_doubles(bm_1d, verts = bm_1d.verts, dist = 0.0001)
    bm_1d.to_mesh(mesh__5)

    objects1d_.parent = arma
    armamodifier1d_ = objects1d_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1d_.object = arma

    vgroups1d_ = [objects1d_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__5a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1dd.from_mesh(mesh__5a)
    objects1dd_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__5a)
    collection.objects.link(objects1dd_)
    bmesh.ops.remove_doubles(bm_1dd, verts = bm_1dd.verts, dist = 0.0001)
    bm_1dd.to_mesh(mesh__5a)

    objects1dd_.parent = arma
    armamodifier1dd_ = objects1dd_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1dd_.object = arma

    vgroups1dd_ = [objects1dd_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #########################################################################################

    mesh__5b = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ddd.from_mesh(mesh__5b)
    objects1ddd_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__5b)
    collection.objects.link(objects1ddd_)
    bmesh.ops.remove_doubles(bm_1ddd, verts = bm_1ddd.verts, dist = 0.0001)
    bm_1ddd.to_mesh(mesh__5b)

    objects1ddd_.parent = arma
    armamodifier1ddd_ = objects1ddd_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ddd_.object = arma

    vgroups1ddd_ = [objects1ddd_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ########################################################################################

    mesh__5c = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1dddd.from_mesh(mesh__5c)
    objects1dddd_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__5c)
    collection.objects.link(objects1dddd_)
    bmesh.ops.remove_doubles(bm_1dddd, verts = bm_1dddd.verts, dist = 0.0001)
    bm_1dddd.to_mesh(mesh__5c)

    objects1dddd_.parent = arma
    armamodifier1dddd_ = objects1dddd_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1dddd_.object = arma

    vgroups1dddd_ = [objects1dddd_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ########################################################################################


    mesh__6 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1e.from_mesh(mesh__6)
    objects1e_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__6)
    collection.objects.link(objects1e_)
    bmesh.ops.remove_doubles(bm_1e, verts = bm_1e.verts, dist = 0.0001)
    bm_1e.to_mesh(mesh__6)

    objects1e_.parent = arma
    armamodifier1e_ = objects1e_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1e_.object = arma

    vgroups1e_ = [objects1e_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__6a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ee.from_mesh(mesh__6a)
    objects1ee_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__6a)
    collection.objects.link(objects1ee_)
    bmesh.ops.remove_doubles(bm_1ee, verts = bm_1ee.verts, dist = 0.0001)
    bm_1ee.to_mesh(mesh__6a)

    objects1ee_.parent = arma
    armamodifier1ee_ = objects1ee_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ee_.object = arma

    vgroups1ee_ = [objects1ee_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__6aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1eee.from_mesh(mesh__6aa)
    objects1eee_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__6aa)
    collection.objects.link(objects1eee_)
    bmesh.ops.remove_doubles(bm_1eee, verts = bm_1eee.verts, dist = 0.0001)
    bm_1eee.to_mesh(mesh__6aa)

    objects1eee_.parent = arma
    armamodifier1eee_ = objects1eee_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1eee_.object = arma

    vgroups1eee_ = [objects1eee_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__6aaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1eeee.from_mesh(mesh__6aaa)
    objects1eeee_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__6aaa)
    collection.objects.link(objects1eeee_)
    bmesh.ops.remove_doubles(bm_1eeee, verts = bm_1eeee.verts, dist = 0.0001)
    bm_1eeee.to_mesh(mesh__6aaa)

    objects1eeee_.parent = arma
    armamodifier1eeee_ = objects1eeee_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1eeee_.object = arma

    vgroups1eeee_ = [objects1eeee_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__6aaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1eeeee.from_mesh(mesh__6aaaa)
    objects1eeeee_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__6aaaa)
    collection.objects.link(objects1eeeee_)
    bmesh.ops.remove_doubles(bm_1eeeee, verts = bm_1eeeee.verts, dist = 0.0001)
    bm_1eeeee.to_mesh(mesh__6aaaa)

    objects1eeeee_.parent = arma
    armamodifier1eeeee_ = objects1eeeee_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1eeeee_.object = arma

    vgroups1eeeee_ = [objects1eeeee_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__6aaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1eeeeeee.from_mesh(mesh__6aaaaaa)
    objects1eeeeeee_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__6aaaaaa)
    collection.objects.link(objects1eeeeeee_)
    bmesh.ops.remove_doubles(bm_1eeeeeee, verts = bm_1eeeeeee.verts, dist = 0.0001)
    bm_1eeeeeee.to_mesh(mesh__6aaaaaa)

    objects1eeeeeee_.parent = arma
    armamodifier1eeeeeee_ = objects1eeeeeee_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1eeeeeee_.object = arma

    vgroups1eeeeeee_ = [objects1eeeeeee_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################################################################################
    ###########################################################################################

    mesh__7 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1f.from_mesh(mesh__7)
    objects1f_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7)
    collection.objects.link(objects1f_)
    bmesh.ops.remove_doubles(bm_1f, verts = bm_1f.verts, dist = 0.0001)
    bm_1f.to_mesh(mesh__7)

    objects1f_.parent = arma
    armamodifier1f_ = objects1f_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1f_.object = arma

    vgroups1f_ = [objects1f_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ff.from_mesh(mesh__7a)
    objects1ff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7a)
    collection.objects.link(objects1ff_)
    bmesh.ops.remove_doubles(bm_1ff, verts = bm_1ff.verts, dist = 0.0001)
    bm_1ff.to_mesh(mesh__7a)

    objects1ff_.parent = arma
    armamodifier1ff_ = objects1ff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ff_.object = arma

    vgroups1ff_ = [objects1ff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1fff.from_mesh(mesh__7aa)
    objects1fff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aa)
    collection.objects.link(objects1fff_)
    bmesh.ops.remove_doubles(bm_1fff, verts = bm_1fff.verts, dist = 0.0001)
    bm_1fff.to_mesh(mesh__7aa)

    objects1fff_.parent = arma
    armamodifier1fff_ = objects1fff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1fff_.object = arma

    vgroups1fff_ = [objects1fff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ffff.from_mesh(mesh__7aaa)
    objects1ffff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aaa)
    collection.objects.link(objects1ffff_)
    bmesh.ops.remove_doubles(bm_1ffff, verts = bm_1ffff.verts, dist = 0.0001)
    bm_1ffff.to_mesh(mesh__7aaa)

    objects1ffff_.parent = arma
    armamodifier1ffff_ = objects1ffff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ffff_.object = arma

    vgroups1ffff_ = [objects1ffff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1fffff.from_mesh(mesh__7aaaa)
    objects1fffff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aaaa)
    collection.objects.link(objects1fffff_)
    bmesh.ops.remove_doubles(bm_1fffff, verts = bm_1fffff.verts, dist = 0.0001)
    bm_1fffff.to_mesh(mesh__7aaaa)

    objects1fffff_.parent = arma
    armamodifier1fffff_ = objects1fffff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1fffff_.object = arma

    vgroups1fffff_ = [objects1fffff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ffffff.from_mesh(mesh__7aaaaa)
    objects1ffffff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aaaaa)
    collection.objects.link(objects1ffffff_)
    bmesh.ops.remove_doubles(bm_1ffffff, verts = bm_1ffffff.verts, dist = 0.0001)
    bm_1ffffff.to_mesh(mesh__7aaaaa)

    objects1ffffff_.parent = arma
    armamodifier1ffffff_ = objects1ffffff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ffffff_.object = arma

    vgroups1ffffff_ = [objects1ffffff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1fffffff.from_mesh(mesh__7aaaaaa)
    objects1fffffff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aaaaaa)
    collection.objects.link(objects1fffffff_)
    bmesh.ops.remove_doubles(bm_1fffffff, verts = bm_1fffffff.verts, dist = 0.0001)
    bm_1fffffff.to_mesh(mesh__7aaaaaa)

    objects1fffffff_.parent = arma
    armamodifier1fffffff_ = objects1fffffff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1fffffff_.object = arma

    vgroups1fffffff_ = [objects1fffffff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ffffffff.from_mesh(mesh__7aaaaaaa)
    objects1ffffffff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aaaaaaa)
    collection.objects.link(objects1ffffffff_)
    bmesh.ops.remove_doubles(bm_1ffffffff, verts = bm_1ffffffff.verts, dist = 0.0001)
    bm_1ffffffff.to_mesh(mesh__7aaaaaaa)

    objects1ffffffff_.parent = arma
    armamodifier1ffffffff_ = objects1ffffffff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ffffffff_.object = arma

    vgroups1ffffffff_ = [objects1ffffffff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__7aaaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1fffffffff.from_mesh(mesh__7aaaaaaaa)
    objects1fffffffff_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__7aaaaaaaa)
    collection.objects.link(objects1fffffffff_)
    bmesh.ops.remove_doubles(bm_1fffffffff, verts = bm_1fffffffff.verts, dist = 0.0001)
    bm_1fffffffff.to_mesh(mesh__7aaaaaaaa)

    objects1fffffffff_.parent = arma
    armamodifier1fffffffff_ = objects1fffffffff_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1fffffffff_.object = arma

    vgroups1fffffffff_ = [objects1fffffffff_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    

    ###########################################################################################
    ###########################################################################################

    mesh__8 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1g.from_mesh(mesh__8)
    objects1g_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8)
    collection.objects.link(objects1g_)
    bmesh.ops.remove_doubles(bm_1g, verts = bm_1g.verts, dist = 0.0001)
    bm_1g.to_mesh(mesh__8)

    objects1g_.parent = arma
    armamodifier1g_ = objects1g_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1g_.object = arma

    vgroups1g_ = [objects1g_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]
    

    ###########################################################################################

    mesh__8a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1gg.from_mesh(mesh__8a)
    objects1gg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8a)
    collection.objects.link(objects1gg_)
    bmesh.ops.remove_doubles(bm_1gg, verts = bm_1gg.verts, dist = 0.0001)
    bm_1gg.to_mesh(mesh__8a)

    objects1gg_.parent = arma
    armamodifier1gg_ = objects1gg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1gg_.object = arma

    vgroups1gg_ = [objects1gg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]
    
    ###########################################################################################

    mesh__8aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ggg.from_mesh(mesh__8aa)
    objects1ggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aa)
    collection.objects.link(objects1ggg_)
    bmesh.ops.remove_doubles(bm_1ggg, verts = bm_1ggg.verts, dist = 0.0001)
    bm_1ggg.to_mesh(mesh__8aa)

    objects1ggg_.parent = arma
    armamodifier1ggg_ = objects1ggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ggg_.object = arma

    vgroups1ggg_ = [objects1ggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__8aaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1gggg.from_mesh(mesh__8aaa)
    objects1gggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaa)
    collection.objects.link(objects1gggg_)
    bmesh.ops.remove_doubles(bm_1gggg, verts = bm_1gggg.verts, dist = 0.0001)
    bm_1gggg.to_mesh(mesh__8aaa)

    objects1gggg_.parent = arma
    armamodifier1gggg_ = objects1gggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1gggg_.object = arma

    vgroups1gggg_ = [objects1gggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh__8aaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ggggg.from_mesh(mesh__8aaaa)
    objects1ggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaa)
    collection.objects.link(objects1ggggg_)
    bmesh.ops.remove_doubles(bm_1ggggg, verts = bm_1ggggg.verts, dist = 0.0001)
    bm_1ggggg.to_mesh(mesh__8aaaa)

    objects1ggggg_.parent = arma
    armamodifier1ggggg_ = objects1ggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ggggg_.object = arma

    vgroups1ggggg_ = [objects1ggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__8aaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1gggggg.from_mesh(mesh__8aaaaa)
    objects1gggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaa)
    collection.objects.link(objects1gggggg_)
    bmesh.ops.remove_doubles(bm_1gggggg, verts = bm_1gggggg.verts, dist = 0.0001)
    bm_1gggggg.to_mesh(mesh__8aaaaa)

    objects1gggggg_.parent = arma
    armamodifier1gggggg_ = objects1gggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1gggggg_.object = arma

    vgroups1gggggg_ = [objects1gggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################################

    mesh__8aaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ggggggg.from_mesh(mesh__8aaaaaa)
    objects1ggggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaaa)
    collection.objects.link(objects1ggggggg_)
    bmesh.ops.remove_doubles(bm_1ggggggg, verts = bm_1ggggggg.verts, dist = 0.0001)
    bm_1ggggggg.to_mesh(mesh__8aaaaaa)

    objects1ggggggg_.parent = arma
    armamodifier1ggggggg_ = objects1ggggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ggggggg_.object = arma

    vgroups1ggggggg_ = [objects1ggggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__8aaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1gggggggg.from_mesh(mesh__8aaaaaaa)
    objects1gggggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaaaa)
    collection.objects.link(objects1gggggggg_)
    bmesh.ops.remove_doubles(bm_1gggggggg, verts = bm_1gggggggg.verts, dist = 0.0001)
    bm_1gggggggg.to_mesh(mesh__8aaaaaaa)

    objects1gggggggg_.parent = arma
    armamodifier1gggggggg_ = objects1gggggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1gggggggg_.object = arma

    vgroups1gggggggg_ = [objects1gggggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__8aaaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ggggggggg.from_mesh(mesh__8aaaaaaaa)
    objects1ggggggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaaaaa)
    collection.objects.link(objects1ggggggggg_)
    bmesh.ops.remove_doubles(bm_1ggggggggg, verts = bm_1ggggggggg.verts, dist = 0.0001)
    bm_1ggggggggg.to_mesh(mesh__8aaaaaaaa)

    objects1ggggggggg_.parent = arma
    armamodifier1ggggggggg_ = objects1ggggggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ggggggggg_.object = arma

    vgroups1ggggggggg_ = [objects1ggggggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]
    
    ###############################################################

    mesh__8aaaaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1gggggggggg.from_mesh(mesh__8aaaaaaaaa)
    objects1gggggggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaaaaaa)
    collection.objects.link(objects1gggggggggg_)
    bmesh.ops.remove_doubles(bm_1gggggggggg, verts = bm_1gggggggggg.verts, dist = 0.0001)
    bm_1gggggggggg.to_mesh(mesh__8aaaaaaaaa)

    objects1gggggggggg_.parent = arma
    armamodifier1gggggggggg_ = objects1gggggggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1gggggggggg_.object = arma

    vgroups1gggggggggg_ = [objects1gggggggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__8aaaaaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ggggggggggg.from_mesh(mesh__8aaaaaaaaaa)
    objects1ggggggggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaaaaaaa)
    collection.objects.link(objects1ggggggggggg_)
    bmesh.ops.remove_doubles(bm_1ggggggggggg, verts = bm_1ggggggggggg.verts, dist = 0.0001)
    bm_1ggggggggggg.to_mesh(mesh__8aaaaaaaaaa)

    objects1ggggggggggg_.parent = arma
    armamodifier1ggggggggggg_ = objects1ggggggggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ggggggggggg_.object = arma

    vgroups1ggggggggggg_ = [objects1ggggggggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__8aaaaaaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1gggggggggggg.from_mesh(mesh__8aaaaaaaaaaa)
    objects1gggggggggggg_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__8aaaaaaaaaaa)
    collection.objects.link(objects1gggggggggggg_)
    bmesh.ops.remove_doubles(bm_1gggggggggggg, verts = bm_1gggggggggggg.verts, dist = 0.0001)
    bm_1gggggggggggg.to_mesh(mesh__8aaaaaaaaaaa)

    objects1gggggggggggg_.parent = arma
    armamodifier1gggggggggggg_ = objects1gggggggggggg_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1gggggggggggg_.object = arma

    vgroups1gggggggggggg_ = [objects1gggggggggggg_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]
    
    ###############################################################


    ###############################################################

    mesh__9aaaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhhhhhhhh.from_mesh(mesh__9aaaaaaaa)
    objects1hhhhhhhhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aaaaaaaa)
    collection.objects.link(objects1hhhhhhhhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhhhhhhhh, verts = bm_1hhhhhhhhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhhhhhhhh.to_mesh(mesh__9aaaaaaaa)

    objects1hhhhhhhhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhhhhhhhh_ = objects1hhhhhhhhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhhhhhhhh_ = [objects1hhhhhhhhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ###############################################################

    mesh__9aaaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhhhhhhh.from_mesh(mesh__9aaaaaaa)
    objects1hhhhhhhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aaaaaaa)
    collection.objects.link(objects1hhhhhhhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhhhhhhh, verts = bm_1hhhhhhhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhhhhhhh.to_mesh(mesh__9aaaaaaa)

    objects1hhhhhhhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhhhhhhh_ = objects1hhhhhhhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhhhhhhh_ = [objects1hhhhhhhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__9aaaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhhhhhh.from_mesh(mesh__9aaaaaa)
    objects1hhhhhhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aaaaaa)
    collection.objects.link(objects1hhhhhhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhhhhhh, verts = bm_1hhhhhhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhhhhhh.to_mesh(mesh__9aaaaaa)

    objects1hhhhhhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhhhhhh_ = objects1hhhhhhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhhhhhh_ = [objects1hhhhhhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ####################################
    ####################################

    mesh__9aaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhhhhh.from_mesh(mesh__9aaaaa)
    objects1hhhhhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aaaaa)
    collection.objects.link(objects1hhhhhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhhhhh, verts = bm_1hhhhhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhhhhh.to_mesh(mesh__9aaaaa)

    objects1hhhhhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhhhhh_ = objects1hhhhhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhhhhh_ = [objects1hhhhhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################
    ###################

    mesh__9aaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhhhh.from_mesh(mesh__9aaaa)
    objects1hhhhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aaaa)
    collection.objects.link(objects1hhhhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhhhh, verts = bm_1hhhhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhhhh.to_mesh(mesh__9aaaa)

    objects1hhhhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhhhh_ = objects1hhhhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhhhh_ = [objects1hhhhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##########

    mesh__9aaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhhh.from_mesh(mesh__9aaa)
    objects1hhhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aaa)
    collection.objects.link(objects1hhhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhhh, verts = bm_1hhhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhhh.to_mesh(mesh__9aaa)

    objects1hhhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhhh_ = objects1hhhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhhh_ = [objects1hhhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############
    ###############

    mesh__9aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhhh.from_mesh(mesh__9aa)
    objects1hhhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9aa)
    collection.objects.link(objects1hhhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhhh, verts = bm_1hhhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhhh.to_mesh(mesh__9aa)

    objects1hhhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhhh_ = objects1hhhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhhh_ = [objects1hhhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__9_a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhhh.from_mesh(mesh__9_a)
    objects1hhhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_a)
    collection.objects.link(objects1hhhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhhh, verts = bm_1hhhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhhh.to_mesh(mesh__9_a)

    objects1hhhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhhh_ = objects1hhhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhhh_.object = arma

    vgroups1hhhhhhhhhh_ = [objects1hhhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ##########################
    ##########################
    ##########################

    mesh__9_aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhhh.from_mesh(mesh__9_aa)
    objects1hhhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aa)
    collection.objects.link(objects1hhhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhhh, verts = bm_1hhhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhhh.to_mesh(mesh__9_aa)

    objects1hhhhhhhhh_.parent = arma
    armamodifier1hhhhhhhhh_ = objects1hhhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhhh_.object = arma

    vgroups1hhhhhhhhh_ = [objects1hhhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################
    ###############################

    mesh__9_aaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhhh.from_mesh(mesh__9_aaa)
    objects1hhhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaa)
    collection.objects.link(objects1hhhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhhh, verts = bm_1hhhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhhh.to_mesh(mesh__9_aaa)

    objects1hhhhhhhh_.parent = arma
    armamodifier1hhhhhhhh_ = objects1hhhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhhh_.object = arma

    vgroups1hhhhhhhh_ = [objects1hhhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ########################################

    ########################################

    mesh__9_aaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhhh.from_mesh(mesh__9_aaaa)
    objects1hhhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa)
    collection.objects.link(objects1hhhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhhh, verts = bm_1hhhhhhh.verts, dist = 0.0001)
    bm_1hhhhhhh.to_mesh(mesh__9_aaaa)

    objects1hhhhhhh_.parent = arma
    armamodifier1hhhhhhh_ = objects1hhhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhhh_.object = arma

    vgroups1hhhhhhh_ = [objects1hhhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #############################################

    mesh__9_aaaa_ = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhhh.from_mesh(mesh__9_aaaa_)
    objects1hhhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa_)
    collection.objects.link(objects1hhhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhhh, verts = bm_1hhhhhh.verts, dist = 0.0001)
    bm_1hhhhhh.to_mesh(mesh__9_aaaa_)

    objects1hhhhhh_.parent = arma
    armamodifier1hhhhhh_ = objects1hhhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhhh_.object = arma

    vgroups1hhhhhh_ = [objects1hhhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################

    mesh__9_aaaa_a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhhh.from_mesh(mesh__9_aaaa_a)
    objects1hhhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa_a)
    collection.objects.link(objects1hhhhh_)
    bmesh.ops.remove_doubles(bm_1hhhhh, verts = bm_1hhhhh.verts, dist = 0.0001)
    bm_1hhhhh.to_mesh(mesh__9_aaaa_a)

    objects1hhhhh_.parent = arma
    armamodifier1hhhhh_ = objects1hhhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhhh_.object = arma

    vgroups1hhhhh_ = [objects1hhhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__9_aaaa_aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhhh.from_mesh(mesh__9_aaaa_aa)
    objects1hhhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa_aa)
    collection.objects.link(objects1hhhh_)
    bmesh.ops.remove_doubles(bm_1hhhh, verts = bm_1hhhh.verts, dist = 0.0001)
    bm_1hhhh.to_mesh(mesh__9_aaaa_aa)

    objects1hhhh_.parent = arma
    armamodifier1hhhh_ = objects1hhhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhhh_.object = arma

    vgroups1hhhh_ = [objects1hhhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################

    mesh__9_aaaa_aaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hhh.from_mesh(mesh__9_aaaa_aaa)
    objects1hhh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa_aaa)
    collection.objects.link(objects1hhh_)
    bmesh.ops.remove_doubles(bm_1hhh, verts = bm_1hhh.verts, dist = 0.0001)
    bm_1hhh.to_mesh(mesh__9_aaaa_aaa)

    objects1hhh_.parent = arma
    armamodifier1hhh_ = objects1hhh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hhh_.object = arma

    vgroups1hhh_ = [objects1hhh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ####################################################

    mesh__9_aaaa_aaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1hh.from_mesh(mesh__9_aaaa_aaaa)
    objects1hh_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa_aaaa)
    collection.objects.link(objects1hh_)
    bmesh.ops.remove_doubles(bm_1hh, verts = bm_1hh.verts, dist = 0.0001)
    bm_1hh.to_mesh(mesh__9_aaaa_aaaa)

    objects1hh_.parent = arma
    armamodifier1hh_ = objects1hh_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1hh_.object = arma

    vgroups1hh_ = [objects1hh_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #############################
    #############################

    mesh__9_aaaa_aaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1h.from_mesh(mesh__9_aaaa_aaaaa)
    objects1h_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__9_aaaa_aaaaa)
    collection.objects.link(objects1h_)
    bmesh.ops.remove_doubles(bm_1h, verts = bm_1h.verts, dist = 0.0001)
    bm_1h.to_mesh(mesh__9_aaaa_aaaaa)

    objects1h_.parent = arma
    armamodifier1h_ = objects1h_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1h_.object = arma

    vgroups1h_ = [objects1h_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ###############################################################

    mesh__10a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10a)
    objects1iiiiiiiiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10a)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10a)

    objects1iiiiiiiiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #######################################################################
    #######################################################################

    

    mesh__10b = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10b)
    objects1iiiiiiiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10b)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10b)

    objects1iiiiiiiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10c = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10c)
    objects1iiiiiiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10c)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10c)

    objects1iiiiiiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10d = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10d)
    objects1iiiiiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10d)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10d)

    objects1iiiiiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #############################################################################

    mesh__10e = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10e)
    objects1iiiiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10e)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10e)

    objects1iiiiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################

    mesh__10f = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10f)
    objects1iiiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10f)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10f)

    objects1iiiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################

    mesh__10g = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10g)
    objects1iiiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10g)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10g)

    objects1iiiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10h = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiiii.from_mesh(mesh__10h)
    objects1iiiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10h)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiiii.to_mesh(mesh__10h)

    objects1iiiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__10i = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiiii.from_mesh(mesh__10i)
    objects1iiiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10i)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiiii.to_mesh(mesh__10i)

    objects1iiiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10j = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiiii.from_mesh(mesh__10j)
    objects1iiiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10j)
    collection.objects.link(objects1iiiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiiii.to_mesh(mesh__10j)

    objects1iiiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10k = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiiii.from_mesh(mesh__10k)
    objects1iiiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10k)
    collection.objects.link(objects1iiiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiiii.to_mesh(mesh__10k)

    objects1iiiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################
    ###################################

    mesh__10l = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiiii.from_mesh(mesh__10l)
    objects1iiiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10l)
    collection.objects.link(objects1iiiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiiii.to_mesh(mesh__10l)

    objects1iiiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ####################################
    ####################################

    mesh__10m = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiiii.from_mesh(mesh__10m)
    objects1iiiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10m)
    collection.objects.link(objects1iiiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiiii.to_mesh(mesh__10m)

    objects1iiiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #######################################

    mesh__10n = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiiii.from_mesh(mesh__10n)
    objects1iiiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10n)
    collection.objects.link(objects1iiiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiiii.to_mesh(mesh__10n)

    objects1iiiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiiii_ = objects1iiiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiiii_ = [objects1iiiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #########################################
    #########################################

    mesh__10o = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiiii.from_mesh(mesh__10o)
    objects1iiiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10o)
    collection.objects.link(objects1iiiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiiii, verts = bm_1iiiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiiii.to_mesh(mesh__10o)

    objects1iiiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiiii_ = objects1iiiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiiii_ = [objects1iiiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################

    mesh__10p = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiiii.from_mesh(mesh__10p)
    objects1iiiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10p)
    collection.objects.link(objects1iiiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiiii, verts = bm_1iiiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiiii.to_mesh(mesh__10p)

    objects1iiiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiiii_ = objects1iiiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiiii_ = [objects1iiiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10q = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiiii.from_mesh(mesh__10q)
    objects1iiiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10q)
    collection.objects.link(objects1iiiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiiii, verts = bm_1iiiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiiii.to_mesh(mesh__10q)

    objects1iiiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiiii_ = objects1iiiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiiii_.object = arma

    vgroups1iiiiiiiiiii_ = [objects1iiiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ######################################
    ######################################

    mesh__10r = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiiii.from_mesh(mesh__10r)
    objects1iiiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10r)
    collection.objects.link(objects1iiiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiiii, verts = bm_1iiiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiiii.to_mesh(mesh__10r)

    objects1iiiiiiiiii_.parent = arma
    armamodifier1iiiiiiiiii_ = objects1iiiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiiii_.object = arma

    vgroups1iiiiiiiiii_ = [objects1iiiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #######################################
    #######################################

    mesh__10s = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiiii.from_mesh(mesh__10s)
    objects1iiiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10s)
    collection.objects.link(objects1iiiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiiii, verts = bm_1iiiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiiii.to_mesh(mesh__10s)

    objects1iiiiiiiii_.parent = arma
    armamodifier1iiiiiiiii_ = objects1iiiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiiii_.object = arma

    vgroups1iiiiiiiii_ = [objects1iiiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__10t = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiiii.from_mesh(mesh__10t)
    objects1iiiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10t)
    collection.objects.link(objects1iiiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiiii, verts = bm_1iiiiiiii.verts, dist = 0.0001)
    bm_1iiiiiiii.to_mesh(mesh__10t)

    objects1iiiiiiii_.parent = arma
    armamodifier1iiiiiiii_ = objects1iiiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiiii_.object = arma

    vgroups1iiiiiiii_ = [objects1iiiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ######################################################################################################

    mesh__10u = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiiii.from_mesh(mesh__10u)
    objects1iiiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10u)
    collection.objects.link(objects1iiiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiiii, verts = bm_1iiiiiii.verts, dist = 0.0001)
    bm_1iiiiiii.to_mesh(mesh__10u)

    objects1iiiiiii_.parent = arma
    armamodifier1iiiiiii_ = objects1iiiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiiii_.object = arma

    vgroups1iiiiiii_ = [objects1iiiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################################

    mesh__10v = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiiii.from_mesh(mesh__10v)
    objects1iiiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10v)
    collection.objects.link(objects1iiiiii_)
    bmesh.ops.remove_doubles(bm_1iiiiii, verts = bm_1iiiiii.verts, dist = 0.0001)
    bm_1iiiiii.to_mesh(mesh__10v)

    objects1iiiiii_.parent = arma
    armamodifier1iiiiii_ = objects1iiiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiiii_.object = arma

    vgroups1iiiiii_ = [objects1iiiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ####################################################################

    mesh__10w = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiiii.from_mesh(mesh__10w)
    objects1iiiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10w)
    collection.objects.link(objects1iiiii_)
    bmesh.ops.remove_doubles(bm_1iiiii, verts = bm_1iiiii.verts, dist = 0.0001)
    bm_1iiiii.to_mesh(mesh__10w)

    objects1iiiii_.parent = arma
    armamodifier1iiiii_ = objects1iiiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiiii_.object = arma

    vgroups1iiiii_ = [objects1iiiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10x = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iiii.from_mesh(mesh__10x)
    objects1iiii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10x)
    collection.objects.link(objects1iiii_)
    bmesh.ops.remove_doubles(bm_1iiii, verts = bm_1iiii.verts, dist = 0.0001)
    bm_1iiii.to_mesh(mesh__10x)

    objects1iiii_.parent = arma
    armamodifier1iiii_ = objects1iiii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iiii_.object = arma

    vgroups1iiii_ = [objects1iiii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__10y = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1iii.from_mesh(mesh__10y)
    objects1iii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10y)
    collection.objects.link(objects1iii_)
    bmesh.ops.remove_doubles(bm_1iii, verts = bm_1iii.verts, dist = 0.0001)
    bm_1iii.to_mesh(mesh__10y)

    objects1iii_.parent = arma
    armamodifier1iii_ = objects1iii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1iii_.object = arma

    vgroups1iii_ = [objects1iii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10z = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1ii.from_mesh(mesh__10z)
    objects1ii_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10z)
    collection.objects.link(objects1ii_)
    bmesh.ops.remove_doubles(bm_1ii, verts = bm_1ii.verts, dist = 0.0001)
    bm_1ii.to_mesh(mesh__10z)

    objects1ii_.parent = arma
    armamodifier1ii_ = objects1ii_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1ii_.object = arma

    vgroups1ii_ = [objects1ii_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__10aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1i.from_mesh(mesh__10aa)
    objects1i_ = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__10aa)
    collection.objects.link(objects1i_)
    bmesh.ops.remove_doubles(bm_1i, verts = bm_1i.verts, dist = 0.0001)
    bm_1i.to_mesh(mesh__10aa)

    objects1i_.parent = arma
    armamodifier1i_ = objects1i_.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1i_.object = arma

    vgroups1i_ = [objects1i_.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__11a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11a)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11a)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11a)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11b = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11b)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11b)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11b)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11c = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11c)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11c)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11c)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11d = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11d)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11d)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11d)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11e = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11e)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11e)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11e)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11f = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11f)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11f)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11f)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__11g = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11g)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11g)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11g)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11h = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11h)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11h)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11h)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11i = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11i)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11i)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11i)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11j = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11j)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11j)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11j)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################################

    mesh__11k = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11k)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11k)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11k)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11l = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11l)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11l)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11l)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11m = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11m)
    objects1jjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11m)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11m)

    objects1jjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11n = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11n)
    objects1jjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11n)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11n)

    objects1jjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################################################

    mesh__11o = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11o)
    objects1jjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11o)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11o)

    objects1jjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__11p = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11p)
    objects1jjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11p)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11p)

    objects1jjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11q = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11q)
    objects1jjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11q)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11q)

    objects1jjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11r = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11r)
    objects1jjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11r)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11r)

    objects1jjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #########################################################################################################################

    mesh__11s = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjj.from_mesh(mesh__11s)
    objects1jjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11s)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjj.to_mesh(mesh__11s)

    objects1jjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11t = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjj.from_mesh(mesh__11t)
    objects1jjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11t)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjj.to_mesh(mesh__11t)

    objects1jjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11u = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjj.from_mesh(mesh__11u)
    objects1jjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11u)
    collection.objects.link(objects1jjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjj.to_mesh(mesh__11u)

    objects1jjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################################

    mesh__11v = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjj.from_mesh(mesh__11v)
    objects1jjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11v)
    collection.objects.link(objects1jjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjj.to_mesh(mesh__11v)

    objects1jjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #################################################

    mesh__11w = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjj.from_mesh(mesh__11w)
    objects1jjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11w)
    collection.objects.link(objects1jjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjj.to_mesh(mesh__11w)

    objects1jjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################

    mesh__11x = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjj.from_mesh(mesh__11x)
    objects1jjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11x)
    collection.objects.link(objects1jjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjj.to_mesh(mesh__11x)

    objects1jjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ########################################################

    mesh__11y = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjj.from_mesh(mesh__11y)
    objects1jjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11y)
    collection.objects.link(objects1jjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjj.to_mesh(mesh__11y)

    objects1jjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjj_ = objects1jjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjj_ = [objects1jjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11z = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjj.from_mesh(mesh__11z)
    objects1jjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11z)
    collection.objects.link(objects1jjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjj, verts = bm_1jjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjj.to_mesh(mesh__11z)

    objects1jjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjj_ = objects1jjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjj_ = [objects1jjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################################################

    mesh__11aa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjj.from_mesh(mesh__11aa)
    objects1jjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11aa)
    collection.objects.link(objects1jjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjj, verts = bm_1jjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjj.to_mesh(mesh__11aa)

    objects1jjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjj_ = objects1jjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjj_ = [objects1jjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################
    ##############################

    mesh__11ab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjj.from_mesh(mesh__11ab)
    objects1jjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ab)
    collection.objects.link(objects1jjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjj, verts = bm_1jjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjj.to_mesh(mesh__11ab)

    objects1jjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjj_ = objects1jjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjj_.object = arma

    vgroups1jjjjjjjjj_ = [objects1jjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ################################
    ################################

    mesh__11ac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjj.from_mesh(mesh__11ac)
    objects1jjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ac)
    collection.objects.link(objects1jjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjj, verts = bm_1jjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjj.to_mesh(mesh__11ac)

    objects1jjjjjjjj.parent = arma
    armamodifier1jjjjjjjj_ = objects1jjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjj_.object = arma

    vgroups1jjjjjjjj_ = [objects1jjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################
    ###################################

    mesh__11ad = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjj.from_mesh(mesh__11ad)
    objects1jjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ad)
    collection.objects.link(objects1jjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjj, verts = bm_1jjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjj.to_mesh(mesh__11ad)

    objects1jjjjjjj.parent = arma
    armamodifier1jjjjjjj_ = objects1jjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjj_.object = arma

    vgroups1jjjjjjj_ = [objects1jjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11ae = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjj.from_mesh(mesh__11ae)
    objects1jjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ae)
    collection.objects.link(objects1jjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjj, verts = bm_1jjjjjj.verts, dist = 0.0001)
    bm_1jjjjjj.to_mesh(mesh__11ae)

    objects1jjjjjj.parent = arma
    armamodifier1jjjjjj_ = objects1jjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjj_.object = arma

    vgroups1jjjjjj_ = [objects1jjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################################

    mesh__11af = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjj.from_mesh(mesh__11af)
    objects1jjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11af)
    collection.objects.link(objects1jjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjj, verts = bm_1jjjjj.verts, dist = 0.0001)
    bm_1jjjjj.to_mesh(mesh__11af)

    objects1jjjjj.parent = arma
    armamodifier1jjjjj_ = objects1jjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjj_.object = arma

    vgroups1jjjjj_ = [objects1jjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################################

    mesh__11ag = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjj.from_mesh(mesh__11ag)
    objects1jjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ag)
    collection.objects.link(objects1jjjj)
    bmesh.ops.remove_doubles(bm_1jjjj, verts = bm_1jjjj.verts, dist = 0.0001)
    bm_1jjjj.to_mesh(mesh__11ag)

    objects1jjjj.parent = arma
    armamodifier1jjjj_ = objects1jjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjj_.object = arma

    vgroups1jjjj_ = [objects1jjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ################################################

    mesh__11ah = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjj.from_mesh(mesh__11ah)
    objects1jjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ah)
    collection.objects.link(objects1jjj)
    bmesh.ops.remove_doubles(bm_1jjj, verts = bm_1jjj.verts, dist = 0.0001)
    bm_1jjj.to_mesh(mesh__11ah)

    objects1jjj.parent = arma
    armamodifier1jjj_ = objects1jjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjj_.object = arma

    vgroups1jjj_ = [objects1jjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #####################################################

    mesh__11ai = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jj.from_mesh(mesh__11ai)
    objects1jj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11ai)
    collection.objects.link(objects1jj)
    bmesh.ops.remove_doubles(bm_1jj, verts = bm_1jj.verts, dist = 0.0001)
    bm_1jj.to_mesh(mesh__11ai)

    objects1jj.parent = arma
    armamodifier1jj_ = objects1jj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jj_.object = arma

    vgroups1jj_ = [objects1jj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__11aj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.from_mesh(mesh__11aj)
    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__11aj)
    collection.objects.link(objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj)
    bmesh.ops.remove_doubles(bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj, verts = bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.verts, dist = 0.0001)
    bm_1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.to_mesh(mesh__11aj)

    objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.parent = arma
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_.object = arma

    vgroups1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj_ = [objects1jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################################################################################################

    mesh__12a1 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a1)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a1)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a1)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #############################################################

    mesh__12a2 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a2)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a2)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a2)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__12a3 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a3)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a3)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a3)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ##############################################################

    mesh__12a4 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a4)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a4)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a4)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ###############################################################

    mesh__12a5 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a5)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a5)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a5)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ################################################################

    mesh__12a6 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a6)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a6)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a6)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    
    ##################################################################

    mesh__12a7 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a7)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a7)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a7)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################

    mesh__12a8 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a8)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a8)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a8)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##############################################################

    mesh__12a9 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a9)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a9)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a9)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ################################################################

    mesh__12a10 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a10)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a10)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a10)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a11 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a11)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a11)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a11)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a12 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a12)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a12)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a12)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a13 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a13)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a13)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a13)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a14 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a14)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a14)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a14)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a15 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a15)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a15)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a15)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a16 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a16)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a16)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a16)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ############################################################################################################

    mesh__12a17 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a17)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a17)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a17)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a18 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a18)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a18)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a18)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ############################################################

    mesh__12a19 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a19)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a19)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a19)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a20 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a20)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a20)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a20)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a21 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a21)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a21)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a21)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a22 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a22)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a22)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a22)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a23 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a23)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a23)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a23)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a24 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a24)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a24)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a24)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a25 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a25)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a25)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a25)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a26 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a26)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a26)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a26)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a27 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a27)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a27)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a27)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a28 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a28)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a28)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a28)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a29 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a29)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a29)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a29)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a30 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a30)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a30)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a30)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a31 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a31)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a31)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a31)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a32 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a32)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a32)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a32)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a33 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a33)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a33)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a33)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a34 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a34)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a34)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a34)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a35 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a35)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a35)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a35)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a36 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a36)
    objects1kkkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a36)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a36)

    objects1kkkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a37 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a37)
    objects1kkkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a37)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a37)

    objects1kkkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a38 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a38)
    objects1kkkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a38)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a38)

    objects1kkkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a39 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a39)
    objects1kkkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a39)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a39)

    objects1kkkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a40 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a40)
    objects1kkkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a40)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a40)

    objects1kkkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a41 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a41)
    objects1kkkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a41)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a41)

    objects1kkkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a42 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a42)
    objects1kkkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a42)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a42)

    objects1kkkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a43 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkkk.from_mesh(mesh__12a43)
    objects1kkkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a43)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkkk.to_mesh(mesh__12a43)

    objects1kkkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a44 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkkk.from_mesh(mesh__12a44)
    objects1kkkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a44)
    collection.objects.link(objects1kkkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkkk.to_mesh(mesh__12a44)

    objects1kkkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a45 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkkk.from_mesh(mesh__12a45)
    objects1kkkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a45)
    collection.objects.link(objects1kkkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkkk.to_mesh(mesh__12a45)

    objects1kkkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a46 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkkk.from_mesh(mesh__12a46)
    objects1kkkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a46)
    collection.objects.link(objects1kkkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkkk.to_mesh(mesh__12a46)

    objects1kkkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a47 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkkk.from_mesh(mesh__12a47)
    objects1kkkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a47)
    collection.objects.link(objects1kkkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkkk.to_mesh(mesh__12a47)

    objects1kkkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a48 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkkk.from_mesh(mesh__12a48)
    objects1kkkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a48)
    collection.objects.link(objects1kkkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkkk.to_mesh(mesh__12a48)

    objects1kkkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkkk_ = objects1kkkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkkk_ = [objects1kkkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a49 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkkk.from_mesh(mesh__12a49)
    objects1kkkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a49)
    collection.objects.link(objects1kkkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkkk, verts = bm_1kkkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkkk.to_mesh(mesh__12a49)

    objects1kkkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkkk_ = objects1kkkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkkk_ = [objects1kkkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a50 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkkk.from_mesh(mesh__12a50)
    objects1kkkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a50)
    collection.objects.link(objects1kkkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkkk, verts = bm_1kkkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkkk.to_mesh(mesh__12a50)

    objects1kkkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkkk_ = objects1kkkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkkk_ = [objects1kkkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a51 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkkk.from_mesh(mesh__12a51)
    objects1kkkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a51)
    collection.objects.link(objects1kkkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkkk, verts = bm_1kkkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkkk.to_mesh(mesh__12a51)

    objects1kkkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkkk_ = objects1kkkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkkk_.object = arma

    vgroups1kkkkkkkkkk_ = [objects1kkkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a52 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkkk.from_mesh(mesh__12a52)
    objects1kkkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a52)
    collection.objects.link(objects1kkkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkkk, verts = bm_1kkkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkkk.to_mesh(mesh__12a52)

    objects1kkkkkkkkk.parent = arma
    armamodifier1kkkkkkkkk_ = objects1kkkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkkk_.object = arma

    vgroups1kkkkkkkkk_ = [objects1kkkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a53 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkkk.from_mesh(mesh__12a53)
    objects1kkkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a53)
    collection.objects.link(objects1kkkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkkk, verts = bm_1kkkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkkk.to_mesh(mesh__12a53)

    objects1kkkkkkkk.parent = arma
    armamodifier1kkkkkkkk_ = objects1kkkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkkk_.object = arma

    vgroups1kkkkkkkk_ = [objects1kkkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a54 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkkk.from_mesh(mesh__12a54)
    objects1kkkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a54)
    collection.objects.link(objects1kkkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkkk, verts = bm_1kkkkkkk.verts, dist = 0.0001)
    bm_1kkkkkkk.to_mesh(mesh__12a54)

    objects1kkkkkkk.parent = arma
    armamodifier1kkkkkkk_ = objects1kkkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkkk_.object = arma

    vgroups1kkkkkkk_ = [objects1kkkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a55 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkkk.from_mesh(mesh__12a55)
    objects1kkkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a55)
    collection.objects.link(objects1kkkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkkk, verts = bm_1kkkkkk.verts, dist = 0.0001)
    bm_1kkkkkk.to_mesh(mesh__12a55)

    objects1kkkkkk.parent = arma
    armamodifier1kkkkkk_ = objects1kkkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkkk_.object = arma

    vgroups1kkkkkk_ = [objects1kkkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a56 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkkk.from_mesh(mesh__12a56)
    objects1kkkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a56)
    collection.objects.link(objects1kkkkk)
    bmesh.ops.remove_doubles(bm_1kkkkk, verts = bm_1kkkkk.verts, dist = 0.0001)
    bm_1kkkkk.to_mesh(mesh__12a56)

    objects1kkkkk.parent = arma
    armamodifier1kkkkk_ = objects1kkkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkkk_.object = arma

    vgroups1kkkkk_ = [objects1kkkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a57 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkkk.from_mesh(mesh__12a57)
    objects1kkkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a57)
    collection.objects.link(objects1kkkk)
    bmesh.ops.remove_doubles(bm_1kkkk, verts = bm_1kkkk.verts, dist = 0.0001)
    bm_1kkkk.to_mesh(mesh__12a57)

    objects1kkkk.parent = arma
    armamodifier1kkkk_ = objects1kkkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkkk_.object = arma

    vgroups1kkkk_ = [objects1kkkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a58 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kkk.from_mesh(mesh__12a58)
    objects1kkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a58)
    collection.objects.link(objects1kkk)
    bmesh.ops.remove_doubles(bm_1kkk, verts = bm_1kkk.verts, dist = 0.0001)
    bm_1kkk.to_mesh(mesh__12a58)

    objects1kkk.parent = arma
    armamodifier1kkk_ = objects1kkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kkk_.object = arma

    vgroups1kkk_ = [objects1kkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a59 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1kk.from_mesh(mesh__12a59)
    objects1kk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a59)
    collection.objects.link(objects1kk)
    bmesh.ops.remove_doubles(bm_1kk, verts = bm_1kk.verts, dist = 0.0001)
    bm_1kk.to_mesh(mesh__12a59)

    objects1kk.parent = arma
    armamodifier1kk_ = objects1kk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1kk_.object = arma

    vgroups1kk_ = [objects1kk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh__12a60 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_1k.from_mesh(mesh__12a60)
    objects1k = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh__12a60)
    collection.objects.link(objects1k)
    bmesh.ops.remove_doubles(bm_1k, verts = bm_1k.verts, dist = 0.0001)
    bm_1k.to_mesh(mesh__12a60)

    objects1k.parent = arma
    armamodifier1k_ = objects1k.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier1k_.object = arma

    vgroups1k_ = [objects1k.vertex_groups.new(name = bone.name) for bone in arma.data.bones]



    







    







    ###############################################################
    

    mesh2 = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm2.from_mesh(mesh2)
    objects2 = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh2)
    collection.objects.link(objects2)
    bmesh.ops.remove_doubles(bm2, verts = bm2.verts, dist = 0.0001)
    bm2.to_mesh(mesh2)

    objects2.parent = arma
    armamodifier2 = objects2.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier2.object = arma

    vgroups2 = [objects2.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh2a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm2a.from_mesh(mesh2a)
    objects2a = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh2a)
    collection.objects.link(objects2a)
    bmesh.ops.remove_doubles(bm2a, verts = bm2a.verts, dist = 0.0001)
    bm2a.to_mesh(mesh2a)

    objects2a.parent = arma
    armamodifier2a = objects2a.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier2a.object = arma

    vgroups2a = [objects2a.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh2b = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm2b.from_mesh(mesh2b)
    objects2b = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh2b)
    collection.objects.link(objects2b)
    bmesh.ops.remove_doubles(bm2b, verts = bm2b.verts, dist = 0.0001)
    bm2b.to_mesh(mesh2b)

    objects2b.parent = arma
    armamodifier2b = objects2b.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier2b.object = arma

    vgroups2b = [objects2b.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #####################################################################################

    mesh3ccc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3cb.from_mesh(mesh3ccc)
    objects3ccc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3ccc)
    collection.objects.link(objects3ccc)
    bmesh.ops.remove_doubles(bm_3cb, verts = bm_3cb.verts, dist = 0.0001)
    bm_3cb.to_mesh(mesh3ccc)

    objects3ccc.parent = arma
    armamodifier3ccc = objects3ccc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3ccc.object = arma

    vgroups3ccc = [objects3ccc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3g.from_mesh(mesh3fj)
    objects3fj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fj)
    collection.objects.link(objects3fj)
    bmesh.ops.remove_doubles(bm_3g, verts = bm_3g.verts, dist = 0.0001)
    bm_3g.to_mesh(mesh3fj)

    objects3fj.parent = arma
    armamodifier3fj = objects3fj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fj.object = arma

    vgroups3fj = [objects3fj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ga.from_mesh(mesh3fjj)
    objects3fjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjj)
    collection.objects.link(objects3fjj)
    bmesh.ops.remove_doubles(bm_3ga, verts = bm_3ga.verts, dist = 0.0001)
    bm_3ga.to_mesh(mesh3fjj)

    objects3fjj.parent = arma
    armamodifier3fjj = objects3fjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjj.object = arma

    vgroups3fjj = [objects3fjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gb.from_mesh(mesh3fjjj)
    objects3fjjj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjj)
    collection.objects.link(objects3fjjj)
    bmesh.ops.remove_doubles(bm_3gb, verts = bm_3gb.verts, dist = 0.0001)
    bm_3gb.to_mesh(mesh3fjjj)

    objects3fjjj.parent = arma
    armamodifier3fjjj = objects3fjjj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjj.object = arma

    vgroups3fjjj = [objects3fjjj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjja = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gc.from_mesh(mesh3fjjja)
    objects3fjjja = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjja)
    collection.objects.link(objects3fjjja)
    bmesh.ops.remove_doubles(bm_3gc, verts = bm_3gc.verts, dist = 0.0001)
    bm_3gc.to_mesh(mesh3fjjja)

    objects3fjjja.parent = arma
    armamodifier3fjjja = objects3fjjja.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjja.object = arma

    vgroups3fjjja = [objects3fjjja.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gd.from_mesh(mesh3fjjjb)
    objects3fjjjb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjb)
    collection.objects.link(objects3fjjjb)
    bmesh.ops.remove_doubles(bm_3gd, verts = bm_3gd.verts, dist = 0.0001)
    bm_3gd.to_mesh(mesh3fjjjb)

    objects3fjjjb.parent = arma
    armamodifier3fjjjb = objects3fjjjb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjb.object = arma

    vgroups3fjjjb = [objects3fjjjb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ge.from_mesh(mesh3fjjjc)
    objects3fjjjc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjc)
    collection.objects.link(objects3fjjjc)
    bmesh.ops.remove_doubles(bm_3ge, verts = bm_3ge.verts, dist = 0.0001)
    bm_3ge.to_mesh(mesh3fjjjc)

    objects3fjjjc.parent = arma
    armamodifier3fjjjc = objects3fjjjc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjc.object = arma

    vgroups3fjjjc = [objects3fjjjc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gf.from_mesh(mesh3fjjjd)
    objects3fjjjd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjd)
    collection.objects.link(objects3fjjjd)
    bmesh.ops.remove_doubles(bm_3gf, verts = bm_3gf.verts, dist = 0.0001)
    bm_3gf.to_mesh(mesh3fjjjd)

    objects3fjjjd.parent = arma
    armamodifier3fjjjd = objects3fjjjd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjd.object = arma

    vgroups3fjjjd = [objects3fjjjd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjdd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gg.from_mesh(mesh3fjjjdd)
    objects3fjjjdd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjdd)
    collection.objects.link(objects3fjjjdd)
    bmesh.ops.remove_doubles(bm_3gg, verts = bm_3gg.verts, dist = 0.0001)
    bm_3gg.to_mesh(mesh3fjjjdd)

    objects3fjjjdd.parent = arma
    armamodifier3fjjjdd = objects3fjjjdd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjdd.object = arma

    vgroups3fjjjdd = [objects3fjjjdd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjdda = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gh.from_mesh(mesh3fjjjdda)
    objects3fjjjdda = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjdda)
    collection.objects.link(objects3fjjjdda)
    bmesh.ops.remove_doubles(bm_3gh, verts = bm_3gh.verts, dist = 0.0001)
    bm_3gh.to_mesh(mesh3fjjjdda)

    objects3fjjjdda.parent = arma
    armamodifier3fjjjdda = objects3fjjjdda.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjdda.object = arma

    vgroups3fjjjdda = [objects3fjjjdda.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjddaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3gha.from_mesh(mesh3fjjjddaa)
    objects3fjjjddaa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjddaa)
    collection.objects.link(objects3fjjjddaa)
    bmesh.ops.remove_doubles(bm_3gha, verts = bm_3gha.verts, dist = 0.0001)
    bm_3gha.to_mesh(mesh3fjjjddaa)

    objects3fjjjddaa.parent = arma
    armamodifier3fjjjddaa = objects3fjjjddaa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjddaa.object = arma

    vgroups3fjjjddaa = [objects3fjjjddaa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjddab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ghb.from_mesh(mesh3fjjjddab)
    objects3fjjjddab = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjddab)
    collection.objects.link(objects3fjjjddab)
    bmesh.ops.remove_doubles(bm_3ghb, verts = bm_3ghb.verts, dist = 0.0001)
    bm_3ghb.to_mesh(mesh3fjjjddab)

    objects3fjjjddab.parent = arma
    armamodifier3fjjjddab = objects3fjjjddab.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjddab.object = arma

    vgroups3fjjjddab = [objects3fjjjddab.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjddac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ghc.from_mesh(mesh3fjjjddac)
    objects3fjjjddac = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjddac)
    collection.objects.link(objects3fjjjddac)
    bmesh.ops.remove_doubles(bm_3ghc, verts = bm_3ghc.verts, dist = 0.0001)
    bm_3ghc.to_mesh(mesh3fjjjddac)

    objects3fjjjddac.parent = arma
    armamodifier3fjjjddac = objects3fjjjddac.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjddac.object = arma

    vgroups3fjjjddac = [objects3fjjjddac.vertex_groups.new(name = bone.name) for bone in arma.data.bones]
    

    mesh3fjjje = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3h.from_mesh(mesh3fjjje)
    objects3fjjje = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjje)
    collection.objects.link(objects3fjjje)
    bmesh.ops.remove_doubles(bm_3h, verts = bm_3h.verts, dist = 0.0001)
    bm_3h.to_mesh(mesh3fjjje)

    objects3fjjje.parent = arma
    armamodifier3fjjje = objects3fjjje.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjje.object = arma

    vgroups3fjjje = [objects3fjjje.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ha.from_mesh(mesh3fjjjf)
    objects3fjjjf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjf)
    collection.objects.link(objects3fjjjf)
    bmesh.ops.remove_doubles(bm_3ha, verts = bm_3ha.verts, dist = 0.0001)
    bm_3ha.to_mesh(mesh3fjjjf)

    objects3fjjjf.parent = arma
    armamodifier3fjjjf = objects3fjjjf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjf.object = arma

    vgroups3fjjjf = [objects3fjjjf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3hb.from_mesh(mesh3fjjjg)
    objects3fjjjg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjg)
    collection.objects.link(objects3fjjjg)
    bmesh.ops.remove_doubles(bm_3hb, verts = bm_3hb.verts, dist = 0.0001)
    bm_3hb.to_mesh(mesh3fjjjg)

    objects3fjjjg.parent = arma
    armamodifier3fjjjg = objects3fjjjg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjg.object = arma

    vgroups3fjjjg = [objects3fjjjg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3hc.from_mesh(mesh3fjjjgg)
    objects3fjjjgg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgg)
    collection.objects.link(objects3fjjjgg)
    bmesh.ops.remove_doubles(bm_3hc, verts = bm_3hc.verts, dist = 0.0001)
    bm_3hc.to_mesh(mesh3fjjjgg)

    objects3fjjjgg.parent = arma
    armamodifier3fjjjgg = objects3fjjjgg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgg.object = arma

    vgroups3fjjjgg = [objects3fjjjgg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjggg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3hd.from_mesh(mesh3fjjjggg)
    objects3fjjjggg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjggg)
    collection.objects.link(objects3fjjjggg)
    bmesh.ops.remove_doubles(bm_3hd, verts = bm_3hd.verts, dist = 0.0001)
    bm_3hd.to_mesh(mesh3fjjjggg)

    objects3fjjjggg.parent = arma
    armamodifier3fjjjggg = objects3fjjjggg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjggg.object = arma

    vgroups3fjjjggg = [objects3fjjjggg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjggga = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3he.from_mesh(mesh3fjjjggga)
    objects3fjjjggga = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjggga)
    collection.objects.link(objects3fjjjggga)
    bmesh.ops.remove_doubles(bm_3he, verts = bm_3he.verts, dist = 0.0001)
    bm_3he.to_mesh(mesh3fjjjggga)

    objects3fjjjggga.parent = arma
    armamodifier3fjjjggga = objects3fjjjggga.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjggga.object = arma

    vgroups3fjjjggga = [objects3fjjjggga.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggag = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3hf.from_mesh(mesh3fjjjgggag)
    objects3fjjjgggag = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggag)
    collection.objects.link(objects3fjjjgggag)
    bmesh.ops.remove_doubles(bm_3hf, verts = bm_3hf.verts, dist = 0.0001)
    bm_3hf.to_mesh(mesh3fjjjgggag)

    objects3fjjjgggag.parent = arma
    armamodifier3fjjjgggag = objects3fjjjgggag.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggag.object = arma

    vgroups3fjjjgggag = [objects3fjjjgggag.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3hg.from_mesh(mesh3fjjjgggagb)
    objects3fjjjgggagb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagb)
    collection.objects.link(objects3fjjjgggagb)
    bmesh.ops.remove_doubles(bm_3hg, verts = bm_3hg.verts, dist = 0.0001)
    bm_3hg.to_mesh(mesh3fjjjgggagb)

    objects3fjjjgggagb.parent = arma
    armamodifier3fjjjgggagb = objects3fjjjgggagb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagb.object = arma

    vgroups3fjjjgggagb = [objects3fjjjgggagb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3hh.from_mesh(mesh3fjjjgggagbc)
    objects3fjjjgggagbc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbc)
    collection.objects.link(objects3fjjjgggagbc)
    bmesh.ops.remove_doubles(bm_3hh, verts = bm_3hh.verts, dist = 0.0001)
    bm_3hh.to_mesh(mesh3fjjjgggagbc)

    objects3fjjjgggagbc.parent = arma
    armamodifier3fjjjgggagbc = objects3fjjjgggagbc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbc.object = arma

    vgroups3fjjjgggagbc = [objects3fjjjgggagbc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3i.from_mesh(mesh3fjjjgggagbd)
    objects3fjjjgggagbd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbd)
    collection.objects.link(objects3fjjjgggagbd)
    bmesh.ops.remove_doubles(bm_3i, verts = bm_3i.verts, dist = 0.0001)
    bm_3i.to_mesh(mesh3fjjjgggagbd)

    objects3fjjjgggagbd.parent = arma
    armamodifier3fjjjgggagbd = objects3fjjjgggagbd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbd.object = arma

    vgroups3fjjjgggagbd = [objects3fjjjgggagbd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbe = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ia.from_mesh(mesh3fjjjgggagbe)
    objects3fjjjgggagbe = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbe)
    collection.objects.link(objects3fjjjgggagbe)
    bmesh.ops.remove_doubles(bm_3ia, verts = bm_3ia.verts, dist = 0.0001)
    bm_3ia.to_mesh(mesh3fjjjgggagbe)

    objects3fjjjgggagbe.parent = arma
    armamodifier3fjjjgggagbe = objects3fjjjgggagbe.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbe.object = arma

    vgroups3fjjjgggagbe = [objects3fjjjgggagbe.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbeb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ib.from_mesh(mesh3fjjjgggagbeb)
    objects3fjjjgggagbeb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbeb)
    collection.objects.link(objects3fjjjgggagbeb)
    bmesh.ops.remove_doubles(bm_3ib, verts = bm_3ib.verts, dist = 0.0001)
    bm_3ib.to_mesh(mesh3fjjjgggagbeb)

    objects3fjjjgggagbeb.parent = arma
    armamodifier3fjjjgggagbeb = objects3fjjjgggagbeb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbeb.object = arma

    vgroups3fjjjgggagbeb = [objects3fjjjgggagbeb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbec = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ic.from_mesh(mesh3fjjjgggagbec)
    objects3fjjjgggagbec = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbec)
    collection.objects.link(objects3fjjjgggagbec)
    bmesh.ops.remove_doubles(bm_3ic, verts = bm_3ic.verts, dist = 0.0001)
    bm_3ic.to_mesh(mesh3fjjjgggagbec)

    objects3fjjjgggagbec.parent = arma
    armamodifier3fjjjgggagbec = objects3fjjjgggagbec.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbec.object = arma

    vgroups3fjjjgggagbec = [objects3fjjjgggagbec.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3id.from_mesh(mesh3fjjjgggagbecd)
    objects3fjjjgggagbecd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecd)
    collection.objects.link(objects3fjjjgggagbecd)
    bmesh.ops.remove_doubles(bm_3id, verts = bm_3id.verts, dist = 0.0001)
    bm_3id.to_mesh(mesh3fjjjgggagbecd)

    objects3fjjjgggagbecd.parent = arma
    armamodifier3fjjjgggagbecd = objects3fjjjgggagbecd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecd.object = arma

    vgroups3fjjjgggagbecd = [objects3fjjjgggagbecd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecde = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ie.from_mesh(mesh3fjjjgggagbecde)
    objects3fjjjgggagbecde = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecde)
    collection.objects.link(objects3fjjjgggagbecde)
    bmesh.ops.remove_doubles(bm_3ie, verts = bm_3ie.verts, dist = 0.0001)
    bm_3ie.to_mesh(mesh3fjjjgggagbecde)

    objects3fjjjgggagbecde.parent = arma
    armamodifier3fjjjgggagbecde = objects3fjjjgggagbecde.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecde.object = arma

    vgroups3fjjjgggagbecde = [objects3fjjjgggagbecde.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdef = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3if.from_mesh(mesh3fjjjgggagbecdef)
    objects3fjjjgggagbecdef = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdef)
    collection.objects.link(objects3fjjjgggagbecdef)
    bmesh.ops.remove_doubles(bm_3if, verts = bm_3if.verts, dist = 0.0001)
    bm_3if.to_mesh(mesh3fjjjgggagbecdef)

    objects3fjjjgggagbecdef.parent = arma
    armamodifier3fjjjgggagbecdef = objects3fjjjgggagbecdef.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdef.object = arma

    vgroups3fjjjgggagbecdef = [objects3fjjjgggagbecdef.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ig.from_mesh(mesh3fjjjgggagbecdefg)
    objects3fjjjgggagbecdefg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefg)
    collection.objects.link(objects3fjjjgggagbecdefg)
    bmesh.ops.remove_doubles(bm_3ig, verts = bm_3ig.verts, dist = 0.0001)
    bm_3ig.to_mesh(mesh3fjjjgggagbecdefg)

    objects3fjjjgggagbecdefg.parent = arma
    armamodifier3fjjjgggagbecdefg = objects3fjjjgggagbecdefg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefg.object = arma

    vgroups3fjjjgggagbecdefg = [objects3fjjjgggagbecdefg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ih.from_mesh(mesh3fjjjgggagbecdefh)
    objects3fjjjgggagbecdefh = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefh)
    collection.objects.link(objects3fjjjgggagbecdefh)
    bmesh.ops.remove_doubles(bm_3ih, verts = bm_3ih.verts, dist = 0.0001)
    bm_3ih.to_mesh(mesh3fjjjgggagbecdefh)

    objects3fjjjgggagbecdefh.parent = arma
    armamodifier3fjjjgggagbecdefh = objects3fjjjgggagbecdefh.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefh.object = arma

    vgroups3fjjjgggagbecdefh = [objects3fjjjgggagbecdefh.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3j.from_mesh(mesh3fjjjgggagbecdefhj)
    objects3fjjjgggagbecdefhj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhj)
    collection.objects.link(objects3fjjjgggagbecdefhj)
    bmesh.ops.remove_doubles(bm_3j, verts = bm_3j.verts, dist = 0.0001)
    bm_3j.to_mesh(mesh3fjjjgggagbecdefhj)

    objects3fjjjgggagbecdefhj.parent = arma
    armamodifier3fjjjgggagbecdefhj = objects3fjjjgggagbecdefhj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhj.object = arma

    vgroups3fjjjgggagbecdefhj = [objects3fjjjgggagbecdefhj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhja = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ja.from_mesh(mesh3fjjjgggagbecdefhja)
    objects3fjjjgggagbecdefhja = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhja)
    collection.objects.link(objects3fjjjgggagbecdefhja)
    bmesh.ops.remove_doubles(bm_3ja, verts = bm_3ja.verts, dist = 0.0001)
    bm_3ja.to_mesh(mesh3fjjjgggagbecdefhja)

    objects3fjjjgggagbecdefhja.parent = arma
    armamodifier3fjjjgggagbecdefhja = objects3fjjjgggagbecdefhja.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhja.object = arma

    vgroups3fjjjgggagbecdefhja = [objects3fjjjgggagbecdefhja.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3jb.from_mesh(mesh3fjjjgggagbecdefhjb)
    objects3fjjjgggagbecdefhjb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjb)
    collection.objects.link(objects3fjjjgggagbecdefhjb)
    bmesh.ops.remove_doubles(bm_3jb, verts = bm_3jb.verts, dist = 0.0001)
    bm_3jb.to_mesh(mesh3fjjjgggagbecdefhjb)

    objects3fjjjgggagbecdefhjb.parent = arma
    armamodifier3fjjjgggagbecdefhjb = objects3fjjjgggagbecdefhjb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjb.object = arma

    vgroups3fjjjgggagbecdefhjb = [objects3fjjjgggagbecdefhjb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3jc.from_mesh(mesh3fjjjgggagbecdefhjc)
    objects3fjjjgggagbecdefhjc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjc)
    collection.objects.link(objects3fjjjgggagbecdefhjc)
    bmesh.ops.remove_doubles(bm_3jc, verts = bm_3jc.verts, dist = 0.0001)
    bm_3jc.to_mesh(mesh3fjjjgggagbecdefhjc)

    objects3fjjjgggagbecdefhjc.parent = arma
    armamodifier3fjjjgggagbecdefhjc = objects3fjjjgggagbecdefhjc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjc.object = arma

    vgroups3fjjjgggagbecdefhjc = [objects3fjjjgggagbecdefhjc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3jd.from_mesh(mesh3fjjjgggagbecdefhjd)
    objects3fjjjgggagbecdefhjd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjd)
    collection.objects.link(objects3fjjjgggagbecdefhjd)
    bmesh.ops.remove_doubles(bm_3jd, verts = bm_3jd.verts, dist = 0.0001)
    bm_3jd.to_mesh(mesh3fjjjgggagbecdefhjd)

    objects3fjjjgggagbecdefhjd.parent = arma
    armamodifier3fjjjgggagbecdefhjd = objects3fjjjgggagbecdefhjd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjd.object = arma

    vgroups3fjjjgggagbecdefhjd = [objects3fjjjgggagbecdefhjd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdk = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3k.from_mesh(mesh3fjjjgggagbecdefhjdk)
    objects3fjjjgggagbecdefhjdk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdk)
    collection.objects.link(objects3fjjjgggagbecdefhjdk)
    bmesh.ops.remove_doubles(bm_3k, verts = bm_3k.verts, dist = 0.0001)
    bm_3k.to_mesh(mesh3fjjjgggagbecdefhjdk)

    objects3fjjjgggagbecdefhjdk.parent = arma
    armamodifier3fjjjgggagbecdefhjdk = objects3fjjjgggagbecdefhjdk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdk.object = arma

    vgroups3fjjjgggagbecdefhjdk = [objects3fjjjgggagbecdefhjdk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdka = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ka.from_mesh(mesh3fjjjgggagbecdefhjdka)
    objects3fjjjgggagbecdefhjdka = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdka)
    collection.objects.link(objects3fjjjgggagbecdefhjdka)
    bmesh.ops.remove_doubles(bm_3ka, verts = bm_3ka.verts, dist = 0.0001)
    bm_3ka.to_mesh(mesh3fjjjgggagbecdefhjdka)

    objects3fjjjgggagbecdefhjdka.parent = arma
    armamodifier3fjjjgggagbecdefhjdka = objects3fjjjgggagbecdefhjdka.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdka.object = arma

    vgroups3fjjjgggagbecdefhjdka = [objects3fjjjgggagbecdefhjdka.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kb.from_mesh(mesh3fjjjgggagbecdefhjdkb)
    objects3fjjjgggagbecdefhjdkb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkb)
    collection.objects.link(objects3fjjjgggagbecdefhjdkb)
    bmesh.ops.remove_doubles(bm_3kb, verts = bm_3kb.verts, dist = 0.0001)
    bm_3kb.to_mesh(mesh3fjjjgggagbecdefhjdkb)

    objects3fjjjgggagbecdefhjdkb.parent = arma
    armamodifier3fjjjgggagbecdefhjdkb = objects3fjjjgggagbecdefhjdkb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkb.object = arma

    vgroups3fjjjgggagbecdefhjdkb = [objects3fjjjgggagbecdefhjdkb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kc.from_mesh(mesh3fjjjgggagbecdefhjdkc)
    objects3fjjjgggagbecdefhjdkc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkc)
    collection.objects.link(objects3fjjjgggagbecdefhjdkc)
    bmesh.ops.remove_doubles(bm_3kc, verts = bm_3kc.verts, dist = 0.0001)
    bm_3kc.to_mesh(mesh3fjjjgggagbecdefhjdkc)

    objects3fjjjgggagbecdefhjdkc.parent = arma
    armamodifier3fjjjgggagbecdefhjdkc = objects3fjjjgggagbecdefhjdkc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkc.object = arma

    vgroups3fjjjgggagbecdefhjdkc = [objects3fjjjgggagbecdefhjdkc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kd.from_mesh(mesh3fjjjgggagbecdefhjdkd)
    objects3fjjjgggagbecdefhjdkd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkd)
    collection.objects.link(objects3fjjjgggagbecdefhjdkd)
    bmesh.ops.remove_doubles(bm_3kd, verts = bm_3kd.verts, dist = 0.0001)
    bm_3kd.to_mesh(mesh3fjjjgggagbecdefhjdkd)

    objects3fjjjgggagbecdefhjdkd.parent = arma
    armamodifier3fjjjgggagbecdefhjdkd = objects3fjjjgggagbecdefhjdkd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkd.object = arma

    vgroups3fjjjgggagbecdefhjdkd = [objects3fjjjgggagbecdefhjdkd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdke = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ke.from_mesh(mesh3fjjjgggagbecdefhjdke)
    objects3fjjjgggagbecdefhjdke = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdke)
    collection.objects.link(objects3fjjjgggagbecdefhjdke)
    bmesh.ops.remove_doubles(bm_3ke, verts = bm_3ke.verts, dist = 0.0001)
    bm_3ke.to_mesh(mesh3fjjjgggagbecdefhjdke)

    objects3fjjjgggagbecdefhjdke.parent = arma
    armamodifier3fjjjgggagbecdefhjdke = objects3fjjjgggagbecdefhjdke.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdke.object = arma

    vgroups3fjjjgggagbecdefhjdke = [objects3fjjjgggagbecdefhjdke.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kf.from_mesh(mesh3fjjjgggagbecdefhjdkf)
    objects3fjjjgggagbecdefhjdkf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkf)
    collection.objects.link(objects3fjjjgggagbecdefhjdkf)
    bmesh.ops.remove_doubles(bm_3kf, verts = bm_3kf.verts, dist = 0.0001)
    bm_3kf.to_mesh(mesh3fjjjgggagbecdefhjdkf)

    objects3fjjjgggagbecdefhjdkf.parent = arma
    armamodifier3fjjjgggagbecdefhjdkf = objects3fjjjgggagbecdefhjdkf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkf.object = arma

    vgroups3fjjjgggagbecdefhjdkf = [objects3fjjjgggagbecdefhjdkf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kg.from_mesh(mesh3fjjjgggagbecdefhjdkg)
    objects3fjjjgggagbecdefhjdkg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkg)
    collection.objects.link(objects3fjjjgggagbecdefhjdkg)
    bmesh.ops.remove_doubles(bm_3kg, verts = bm_3kg.verts, dist = 0.0001)
    bm_3kg.to_mesh(mesh3fjjjgggagbecdefhjdkg)

    objects3fjjjgggagbecdefhjdkg.parent = arma
    armamodifier3fjjjgggagbecdefhjdkg = objects3fjjjgggagbecdefhjdkg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkg.object = arma

    vgroups3fjjjgggagbecdefhjdkg = [objects3fjjjgggagbecdefhjdkg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kh.from_mesh(mesh3fjjjgggagbecdefhjdkh)
    objects3fjjjgggagbecdefhjdkh = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkh)
    collection.objects.link(objects3fjjjgggagbecdefhjdkh)
    bmesh.ops.remove_doubles(bm_3kh, verts = bm_3kh.verts, dist = 0.0001)
    bm_3kh.to_mesh(mesh3fjjjgggagbecdefhjdkh)

    objects3fjjjgggagbecdefhjdkh.parent = arma
    armamodifier3fjjjgggagbecdefhjdkh = objects3fjjjgggagbecdefhjdkh.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkh.object = arma

    vgroups3fjjjgggagbecdefhjdkh = [objects3fjjjgggagbecdefhjdkh.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdki = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ki.from_mesh(mesh3fjjjgggagbecdefhjdki)
    objects3fjjjgggagbecdefhjdki = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdki)
    collection.objects.link(objects3fjjjgggagbecdefhjdki)
    bmesh.ops.remove_doubles(bm_3ki, verts = bm_3ki.verts, dist = 0.0001)
    bm_3ki.to_mesh(mesh3fjjjgggagbecdefhjdki)

    objects3fjjjgggagbecdefhjdki.parent = arma
    armamodifier3fjjjgggagbecdefhjdki = objects3fjjjgggagbecdefhjdki.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdki.object = arma

    vgroups3fjjjgggagbecdefhjdki = [objects3fjjjgggagbecdefhjdki.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kj.from_mesh(mesh3fjjjgggagbecdefhjdkj)
    objects3fjjjgggagbecdefhjdkj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkj)
    collection.objects.link(objects3fjjjgggagbecdefhjdkj)
    bmesh.ops.remove_doubles(bm_3kj, verts = bm_3kj.verts, dist = 0.0001)
    bm_3kj.to_mesh(mesh3fjjjgggagbecdefhjdkj)

    objects3fjjjgggagbecdefhjdkj.parent = arma
    armamodifier3fjjjgggagbecdefhjdkj = objects3fjjjgggagbecdefhjdkj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkj.object = arma

    vgroups3fjjjgggagbecdefhjdkj = [objects3fjjjgggagbecdefhjdkj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkk = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kk.from_mesh(mesh3fjjjgggagbecdefhjdkk)
    objects3fjjjgggagbecdefhjdkk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkk)
    collection.objects.link(objects3fjjjgggagbecdefhjdkk)
    bmesh.ops.remove_doubles(bm_3kk, verts = bm_3kk.verts, dist = 0.0001)
    bm_3kk.to_mesh(mesh3fjjjgggagbecdefhjdkk)

    objects3fjjjgggagbecdefhjdkk.parent = arma
    armamodifier3fjjjgggagbecdefhjdkk = objects3fjjjgggagbecdefhjdkk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkk.object = arma

    vgroups3fjjjgggagbecdefhjdkk = [objects3fjjjgggagbecdefhjdkk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkl = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kl.from_mesh(mesh3fjjjgggagbecdefhjdkl)
    objects3fjjjgggagbecdefhjdkl = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkl)
    collection.objects.link(objects3fjjjgggagbecdefhjdkl)
    bmesh.ops.remove_doubles(bm_3kl, verts = bm_3kl.verts, dist = 0.0001)
    bm_3kl.to_mesh(mesh3fjjjgggagbecdefhjdkl)

    objects3fjjjgggagbecdefhjdkl.parent = arma
    armamodifier3fjjjgggagbecdefhjdkl = objects3fjjjgggagbecdefhjdkl.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkl.object = arma

    vgroups3fjjjgggagbecdefhjdkl = [objects3fjjjgggagbecdefhjdkl.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkm = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3km.from_mesh(mesh3fjjjgggagbecdefhjdkm)
    objects3fjjjgggagbecdefhjdkm = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkm)
    collection.objects.link(objects3fjjjgggagbecdefhjdkm)
    bmesh.ops.remove_doubles(bm_3km, verts = bm_3km.verts, dist = 0.0001)
    bm_3km.to_mesh(mesh3fjjjgggagbecdefhjdkm)

    objects3fjjjgggagbecdefhjdkm.parent = arma
    armamodifier3fjjjgggagbecdefhjdkm = objects3fjjjgggagbecdefhjdkm.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkm.object = arma

    vgroups3fjjjgggagbecdefhjdkm = [objects3fjjjgggagbecdefhjdkm.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkn = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kn.from_mesh(mesh3fjjjgggagbecdefhjdkn)
    objects3fjjjgggagbecdefhjdkn = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkn)
    collection.objects.link(objects3fjjjgggagbecdefhjdkn)
    bmesh.ops.remove_doubles(bm_3kn, verts = bm_3kn.verts, dist = 0.0001)
    bm_3kn.to_mesh(mesh3fjjjgggagbecdefhjdkn)

    objects3fjjjgggagbecdefhjdkn.parent = arma
    armamodifier3fjjjgggagbecdefhjdkn = objects3fjjjgggagbecdefhjdkn.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkn.object = arma

    vgroups3fjjjgggagbecdefhjdkn = [objects3fjjjgggagbecdefhjdkn.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdko = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ko.from_mesh(mesh3fjjjgggagbecdefhjdko)
    objects3fjjjgggagbecdefhjdko = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdko)
    collection.objects.link(objects3fjjjgggagbecdefhjdko)
    bmesh.ops.remove_doubles(bm_3ko, verts = bm_3ko.verts, dist = 0.0001)
    bm_3ko.to_mesh(mesh3fjjjgggagbecdefhjdko)

    objects3fjjjgggagbecdefhjdko.parent = arma
    armamodifier3fjjjgggagbecdefhjdko = objects3fjjjgggagbecdefhjdko.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdko.object = arma

    vgroups3fjjjgggagbecdefhjdko = [objects3fjjjgggagbecdefhjdko.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkp = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kp.from_mesh(mesh3fjjjgggagbecdefhjdkp)
    objects3fjjjgggagbecdefhjdkp = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkp)
    collection.objects.link(objects3fjjjgggagbecdefhjdkp)
    bmesh.ops.remove_doubles(bm_3kp, verts = bm_3kp.verts, dist = 0.0001)
    bm_3kp.to_mesh(mesh3fjjjgggagbecdefhjdkp)

    objects3fjjjgggagbecdefhjdkp.parent = arma
    armamodifier3fjjjgggagbecdefhjdkp = objects3fjjjgggagbecdefhjdkp.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkp.object = arma

    vgroups3fjjjgggagbecdefhjdkp = [objects3fjjjgggagbecdefhjdkp.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkq = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kq.from_mesh(mesh3fjjjgggagbecdefhjdkq)
    objects3fjjjgggagbecdefhjdkq = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkq)
    collection.objects.link(objects3fjjjgggagbecdefhjdkq)
    bmesh.ops.remove_doubles(bm_3kq, verts = bm_3kq.verts, dist = 0.0001)
    bm_3kq.to_mesh(mesh3fjjjgggagbecdefhjdkq)

    objects3fjjjgggagbecdefhjdkq.parent = arma
    armamodifier3fjjjgggagbecdefhjdkq = objects3fjjjgggagbecdefhjdkq.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkq.object = arma

    vgroups3fjjjgggagbecdefhjdkq = [objects3fjjjgggagbecdefhjdkq.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkr = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kr.from_mesh(mesh3fjjjgggagbecdefhjdkr)
    objects3fjjjgggagbecdefhjdkr = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkr)
    collection.objects.link(objects3fjjjgggagbecdefhjdkr)
    bmesh.ops.remove_doubles(bm_3kr, verts = bm_3kr.verts, dist = 0.0001)
    bm_3kr.to_mesh(mesh3fjjjgggagbecdefhjdkr)

    objects3fjjjgggagbecdefhjdkr.parent = arma
    armamodifier3fjjjgggagbecdefhjdkr = objects3fjjjgggagbecdefhjdkr.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkr.object = arma

    vgroups3fjjjgggagbecdefhjdkr = [objects3fjjjgggagbecdefhjdkr.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdks = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ks.from_mesh(mesh3fjjjgggagbecdefhjdks)
    objects3fjjjgggagbecdefhjdks = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdks)
    collection.objects.link(objects3fjjjgggagbecdefhjdks)
    bmesh.ops.remove_doubles(bm_3ks, verts = bm_3ks.verts, dist = 0.0001)
    bm_3ks.to_mesh(mesh3fjjjgggagbecdefhjdks)

    objects3fjjjgggagbecdefhjdks.parent = arma
    armamodifier3fjjjgggagbecdefhjdks = objects3fjjjgggagbecdefhjdks.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdks.object = arma

    vgroups3fjjjgggagbecdefhjdks = [objects3fjjjgggagbecdefhjdks.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkt = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kt.from_mesh(mesh3fjjjgggagbecdefhjdkt)
    objects3fjjjgggagbecdefhjdkt = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkt)
    collection.objects.link(objects3fjjjgggagbecdefhjdkt)
    bmesh.ops.remove_doubles(bm_3kt, verts = bm_3kt.verts, dist = 0.0001)
    bm_3kt.to_mesh(mesh3fjjjgggagbecdefhjdkt)

    objects3fjjjgggagbecdefhjdkt.parent = arma
    armamodifier3fjjjgggagbecdefhjdkt = objects3fjjjgggagbecdefhjdkt.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkt.object = arma

    vgroups3fjjjgggagbecdefhjdkt = [objects3fjjjgggagbecdefhjdkt.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdku = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ku.from_mesh(mesh3fjjjgggagbecdefhjdku)
    objects3fjjjgggagbecdefhjdku = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdku)
    collection.objects.link(objects3fjjjgggagbecdefhjdku)
    bmesh.ops.remove_doubles(bm_3ku, verts = bm_3ku.verts, dist = 0.0001)
    bm_3ku.to_mesh(mesh3fjjjgggagbecdefhjdku)

    objects3fjjjgggagbecdefhjdku.parent = arma
    armamodifier3fjjjgggagbecdefhjdku = objects3fjjjgggagbecdefhjdku.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdku.object = arma

    vgroups3fjjjgggagbecdefhjdku = [objects3fjjjgggagbecdefhjdku.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkv = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kv.from_mesh(mesh3fjjjgggagbecdefhjdkv)
    objects3fjjjgggagbecdefhjdkv = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkv)
    collection.objects.link(objects3fjjjgggagbecdefhjdkv)
    bmesh.ops.remove_doubles(bm_3kv, verts = bm_3kv.verts, dist = 0.0001)
    bm_3kv.to_mesh(mesh3fjjjgggagbecdefhjdkv)

    objects3fjjjgggagbecdefhjdkv.parent = arma
    armamodifier3fjjjgggagbecdefhjdkv = objects3fjjjgggagbecdefhjdkv.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkv.object = arma

    vgroups3fjjjgggagbecdefhjdkv = [objects3fjjjgggagbecdefhjdkv.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkw = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kw.from_mesh(mesh3fjjjgggagbecdefhjdkw)
    objects3fjjjgggagbecdefhjdkw = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkw)
    collection.objects.link(objects3fjjjgggagbecdefhjdkw)
    bmesh.ops.remove_doubles(bm_3kw, verts = bm_3kw.verts, dist = 0.0001)
    bm_3kw.to_mesh(mesh3fjjjgggagbecdefhjdkw)

    objects3fjjjgggagbecdefhjdkw.parent = arma
    armamodifier3fjjjgggagbecdefhjdkw = objects3fjjjgggagbecdefhjdkw.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkw.object = arma

    vgroups3fjjjgggagbecdefhjdkw = [objects3fjjjgggagbecdefhjdkw.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkx = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kx.from_mesh(mesh3fjjjgggagbecdefhjdkx)
    objects3fjjjgggagbecdefhjdkx = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkx)
    collection.objects.link(objects3fjjjgggagbecdefhjdkx)
    bmesh.ops.remove_doubles(bm_3kx, verts = bm_3kx.verts, dist = 0.0001)
    bm_3kx.to_mesh(mesh3fjjjgggagbecdefhjdkx)

    objects3fjjjgggagbecdefhjdkx.parent = arma
    armamodifier3fjjjgggagbecdefhjdkx = objects3fjjjgggagbecdefhjdkx.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkx.object = arma

    vgroups3fjjjgggagbecdefhjdkx = [objects3fjjjgggagbecdefhjdkx.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdky = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ky.from_mesh(mesh3fjjjgggagbecdefhjdky)
    objects3fjjjgggagbecdefhjdky = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdky)
    collection.objects.link(objects3fjjjgggagbecdefhjdky)
    bmesh.ops.remove_doubles(bm_3ky, verts = bm_3ky.verts, dist = 0.0001)
    bm_3ky.to_mesh(mesh3fjjjgggagbecdefhjdky)

    objects3fjjjgggagbecdefhjdky.parent = arma
    armamodifier3fjjjgggagbecdefhjdky = objects3fjjjgggagbecdefhjdky.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdky.object = arma

    vgroups3fjjjgggagbecdefhjdky = [objects3fjjjgggagbecdefhjdky.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkz = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kz.from_mesh(mesh3fjjjgggagbecdefhjdkz)
    objects3fjjjgggagbecdefhjdkz = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkz)
    collection.objects.link(objects3fjjjgggagbecdefhjdkz)
    bmesh.ops.remove_doubles(bm_3kz, verts = bm_3kz.verts, dist = 0.0001)
    bm_3kz.to_mesh(mesh3fjjjgggagbecdefhjdkz)

    objects3fjjjgggagbecdefhjdkz.parent = arma
    armamodifier3fjjjgggagbecdefhjdkz = objects3fjjjgggagbecdefhjdkz.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkz.object = arma

    vgroups3fjjjgggagbecdefhjdkz = [objects3fjjjgggagbecdefhjdkz.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaa.from_mesh(mesh3fjjjgggagbecdefhjdkaa)
    objects3fjjjgggagbecdefhjdkaa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaa)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaa)
    bmesh.ops.remove_doubles(bm_3kaa, verts = bm_3kaa.verts, dist = 0.0001)
    bm_3kaa.to_mesh(mesh3fjjjgggagbecdefhjdkaa)

    objects3fjjjgggagbecdefhjdkaa.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaa = objects3fjjjgggagbecdefhjdkaa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaa.object = arma

    vgroups3fjjjgggagbecdefhjdkaa = [objects3fjjjgggagbecdefhjdkaa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kab.from_mesh(mesh3fjjjgggagbecdefhjdkab)
    objects3fjjjgggagbecdefhjdkab = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkab)
    collection.objects.link(objects3fjjjgggagbecdefhjdkab)
    bmesh.ops.remove_doubles(bm_3kab, verts = bm_3kab.verts, dist = 0.0001)
    bm_3kab.to_mesh(mesh3fjjjgggagbecdefhjdkab)

    objects3fjjjgggagbecdefhjdkab.parent = arma
    armamodifier3fjjjgggagbecdefhjdkab = objects3fjjjgggagbecdefhjdkab.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkab.object = arma

    vgroups3fjjjgggagbecdefhjdkab = [objects3fjjjgggagbecdefhjdkab.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kac.from_mesh(mesh3fjjjgggagbecdefhjdkac)
    objects3fjjjgggagbecdefhjdkac = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkac)
    collection.objects.link(objects3fjjjgggagbecdefhjdkac)
    bmesh.ops.remove_doubles(bm_3kac, verts = bm_3kac.verts, dist = 0.0001)
    bm_3kac.to_mesh(mesh3fjjjgggagbecdefhjdkac)

    objects3fjjjgggagbecdefhjdkac.parent = arma
    armamodifier3fjjjgggagbecdefhjdkac = objects3fjjjgggagbecdefhjdkac.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkac.object = arma

    vgroups3fjjjgggagbecdefhjdkac = [objects3fjjjgggagbecdefhjdkac.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkad = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kad.from_mesh(mesh3fjjjgggagbecdefhjdkad)
    objects3fjjjgggagbecdefhjdkad = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkad)
    collection.objects.link(objects3fjjjgggagbecdefhjdkad)
    bmesh.ops.remove_doubles(bm_3kad, verts = bm_3kad.verts, dist = 0.0001)
    bm_3kad.to_mesh(mesh3fjjjgggagbecdefhjdkad)

    objects3fjjjgggagbecdefhjdkad.parent = arma
    armamodifier3fjjjgggagbecdefhjdkad = objects3fjjjgggagbecdefhjdkad.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkad.object = arma

    vgroups3fjjjgggagbecdefhjdkad = [objects3fjjjgggagbecdefhjdkad.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkae = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kae.from_mesh(mesh3fjjjgggagbecdefhjdkae)
    objects3fjjjgggagbecdefhjdkae = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkae)
    collection.objects.link(objects3fjjjgggagbecdefhjdkae)
    bmesh.ops.remove_doubles(bm_3kae, verts = bm_3kae.verts, dist = 0.0001)
    bm_3kae.to_mesh(mesh3fjjjgggagbecdefhjdkae)

    objects3fjjjgggagbecdefhjdkae.parent = arma
    armamodifier3fjjjgggagbecdefhjdkae = objects3fjjjgggagbecdefhjdkae.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkae.object = arma

    vgroups3fjjjgggagbecdefhjdkae = [objects3fjjjgggagbecdefhjdkae.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaf.from_mesh(mesh3fjjjgggagbecdefhjdkaf)
    objects3fjjjgggagbecdefhjdkaf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaf)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaf)
    bmesh.ops.remove_doubles(bm_3kaf, verts = bm_3kaf.verts, dist = 0.0001)
    bm_3kaf.to_mesh(mesh3fjjjgggagbecdefhjdkaf)

    objects3fjjjgggagbecdefhjdkaf.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaf = objects3fjjjgggagbecdefhjdkaf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaf.object = arma

    vgroups3fjjjgggagbecdefhjdkaf = [objects3fjjjgggagbecdefhjdkaf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkag = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kag.from_mesh(mesh3fjjjgggagbecdefhjdkag)
    objects3fjjjgggagbecdefhjdkag = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkag)
    collection.objects.link(objects3fjjjgggagbecdefhjdkag)
    bmesh.ops.remove_doubles(bm_3kag, verts = bm_3kag.verts, dist = 0.0001)
    bm_3kag.to_mesh(mesh3fjjjgggagbecdefhjdkag)

    objects3fjjjgggagbecdefhjdkag.parent = arma
    armamodifier3fjjjgggagbecdefhjdkag = objects3fjjjgggagbecdefhjdkag.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkag.object = arma

    vgroups3fjjjgggagbecdefhjdkag = [objects3fjjjgggagbecdefhjdkag.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkah = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kah.from_mesh(mesh3fjjjgggagbecdefhjdkah)
    objects3fjjjgggagbecdefhjdkah = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkah)
    collection.objects.link(objects3fjjjgggagbecdefhjdkah)
    bmesh.ops.remove_doubles(bm_3kah, verts = bm_3kah.verts, dist = 0.0001)
    bm_3kah.to_mesh(mesh3fjjjgggagbecdefhjdkah)

    objects3fjjjgggagbecdefhjdkah.parent = arma
    armamodifier3fjjjgggagbecdefhjdkah = objects3fjjjgggagbecdefhjdkah.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkah.object = arma

    vgroups3fjjjgggagbecdefhjdkah = [objects3fjjjgggagbecdefhjdkah.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkai = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kai.from_mesh(mesh3fjjjgggagbecdefhjdkai)
    objects3fjjjgggagbecdefhjdkai = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkai)
    collection.objects.link(objects3fjjjgggagbecdefhjdkai)
    bmesh.ops.remove_doubles(bm_3kai, verts = bm_3kai.verts, dist = 0.0001)
    bm_3kai.to_mesh(mesh3fjjjgggagbecdefhjdkai)

    objects3fjjjgggagbecdefhjdkai.parent = arma
    armamodifier3fjjjgggagbecdefhjdkai = objects3fjjjgggagbecdefhjdkai.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkai.object = arma

    vgroups3fjjjgggagbecdefhjdkai = [objects3fjjjgggagbecdefhjdkai.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaj.from_mesh(mesh3fjjjgggagbecdefhjdkaj)
    objects3fjjjgggagbecdefhjdkaj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaj)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaj)
    bmesh.ops.remove_doubles(bm_3kaj, verts = bm_3kaj.verts, dist = 0.0001)
    bm_3kaj.to_mesh(mesh3fjjjgggagbecdefhjdkaj)

    objects3fjjjgggagbecdefhjdkaj.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaj = objects3fjjjgggagbecdefhjdkaj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaj.object = arma

    vgroups3fjjjgggagbecdefhjdkaj = [objects3fjjjgggagbecdefhjdkaj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkak = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kak.from_mesh(mesh3fjjjgggagbecdefhjdkak)
    objects3fjjjgggagbecdefhjdkak = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkak)
    collection.objects.link(objects3fjjjgggagbecdefhjdkak)
    bmesh.ops.remove_doubles(bm_3kak, verts = bm_3kak.verts, dist = 0.0001)
    bm_3kak.to_mesh(mesh3fjjjgggagbecdefhjdkak)

    objects3fjjjgggagbecdefhjdkak.parent = arma
    armamodifier3fjjjgggagbecdefhjdkak = objects3fjjjgggagbecdefhjdkak.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkak.object = arma

    vgroups3fjjjgggagbecdefhjdkak = [objects3fjjjgggagbecdefhjdkak.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkal = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kal.from_mesh(mesh3fjjjgggagbecdefhjdkal)
    objects3fjjjgggagbecdefhjdkal = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkal)
    collection.objects.link(objects3fjjjgggagbecdefhjdkal)
    bmesh.ops.remove_doubles(bm_3kal, verts = bm_3kal.verts, dist = 0.0001)
    bm_3kal.to_mesh(mesh3fjjjgggagbecdefhjdkal)

    objects3fjjjgggagbecdefhjdkal.parent = arma
    armamodifier3fjjjgggagbecdefhjdkal = objects3fjjjgggagbecdefhjdkal.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkal.object = arma

    vgroups3fjjjgggagbecdefhjdkal = [objects3fjjjgggagbecdefhjdkal.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkam = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kam.from_mesh(mesh3fjjjgggagbecdefhjdkam)
    objects3fjjjgggagbecdefhjdkam = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkam)
    collection.objects.link(objects3fjjjgggagbecdefhjdkam)
    bmesh.ops.remove_doubles(bm_3kam, verts = bm_3kam.verts, dist = 0.0001)
    bm_3kam.to_mesh(mesh3fjjjgggagbecdefhjdkam)

    objects3fjjjgggagbecdefhjdkam.parent = arma
    armamodifier3fjjjgggagbecdefhjdkam = objects3fjjjgggagbecdefhjdkam.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkam.object = arma

    vgroups3fjjjgggagbecdefhjdkam = [objects3fjjjgggagbecdefhjdkam.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkan = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kan.from_mesh(mesh3fjjjgggagbecdefhjdkan)
    objects3fjjjgggagbecdefhjdkan = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkan)
    collection.objects.link(objects3fjjjgggagbecdefhjdkan)
    bmesh.ops.remove_doubles(bm_3kan, verts = bm_3kan.verts, dist = 0.0001)
    bm_3kan.to_mesh(mesh3fjjjgggagbecdefhjdkan)

    objects3fjjjgggagbecdefhjdkan.parent = arma
    armamodifier3fjjjgggagbecdefhjdkan = objects3fjjjgggagbecdefhjdkan.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkan.object = arma

    vgroups3fjjjgggagbecdefhjdkan = [objects3fjjjgggagbecdefhjdkan.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkao = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kao.from_mesh(mesh3fjjjgggagbecdefhjdkao)
    objects3fjjjgggagbecdefhjdkao = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkao)
    collection.objects.link(objects3fjjjgggagbecdefhjdkao)
    bmesh.ops.remove_doubles(bm_3kao, verts = bm_3kao.verts, dist = 0.0001)
    bm_3kao.to_mesh(mesh3fjjjgggagbecdefhjdkao)

    objects3fjjjgggagbecdefhjdkao.parent = arma
    armamodifier3fjjjgggagbecdefhjdkao = objects3fjjjgggagbecdefhjdkao.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkao.object = arma

    vgroups3fjjjgggagbecdefhjdkao = [objects3fjjjgggagbecdefhjdkao.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkap = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kap.from_mesh(mesh3fjjjgggagbecdefhjdkap)
    objects3fjjjgggagbecdefhjdkap = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkap)
    collection.objects.link(objects3fjjjgggagbecdefhjdkap)
    bmesh.ops.remove_doubles(bm_3kap, verts = bm_3kap.verts, dist = 0.0001)
    bm_3kap.to_mesh(mesh3fjjjgggagbecdefhjdkap)

    objects3fjjjgggagbecdefhjdkap.parent = arma
    armamodifier3fjjjgggagbecdefhjdkap = objects3fjjjgggagbecdefhjdkap.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkap.object = arma

    vgroups3fjjjgggagbecdefhjdkap = [objects3fjjjgggagbecdefhjdkap.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaq = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaq.from_mesh(mesh3fjjjgggagbecdefhjdkaq)
    objects3fjjjgggagbecdefhjdkaq = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaq)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaq)
    bmesh.ops.remove_doubles(bm_3kaq, verts = bm_3kaq.verts, dist = 0.0001)
    bm_3kaq.to_mesh(mesh3fjjjgggagbecdefhjdkaq)

    objects3fjjjgggagbecdefhjdkaq.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaq = objects3fjjjgggagbecdefhjdkaq.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaq.object = arma

    vgroups3fjjjgggagbecdefhjdkaq = [objects3fjjjgggagbecdefhjdkaq.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkar = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kar.from_mesh(mesh3fjjjgggagbecdefhjdkar)
    objects3fjjjgggagbecdefhjdkar = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkar)
    collection.objects.link(objects3fjjjgggagbecdefhjdkar)
    bmesh.ops.remove_doubles(bm_3kar, verts = bm_3kar.verts, dist = 0.0001)
    bm_3kar.to_mesh(mesh3fjjjgggagbecdefhjdkar)

    objects3fjjjgggagbecdefhjdkar.parent = arma
    armamodifier3fjjjgggagbecdefhjdkar = objects3fjjjgggagbecdefhjdkar.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkar.object = arma

    vgroups3fjjjgggagbecdefhjdkar = [objects3fjjjgggagbecdefhjdkar.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkas = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kas.from_mesh(mesh3fjjjgggagbecdefhjdkas)
    objects3fjjjgggagbecdefhjdkas = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkas)
    collection.objects.link(objects3fjjjgggagbecdefhjdkas)
    bmesh.ops.remove_doubles(bm_3kas, verts = bm_3kas.verts, dist = 0.0001)
    bm_3kas.to_mesh(mesh3fjjjgggagbecdefhjdkas)

    objects3fjjjgggagbecdefhjdkas.parent = arma
    armamodifier3fjjjgggagbecdefhjdkas = objects3fjjjgggagbecdefhjdkas.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkas.object = arma

    vgroups3fjjjgggagbecdefhjdkas = [objects3fjjjgggagbecdefhjdkas.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkat = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kat.from_mesh(mesh3fjjjgggagbecdefhjdkat)
    objects3fjjjgggagbecdefhjdkat = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkat)
    collection.objects.link(objects3fjjjgggagbecdefhjdkat)
    bmesh.ops.remove_doubles(bm_3kat, verts = bm_3kat.verts, dist = 0.0001)
    bm_3kat.to_mesh(mesh3fjjjgggagbecdefhjdkat)

    objects3fjjjgggagbecdefhjdkat.parent = arma
    armamodifier3fjjjgggagbecdefhjdkat = objects3fjjjgggagbecdefhjdkat.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkat.object = arma

    vgroups3fjjjgggagbecdefhjdkat = [objects3fjjjgggagbecdefhjdkat.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkau = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kau.from_mesh(mesh3fjjjgggagbecdefhjdkau)
    objects3fjjjgggagbecdefhjdkau = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkau)
    collection.objects.link(objects3fjjjgggagbecdefhjdkau)
    bmesh.ops.remove_doubles(bm_3kau, verts = bm_3kau.verts, dist = 0.0001)
    bm_3kau.to_mesh(mesh3fjjjgggagbecdefhjdkau)

    objects3fjjjgggagbecdefhjdkau.parent = arma
    armamodifier3fjjjgggagbecdefhjdkau = objects3fjjjgggagbecdefhjdkau.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkau.object = arma

    vgroups3fjjjgggagbecdefhjdkau = [objects3fjjjgggagbecdefhjdkau.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkav = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kav.from_mesh(mesh3fjjjgggagbecdefhjdkav)
    objects3fjjjgggagbecdefhjdkav = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkav)
    collection.objects.link(objects3fjjjgggagbecdefhjdkav)
    bmesh.ops.remove_doubles(bm_3kav, verts = bm_3kav.verts, dist = 0.0001)
    bm_3kav.to_mesh(mesh3fjjjgggagbecdefhjdkav)

    objects3fjjjgggagbecdefhjdkav.parent = arma
    armamodifier3fjjjgggagbecdefhjdkav = objects3fjjjgggagbecdefhjdkav.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkav.object = arma

    vgroups3fjjjgggagbecdefhjdkav = [objects3fjjjgggagbecdefhjdkav.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaw = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaw.from_mesh(mesh3fjjjgggagbecdefhjdkaw)
    objects3fjjjgggagbecdefhjdkaw = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaw)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaw)
    bmesh.ops.remove_doubles(bm_3kaw, verts = bm_3kaw.verts, dist = 0.0001)
    bm_3kaw.to_mesh(mesh3fjjjgggagbecdefhjdkaw)

    objects3fjjjgggagbecdefhjdkaw.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaw = objects3fjjjgggagbecdefhjdkaw.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaw.object = arma

    vgroups3fjjjgggagbecdefhjdkaw = [objects3fjjjgggagbecdefhjdkaw.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkax = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kax.from_mesh(mesh3fjjjgggagbecdefhjdkax)
    objects3fjjjgggagbecdefhjdkax = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkax)
    collection.objects.link(objects3fjjjgggagbecdefhjdkax)
    bmesh.ops.remove_doubles(bm_3kax, verts = bm_3kax.verts, dist = 0.0001)
    bm_3kax.to_mesh(mesh3fjjjgggagbecdefhjdkax)

    objects3fjjjgggagbecdefhjdkax.parent = arma
    armamodifier3fjjjgggagbecdefhjdkax = objects3fjjjgggagbecdefhjdkax.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkax.object = arma

    vgroups3fjjjgggagbecdefhjdkax = [objects3fjjjgggagbecdefhjdkax.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkay = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kay.from_mesh(mesh3fjjjgggagbecdefhjdkay)
    objects3fjjjgggagbecdefhjdkay = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkay)
    collection.objects.link(objects3fjjjgggagbecdefhjdkay)
    bmesh.ops.remove_doubles(bm_3kay, verts = bm_3kay.verts, dist = 0.0001)
    bm_3kay.to_mesh(mesh3fjjjgggagbecdefhjdkay)

    objects3fjjjgggagbecdefhjdkay.parent = arma
    armamodifier3fjjjgggagbecdefhjdkay = objects3fjjjgggagbecdefhjdkay.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkay.object = arma

    vgroups3fjjjgggagbecdefhjdkay = [objects3fjjjgggagbecdefhjdkay.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaz = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaz.from_mesh(mesh3fjjjgggagbecdefhjdkaz)
    objects3fjjjgggagbecdefhjdkaz = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaz)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaz)
    bmesh.ops.remove_doubles(bm_3kaz, verts = bm_3kaz.verts, dist = 0.0001)
    bm_3kaz.to_mesh(mesh3fjjjgggagbecdefhjdkaz)

    objects3fjjjgggagbecdefhjdkaz.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaz = objects3fjjjgggagbecdefhjdkaz.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaz.object = arma

    vgroups3fjjjgggagbecdefhjdkaz = [objects3fjjjgggagbecdefhjdkaz.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaaa.from_mesh(mesh3fjjjgggagbecdefhjdkaaa)
    objects3fjjjgggagbecdefhjdkaaa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaaa)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaaa)
    bmesh.ops.remove_doubles(bm_3kaaa, verts = bm_3kaaa.verts, dist = 0.0001)
    bm_3kaaa.to_mesh(mesh3fjjjgggagbecdefhjdkaaa)

    objects3fjjjgggagbecdefhjdkaaa.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaaa = objects3fjjjgggagbecdefhjdkaaa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaaa.object = arma

    vgroups3fjjjgggagbecdefhjdkaaa = [objects3fjjjgggagbecdefhjdkaaa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaab.from_mesh(mesh3fjjjgggagbecdefhjdkaab)
    objects3fjjjgggagbecdefhjdkaab = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaab)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaab)
    bmesh.ops.remove_doubles(bm_3kaab, verts = bm_3kaab.verts, dist = 0.0001)
    bm_3kaab.to_mesh(mesh3fjjjgggagbecdefhjdkaab)

    objects3fjjjgggagbecdefhjdkaab.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaab = objects3fjjjgggagbecdefhjdkaab.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaab.object = arma

    vgroups3fjjjgggagbecdefhjdkaab = [objects3fjjjgggagbecdefhjdkaab.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaac.from_mesh(mesh3fjjjgggagbecdefhjdkaac)
    objects3fjjjgggagbecdefhjdkaac = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaac)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaac)
    bmesh.ops.remove_doubles(bm_3kaac, verts = bm_3kaac.verts, dist = 0.0001)
    bm_3kaac.to_mesh(mesh3fjjjgggagbecdefhjdkaac)

    objects3fjjjgggagbecdefhjdkaac.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaac = objects3fjjjgggagbecdefhjdkaac.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaac.object = arma

    vgroups3fjjjgggagbecdefhjdkaac = [objects3fjjjgggagbecdefhjdkaac.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaad = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaad.from_mesh(mesh3fjjjgggagbecdefhjdkaad)
    objects3fjjjgggagbecdefhjdkaad = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaad)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaad)
    bmesh.ops.remove_doubles(bm_3kaad, verts = bm_3kaad.verts, dist = 0.0001)
    bm_3kaad.to_mesh(mesh3fjjjgggagbecdefhjdkaad)

    objects3fjjjgggagbecdefhjdkaad.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaad = objects3fjjjgggagbecdefhjdkaad.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaad.object = arma

    vgroups3fjjjgggagbecdefhjdkaad = [objects3fjjjgggagbecdefhjdkaad.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaae = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaae.from_mesh(mesh3fjjjgggagbecdefhjdkaae)
    objects3fjjjgggagbecdefhjdkaae = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaae)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaae)
    bmesh.ops.remove_doubles(bm_3kaae, verts = bm_3kaae.verts, dist = 0.0001)
    bm_3kaae.to_mesh(mesh3fjjjgggagbecdefhjdkaae)

    objects3fjjjgggagbecdefhjdkaae.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaae = objects3fjjjgggagbecdefhjdkaae.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaae.object = arma

    vgroups3fjjjgggagbecdefhjdkaae = [objects3fjjjgggagbecdefhjdkaae.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaaf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaaf.from_mesh(mesh3fjjjgggagbecdefhjdkaaf)
    objects3fjjjgggagbecdefhjdkaaf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaaf)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaaf)
    bmesh.ops.remove_doubles(bm_3kaaf, verts = bm_3kaaf.verts, dist = 0.0001)
    bm_3kaaf.to_mesh(mesh3fjjjgggagbecdefhjdkaaf)

    objects3fjjjgggagbecdefhjdkaaf.parent = arma
    armamodifier3fjjjgggagbecdefhjdkaaf = objects3fjjjgggagbecdefhjdkaaf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaaf.object = arma

    vgroups3fjjjgggagbecdefhjdkaaf = [objects3fjjjgggagbecdefhjdkaaf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaag = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaag.from_mesh(mesh3fjjjgggagbecdefhjdkaag)
    objects3fjjjgggagbecdefhjdkaag = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaag)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaag)
    bmesh.ops.remove_doubles(bm_3kaag, verts = bm_3kaag.verts, dist = 0.0001)
    bm_3kaag.to_mesh(mesh3fjjjgggagbecdefhjdkaag)

    objects3fjjjgggagbecdefhjdkaag.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdkaag = objects3fjjjgggagbecdefhjdkaag.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaag.object = arma

    vgroups3fjjjgggagbecdefhjdkaag = [objects3fjjjgggagbecdefhjdkaag.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdkaah = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3kaah.from_mesh(mesh3fjjjgggagbecdefhjdkaah)
    objects3fjjjgggagbecdefhjdkaah = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdkaah)
    collection.objects.link(objects3fjjjgggagbecdefhjdkaah)
    bmesh.ops.remove_doubles(bm_3kaah, verts = bm_3kaah.verts, dist = 0.0001)
    bm_3kaah.to_mesh(mesh3fjjjgggagbecdefhjdkaah)

    objects3fjjjgggagbecdefhjdkaah.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdkaah = objects3fjjjgggagbecdefhjdkaah.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdkaah.object = arma

    vgroups3fjjjgggagbecdefhjdkaah = [objects3fjjjgggagbecdefhjdkaah.vertex_groups.new(name = bone.name) for bone in arma.data.bones]



    mesh3fjjjgggagbecdefhjdmm = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3m.from_mesh(mesh3fjjjgggagbecdefhjdmm)
    objects3fjjjgggagbecdefhjdmm = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdmm)
    collection.objects.link(objects3fjjjgggagbecdefhjdmm)
    bmesh.ops.remove_doubles(bm_3m, verts = bm_3m.verts, dist = 0.0001)
    bm_3m.to_mesh(mesh3fjjjgggagbecdefhjdmm)

    objects3fjjjgggagbecdefhjdmm.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdmm = objects3fjjjgggagbecdefhjdmm.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdmm.object = arma

    vgroups3fjjjgggagbecdefhjdmm = [objects3fjjjgggagbecdefhjdmm.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdl = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3l.from_mesh(mesh3fjjjgggagbecdefhjdl)
    objects3fjjjgggagbecdefhjdl = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdl)
    collection.objects.link(objects3fjjjgggagbecdefhjdl)
    bmesh.ops.remove_doubles(bm_3l, verts = bm_3l.verts, dist = 0.0001)
    bm_3l.to_mesh(mesh3fjjjgggagbecdefhjdl)

    objects3fjjjgggagbecdefhjdl.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdl = objects3fjjjgggagbecdefhjdl.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdl.object = arma

    vgroups3fjjjgggagbecdefhjdl = [objects3fjjjgggagbecdefhjdl.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdla = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3la.from_mesh(mesh3fjjjgggagbecdefhjdla)
    objects3fjjjgggagbecdefhjdla = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdla)
    collection.objects.link(objects3fjjjgggagbecdefhjdla)
    bmesh.ops.remove_doubles(bm_3la, verts = bm_3la.verts, dist = 0.0001)
    bm_3la.to_mesh(mesh3fjjjgggagbecdefhjdla)

    objects3fjjjgggagbecdefhjdla.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdla = objects3fjjjgggagbecdefhjdla.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdla.object = arma

    vgroups3fjjjgggagbecdefhjdla = [objects3fjjjgggagbecdefhjdla.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh3fjjjgggagbecdefhjdlb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lb.from_mesh(mesh3fjjjgggagbecdefhjdlb)
    objects3fjjjgggagbecdefhjdlb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlb)
    collection.objects.link(objects3fjjjgggagbecdefhjdlb)
    bmesh.ops.remove_doubles(bm_3lb, verts = bm_3lb.verts, dist = 0.0001)
    bm_3lb.to_mesh(mesh3fjjjgggagbecdefhjdlb)

    objects3fjjjgggagbecdefhjdlb.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlb = objects3fjjjgggagbecdefhjdlb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlb.object = arma

    vgroups3fjjjgggagbecdefhjdlb = [objects3fjjjgggagbecdefhjdlb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh3fjjjgggagbecdefhjdlc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lc.from_mesh(mesh3fjjjgggagbecdefhjdlc)
    objects3fjjjgggagbecdefhjdlc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlc)
    collection.objects.link(objects3fjjjgggagbecdefhjdlc)
    bmesh.ops.remove_doubles(bm_3lc, verts = bm_3lc.verts, dist = 0.0001)
    bm_3lc.to_mesh(mesh3fjjjgggagbecdefhjdlc)

    objects3fjjjgggagbecdefhjdlc.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdlc = objects3fjjjgggagbecdefhjdlc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlc.object = arma

    vgroups3fjjjgggagbecdefhjdlc = [objects3fjjjgggagbecdefhjdlc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh3fjjjgggagbecdefhjdld = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ld.from_mesh(mesh3fjjjgggagbecdefhjdld)
    objects3fjjjgggagbecdefhjdld = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdld)
    collection.objects.link(objects3fjjjgggagbecdefhjdld)
    bmesh.ops.remove_doubles(bm_3ld, verts = bm_3ld.verts, dist = 0.0001)
    bm_3ld.to_mesh(mesh3fjjjgggagbecdefhjdld)

    objects3fjjjgggagbecdefhjdld.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdld = objects3fjjjgggagbecdefhjdld.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdld.object = arma

    vgroups3fjjjgggagbecdefhjdld = [objects3fjjjgggagbecdefhjdld.vertex_groups.new(name = bone.name) for bone in arma.data.bones]



    mesh3fjjjgggagbecdefhjdle = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3le.from_mesh(mesh3fjjjgggagbecdefhjdle)
    objects3fjjjgggagbecdefhjdle = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdle)
    collection.objects.link(objects3fjjjgggagbecdefhjdle)
    bmesh.ops.remove_doubles(bm_3le, verts = bm_3le.verts, dist = 0.0001)
    bm_3le.to_mesh(mesh3fjjjgggagbecdefhjdle)

    objects3fjjjgggagbecdefhjdle.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdle = objects3fjjjgggagbecdefhjdle.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdle.object = arma

    vgroups3fjjjgggagbecdefhjdle = [objects3fjjjgggagbecdefhjdle.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lf.from_mesh(mesh3fjjjgggagbecdefhjdlf)
    objects3fjjjgggagbecdefhjdlf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlf)
    collection.objects.link(objects3fjjjgggagbecdefhjdlf)
    bmesh.ops.remove_doubles(bm_3lf, verts = bm_3lf.verts, dist = 0.0001)
    bm_3lf.to_mesh(mesh3fjjjgggagbecdefhjdlf)

    objects3fjjjgggagbecdefhjdlf.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdlf = objects3fjjjgggagbecdefhjdlf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlf.object = arma

    vgroups3fjjjgggagbecdefhjdlf = [objects3fjjjgggagbecdefhjdlf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lg.from_mesh(mesh3fjjjgggagbecdefhjdlg)
    objects3fjjjgggagbecdefhjdlg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlg)
    collection.objects.link(objects3fjjjgggagbecdefhjdlg)
    bmesh.ops.remove_doubles(bm_3lg, verts = bm_3lg.verts, dist = 0.0001)
    bm_3lg.to_mesh(mesh3fjjjgggagbecdefhjdlg)

    objects3fjjjgggagbecdefhjdlg.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdlg = objects3fjjjgggagbecdefhjdlg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlg.object = arma

    vgroups3fjjjgggagbecdefhjdlg = [objects3fjjjgggagbecdefhjdlg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lh.from_mesh(mesh3fjjjgggagbecdefhjdlh)
    objects3fjjjgggagbecdefhjdlh = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlh)
    collection.objects.link(objects3fjjjgggagbecdefhjdlh)
    bmesh.ops.remove_doubles(bm_3lh, verts = bm_3lh.verts, dist = 0.0001)
    bm_3lh.to_mesh(mesh3fjjjgggagbecdefhjdlh)

    objects3fjjjgggagbecdefhjdlh.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdlh = objects3fjjjgggagbecdefhjdlh.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlh.object = arma

    vgroups3fjjjgggagbecdefhjdlh = [objects3fjjjgggagbecdefhjdlh.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdli = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3li.from_mesh(mesh3fjjjgggagbecdefhjdli)
    objects3fjjjgggagbecdefhjdli = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdli)
    collection.objects.link(objects3fjjjgggagbecdefhjdli)
    bmesh.ops.remove_doubles(bm_3li, verts = bm_3li.verts, dist = 0.0001)
    bm_3li.to_mesh(mesh3fjjjgggagbecdefhjdli)

    objects3fjjjgggagbecdefhjdli.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdli = objects3fjjjgggagbecdefhjdli.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdli.object = arma

    vgroups3fjjjgggagbecdefhjdli = [objects3fjjjgggagbecdefhjdli.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lj.from_mesh(mesh3fjjjgggagbecdefhjdlj)
    objects3fjjjgggagbecdefhjdlj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlj)
    collection.objects.link(objects3fjjjgggagbecdefhjdlj)
    bmesh.ops.remove_doubles(bm_3lj, verts = bm_3lj.verts, dist = 0.0001)
    bm_3lj.to_mesh(mesh3fjjjgggagbecdefhjdlj)

    objects3fjjjgggagbecdefhjdlj.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdlj = objects3fjjjgggagbecdefhjdlj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlj.object = arma

    vgroups3fjjjgggagbecdefhjdlj = [objects3fjjjgggagbecdefhjdlj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlk = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lk.from_mesh(mesh3fjjjgggagbecdefhjdlk)
    objects3fjjjgggagbecdefhjdlk = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlk)
    collection.objects.link(objects3fjjjgggagbecdefhjdlk)
    bmesh.ops.remove_doubles(bm_3lk, verts = bm_3lk.verts, dist = 0.0001)
    bm_3lk.to_mesh(mesh3fjjjgggagbecdefhjdlk)

    objects3fjjjgggagbecdefhjdlk.parent = arma

    
    armamodifier3fjjjgggagbecdefhjdlk = objects3fjjjgggagbecdefhjdlk.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlk.object = arma

    vgroups3fjjjgggagbecdefhjdlk = [objects3fjjjgggagbecdefhjdlk.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdll = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ll.from_mesh(mesh3fjjjgggagbecdefhjdll)
    objects3fjjjgggagbecdefhjdll = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdll)
    collection.objects.link(objects3fjjjgggagbecdefhjdll)
    bmesh.ops.remove_doubles(bm_3ll, verts = bm_3ll.verts, dist = 0.0001)
    bm_3ll.to_mesh(mesh3fjjjgggagbecdefhjdll)

    objects3fjjjgggagbecdefhjdll.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdll = objects3fjjjgggagbecdefhjdll.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdll.object = arma

    vgroups3fjjjgggagbecdefhjdll = [objects3fjjjgggagbecdefhjdll.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #

    mesh3fjjjgggagbecdefhjdlm = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lm.from_mesh(mesh3fjjjgggagbecdefhjdlm)
    objects3fjjjgggagbecdefhjdlm = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlm)
    collection.objects.link(objects3fjjjgggagbecdefhjdlm)
    bmesh.ops.remove_doubles(bm_3lm, verts = bm_3lm.verts, dist = 0.0001)
    bm_3lm.to_mesh(mesh3fjjjgggagbecdefhjdlm)

    objects3fjjjgggagbecdefhjdlm.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlm = objects3fjjjgggagbecdefhjdlm.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlm.object = arma

    vgroups3fjjjgggagbecdefhjdlm = [objects3fjjjgggagbecdefhjdlm.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ##

    mesh3fjjjgggagbecdefhjdln = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ln.from_mesh(mesh3fjjjgggagbecdefhjdln)
    objects3fjjjgggagbecdefhjdln = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdln)
    collection.objects.link(objects3fjjjgggagbecdefhjdln)
    bmesh.ops.remove_doubles(bm_3ln, verts = bm_3ln.verts, dist = 0.0001)
    bm_3ln.to_mesh(mesh3fjjjgggagbecdefhjdln)

    objects3fjjjgggagbecdefhjdln.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdln = objects3fjjjgggagbecdefhjdln.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdln.object = arma

    vgroups3fjjjgggagbecdefhjdln = [objects3fjjjgggagbecdefhjdln.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #####################################################################################

    mesh3fjjjgggagbecdefhjdlo = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lo.from_mesh(mesh3fjjjgggagbecdefhjdlo)
    objects3fjjjgggagbecdefhjdlo = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlo)
    collection.objects.link(objects3fjjjgggagbecdefhjdlo)
    bmesh.ops.remove_doubles(bm_3lo, verts = bm_3lo.verts, dist = 0.0001)
    bm_3lo.to_mesh(mesh3fjjjgggagbecdefhjdlo)

    objects3fjjjgggagbecdefhjdlo.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlo = objects3fjjjgggagbecdefhjdlo.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlo.object = arma

    vgroups3fjjjgggagbecdefhjdlo = [objects3fjjjgggagbecdefhjdlo.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #####################################################################################

    mesh3fjjjgggagbecdefhjdlp = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lp.from_mesh(mesh3fjjjgggagbecdefhjdlp)
    objects3fjjjgggagbecdefhjdlp = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlp)
    collection.objects.link(objects3fjjjgggagbecdefhjdlp)
    bmesh.ops.remove_doubles(bm_3lp, verts = bm_3lp.verts, dist = 0.0001)
    bm_3lp.to_mesh(mesh3fjjjgggagbecdefhjdlp)

    objects3fjjjgggagbecdefhjdlp.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlp = objects3fjjjgggagbecdefhjdlp.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlp.object = arma

    vgroups3fjjjgggagbecdefhjdlp = [objects3fjjjgggagbecdefhjdlp.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #####################################################################################
    #####################################################################################
    #####################################################################################

    mesh3fjjjgggagbecdefhjdlq = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lq.from_mesh(mesh3fjjjgggagbecdefhjdlq)
    objects3fjjjgggagbecdefhjdlq = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlq)
    collection.objects.link(objects3fjjjgggagbecdefhjdlq)
    bmesh.ops.remove_doubles(bm_3lq, verts = bm_3lq.verts, dist = 0.0001)
    bm_3lq.to_mesh(mesh3fjjjgggagbecdefhjdlq)

    objects3fjjjgggagbecdefhjdlq.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlq = objects3fjjjgggagbecdefhjdlq.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlq.object = arma

    vgroups3fjjjgggagbecdefhjdlq = [objects3fjjjgggagbecdefhjdlq.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlr = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lr.from_mesh(mesh3fjjjgggagbecdefhjdlr)
    objects3fjjjgggagbecdefhjdlr = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlr)
    collection.objects.link(objects3fjjjgggagbecdefhjdlr)
    bmesh.ops.remove_doubles(bm_3lr, verts = bm_3lr.verts, dist = 0.0001)
    bm_3lr.to_mesh(mesh3fjjjgggagbecdefhjdlr)

    objects3fjjjgggagbecdefhjdlr.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlr = objects3fjjjgggagbecdefhjdlr.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlr.object = arma

    vgroups3fjjjgggagbecdefhjdlr = [objects3fjjjgggagbecdefhjdlr.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdls = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ls.from_mesh(mesh3fjjjgggagbecdefhjdls)
    objects3fjjjgggagbecdefhjdls = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdls)
    collection.objects.link(objects3fjjjgggagbecdefhjdls)
    bmesh.ops.remove_doubles(bm_3ls, verts = bm_3ls.verts, dist = 0.0001)
    bm_3ls.to_mesh(mesh3fjjjgggagbecdefhjdls)

    objects3fjjjgggagbecdefhjdls.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdls = objects3fjjjgggagbecdefhjdls.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdls.object = arma

    vgroups3fjjjgggagbecdefhjdls = [objects3fjjjgggagbecdefhjdls.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlt = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lt.from_mesh(mesh3fjjjgggagbecdefhjdlt)
    objects3fjjjgggagbecdefhjdlt = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlt)
    collection.objects.link(objects3fjjjgggagbecdefhjdlt)
    bmesh.ops.remove_doubles(bm_3lt, verts = bm_3lt.verts, dist = 0.0001)
    bm_3lt.to_mesh(mesh3fjjjgggagbecdefhjdlt)

    objects3fjjjgggagbecdefhjdlt.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlt = objects3fjjjgggagbecdefhjdlt.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlt.object = arma

    vgroups3fjjjgggagbecdefhjdlt = [objects3fjjjgggagbecdefhjdlt.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################################

    mesh3fjjjgggagbecdefhjdlu = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lu.from_mesh(mesh3fjjjgggagbecdefhjdlu)
    objects3fjjjgggagbecdefhjdlu = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlu)
    collection.objects.link(objects3fjjjgggagbecdefhjdlu)
    bmesh.ops.remove_doubles(bm_3lu, verts = bm_3lu.verts, dist = 0.0001)
    bm_3lu.to_mesh(mesh3fjjjgggagbecdefhjdlu)

    objects3fjjjgggagbecdefhjdlu.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlu = objects3fjjjgggagbecdefhjdlu.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlu.object = arma

    vgroups3fjjjgggagbecdefhjdlu = [objects3fjjjgggagbecdefhjdlu.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlv = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lv.from_mesh(mesh3fjjjgggagbecdefhjdlv)
    objects3fjjjgggagbecdefhjdlv = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlv)
    collection.objects.link(objects3fjjjgggagbecdefhjdlv)
    bmesh.ops.remove_doubles(bm_3lv, verts = bm_3lv.verts, dist = 0.0001)
    bm_3lv.to_mesh(mesh3fjjjgggagbecdefhjdlv)

    objects3fjjjgggagbecdefhjdlv.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlv = objects3fjjjgggagbecdefhjdlv.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlv.object = arma

    vgroups3fjjjgggagbecdefhjdlv = [objects3fjjjgggagbecdefhjdlv.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###########################################################################
    ###########################################################################

    mesh3fjjjgggagbecdefhjdlw = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lw.from_mesh(mesh3fjjjgggagbecdefhjdlw)
    objects3fjjjgggagbecdefhjdlw = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlw)
    collection.objects.link(objects3fjjjgggagbecdefhjdlw)
    bmesh.ops.remove_doubles(bm_3lw, verts = bm_3lw.verts, dist = 0.0001)
    bm_3lw.to_mesh(mesh3fjjjgggagbecdefhjdlw)

    objects3fjjjgggagbecdefhjdlw.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlw = objects3fjjjgggagbecdefhjdlw.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlw.object = arma

    vgroups3fjjjgggagbecdefhjdlw = [objects3fjjjgggagbecdefhjdlw.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh3fjjjgggagbecdefhjdlx = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lx.from_mesh(mesh3fjjjgggagbecdefhjdlx)
    objects3fjjjgggagbecdefhjdlx = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlx)
    collection.objects.link(objects3fjjjgggagbecdefhjdlx)
    bmesh.ops.remove_doubles(bm_3lx, verts = bm_3lx.verts, dist = 0.0001)
    bm_3lx.to_mesh(mesh3fjjjgggagbecdefhjdlx)

    objects3fjjjgggagbecdefhjdlx.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlx = objects3fjjjgggagbecdefhjdlx.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlx.object = arma

    vgroups3fjjjgggagbecdefhjdlx = [objects3fjjjgggagbecdefhjdlx.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh3fjjjgggagbecdefhjdly = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ly.from_mesh(mesh3fjjjgggagbecdefhjdly)
    objects3fjjjgggagbecdefhjdly = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdly)
    collection.objects.link(objects3fjjjgggagbecdefhjdly)
    bmesh.ops.remove_doubles(bm_3ly, verts = bm_3ly.verts, dist = 0.0001)
    bm_3ly.to_mesh(mesh3fjjjgggagbecdefhjdly)

    objects3fjjjgggagbecdefhjdly.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdly = objects3fjjjgggagbecdefhjdly.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdly.object = arma

    vgroups3fjjjgggagbecdefhjdly = [objects3fjjjgggagbecdefhjdly.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    mesh3fjjjgggagbecdefhjdlz = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lz.from_mesh(mesh3fjjjgggagbecdefhjdlz)
    objects3fjjjgggagbecdefhjdlz = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlz)
    collection.objects.link(objects3fjjjgggagbecdefhjdlz)
    bmesh.ops.remove_doubles(bm_3lz, verts = bm_3lz.verts, dist = 0.0001)
    bm_3lz.to_mesh(mesh3fjjjgggagbecdefhjdlz)

    objects3fjjjgggagbecdefhjdlz.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlz = objects3fjjjgggagbecdefhjdlz.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlz.object = arma

    vgroups3fjjjgggagbecdefhjdlz = [objects3fjjjgggagbecdefhjdlz.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################

    mesh3fjjjgggagbecdefhjdlaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laa.from_mesh(mesh3fjjjgggagbecdefhjdlaa)
    objects3fjjjgggagbecdefhjdlaa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaa)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaa)
    bmesh.ops.remove_doubles(bm_3laa, verts = bm_3laa.verts, dist = 0.0001)
    bm_3laa.to_mesh(mesh3fjjjgggagbecdefhjdlaa)

    objects3fjjjgggagbecdefhjdlaa.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaa = objects3fjjjgggagbecdefhjdlaa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaa.object = arma

    vgroups3fjjjgggagbecdefhjdlaa = [objects3fjjjgggagbecdefhjdlaa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lab.from_mesh(mesh3fjjjgggagbecdefhjdlab)
    objects3fjjjgggagbecdefhjdlab = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlab)
    collection.objects.link(objects3fjjjgggagbecdefhjdlab)
    bmesh.ops.remove_doubles(bm_3lab, verts = bm_3lab.verts, dist = 0.0001)
    bm_3lab.to_mesh(mesh3fjjjgggagbecdefhjdlab)

    objects3fjjjgggagbecdefhjdlab.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlab = objects3fjjjgggagbecdefhjdlab.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlab.object = arma

    vgroups3fjjjgggagbecdefhjdlab = [objects3fjjjgggagbecdefhjdlab.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lac.from_mesh(mesh3fjjjgggagbecdefhjdlac)
    objects3fjjjgggagbecdefhjdlac = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlac)
    collection.objects.link(objects3fjjjgggagbecdefhjdlac)
    bmesh.ops.remove_doubles(bm_3lac, verts = bm_3lac.verts, dist = 0.0001)
    bm_3lac.to_mesh(mesh3fjjjgggagbecdefhjdlac)

    objects3fjjjgggagbecdefhjdlac.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlac = objects3fjjjgggagbecdefhjdlac.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlac.object = arma

    vgroups3fjjjgggagbecdefhjdlac = [objects3fjjjgggagbecdefhjdlac.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlad = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lad.from_mesh(mesh3fjjjgggagbecdefhjdlad)
    objects3fjjjgggagbecdefhjdlad = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlad)
    collection.objects.link(objects3fjjjgggagbecdefhjdlad)
    bmesh.ops.remove_doubles(bm_3lad, verts = bm_3lad.verts, dist = 0.0001)
    bm_3lad.to_mesh(mesh3fjjjgggagbecdefhjdlad)

    objects3fjjjgggagbecdefhjdlad.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlad = objects3fjjjgggagbecdefhjdlad.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlad.object = arma

    vgroups3fjjjgggagbecdefhjdlad = [objects3fjjjgggagbecdefhjdlad.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlae = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lae.from_mesh(mesh3fjjjgggagbecdefhjdlae)
    objects3fjjjgggagbecdefhjdlae = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlae)
    collection.objects.link(objects3fjjjgggagbecdefhjdlae)
    bmesh.ops.remove_doubles(bm_3lae, verts = bm_3lae.verts, dist = 0.0001)
    bm_3lae.to_mesh(mesh3fjjjgggagbecdefhjdlae)

    objects3fjjjgggagbecdefhjdlae.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlae = objects3fjjjgggagbecdefhjdlae.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlae.object = arma

    vgroups3fjjjgggagbecdefhjdlae = [objects3fjjjgggagbecdefhjdlae.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laf.from_mesh(mesh3fjjjgggagbecdefhjdlaf)
    objects3fjjjgggagbecdefhjdlaf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaf)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaf)
    bmesh.ops.remove_doubles(bm_3laf, verts = bm_3laf.verts, dist = 0.0001)
    bm_3laf.to_mesh(mesh3fjjjgggagbecdefhjdlaf)

    objects3fjjjgggagbecdefhjdlaf.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaf = objects3fjjjgggagbecdefhjdlaf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaf.object = arma

    vgroups3fjjjgggagbecdefhjdlaf = [objects3fjjjgggagbecdefhjdlaf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlag = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lag.from_mesh(mesh3fjjjgggagbecdefhjdlag)
    objects3fjjjgggagbecdefhjdlag = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlag)
    collection.objects.link(objects3fjjjgggagbecdefhjdlag)
    bmesh.ops.remove_doubles(bm_3lag, verts = bm_3lag.verts, dist = 0.0001)
    bm_3lag.to_mesh(mesh3fjjjgggagbecdefhjdlag)

    objects3fjjjgggagbecdefhjdlag.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlag = objects3fjjjgggagbecdefhjdlag.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlag.object = arma

    vgroups3fjjjgggagbecdefhjdlag = [objects3fjjjgggagbecdefhjdlag.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################

    mesh3fjjjgggagbecdefhjdlah = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lah.from_mesh(mesh3fjjjgggagbecdefhjdlah)
    objects3fjjjgggagbecdefhjdlah = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlah)
    collection.objects.link(objects3fjjjgggagbecdefhjdlah)
    bmesh.ops.remove_doubles(bm_3lah, verts = bm_3lah.verts, dist = 0.0001)
    bm_3lah.to_mesh(mesh3fjjjgggagbecdefhjdlah)

    objects3fjjjgggagbecdefhjdlah.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlah = objects3fjjjgggagbecdefhjdlah.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlah.object = arma

    vgroups3fjjjgggagbecdefhjdlah = [objects3fjjjgggagbecdefhjdlah.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlai = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lai.from_mesh(mesh3fjjjgggagbecdefhjdlai)
    objects3fjjjgggagbecdefhjdlai = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlai)
    collection.objects.link(objects3fjjjgggagbecdefhjdlai)
    bmesh.ops.remove_doubles(bm_3lai, verts = bm_3lai.verts, dist = 0.0001)
    bm_3lai.to_mesh(mesh3fjjjgggagbecdefhjdlai)

    objects3fjjjgggagbecdefhjdlai.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlai = objects3fjjjgggagbecdefhjdlai.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlai.object = arma

    vgroups3fjjjgggagbecdefhjdlai = [objects3fjjjgggagbecdefhjdlai.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laj.from_mesh(mesh3fjjjgggagbecdefhjdlaj)
    objects3fjjjgggagbecdefhjdlaj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaj)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaj)
    bmesh.ops.remove_doubles(bm_3laj, verts = bm_3laj.verts, dist = 0.0001)
    bm_3laj.to_mesh(mesh3fjjjgggagbecdefhjdlaj)

    objects3fjjjgggagbecdefhjdlaj.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaj = objects3fjjjgggagbecdefhjdlaj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaj.object = arma

    vgroups3fjjjgggagbecdefhjdlaj = [objects3fjjjgggagbecdefhjdlaj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlak = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lak.from_mesh(mesh3fjjjgggagbecdefhjdlak)
    objects3fjjjgggagbecdefhjdlak = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlak)
    collection.objects.link(objects3fjjjgggagbecdefhjdlak)
    bmesh.ops.remove_doubles(bm_3lak, verts = bm_3lak.verts, dist = 0.0001)
    bm_3lak.to_mesh(mesh3fjjjgggagbecdefhjdlak)

    objects3fjjjgggagbecdefhjdlak.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlak = objects3fjjjgggagbecdefhjdlak.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlak.object = arma

    vgroups3fjjjgggagbecdefhjdlak = [objects3fjjjgggagbecdefhjdlak.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlal = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lal.from_mesh(mesh3fjjjgggagbecdefhjdlal)
    objects3fjjjgggagbecdefhjdlal = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlal)
    collection.objects.link(objects3fjjjgggagbecdefhjdlal)
    bmesh.ops.remove_doubles(bm_3lal, verts = bm_3lal.verts, dist = 0.0001)
    bm_3lal.to_mesh(mesh3fjjjgggagbecdefhjdlal)

    objects3fjjjgggagbecdefhjdlal.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlal = objects3fjjjgggagbecdefhjdlal.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlal.object = arma

    vgroups3fjjjgggagbecdefhjdlal = [objects3fjjjgggagbecdefhjdlal.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlam = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lam.from_mesh(mesh3fjjjgggagbecdefhjdlam)
    objects3fjjjgggagbecdefhjdlam = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlam)
    collection.objects.link(objects3fjjjgggagbecdefhjdlam)
    bmesh.ops.remove_doubles(bm_3lam, verts = bm_3lam.verts, dist = 0.0001)
    bm_3lam.to_mesh(mesh3fjjjgggagbecdefhjdlam)

    objects3fjjjgggagbecdefhjdlam.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlam = objects3fjjjgggagbecdefhjdlam.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlam.object = arma

    vgroups3fjjjgggagbecdefhjdlam = [objects3fjjjgggagbecdefhjdlam.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    #####################################################################################

    mesh3fjjjgggagbecdefhjdlan = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lan.from_mesh(mesh3fjjjgggagbecdefhjdlan)
    objects3fjjjgggagbecdefhjdlan = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlan)
    collection.objects.link(objects3fjjjgggagbecdefhjdlan)
    bmesh.ops.remove_doubles(bm_3lan, verts = bm_3lan.verts, dist = 0.0001)
    bm_3lan.to_mesh(mesh3fjjjgggagbecdefhjdlan)

    objects3fjjjgggagbecdefhjdlan.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlan = objects3fjjjgggagbecdefhjdlan.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlan.object = arma

    vgroups3fjjjgggagbecdefhjdlan = [objects3fjjjgggagbecdefhjdlan.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlao = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lao.from_mesh(mesh3fjjjgggagbecdefhjdlao)
    objects3fjjjgggagbecdefhjdlao = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlao)
    collection.objects.link(objects3fjjjgggagbecdefhjdlao)
    bmesh.ops.remove_doubles(bm_3lao, verts = bm_3lao.verts, dist = 0.0001)
    bm_3lao.to_mesh(mesh3fjjjgggagbecdefhjdlao)

    objects3fjjjgggagbecdefhjdlao.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlao = objects3fjjjgggagbecdefhjdlao.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlao.object = arma

    vgroups3fjjjgggagbecdefhjdlao = [objects3fjjjgggagbecdefhjdlao.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlap = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lap.from_mesh(mesh3fjjjgggagbecdefhjdlap)
    objects3fjjjgggagbecdefhjdlap = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlap)
    collection.objects.link(objects3fjjjgggagbecdefhjdlap)
    bmesh.ops.remove_doubles(bm_3lap, verts = bm_3lap.verts, dist = 0.0001)
    bm_3lap.to_mesh(mesh3fjjjgggagbecdefhjdlap)

    objects3fjjjgggagbecdefhjdlap.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlap = objects3fjjjgggagbecdefhjdlap.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlap.object = arma

    vgroups3fjjjgggagbecdefhjdlap = [objects3fjjjgggagbecdefhjdlap.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaq = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laq.from_mesh(mesh3fjjjgggagbecdefhjdlaq)
    objects3fjjjgggagbecdefhjdlaq = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaq)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaq)
    bmesh.ops.remove_doubles(bm_3laq, verts = bm_3laq.verts, dist = 0.0001)
    bm_3laq.to_mesh(mesh3fjjjgggagbecdefhjdlaq)

    objects3fjjjgggagbecdefhjdlaq.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaq = objects3fjjjgggagbecdefhjdlaq.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaq.object = arma

    vgroups3fjjjgggagbecdefhjdlaq = [objects3fjjjgggagbecdefhjdlaq.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlar = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lar.from_mesh(mesh3fjjjgggagbecdefhjdlar)
    objects3fjjjgggagbecdefhjdlar = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlar)
    collection.objects.link(objects3fjjjgggagbecdefhjdlar)
    bmesh.ops.remove_doubles(bm_3lar, verts = bm_3lar.verts, dist = 0.0001)
    bm_3lar.to_mesh(mesh3fjjjgggagbecdefhjdlar)

    objects3fjjjgggagbecdefhjdlar.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlar = objects3fjjjgggagbecdefhjdlar.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlar.object = arma

    vgroups3fjjjgggagbecdefhjdlar = [objects3fjjjgggagbecdefhjdlar.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlas = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3las.from_mesh(mesh3fjjjgggagbecdefhjdlas)
    objects3fjjjgggagbecdefhjdlas = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlas)
    collection.objects.link(objects3fjjjgggagbecdefhjdlas)
    bmesh.ops.remove_doubles(bm_3las, verts = bm_3las.verts, dist = 0.0001)
    bm_3las.to_mesh(mesh3fjjjgggagbecdefhjdlas)

    objects3fjjjgggagbecdefhjdlas.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlas = objects3fjjjgggagbecdefhjdlas.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlas.object = arma

    vgroups3fjjjgggagbecdefhjdlas = [objects3fjjjgggagbecdefhjdlas.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlat = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lat.from_mesh(mesh3fjjjgggagbecdefhjdlat)
    objects3fjjjgggagbecdefhjdlat = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlat)
    collection.objects.link(objects3fjjjgggagbecdefhjdlat)
    bmesh.ops.remove_doubles(bm_3lat, verts = bm_3lat.verts, dist = 0.0001)
    bm_3lat.to_mesh(mesh3fjjjgggagbecdefhjdlat)

    objects3fjjjgggagbecdefhjdlat.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlat = objects3fjjjgggagbecdefhjdlat.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlat.object = arma

    vgroups3fjjjgggagbecdefhjdlat = [objects3fjjjgggagbecdefhjdlat.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlau = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lau.from_mesh(mesh3fjjjgggagbecdefhjdlau)
    objects3fjjjgggagbecdefhjdlau = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlau)
    collection.objects.link(objects3fjjjgggagbecdefhjdlau)
    bmesh.ops.remove_doubles(bm_3lau, verts = bm_3lau.verts, dist = 0.0001)
    bm_3lau.to_mesh(mesh3fjjjgggagbecdefhjdlau)

    objects3fjjjgggagbecdefhjdlau.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlau = objects3fjjjgggagbecdefhjdlau.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlau.object = arma

    vgroups3fjjjgggagbecdefhjdlau = [objects3fjjjgggagbecdefhjdlau.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlav = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lav.from_mesh(mesh3fjjjgggagbecdefhjdlav)
    objects3fjjjgggagbecdefhjdlav = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlav)
    collection.objects.link(objects3fjjjgggagbecdefhjdlav)
    bmesh.ops.remove_doubles(bm_3lav, verts = bm_3lav.verts, dist = 0.0001)
    bm_3lav.to_mesh(mesh3fjjjgggagbecdefhjdlav)

    objects3fjjjgggagbecdefhjdlav.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlav = objects3fjjjgggagbecdefhjdlav.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlav.object = arma

    vgroups3fjjjgggagbecdefhjdlav = [objects3fjjjgggagbecdefhjdlav.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaw = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3law.from_mesh(mesh3fjjjgggagbecdefhjdlaw)
    objects3fjjjgggagbecdefhjdlaw = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaw)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaw)
    bmesh.ops.remove_doubles(bm_3law, verts = bm_3law.verts, dist = 0.0001)
    bm_3law.to_mesh(mesh3fjjjgggagbecdefhjdlaw)

    objects3fjjjgggagbecdefhjdlaw.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaw = objects3fjjjgggagbecdefhjdlaw.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaw.object = arma

    vgroups3fjjjgggagbecdefhjdlaw = [objects3fjjjgggagbecdefhjdlaw.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlax = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lax.from_mesh(mesh3fjjjgggagbecdefhjdlax)
    objects3fjjjgggagbecdefhjdlax = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlax)
    collection.objects.link(objects3fjjjgggagbecdefhjdlax)
    bmesh.ops.remove_doubles(bm_3lax, verts = bm_3lax.verts, dist = 0.0001)
    bm_3lax.to_mesh(mesh3fjjjgggagbecdefhjdlax)

    objects3fjjjgggagbecdefhjdlax.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlax = objects3fjjjgggagbecdefhjdlax.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlax.object = arma

    vgroups3fjjjgggagbecdefhjdlax = [objects3fjjjgggagbecdefhjdlax.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlay = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3lay.from_mesh(mesh3fjjjgggagbecdefhjdlay)
    objects3fjjjgggagbecdefhjdlay = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlay)
    collection.objects.link(objects3fjjjgggagbecdefhjdlay)
    bmesh.ops.remove_doubles(bm_3lay, verts = bm_3lay.verts, dist = 0.0001)
    bm_3lay.to_mesh(mesh3fjjjgggagbecdefhjdlay)

    objects3fjjjgggagbecdefhjdlay.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlay = objects3fjjjgggagbecdefhjdlay.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlay.object = arma

    vgroups3fjjjgggagbecdefhjdlay = [objects3fjjjgggagbecdefhjdlay.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaz = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laz.from_mesh(mesh3fjjjgggagbecdefhjdlaz)
    objects3fjjjgggagbecdefhjdlaz = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaz)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaz)
    bmesh.ops.remove_doubles(bm_3laz, verts = bm_3laz.verts, dist = 0.0001)
    bm_3laz.to_mesh(mesh3fjjjgggagbecdefhjdlaz)

    objects3fjjjgggagbecdefhjdlaz.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaz = objects3fjjjgggagbecdefhjdlaz.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaz.object = arma

    vgroups3fjjjgggagbecdefhjdlaz = [objects3fjjjgggagbecdefhjdlaz.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaa.from_mesh(mesh3fjjjgggagbecdefhjdlaaa)
    objects3fjjjgggagbecdefhjdlaaa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaa)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaa)
    bmesh.ops.remove_doubles(bm_3laaa, verts = bm_3laaa.verts, dist = 0.0001)
    bm_3laaa.to_mesh(mesh3fjjjgggagbecdefhjdlaaa)

    objects3fjjjgggagbecdefhjdlaaa.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaa = objects3fjjjgggagbecdefhjdlaaa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaa.object = arma

    vgroups3fjjjgggagbecdefhjdlaaa = [objects3fjjjgggagbecdefhjdlaaa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laab.from_mesh(mesh3fjjjgggagbecdefhjdlaab)
    objects3fjjjgggagbecdefhjdlaab = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaab)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaab)
    bmesh.ops.remove_doubles(bm_3laab, verts = bm_3laab.verts, dist = 0.0001)
    bm_3laab.to_mesh(mesh3fjjjgggagbecdefhjdlaab)

    objects3fjjjgggagbecdefhjdlaab.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaab = objects3fjjjgggagbecdefhjdlaab.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaab.object = arma

    vgroups3fjjjgggagbecdefhjdlaab = [objects3fjjjgggagbecdefhjdlaab.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laac.from_mesh(mesh3fjjjgggagbecdefhjdlaac)
    objects3fjjjgggagbecdefhjdlaac = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaac)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaac)
    bmesh.ops.remove_doubles(bm_3laac, verts = bm_3laac.verts, dist = 0.0001)
    bm_3laac.to_mesh(mesh3fjjjgggagbecdefhjdlaac)

    objects3fjjjgggagbecdefhjdlaac.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaac = objects3fjjjgggagbecdefhjdlaac.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaac.object = arma

    vgroups3fjjjgggagbecdefhjdlaac = [objects3fjjjgggagbecdefhjdlaac.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaad = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laad.from_mesh(mesh3fjjjgggagbecdefhjdlaad)
    objects3fjjjgggagbecdefhjdlaad = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaad)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaad)
    bmesh.ops.remove_doubles(bm_3laad, verts = bm_3laad.verts, dist = 0.0001)
    bm_3laad.to_mesh(mesh3fjjjgggagbecdefhjdlaad)

    objects3fjjjgggagbecdefhjdlaad.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaad = objects3fjjjgggagbecdefhjdlaad.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaad.object = arma

    vgroups3fjjjgggagbecdefhjdlaad = [objects3fjjjgggagbecdefhjdlaad.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaae = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laae.from_mesh(mesh3fjjjgggagbecdefhjdlaae)
    objects3fjjjgggagbecdefhjdlaae = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaae)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaae)
    bmesh.ops.remove_doubles(bm_3laae, verts = bm_3laae.verts, dist = 0.0001)
    bm_3laae.to_mesh(mesh3fjjjgggagbecdefhjdlaae)

    objects3fjjjgggagbecdefhjdlaae.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaae = objects3fjjjgggagbecdefhjdlaae.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaae.object = arma

    vgroups3fjjjgggagbecdefhjdlaae = [objects3fjjjgggagbecdefhjdlaae.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################

    mesh3fjjjgggagbecdefhjdlaaf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaf.from_mesh(mesh3fjjjgggagbecdefhjdlaaf)
    objects3fjjjgggagbecdefhjdlaaf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaf)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaf)
    bmesh.ops.remove_doubles(bm_3laaf, verts = bm_3laaf.verts, dist = 0.0001)
    bm_3laaf.to_mesh(mesh3fjjjgggagbecdefhjdlaaf)

    objects3fjjjgggagbecdefhjdlaaf.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaf = objects3fjjjgggagbecdefhjdlaaf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaf.object = arma

    vgroups3fjjjgggagbecdefhjdlaaf = [objects3fjjjgggagbecdefhjdlaaf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaag = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laag.from_mesh(mesh3fjjjgggagbecdefhjdlaag)
    objects3fjjjgggagbecdefhjdlaag = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaag)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaag)
    bmesh.ops.remove_doubles(bm_3laag, verts = bm_3laag.verts, dist = 0.0001)
    bm_3laag.to_mesh(mesh3fjjjgggagbecdefhjdlaag)

    objects3fjjjgggagbecdefhjdlaag.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaag = objects3fjjjgggagbecdefhjdlaag.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaag.object = arma

    vgroups3fjjjgggagbecdefhjdlaag = [objects3fjjjgggagbecdefhjdlaag.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaah = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laah.from_mesh(mesh3fjjjgggagbecdefhjdlaah)
    objects3fjjjgggagbecdefhjdlaah = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaah)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaah)
    bmesh.ops.remove_doubles(bm_3laah, verts = bm_3laah.verts, dist = 0.0001)
    bm_3laah.to_mesh(mesh3fjjjgggagbecdefhjdlaah)

    objects3fjjjgggagbecdefhjdlaah.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaah = objects3fjjjgggagbecdefhjdlaah.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaah.object = arma

    vgroups3fjjjgggagbecdefhjdlaah = [objects3fjjjgggagbecdefhjdlaah.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaai = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laai.from_mesh(mesh3fjjjgggagbecdefhjdlaai)
    objects3fjjjgggagbecdefhjdlaai = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaai)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaai)
    bmesh.ops.remove_doubles(bm_3laai, verts = bm_3laai.verts, dist = 0.0001)
    bm_3laai.to_mesh(mesh3fjjjgggagbecdefhjdlaai)

    objects3fjjjgggagbecdefhjdlaai.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaai = objects3fjjjgggagbecdefhjdlaai.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaai.object = arma

    vgroups3fjjjgggagbecdefhjdlaai = [objects3fjjjgggagbecdefhjdlaai.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaj = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaj.from_mesh(mesh3fjjjgggagbecdefhjdlaaj)
    objects3fjjjgggagbecdefhjdlaaj = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaj)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaj)
    bmesh.ops.remove_doubles(bm_3laaj, verts = bm_3laaj.verts, dist = 0.0001)
    bm_3laaj.to_mesh(mesh3fjjjgggagbecdefhjdlaaj)

    objects3fjjjgggagbecdefhjdlaaj.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaj = objects3fjjjgggagbecdefhjdlaaj.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaj.object = arma

    vgroups3fjjjgggagbecdefhjdlaaj = [objects3fjjjgggagbecdefhjdlaaj.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaak = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laak.from_mesh(mesh3fjjjgggagbecdefhjdlaak)
    objects3fjjjgggagbecdefhjdlaak = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaak)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaak)
    bmesh.ops.remove_doubles(bm_3laak, verts = bm_3laak.verts, dist = 0.0001)
    bm_3laak.to_mesh(mesh3fjjjgggagbecdefhjdlaak)

    objects3fjjjgggagbecdefhjdlaak.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaak = objects3fjjjgggagbecdefhjdlaak.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaak.object = arma

    vgroups3fjjjgggagbecdefhjdlaak = [objects3fjjjgggagbecdefhjdlaak.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaal = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laal.from_mesh(mesh3fjjjgggagbecdefhjdlaal)
    objects3fjjjgggagbecdefhjdlaal = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaal)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaal)
    bmesh.ops.remove_doubles(bm_3laal, verts = bm_3laal.verts, dist = 0.0001)
    bm_3laal.to_mesh(mesh3fjjjgggagbecdefhjdlaal)

    objects3fjjjgggagbecdefhjdlaal.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaal = objects3fjjjgggagbecdefhjdlaal.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaal.object = arma

    vgroups3fjjjgggagbecdefhjdlaal = [objects3fjjjgggagbecdefhjdlaal.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaam = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laam.from_mesh(mesh3fjjjgggagbecdefhjdlaam)
    objects3fjjjgggagbecdefhjdlaam = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaam)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaam)
    bmesh.ops.remove_doubles(bm_3laam, verts = bm_3laam.verts, dist = 0.0001)
    bm_3laam.to_mesh(mesh3fjjjgggagbecdefhjdlaam)

    objects3fjjjgggagbecdefhjdlaam.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaam = objects3fjjjgggagbecdefhjdlaam.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaam.object = arma

    vgroups3fjjjgggagbecdefhjdlaam = [objects3fjjjgggagbecdefhjdlaam.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaan = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laan.from_mesh(mesh3fjjjgggagbecdefhjdlaan)
    objects3fjjjgggagbecdefhjdlaan = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaan)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaan)
    bmesh.ops.remove_doubles(bm_3laan, verts = bm_3laan.verts, dist = 0.0001)
    bm_3laan.to_mesh(mesh3fjjjgggagbecdefhjdlaan)

    objects3fjjjgggagbecdefhjdlaan.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaan = objects3fjjjgggagbecdefhjdlaan.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaan.object = arma

    vgroups3fjjjgggagbecdefhjdlaan = [objects3fjjjgggagbecdefhjdlaan.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaao = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laao.from_mesh(mesh3fjjjgggagbecdefhjdlaao)
    objects3fjjjgggagbecdefhjdlaao = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaao)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaao)
    bmesh.ops.remove_doubles(bm_3laao, verts = bm_3laao.verts, dist = 0.0001)
    bm_3laao.to_mesh(mesh3fjjjgggagbecdefhjdlaao)

    objects3fjjjgggagbecdefhjdlaao.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaao = objects3fjjjgggagbecdefhjdlaao.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaao.object = arma

    vgroups3fjjjgggagbecdefhjdlaao = [objects3fjjjgggagbecdefhjdlaao.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###################################################################################

    mesh3fjjjgggagbecdefhjdlaap = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laap.from_mesh(mesh3fjjjgggagbecdefhjdlaap)
    objects3fjjjgggagbecdefhjdlaap = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaap)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaap)
    bmesh.ops.remove_doubles(bm_3laap, verts = bm_3laap.verts, dist = 0.0001)
    bm_3laap.to_mesh(mesh3fjjjgggagbecdefhjdlaap)

    objects3fjjjgggagbecdefhjdlaap.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaap = objects3fjjjgggagbecdefhjdlaap.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaap.object = arma

    vgroups3fjjjgggagbecdefhjdlaap = [objects3fjjjgggagbecdefhjdlaap.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaq = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaq.from_mesh(mesh3fjjjgggagbecdefhjdlaaq)
    objects3fjjjgggagbecdefhjdlaaq = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaq)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaq)
    bmesh.ops.remove_doubles(bm_3laaq, verts = bm_3laaq.verts, dist = 0.0001)
    bm_3laaq.to_mesh(mesh3fjjjgggagbecdefhjdlaaq)

    objects3fjjjgggagbecdefhjdlaaq.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaq = objects3fjjjgggagbecdefhjdlaaq.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaq.object = arma

    vgroups3fjjjgggagbecdefhjdlaaq = [objects3fjjjgggagbecdefhjdlaaq.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaar = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laar.from_mesh(mesh3fjjjgggagbecdefhjdlaar)
    objects3fjjjgggagbecdefhjdlaar = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaar)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaar)
    bmesh.ops.remove_doubles(bm_3laar, verts = bm_3laar.verts, dist = 0.0001)
    bm_3laar.to_mesh(mesh3fjjjgggagbecdefhjdlaar)

    objects3fjjjgggagbecdefhjdlaar.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaar = objects3fjjjgggagbecdefhjdlaar.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaar.object = arma

    vgroups3fjjjgggagbecdefhjdlaar = [objects3fjjjgggagbecdefhjdlaar.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaas = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laas.from_mesh(mesh3fjjjgggagbecdefhjdlaas)
    objects3fjjjgggagbecdefhjdlaas = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaas)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaas)
    bmesh.ops.remove_doubles(bm_3laas, verts = bm_3laas.verts, dist = 0.0001)
    bm_3laas.to_mesh(mesh3fjjjgggagbecdefhjdlaas)

    objects3fjjjgggagbecdefhjdlaas.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaas = objects3fjjjgggagbecdefhjdlaas.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaas.object = arma

    vgroups3fjjjgggagbecdefhjdlaas = [objects3fjjjgggagbecdefhjdlaas.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaat = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laat.from_mesh(mesh3fjjjgggagbecdefhjdlaat)
    objects3fjjjgggagbecdefhjdlaat = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaat)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaat)
    bmesh.ops.remove_doubles(bm_3laat, verts = bm_3laat.verts, dist = 0.0001)
    bm_3laat.to_mesh(mesh3fjjjgggagbecdefhjdlaat)

    objects3fjjjgggagbecdefhjdlaat.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaat = objects3fjjjgggagbecdefhjdlaat.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaat.object = arma

    vgroups3fjjjgggagbecdefhjdlaat = [objects3fjjjgggagbecdefhjdlaat.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaau = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laau.from_mesh(mesh3fjjjgggagbecdefhjdlaau)
    objects3fjjjgggagbecdefhjdlaau = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaau)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaau)
    bmesh.ops.remove_doubles(bm_3laau, verts = bm_3laau.verts, dist = 0.0001)
    bm_3laau.to_mesh(mesh3fjjjgggagbecdefhjdlaau)

    objects3fjjjgggagbecdefhjdlaau.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaau = objects3fjjjgggagbecdefhjdlaau.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaau.object = arma

    vgroups3fjjjgggagbecdefhjdlaau = [objects3fjjjgggagbecdefhjdlaau.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaav = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laav.from_mesh(mesh3fjjjgggagbecdefhjdlaav)
    objects3fjjjgggagbecdefhjdlaav = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaav)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaav)
    bmesh.ops.remove_doubles(bm_3laav, verts = bm_3laav.verts, dist = 0.0001)
    bm_3laav.to_mesh(mesh3fjjjgggagbecdefhjdlaav)

    objects3fjjjgggagbecdefhjdlaav.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaav = objects3fjjjgggagbecdefhjdlaav.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaav.object = arma

    vgroups3fjjjgggagbecdefhjdlaav = [objects3fjjjgggagbecdefhjdlaav.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaw = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaw.from_mesh(mesh3fjjjgggagbecdefhjdlaaw)
    objects3fjjjgggagbecdefhjdlaaw = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaw)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaw)
    bmesh.ops.remove_doubles(bm_3laaw, verts = bm_3laaw.verts, dist = 0.0001)
    bm_3laaw.to_mesh(mesh3fjjjgggagbecdefhjdlaaw)

    objects3fjjjgggagbecdefhjdlaaw.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaw = objects3fjjjgggagbecdefhjdlaaw.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaw.object = arma

    vgroups3fjjjgggagbecdefhjdlaaw = [objects3fjjjgggagbecdefhjdlaaw.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaax = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laax.from_mesh(mesh3fjjjgggagbecdefhjdlaax)
    objects3fjjjgggagbecdefhjdlaax = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaax)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaax)
    bmesh.ops.remove_doubles(bm_3laax, verts = bm_3laax.verts, dist = 0.0001)
    bm_3laax.to_mesh(mesh3fjjjgggagbecdefhjdlaax)

    objects3fjjjgggagbecdefhjdlaax.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaax = objects3fjjjgggagbecdefhjdlaax.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaax.object = arma

    vgroups3fjjjgggagbecdefhjdlaax = [objects3fjjjgggagbecdefhjdlaax.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaay = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laay.from_mesh(mesh3fjjjgggagbecdefhjdlaay)
    objects3fjjjgggagbecdefhjdlaay = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaay)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaay)
    bmesh.ops.remove_doubles(bm_3laay, verts = bm_3laay.verts, dist = 0.0001)
    bm_3laay.to_mesh(mesh3fjjjgggagbecdefhjdlaay)

    objects3fjjjgggagbecdefhjdlaay.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaay = objects3fjjjgggagbecdefhjdlaay.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaay.object = arma

    vgroups3fjjjgggagbecdefhjdlaay = [objects3fjjjgggagbecdefhjdlaay.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaz = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaz.from_mesh(mesh3fjjjgggagbecdefhjdlaaz)
    objects3fjjjgggagbecdefhjdlaaz = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaz)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaz)
    bmesh.ops.remove_doubles(bm_3laaz, verts = bm_3laaz.verts, dist = 0.0001)
    bm_3laaz.to_mesh(mesh3fjjjgggagbecdefhjdlaaz)

    objects3fjjjgggagbecdefhjdlaaz.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaz = objects3fjjjgggagbecdefhjdlaaz.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaz.object = arma

    vgroups3fjjjgggagbecdefhjdlaaz = [objects3fjjjgggagbecdefhjdlaaz.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaaa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaaa.from_mesh(mesh3fjjjgggagbecdefhjdlaaaa)
    objects3fjjjgggagbecdefhjdlaaaa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaaa)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaaa)
    bmesh.ops.remove_doubles(bm_3laaaa, verts = bm_3laaaa.verts, dist = 0.0001)
    bm_3laaaa.to_mesh(mesh3fjjjgggagbecdefhjdlaaaa)

    objects3fjjjgggagbecdefhjdlaaaa.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaaa = objects3fjjjgggagbecdefhjdlaaaa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaaa.object = arma

    vgroups3fjjjgggagbecdefhjdlaaaa = [objects3fjjjgggagbecdefhjdlaaaa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaab = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaab.from_mesh(mesh3fjjjgggagbecdefhjdlaaab)
    objects3fjjjgggagbecdefhjdlaaab = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaab)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaab)
    bmesh.ops.remove_doubles(bm_3laaab, verts = bm_3laaab.verts, dist = 0.0001)
    bm_3laaab.to_mesh(mesh3fjjjgggagbecdefhjdlaaab)

    objects3fjjjgggagbecdefhjdlaaab.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaab = objects3fjjjgggagbecdefhjdlaaab.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaab.object = arma

    vgroups3fjjjgggagbecdefhjdlaaab = [objects3fjjjgggagbecdefhjdlaaab.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaac = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaac.from_mesh(mesh3fjjjgggagbecdefhjdlaaac)
    objects3fjjjgggagbecdefhjdlaaac = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaac)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaac)
    bmesh.ops.remove_doubles(bm_3laaac, verts = bm_3laaac.verts, dist = 0.0001)
    bm_3laaac.to_mesh(mesh3fjjjgggagbecdefhjdlaaac)

    objects3fjjjgggagbecdefhjdlaaac.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaac = objects3fjjjgggagbecdefhjdlaaac.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaac.object = arma

    vgroups3fjjjgggagbecdefhjdlaaac = [objects3fjjjgggagbecdefhjdlaaac.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaad = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaad.from_mesh(mesh3fjjjgggagbecdefhjdlaaad)
    objects3fjjjgggagbecdefhjdlaaad = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaad)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaad)
    bmesh.ops.remove_doubles(bm_3laaad, verts = bm_3laaad.verts, dist = 0.0001)
    bm_3laaad.to_mesh(mesh3fjjjgggagbecdefhjdlaaad)

    objects3fjjjgggagbecdefhjdlaaad.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaad = objects3fjjjgggagbecdefhjdlaaad.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaad.object = arma

    vgroups3fjjjgggagbecdefhjdlaaad = [objects3fjjjgggagbecdefhjdlaaad.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaae = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaae.from_mesh(mesh3fjjjgggagbecdefhjdlaaae)
    objects3fjjjgggagbecdefhjdlaaae = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaae)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaae)
    bmesh.ops.remove_doubles(bm_3laaae, verts = bm_3laaae.verts, dist = 0.0001)
    bm_3laaae.to_mesh(mesh3fjjjgggagbecdefhjdlaaae)

    objects3fjjjgggagbecdefhjdlaaae.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaae = objects3fjjjgggagbecdefhjdlaaae.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaae.object = arma

    vgroups3fjjjgggagbecdefhjdlaaae = [objects3fjjjgggagbecdefhjdlaaae.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fjjjgggagbecdefhjdlaaaf = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3laaaf.from_mesh(mesh3fjjjgggagbecdefhjdlaaaf)
    objects3fjjjgggagbecdefhjdlaaaf = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fjjjgggagbecdefhjdlaaaf)
    collection.objects.link(objects3fjjjgggagbecdefhjdlaaaf)
    bmesh.ops.remove_doubles(bm_3laaaf, verts = bm_3laaaf.verts, dist = 0.0001)
    bm_3laaaf.to_mesh(mesh3fjjjgggagbecdefhjdlaaaf)

    objects3fjjjgggagbecdefhjdlaaaf.parent = arma
    
    armamodifier3fjjjgggagbecdefhjdlaaaf = objects3fjjjgggagbecdefhjdlaaaf.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fjjjgggagbecdefhjdlaaaf.object = arma

    vgroups3fjjjgggagbecdefhjdlaaaf = [objects3fjjjgggagbecdefhjdlaaaf.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    

    


    #####################################################################################

    mesh3fi = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fd.from_mesh(mesh3fi)
    objects3fi = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fi)
    collection.objects.link(objects3fi)
    bmesh.ops.remove_doubles(bm_3fd, verts = bm_3fd.verts, dist = 0.0001)
    bm_3fd.to_mesh(mesh3fi)

    objects3fi.parent = arma
    
    armamodifier3fi = objects3fi.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fi.object = arma

    vgroups3fi = [objects3fi.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fii = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fdd.from_mesh(mesh3fii)
    objects3fii = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fii)
    collection.objects.link(objects3fii)
    bmesh.ops.remove_doubles(bm_3fdd, verts = bm_3fdd.verts, dist = 0.0001)
    bm_3fdd.to_mesh(mesh3fii)

    objects3fii.parent = arma
    
    armamodifier3fii = objects3fii.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fii.object = arma

    vgroups3fii = [objects3fii.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fiii = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fddd.from_mesh(mesh3fiii)
    objects3fiii = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fiii)
    collection.objects.link(objects3fiii)
    bmesh.ops.remove_doubles(bm_3fddd, verts = bm_3fddd.verts, dist = 0.0001)
    bm_3fddd.to_mesh(mesh3fiii)

    objects3fiii.parent = arma

    
    armamodifier3fiii = objects3fiii.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fiii.object = arma

    vgroups3fiii = [objects3fiii.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fiiii = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fdddd.from_mesh(mesh3fiiii)
    objects3fiiii = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fiiii)
    collection.objects.link(objects3fiiii)
    bmesh.ops.remove_doubles(bm_3fdddd, verts = bm_3fdddd.verts, dist = 0.0001)
    bm_3fdddd.to_mesh(mesh3fiiii)

    objects3fiiii.parent = arma
    
    
    armamodifier3fiiii = objects3fiiii.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fiiii.object = arma

    vgroups3fiiii = [objects3fiiii.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fiiiii = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fdddd1.from_mesh(mesh3fiiiii)
    objects3fiiiii = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fiiiii)
    collection.objects.link(objects3fiiiii)
    bmesh.ops.remove_doubles(bm_3fdddd1, verts = bm_3fdddd1.verts, dist = 0.0001)
    bm_3fdddd1.to_mesh(mesh3fiiiii)

    objects3fiiiii.parent = arma

    armamodifier3fiiiii = objects3fiiiii.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fiiiii.object = arma

    vgroups3fiiiii = [objects3fiiiii.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fc.from_mesh(mesh3fh)
    objects3fh = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fh)
    collection.objects.link(objects3fh)
    bmesh.ops.remove_doubles(bm_3fc, verts = bm_3fc.verts, dist = 0.0001)
    bm_3fc.to_mesh(mesh3fh)

    objects3fh.parent = arma


    
    armamodifier3fh = objects3fh.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fh.object = arma

    vgroups3fh = [objects3fh.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fg = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fb.from_mesh(mesh3fg)
    objects3fg = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fg)
    collection.objects.link(objects3fg)
    bmesh.ops.remove_doubles(bm_3fb, verts = bm_3fb.verts, dist = 0.0001)
    bm_3fb.to_mesh(mesh3fg)

    objects3fg.parent = arma


    
    armamodifier3fg = objects3fg.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fg.object = arma

    vgroups3fg = [objects3fg.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3ff = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3fa.from_mesh(mesh3ff)
    objects3ff = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3ff)
    collection.objects.link(objects3ff)
    bmesh.ops.remove_doubles(bm_3fa, verts = bm_3fa.verts, dist = 0.0001)
    bm_3fa.to_mesh(mesh3ff)

    objects3ff.parent = arma
    
    armamodifier3ff = objects3ff.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3ff.object = arma

    vgroups3ff = [objects3ff.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    

    mesh3fe = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3f.from_mesh(mesh3fe)
    objects3fe = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fe)
    collection.objects.link(objects3fe)
    bmesh.ops.remove_doubles(bm_3f, verts = bm_3f.verts, dist = 0.0001)
    bm_3f.to_mesh(mesh3fe)

    objects3fe.parent = arma

    
    armamodifier3fe = objects3fe.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fe.object = arma

    vgroups3fe = [objects3fe.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ed.from_mesh(mesh3fd)
    objects3fd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fd)
    collection.objects.link(objects3fd)
    bmesh.ops.remove_doubles(bm_3ed, verts = bm_3ed.verts, dist = 0.0001)
    bm_3ed.to_mesh(mesh3fd)

    objects3fd.parent = arma


    
    armamodifier3fd = objects3fd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fd.object = arma

    vgroups3fd = [objects3fd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fdedd = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3edd.from_mesh(mesh3fdedd)
    objects3fdedd = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fdedd)
    collection.objects.link(objects3fdedd)
    bmesh.ops.remove_doubles(bm_3edd, verts = bm_3edd.verts, dist = 0.0001)
    bm_3edd.to_mesh(mesh3fdedd)

    objects3fdedd.parent = arma

    
    armamodifier3fdedd = objects3fdedd.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fdedd.object = arma

    vgroups3fdedd = [objects3fdedd.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ec.from_mesh(mesh3fc)
    objects3fc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fc)
    collection.objects.link(objects3fc)
    bmesh.ops.remove_doubles(bm_3ec, verts = bm_3ec.verts, dist = 0.0001)
    bm_3ec.to_mesh(mesh3fc)

    objects3fc.parent = arma

    
    armamodifier3fc = objects3fc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fc.object = arma

    vgroups3fc = [objects3fc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3eb.from_mesh(mesh3fb)
    objects3fb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fb)
    collection.objects.link(objects3fb)
    bmesh.ops.remove_doubles(bm_3eb, verts = bm_3eb.verts, dist = 0.0001)
    bm_3eb.to_mesh(mesh3fb)

    objects3fb.parent = arma


    
    armamodifier3fb = objects3fb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fb.object = arma

    vgroups3fb = [objects3fb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3fa = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ea.from_mesh(mesh3fa)
    objects3fa = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3fa)
    collection.objects.link(objects3fa)
    bmesh.ops.remove_doubles(bm_3ea, verts = bm_3ea.verts, dist = 0.0001)
    bm_3ea.to_mesh(mesh3fa)

    objects3fa.parent = arma


    
    armamodifier3fa = objects3fa.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3fa.object = arma

    vgroups3fa = [objects3fa.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3f = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3e.from_mesh(mesh3f)
    objects3f = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3f)
    collection.objects.link(objects3f)
    bmesh.ops.remove_doubles(bm_3e, verts = bm_3e.verts, dist = 0.0001)
    bm_3e.to_mesh(mesh3f)

    objects3f.parent = arma

    
    armamodifier3f = objects3f.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3f.object = arma

    vgroups3f = [objects3f.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3e = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3da.from_mesh(mesh3e)
    objects3e = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3e)
    collection.objects.link(objects3e)
    bmesh.ops.remove_doubles(bm_3da, verts = bm_3da.verts, dist = 0.0001)
    bm_3da.to_mesh(mesh3e)

    objects3e.parent = arma

    
    armamodifier3e = objects3e.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3e.object = arma

    vgroups3e = [objects3e.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3eda = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3daa.from_mesh(mesh3eda)
    objects3eda = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3eda)
    collection.objects.link(objects3eda)
    bmesh.ops.remove_doubles(bm_3daa, verts = bm_3daa.verts, dist = 0.0001)
    bm_3daa.to_mesh(mesh3eda)

    objects3eda.parent = arma


    
    armamodifier3eda = objects3eda.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3eda.object = arma

    vgroups3eda = [objects3eda.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3d = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3d.from_mesh(mesh3d)
    objects3d = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3d)
    collection.objects.link(objects3d)
    bmesh.ops.remove_doubles(bm_3d, verts = bm_3d.verts, dist = 0.0001)
    bm_3d.to_mesh(mesh3d)

    objects3d.parent = arma


    
    armamodifier3d = objects3d.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3d.object = arma

    vgroups3d = [objects3d.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    ###############################################

    mesh3dbbb = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3db.from_mesh(mesh3dbbb)
    objects3dbbb = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3dbbb)
    collection.objects.link(objects3dbbb)
    bmesh.ops.remove_doubles(bm_3db, verts = bm_3db.verts, dist = 0.0001)
    bm_3db.to_mesh(mesh3dbbb)

    objects3dbbb.parent = arma


    
    armamodifier3dbbb = objects3dbbb.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3dbbb.object = arma

    vgroups3dbbb = [objects3dbbb.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3dbbc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3dc.from_mesh(mesh3dbbc)
    objects3dbbc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3dbbc)
    collection.objects.link(objects3dbbc)
    bmesh.ops.remove_doubles(bm_3dc, verts = bm_3dc.verts, dist = 0.0001)
    bm_3dc.to_mesh(mesh3dbbc)

    objects3dbbc.parent = arma


    
    armamodifier3dbbc = objects3dbbc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3dbbc.object = arma

    vgroups3dbbc = [objects3dbbc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]


    ###############################################

    mesh3c = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3c.from_mesh(mesh3c)
    objects3c = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3c)
    collection.objects.link(objects3c)
    bmesh.ops.remove_doubles(bm_3c, verts = bm_3c.verts, dist = 0.0001)
    bm_3c.to_mesh(mesh3c)

    objects3c.parent = arma


    
    armamodifier3c = objects3c.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3c.object = arma

    vgroups3c = [objects3c.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3cc = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3ca.from_mesh(mesh3cc)
    objects3cc = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3cc)
    collection.objects.link(objects3cc)
    bmesh.ops.remove_doubles(bm_3ca, verts = bm_3ca.verts, dist = 0.0001)
    bm_3ca.to_mesh(mesh3cc)

    objects3cc.parent = arma

    
    armamodifier3cc = objects3cc.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3cc.object = arma

    vgroups3cc = [objects3cc.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3b = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3b.from_mesh(mesh3b)
    objects3b = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3b)
    collection.objects.link(objects3b)
    bmesh.ops.remove_doubles(bm_3b, verts = bm_3b.verts, dist = 0.0001)
    bm_3b.to_mesh(mesh3b)

    objects3b.parent = arma

    
    armamodifier3b = objects3b.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3b.object = arma

    vgroups3b = [objects3b.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    mesh3a = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm_3a.from_mesh(mesh3a)
    objects3a = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh3a)
    collection.objects.link(objects3a)
    bmesh.ops.remove_doubles(bm_3a, verts = bm_3a.verts, dist = 0.0001)
    bm_3a.to_mesh(mesh3a)

    objects3a.parent = arma

    
    armamodifier3a = objects3a.modifiers.new("GHG Armature Modifier", "ARMATURE")
    armamodifier3a.object = arma

    vgroups3a = [objects3a.vertex_groups.new(name = bone.name) for bone in arma.data.bones]

    obj = bpy.data.objects[os.path.basename(os.path.splitext(filepath)[0])]
    bpy.context.view_layer.objects.active = obj
    bpy.ops.object.select_all(action='SELECT')
    bpy.ops.object.join()
    bpy.ops.object.select_all(action='DESELECT')

    
                        

def GHG_mesh_1(f, filepath):
    f.seek(0)
    Chunk = f.read()
    f.seek(0)
    bm = bmesh.new()
    memory_face_offset=67043583
    for i in range(len(Chunk)):
        Chunks = f.read(4)
        if Chunks == b"\x03\x01\x00\x01":
            flag1 = unpack("B", f.read(1))[0]
            f.seek(1,1)
            vertexCount = unpack("B", f.read(1))[0]
            flag2 = unpack("B", f.read(1))[0]
            for i in range(vertexCount):
                    
                vx1 = unpack("<f", f.read(4))[0]
                vy1 = unpack("<f", f.read(4))[0]
                vz1 = unpack("<f", f.read(4))[0]
                vw1 = unpack("<f", f.read(4))[0]
                fa1 = bm.verts.new([-vx1,-vy1,-vz1])
                                
                        
                        
    collection = bpy.data.collections.new(os.path.basename(os.path.splitext(filepath)[0]))
    bpy.context.scene.collection.children.link(collection)
    mesh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm.from_mesh(mesh)
    objects = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh)
    collection.objects.link(objects)
    bmesh.ops.remove_doubles(bm, verts = bm.verts, dist = 0.0001)
    bm.to_mesh(mesh)

    """for fac in bm.faces:
        fac.normal_flip()

    for fac in mesh.polygons:
        fac.use_smooth = True"""
                

def GHG_mesh_2(f, filepath):
    f.seek(0)
    Chunk = f.read()
    f.seek(0)
    bm = bmesh.new()
    for i in range(len(Chunk)):
        Chunks = f.read(4)
        if Chunks == b"\x03\x02\x00\x01":
            flag1 = unpack("B", f.read(1))[0]
            f.seek(1,1)
            vertexCount = unpack("B", f.read(1))[0]//2
            flag2 = unpack("B", f.read(1))[0]
            for i in range(vertexCount):
                vx1 = unpack("<h", f.read(2))[0] / 4096
                vy1 = unpack("<h", f.read(2))[0] / 4096
                vz1 = unpack("<h", f.read(2))[0] / 4096
                vw1 = unpack("<h", f.read(2))[0] / 4096
                f.seek(8,1)
                bm.verts.new([-vx1,-vy1,-vz1])
                        
    collection = bpy.data.collections.new(os.path.basename(os.path.splitext(filepath)[0]))
    bpy.context.scene.collection.children.link(collection)
    mesh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm.from_mesh(mesh)
    objects = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh)
    collection.objects.link(objects)
    bmesh.ops.remove_doubles(bm, verts = bm.verts, dist = 0.0001)
    bm.to_mesh(mesh)

    """for fac in mesh.polygons:
        fac.use_smooth = True"""

def GHG_mesh_3(f, filepath):
    f.seek(0)
    Chunk = f.read()
    f.seek(0)
    uvs=[]
    bm = bmesh.new()
    for i in range(len(Chunk)):
        Chunks = f.read(4)
        if Chunks == b"\x04\x02\x00\x01":
            flag1 = unpack("B", f.read(1))[0]
            f.seek(1,1)
            vertexCount = unpack("B", f.read(1))[0] // 2
            flag2 = unpack("B", f.read(1))[0]
            for i in range(vertexCount):
                vx1 = unpack("<f", f.read(4))[0]
                vy1 = unpack("<f", f.read(4))[0]
                vz1 = unpack("<f", f.read(4))[0]
                vw1 = unpack("<f", f.read(4))[0]
                f.seek(16,1)
                bm.verts.new([-vx1,-vy1,-vz1])
                    
            
                
                        
    collection = bpy.data.collections.new(os.path.basename(os.path.splitext(filepath)[0]))
    bpy.context.scene.collection.children.link(collection)
    mesh = bpy.data.meshes.new(os.path.basename(os.path.splitext(filepath)[0]))
    bm.from_mesh(mesh)
    objects = bpy.data.objects.new(os.path.basename(os.path.splitext(filepath)[0]), mesh)
    collection.objects.link(objects)
    bmesh.ops.remove_doubles(bm, verts = bm.verts, dist = 0.0001)
    bm.to_mesh(mesh)

    """for fac in bm.faces:
        fac.normal_flip()

    for fac in mesh.polygons:
        fac.use_smooth = True"""
            

def ghg_open(filepath, offset_on_off=False, offsets="", input_on_off=False, input_name="", bsa_on_off=False):
    with open(filepath, "rb") as f:
        if offset_on_off:
            if offsets == "all":
                GHG_mesh(f, filepath)

        if input_on_off:
            if input_name == "None":
                pass

        if bsa_on_off:
            GHG_Blend_Object(f, filepath)
            
            
                
            
    
