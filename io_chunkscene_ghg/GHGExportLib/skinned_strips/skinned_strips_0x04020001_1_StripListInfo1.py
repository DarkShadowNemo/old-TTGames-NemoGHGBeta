import bpy
from struct import unpack, pack
import mathutils
import math

def ghg_skinned_0x040200010380XX6C_STRIPLISTINFO(f, filepath):
    if len(bpy.data.images) != 0:
        ob = bpy.context.object
        byte1=0
        for pbone in ob.pose.bones:
            byte1+=16
    elif len(bpy.data.images) == 0:
        ob = bpy.context.object
        byte1=0
        for pbone in ob.pose.bones:
            byte1+=16
        FileSize = 0
        FileSize2 = 0
        FileSize3 = 0
        FileSize4 = 0
        FileSize5 = 0
        FileSize6 = 0
        FileSize7 = 0
        FileSize8 = 0
        FileSize9 = 0
        FileSize10 = 0
        FileSize11 = 0
        positions1=[]
        positions2=[]
        FileSize12 = 0
        FileSize13 = 0
        FileSize14 = 0
        FileSize15 = 0
        FileSize16 = 0
        FileSize17 = 0
        FileSize18 = 0
        FileSize19 = 0
        FileSize20 = 0
        FileSize21 = 0
        FileSize22 = 0
        f.write(pack("<I", FileSize))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", len(bpy.data.meshes)))
        f.write(pack("<I", 144))
        f.write(pack("<I", len(ob.pose.bones)))
        f.write(pack("<I", FileSize3))
        f.write(pack("<I", FileSize4))
        f.write(pack("<I", FileSize5))
        f.write(pack("<I", 0))
        f.write(pack("<I", FileSize6))
        f.write(pack("<I", FileSize7))
        f.write(pack("<I", byte1+16))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 1))
        f.write(pack("<I", FileSize8))
        f.write(pack("<I", 0))
        for i in range(11):
            f.write(pack("<f", 0))
        f.write(pack("<I", 0))
        f.write(pack("<f", 1))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))

        test7=0
        test2=0
        test3=0
        test4=0
        size1=0
        
        for i, msh in enumerate(bpy.data.meshes):
            f.write(pack("<I", size1+144+16+test2))
            test2+=464
            
        pad_len = f.tell() % 16
        if pad_len > 0:
            f.write(b"\0" * (16-pad_len))
            size2 = f.seek(size1,1)
            f.seek(0)
            f.seek(144,1)
            for i, msh in enumerate(bpy.data.meshes):
                f.write(pack("<I", size2+test3))
                test3+=464
                
            pad_len77 = f.tell() % 16
            if pad_len77 > 0:
                f.write(b"\0" * (16-pad_len77))

        matID=0

        for i, mshs in enumerate(bpy.data.meshes):
            f.write(pack("B", 13))
            f.write(pack("B", 0))
            f.write(pack("B", 1))
            f.write(pack("B", 0x60))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 16))
            f.write(pack("B", 8))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x50))
            f.write(pack("B", 7))
            f.write(pack("B", 0x80))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 16))
            f.write(pack("B", 14))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x48))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x1B))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x44))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x42))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x8C))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 1))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x4E))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0xDB))
            f.write(pack("B", 0x37))
            f.write(pack("B", 5))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x47))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x7F))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))#1
            f.write(pack("B", 0))#2
            f.write(pack("B", 0))#3
            f.write(pack("B", 0))#4
            f.write(pack("B", 1))
            f.write(pack("B", 1))
            f.write(pack("B", 0))
            f.write(pack("B", 1))
            f.write(pack("B", 0x13))
            f.write(pack("B", 0))
            f.write(pack("B", 3))
            f.write(pack("B", 0x6C))
            f.write(pack("<f", 1))
            f.write(pack("<f", 1))
            f.write(pack("<f", 1))
            f.write(pack("<f", 1))
            for i in range(19):
                f.write(pack("B", 0))
            f.write(pack("B", 0x30))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            for i in range(128):
                f.write(pack("B", 0))
            f.write(pack("B", 0x19))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("<I", 16384))
            f.write(pack("B", 0xB0))
            f.write(pack("B", 0xE2))
            f.write(pack("B", 0xA3))
            f.write(pack("B", 0))
            f.write(pack("B", 0x80))
            f.write(pack("B", 0x60))
            f.write(pack("B", 0x49))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x3D))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0x58))
            f.write(pack("B", 0xE3))
            f.write(pack("B", 0xA3))
            f.write(pack("B", 0))
            f.write(pack("B", 0xB0))
            f.write(pack("B", 0xDD))
            f.write(pack("B", 0x87))
            f.write(pack("B", 0))
            f.write(pack("B", 0x60))
            f.write(pack("B", 0x7B))
            f.write(pack("B", 0x98))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("<f", 0))
            f.write(pack("B", 0x13))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("<f", 0.5))
            f.write(pack("<f", 0.5))
            f.write(pack("<f", 0.5))
            f.write(pack("<f", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<f", 1))
            f.write(pack("<I", 0))
            f.write(pack("<I", matID))
            f.write(pack("B", 0xA6))
            f.write(pack("B", 255))
            f.write(pack("B", 0))
            f.write(pack("B", 0))

            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("<I", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0))
            f.write(pack("B", 0xFF))

            matID+=1

        namedt = f.seek(FileSize7,1)

        for pbone in ob.pose.bones:
            f.write(bytes(pbone.name, "utf-8"))
            f.write(pack("B", 0))

            pad_len2 = f.tell() % 16
            if pad_len2 > 0:
                f.write(b"\0" * (16-pad_len2))

        if len(pbone.name) >= 16:
            raise Exception("must be length 16 name bones")

        f.write(bytes("defaultLayer\x00\x00\x00\x00", "utf-8"))

        rotm1 = f.seek(FileSize3,1)
        characternamelength = 0
        for pbone in ob.pose.bones:
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<I", 144+FileSize7+464*len(bpy.data.meshes)+characternamelength+16))
            f.write(pack("b", ob.data.bones.find(pbone.parent.name) if pbone.parent is not None else -1))
            f.write(pack("<I", 1))
            for i in range(11):
                f.write(pack("B", 0))
            characternamelength+=16
        sclm1 = f.seek(FileSize4,1)

        for i in range(len(ob.pose.bones)-1):
            f.seek(-96,1)
        for pbone in ob.pose.bones[1:]:
            f.write(pack("<f", pbone.scale.x))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", pbone.scale.y))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", pbone.scale.z))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.seek(20,1)
            
            
        """for i, bone in enumerate(ob.pose.bones):
            mat = bone.matrix.copy()
            if bone.parent:
                mat = bone.parent.matrix.inverted_safe() @ mat"""
        f.write(pack("<f", 1))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 1))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 1))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 0))
        f.write(pack("<f", 1))

        
            
        posm1 = f.seek(FileSize5,1)
        """steps forw"""
        #for i, bone in enumerate(ob.pose.bones[bidx:],1):
        """steps back"""
        #for i, bone in enumerate(ob.pose.bones[:bidx],1):
        
        for i, bone in enumerate(ob.pose.bones):
            mat = bone.matrix.copy()
            if bone.parent:
                mat = bone.parent.matrix.inverted_safe() @ mat
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 0))
            f.write(pack("<f", 1))
            f.write(pack("<f", 0))
            f.write(pack("<f", -bone.head[0]))
            f.write(pack("<f", -bone.head[2]))
            f.write(pack("<f", -bone.head[1]))
            f.write(pack("<f", 1))
            
        msh1s = f.seek(FileSize6,1)
            
        msh2s = f.seek(FileSize8,1)
        
            
        f.write(pack("<I", FileSize9))
        f.write(pack("<I", 0))
        f.write(pack("<I", FileSize10))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        dsize1 = f.seek(FileSize9,1)
        f.seek(-20,1)
        f.write(pack("<I", dsize1))
        f.seek(16,1)
        f.write(bytes("defaultLayer\x00\x00\x00\x00", "utf-8"))
        
        dsize2 = f.seek(FileSize10,1)
        
        f.seek(-36,1)
        f.seek(8,1)
        f.write(pack("<I", dsize2))
        
        f.seek(24,1)
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", FileSize11))
        
        dsize3 = f.seek(FileSize11,1)
        f.seek(-4,1)
        f.write(pack("<I", dsize3+76))
        f.write(pack("<I", 0))
        for i in range(18):
            f.write(pack("<f", 0))

        modelID=0
        indexFaces2=-1
        indexFaces3=-1

        for i, mm_mat in enumerate(bpy.data.meshes):
            if len(mm_mat.vertices) == 3:
                f.write(pack("<I", FileSize17))
                dsize8 = f.seek(FileSize17,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize8-4+480))
                f.write(pack("<I", modelID))
                f.write(pack("<I", 0))
                f.write(pack("<I", FileSize18))
                dsize9 = f.seek(FileSize18,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize9))
                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 112))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 288))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1610612736))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<H", 13))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 3))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65548))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                for facs in mm_mat.polygons:
                    indexFaces3+=1
                    if indexFaces3 == 0:
                        f.seek(-96,1)
                        if facs.vertices[0:3]:
                            f.seek(28,1)
                            f.write(pack("B", 1))
                            f.seek(3,1)
                            f.seek(28,1)
                            f.write(pack("B", 1))
                            f.seek(3,1)
                            f.seek(28,1)
                            f.write(pack("B", 0))
                            f.seek(3,1)
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610842117))
                f.write(pack("<I", 1065353216))
                f.write(pack("<I", 1065353216))
                f.write(pack("<I", 1065353216))
                f.write(pack("<I", 335545090))

                f.write(pack("<H", 13))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 3))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65548))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610842117))
                f.write(pack("<I", 1065353216))
                f.write(pack("<I", 1065353216))
                f.write(pack("<I", 1065353216))

                f.write(pack("<I", 385875968))
            elif len(mm_mat.vertices) == 4:
                f.write(pack("<I", FileSize12))
                dsize5 = f.seek(FileSize12,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize5-4+576))
                f.write(pack("<I", modelID))
                f.write(pack("<I", 0))
                f.write(pack("<I", FileSize13))
                dsize4 = f.seek(FileSize13,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize4))
                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 112))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 336))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1610612736))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<H", 13))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 4))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65552))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                for facs in mm_mat.polygons:
                    indexFaces2+=1
                    if indexFaces2 == 1:
                        f.seek(-128,1)
                        if facs.vertices[0:3]:
                            f.seek(28,1)
                            f.write(pack("B", 1))
                            f.seek(3,1)
                            f.seek(28,1)
                            f.write(pack("B", 1))
                            f.seek(3,1)
                            f.seek(28,1)
                            f.write(pack("B", 0))
                            f.seek(3,1)
                            f.seek(28,1)
                            f.write(pack("B", 0))
                            f.seek(3,1)
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610711045))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711049))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 335545090))

                f.write(pack("<H", 13))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 4))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65552))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610711045))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711049))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 385875968))
            elif len(mm_mat.vertices) == 5:
                f.write(pack("<I", FileSize19))
                dsize6 = f.seek(FileSize19,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize6-4+944))
                f.write(pack("<I", modelID))
                f.write(pack("<I", 0))
                f.write(pack("<I", FileSize20))
                dsize7 = f.seek(FileSize20,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize7))
                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 160))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 448))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 704))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 1610612736))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<H", 17))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 5))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65556))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                faces000 = []
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                for facs in mm_mat.polygons:
                    indexFaces2+=1
                    a=facs.vertices[0]
                    b=facs.vertices[1]
                    c=facs.vertices[2]
                    faces000.append([a,b,c])
                if faces000[0:5] == [[0, 1, 2], [2, 3, 4], [2, 1, 3]]:
                    f.seek(-160,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1)
                elif faces000[0:2] == [[0, 1, 2], [2, 3, 4]]:
                    f.seek(-160,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1)

                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610776581))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610776593))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<I", 335545090))
                

                f.write(pack("<H", 0))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 5))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65556))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610776581))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610776593))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<I", 335545090))

                f.write(pack("<H", 0))
                f.write(pack("B", 6))
                f.write(pack("B", 96))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1812037842))
                f.write(pack("B", 5))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65556))
                f.write(pack("<I", 0))
                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610776581))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 1610776593))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<I", 385875968))
            elif len(mm_mat.vertices) == 6:
                f.write(pack("<I", FileSize21))
                dsize8 = f.seek(FileSize21,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize8-4))
                f.write(pack("<I", modelID))
                f.write(pack("<I", 0))
                f.write(pack("<I", FileSize22))
                dsize9 = f.seek(FileSize22,1)
                f.seek(-4,1)
                f.write(pack("<I", dsize9))
                
                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 496))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 784))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 268894208))
                f.write(pack("<I", 0))
                f.write(pack("<I", 16777480))
                f.write(pack("<I", 0))
                f.write(pack("<I", 805830660))
                f.write(pack("<I", 0))
                f.write(pack("<I", 268435456))
                f.write(pack("<I", 1812201496))
                f.write(pack("<I", 1342177280))
                f.write(pack("<I", 1072))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<I", 1610612736))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))
                f.write(pack("<I", 0))

                f.write(pack("<H", 21))
                f.write(pack("B", 6))
                f.write(pack("B", 96))

                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))

                f.write(pack("<I", 1812037842))
                f.write(pack("B", 6))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65560))
                f.write(pack("<I", 0))

                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))

                faces0000 = []
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                for facs in mm_mat.polygons:
                    a=facs.vertices[0]
                    b=facs.vertices[1]
                    c=facs.vertices[2]
                    faces0000.append([a,b,c])
                if faces0000[0:8] == [[0, 1, 2], [2, 3, 4], [2, 1, 3], [4, 3, 5]]:
                    f.seek(-192,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1)
                elif faces0000[0:2] == [[0, 1, 2], [4, 3, 5]]:
                    f.seek(-192,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1)
                elif faces0000[0:5] == [[0, 1, 2], [2, 3, 4], [4, 3, 5]]:
                    f.seek(-192,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1)
                elif faces0000[0:5] == [[0, 1, 2], [2, 1, 3], [4, 3, 5]]:
                    f.seek(-192,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1);f.seek(28,1);f.write(pack("B", 1));f.seek(3,1);f.seek(28,1);f.write(pack("B", 0));f.seek(3,1)
                    
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610973189))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 335545090))

                f.write(pack("<H", 0))
                f.write(pack("B", 6))
                f.write(pack("B", 96))

                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))

                f.write(pack("<I", 1812037842))
                f.write(pack("B", 6))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65560))
                f.write(pack("<I", 0))

                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))

                faces0000 = []
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))                    
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610973189))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 335545090))

                f.write(pack("<H", 0))
                f.write(pack("B", 6))
                f.write(pack("B", 96))

                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))

                f.write(pack("<I", 1812037842))
                f.write(pack("B", 6))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65560))
                f.write(pack("<I", 0))

                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))

                faces0000 = []
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))                    
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610973189))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 335545090))

                f.write(pack("<H", 0))
                f.write(pack("B", 6))
                f.write(pack("B", 96))

                f.write(pack("<I", 0))
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 0))

                f.write(pack("<I", 1812037842))
                f.write(pack("B", 6))
                f.write(pack("<I", 128))
                f.write(pack("B", 64))
                f.write(pack("B", 2))
                f.write(pack("B", 48))
                f.write(pack("<I", 1298))
                f.write(pack("<I", 0))
                f.write(pack("<I", 1828814850))
                f.write(pack("<I", 65560))
                f.write(pack("<I", 0))

                f.write(pack("B", 4))
                f.write(pack("B", 2))
                f.write(pack("B", 0))
                f.write(pack("B", 1))
                f.write(pack("B", 3))
                f.write(pack("B", 128))
                f.write(pack("B", len(mm_mat.vertices)*2))
                f.write(pack("B", 108))

                faces0000 = []
                for v in mm_mat.vertices:
                    f.write(pack("<f", v.co.x))
                    f.write(pack("<f", v.co.z))
                    f.write(pack("<f", v.co.y))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))
                    f.write(pack("<f", 0))                    
                f.write(pack("<I", 16777473))
                f.write(pack("<I", 1610973189))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1))
                f.write(pack("<f", 1610711053))
                f.write(pack("<f", 1))
                f.write(pack("<I", 385875968))
                
            modelID+=1
        if len(mm_mat.vertices) == 3:
            f.seek(-480,1)
            f.write(pack("<I", 0))
            f.seek(-4,1)
            f.seek(480,1)
            if len(mm_mat.vertices) == 4:
                f.write(pack("<I", 0))
                f.seek(576,1)
            elif len(mm_mat.vertices) == 5:
                f.write(pack("<I", 0))
                f.seek(944,1)
            
        elif len(mm_mat.vertices) == 4:
            f.seek(-576,1)
            f.write(pack("<I", 0))
            f.seek(-4,1)
            f.seek(576,1)
            if len(mm_mat.vertices) == 3:
                f.write(pack("<I", 0))
                f.seek(480,1)
            elif len(mm_mat.vertices) == 5:
                f.write(pack("<I", 0))
                f.seek(944,1)
                
        elif len(mm_mat.vertices) == 5:
            f.seek(-944,1)
            f.write(pack("<I", 0))
            f.seek(-4,1)
            f.seek(944,1)
            
            if len(mm_mat.vertices) == 4:
                f.write(pack("<I", 0))
                f.seek(576,1)
                
            elif len(mm_mat.vertices) == 3:
                f.write(pack("<I", 0))
                f.seek(480,1)

        elif len(mm_mat.vertices) == 6:
            f.seek(-1376,1)
            f.write(pack("<I", 0))
            f.seek(-4,1)
            f.seek(1376,1)

            
                
        
        f.seek(0)
        f.seek(44,1)
        f.write(pack("<I", msh1s))
        
        f.seek(0)
        f.seek(76,1)
        f.write(pack("<I", msh2s))
        
        
        
        
        f.seek(0)
        f.seek(36,1)
        f.write(pack("<I", posm1))
            
        f.seek(0)
        f.seek(32,1)
        f.write(pack("<I", sclm1))
        f.seek(0)
        f.seek(28,1)
        f.write(pack("<I", rotm1))
        f.seek(0)
        f.seek(48,1)
        f.write(pack("<I", namedt))

        f.seek(0)
        size2 = f.seek(FileSize,2)
        f.seek(0)
        f.write(pack("<I", size2))
        f.seek(0)
