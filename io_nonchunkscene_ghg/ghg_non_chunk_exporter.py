import bpy
import bmesh
from struct import pack

def WriteGHG(f):
    f.write(pack("<I", 464*len(bpy.data.materials)+144+16))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", len(bpy.data.materials))) # remove dots stroke manually through the script tabs
    f.write(pack("<I", 144))
    f.write(pack("<I", 0))
    f.write(pack("<I", 464*len(bpy.data.materials)+160))
    """if len(ob.pose.bones)==0:
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
    elif len(ob.pose.bones):
        f.write(pack("<I", 96*len(ob.pose.bones)+144+16+464))
        f.write(pack("<I", 64*len(ob.pose.bones)+96*len(ob.pose.bones)+144+16+464))"""
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0)) #3
    f.write(pack("<I", 0))
    f.write(pack("<I", 0)) #3
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    for i in range(13):
        f.write(pack("<f", 1))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    #todo loop material size with multiple objects
        
    f.write(pack("<I", 144+16))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    f.write(pack("<I", 0))
    for i, mat in enumerate(bpy.data.materials):
        f.write(pack("B", 0x0D))
        f.write(pack("B", 0))
        f.write(pack("B", 1))
        f.write(pack("B", 0x60))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x10))
        f.write(pack("B", 0x08))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x50))
        f.write(pack("B", 0x07))
        f.write(pack("B", 0x80))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x10))
        f.write(pack("B", 0x0E))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x18))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x1B))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x44))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x42))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x8C))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 1))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x4E))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0xDA))
        f.write(pack("B", 0x37))
        f.write(pack("B", 0x05))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x47))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 1))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x3F))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x60))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0xA6))
        f.write(pack("B", 255))
        f.write(pack("B", 255))
        f.write(pack("B", 255))
        f.write(pack("B", 0x14))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 8))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 1))
        f.write(pack("B", 1))
        f.write(pack("B", 0))
        f.write(pack("B", 1))
        f.write(pack("B", 0x13))
        f.write(pack("B", 0))
        f.write(pack("B", 3))
        f.write(pack("B", 0x6C))
        f.write(pack("<f", 1))
        f.write(pack("<f", 1))
        f.write(pack("<f", 1))
        f.write(pack("<f", 128))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
            
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0x30))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("B", 0x19))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 16384))
        f.write(pack("B", 0x50))
        f.write(pack("B", 0x84))
        f.write(pack("B", 0x8C))
        f.write(pack("B", 0))
        f.write(pack("B", 0x10))
        f.write(pack("B", 0x2C))
        f.write(pack("B", 0x49))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        #this comes up automatically up in game
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
            #######
        f.write(pack("<I", 0))
        f.write(pack("B", 0x3D))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("B", 0xF8))
        f.write(pack("B", 0x84))
        f.write(pack("B", 0x8C))
        f.write(pack("B", 0))
        f.write(pack("B", 0xF0))
        f.write(pack("B", 0x87))
        f.write(pack("B", 0x8C))
        f.write(pack("B", 0))
        f.write(pack("B", 0x50))
        f.write(pack("B", 0))
        f.write(pack("B", 0x88))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("<f", mat.specular_intensity))
        f.write(pack("B", 19))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<f", mat.diffuse_color[0]))
        f.write(pack("<f", mat.diffuse_color[1]))
        f.write(pack("<f", mat.diffuse_color[2]))
        f.write(pack("<f", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0xA0))
        f.write(pack("B", 0x41))
        f.write(pack("<f", mat.roughness))
        f.write(pack("B", 0x91))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("B", 0xA6))
        f.write(pack("B", 255))
        f.write(pack("B", 0))
        f.write(pack("B", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        f.write(pack("<I", 0))
        
    
    
    
    

def editOrderVerticesExport(f):
    obdata = bpy.context.object.data
    f.write(b"\x03\x01\x00\x01\x03\x80")
    f.write(pack("b", len(obdata.vertices)))
    f.write(pack("b", 108))
    obj = bpy.context.object
    if obj.mode == "EDIT":
        bm=bmesh.from_edit_mesh(obj.data)
        for v in bm.verts:
            if v.select:
                f.write(pack("<f", v.co.x))
                f.write(pack("<f", v.co.y))
                f.write(pack("<f", v.co.z))
                f.write(pack("<f", 1))
    else:
        print("GHG is not in edit mode.")


def WritingEditGHG(filepath, noappendGHG=False, appendGHG=False):
    with open(filepath, "wb") as f:
        if noappendGHG:
            WriteGHG(f)
        if appendGHG:
            with open(filepath, "ab") as f:
                editOrderVerticesExport(f)
                
    
